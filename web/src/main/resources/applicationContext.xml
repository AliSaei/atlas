<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/util
           http://www.springframework.org/schema/util/spring-util-3.0.xsd">


    <!-- enables annotation-based dependency injection -->
    <context:annotation-config/>

    <!-- Scans within the base package of the application for @Components to configure as beans -->
    <context:component-scan base-package="uk.ac.ebi.atlas"/>

    <util:properties id="configuration" location="classpath:configuration.properties"/>

    <util:properties id="bioEntityCardPropertyFile" location="classpath:bundles/bioEntityCard.properties"/>
    <util:properties id="speciesToExperimentPropertyFile" location="classpath:bundles/speciesToExperiment.properties"/>

    <bean id="baselineExperimentLoader" class="uk.ac.ebi.atlas.trader.loader.BaselineExperimentsCacheLoader">
        <lookup-method name="createExperimentBuilder" bean="baselineExperimentBuilder"/>
        <lookup-method name="createExperimentalFactorsBuilder" bean="experimentalFactorsBuilder"/>
    </bean>

    <bean id="proteomicsbaselineExperimentLoader" class="uk.ac.ebi.atlas.trader.loader.ProteomicsBaselineExperimentsCacheLoader">
        <lookup-method name="createExperimentBuilder" bean="baselineExperimentBuilder"/>
        <lookup-method name="createExperimentalFactorsBuilder" bean="experimentalFactorsBuilder"/>
    </bean>

    <bean id="barChartTraderLoader" class="uk.ac.ebi.atlas.experimentpage.baseline.genedistribution.BarChartTradersCacheLoader">
        <lookup-method name="createBarChartTraderBuilder" bean="barChartTraderBuilder"/>
    </bean>

    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="uk.ac.ebi.atlas.web.GeneQuery">
                    <bean class="uk.ac.ebi.atlas.web.GeneQueryPropertyEditor">
                    </bean>
                </entry>
            </map>
        </property>
    </bean>

    <bean id="singleThreadExecutorService" class="java.util.concurrent.Executors" scope="prototype"
          factory-method="newSingleThreadExecutor"/>

    <bean id="httpClient" class="org.apache.http.impl.client.DefaultHttpClient">
        <constructor-arg ref="httpClientConnectionManager"/>
    </bean>

    <bean id="efoLoader" class="uk.ac.ebi.arrayexpress.utils.efo.EFOLoader">
    </bean>

    <bean id="httpClientConnectionManager" class="org.apache.http.impl.conn.PoolingClientConnectionManager"
          destroy-method="shutdown">
    </bean>

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <constructor-arg>
            <bean class="org.springframework.http.client.SimpleClientHttpRequestFactory"
                  p:readTimeout="120000"
                  p:connectTimeout="120000" />
        </constructor-arg>
    </bean>

    <bean id="jdbcTemplateOracle" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSourceOracle"/>
    </bean>

    <bean id="namedJdbcTemplateOracle" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="dataSourceOracle"/>
    </bean>

    <!-- enables transactions where @Transaction annotations encountered -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceOracle"/>
    </bean>

</beans>