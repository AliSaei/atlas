<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd">


    <!-- NB: see also the WebConfig class for further configuration options -->


    <!--
    mvc: annotation-driven will set some sensible defaults, like instantiating default formatter and converter that can
    be used with @NumberFormat, @DataFormat (requires Joda Time in the classpath), @Valid (to validate @Controller inputs),
    reading and writing XML (if JAXB is in the classpath), reading and writing JSON (if Jackson is in the classpath).
    Can be further configured using nested tag properties.
    -->
    <mvc:annotation-driven/>

    <context:component-scan base-package="uk.ac.ebi.atlas.web.common">
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!--
    view resolver specialized for page with JSTL tag libraries

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="order" value="0"/>
                    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
                    <property name="prefix" value="/WEB-INF/jsp/"/>
                    <property name="suffix" value=".jsp"/>
                    <property name="exposeContextBeansAsAttributes" value="true"/>
                </bean>
    -->

    <!--
        <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
            <property name="exposeContextBeansAsAttributes" value="true"/>
        </bean>
    -->


    <bean id="tilesViewResolver" class="uk.ac.ebi.atlas.utils.spring.servlet.view.TilesExposingBeansViewResolver">
        <property name="order" value="1"/>
        <property name="viewClass" value="uk.ac.ebi.atlas.utils.spring.servlet.view.TilesExposingBeansView"/>
        <property name="exposeContextBeansAsAttributes" value="true"/>
    </bean>
    <bean id="tilesConfigurer"
          class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/tiles.xml</value>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.context.support.ResourceBundleMessageSource" id="messageSource">
        <property name="basename" value="bundles.messages"/>
    </bean>

</beans>