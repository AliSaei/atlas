{"version":3,"sources":["webpack:///./expression-atlas-anatomogram/index.js","webpack:///./expression-atlas-anatomogram/src/anatomogramRenderer.js","webpack:///./expression-atlas-anatomogram/~/anatomogram/index.js","webpack:///./expression-atlas-anatomogram/~/anatomogram/src/Anatomogram.jsx"],"names":[],"mappings":"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","file":"expressionAtlasAnatomogram.bundle.js","sourcesContent":["\"use strict\";\n\n//*------------------------------------------------------------------*\n\nmodule.exports = require('./src/anatomogramRenderer.js');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./expression-atlas-anatomogram/index.js\n ** module id = 0\n ** module chunks = 2\n **/","\"use strict\";\n\n//*------------------------------------------------------------------*\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\n\nvar EventEmitter = require('events');\nvar eventEmitter = new EventEmitter();\n\nvar Anatomogram = require('anatomogram');\n\n//*------------------------------------------------------------------*\n\nfunction render(domNode, anatomogramData, profileRows, expressedColour, hoverColour, jQueryUITheme) {\n\n    if (jQueryUITheme !== \"\") {\n\n        var href = jQueryUITheme === \"atlas\" || typeof jQueryUITheme === \"undefined\" ?\n            window.location.protocol + \"//\" + window.location.host + \"/gxa/resources/css/jquery-ui-1.11.4.custom/css/jquery-ui-min.css\" :\n            \"https://code.jquery.com/ui/1.11.1/themes/\" + jQueryUITheme + \"/jquery-ui.css\";\n\n        var cssDoc = document.createElement(\"link\");\n        cssDoc.setAttribute(\"rel\", \"stylesheet\");\n        cssDoc.setAttribute(\"type\", \"text/css\");\n        cssDoc.setAttribute(\"href\", href);\n        document.getElementsByTagName(\"head\")[0].appendChild(cssDoc);\n\n    }\n\n    ReactDOM.render(\n        React.createElement(\n            Anatomogram,\n            {\n                anatomogramData: anatomogramData,\n                expressedTissueColour: expressedColour,\n                hoveredTissueColour: hoverColour,\n                atlasBaseURL: \"http://wwwdev.ebi.ac.uk/gxa\",\n                profileRows: profileRows,\n                eventEmitter: eventEmitter\n            }\n        ),\n        domNode\n    );\n}\n\n//*------------------------------------------------------------------*\n\nexports.render = render;\nexports.eventEmitter = eventEmitter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./expression-atlas-anatomogram/src/anatomogramRenderer.js\n ** module id = 1028\n ** module chunks = 2\n **/","\"use strict\";\n\n//*------------------------------------------------------------------*\n\nmodule.exports = require('./src/Anatomogram.jsx');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./expression-atlas-anatomogram/~/anatomogram/index.js\n ** module id = 1186\n ** module chunks = 2\n **/","\"use strict\";\n\n//*------------------------------------------------------------------*\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\n\nvar $ = require('jquery');\nrequire('jquery-hc-sticky');\nrequire('jquery-ui-bundle');\n\nvar Snap = require('imports-loader?this=>window,fix=>module.exports=0!snapsvg/dist/snap.svg.js');\n\nvar EventEmitter = require('events');\n\n//*------------------------------------------------------------------*\n\nvar AnatomogramSelectImageButton = React.createClass({\n    propTypes: {\n        anatomogramId: React.PropTypes.string.isRequired,\n        selected: React.PropTypes.bool.isRequired,\n        toggleSrcTemplate: React.PropTypes.string.isRequired,\n        onClick: React.PropTypes.func.isRequired\n    },\n\n    render: function() {\n        var selectedToggleSrc = this.props.toggleSrcTemplate + \"_selected.png\",\n            unselectedToggleSrc = this.props.toggleSrcTemplate + \"_unselected.png\";\n\n        return(\n            <div>\n                <img ref=\"toggleButton\" onClick={this._onClick} src={this.props.selected ? selectedToggleSrc : unselectedToggleSrc}\n                     style={{width: \"24px\", height: \"24px\", padding: \"2px\"}}/>\n            </div>\n        );\n    },\n\n    componentDidMount: function() {\n        $(ReactDOM.findDOMNode(this.refs.toggleButton)).button();\n    },\n\n    _onClick: function() {\n        this.props.onClick(this.props.anatomogramId);\n    }\n});\n\nvar AnatomogramImageParts = React.createClass({\n  propTypes: {\n    idsExpressedInExperiment: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,\n    idsHeatmapWantsHighlighted: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,\n    idsMousedOver: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,\n    idsNotHighlighted: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,\n    expressedTissueColour: React.PropTypes.string.isRequired,\n    hoveredTissueColour: React.PropTypes.string.isRequired\n  },\n\n  getInitialState: function () {\n    return {toDraw: [].concat(\n      AnatomogramImageParts.idsThatShouldBeStronglyHighlighted(this.props)\n        .map(this._highlightStrongly)\n      ,\n      this.props.idsExpressedInExperiment\n        .map(this._highlightSlightly)\n      ,\n      this.props.idsNotHighlighted\n        .map(this._highlightAsBackground)\n      )};\n  },\n\n  render: function() {\n    return <span/>;\n  },\n\n  _highlightStrongly: function(svgPathId) {\n    return {id: svgPathId, colour: this.props.hoveredTissueColour, opacity: 0.7 };\n  },\n\n  _highlightSlightly: function(svgPathId) {\n    return {id: svgPathId, colour: this.props.expressedTissueColour, opacity: 0.5 };\n  },\n\n  _highlightAsBackground: function(svgPathId) {\n    return {id: svgPathId, colour: \"gray\", opacity: 0.5 };\n  },\n\n  componentWillReceiveProps: function(nextProps) {\n    var oldStrong = AnatomogramImageParts.idsThatShouldBeStronglyHighlighted(this.props);\n    var newStrong = AnatomogramImageParts.idsThatShouldBeStronglyHighlighted(nextProps);\n    var oldWeak = this.props.idsExpressedInExperiment;\n    var newWeak = nextProps.idsExpressedInExperiment;\n\n    var toDraw = [].concat(\n      //ids that heatmap wants highlighted are the most highlighted\n      newStrong\n        .filter(function(id){return oldStrong.indexOf(id)<0})\n        .map(this._highlightStrongly)\n      ,\n      //ids that are expressed in the experiment are highlighted with a weaker colour, often the same as background\n      newWeak\n        .filter(function(id){return newStrong.indexOf(id)<0})\n        .filter(function(id){return oldWeak.indexOf(id)<0}.bind(this))\n        .map(this._highlightSlightly)\n      ,\n      nextProps.idsNotHighlighted\n        .filter(function(id){return this.props.idsNotHighlighted.indexOf(id)<0}.bind(this))\n        .map(this._highlightAsBackground)\n      );\n\n    this.setState({toDraw:toDraw});\n  },\n\n  statics: {\n    idsThatShouldBeStronglyHighlighted: function(properties){\n      return properties.idsHeatmapWantsHighlighted.concat(properties.idsMousedOver);\n    }\n  }\n});\n\nvar AnatomogramImage = React.createClass({\n  propTypes: {\n    file: React.PropTypes.string.isRequired,\n    height: React.PropTypes.string.isRequired,\n    expressedFactorsPerRow: React.PropTypes.object.isRequired,\n    allSvgPathIds: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,\n    expressedTissueColour: React.PropTypes.string.isRequired,\n    hoveredTissueColour: React.PropTypes.string.isRequired\n  },\n\n  getInitialState: function() {\n    return {\n      hoveredPathId: null,\n      hoveredRowId: null,\n      mousedOverSvgIds: []\n    };\n  },\n  _expressedFactors: function(){\n    var o = this.props.expressedFactorsPerRow;\n    var vs = Object.keys(o).map(function(e){return o[e];});\n    return (\n      [].concat.apply({},vs)\n      .filter(function uniq(e, ix, self) {\n          return self.indexOf(e) === ix;\n      })\n    );\n  },\n\n  componentWillReceiveProps: function(nextProps) {\n    if(nextProps.file!==this.props.file){\n      this._loadAnatomogram(nextProps.file);\n    }\n  },\n\n  componentDidMount: function() {\n      this._loadAnatomogram(this.props.file);\n      this._draw();\n  },\n\n  componentDidUpdate: function(){\n    this._draw();\n  },\n\n  _draw: function() {\n    var svg= Snap(ReactDOM.findDOMNode(this.refs.anatomogram)).select(\"g\");\n    if(svg!==null){\n      this._drawOnSvg(svg,this.refs.imageParts.state.toDraw);\n      this.refs.imageParts.setState({toDraw:[]});\n    }\n  },\n  _drawInitialLayout: function(svg){\n    this._drawOnSvg(svg,this.refs.imageParts.getInitialState().toDraw);\n    this.refs.imageParts.setState({toDraw:[]});\n  },\n\n  _drawOnSvg: function(svg, instructions){\n    instructions.forEach(function(instruction){\n      this._highlightOrganismParts(svg,instruction.id, instruction.colour, instruction.opacity);\n    }.bind(this));\n  },\n\n  render: function () {\n    var idsExpressedInExperiment =[],\n        idsHoveredOver=[],\n        idsHeatmapWantsHighlighted = [],\n        idsNotHighlighted = [],\n        expressedFactors = this._expressedFactors();\n\n    for(var i = 0 ; i< this.props.allSvgPathIds.length; i++){\n      var id = this.props.allSvgPathIds[i];\n      if(this.state.mousedOverSvgIds.indexOf(id)>-1){\n        idsHoveredOver.push(id);\n      } else if(this._hoveredRowContainsPathId(id) || this.state.hoveredPathId === id){\n        idsHeatmapWantsHighlighted.push(id);\n      } else if(expressedFactors.indexOf(id)>-1){\n        idsExpressedInExperiment.push(id);\n      } else {\n        idsNotHighlighted.push(id);\n      }\n    }\n\n    return (<span>\n        <svg ref=\"anatomogram\" style={{display: \"table-cell\", width: \"230px\", height:this.props.height + \"px\"}} />\n        <AnatomogramImageParts ref=\"imageParts\" key={this.props.file}\n            idsExpressedInExperiment={idsExpressedInExperiment}\n            idsHeatmapWantsHighlighted={idsHeatmapWantsHighlighted}\n            idsMousedOver={idsHoveredOver}\n            idsNotHighlighted={idsNotHighlighted}\n            expressedTissueColour={this.props.expressedTissueColour}\n            hoveredTissueColour={this.props.hoveredTissueColour}/>\n      </span>);\n  },\n\n  _highlightPath: function(svgPathId) {\n      this.setState({hoveredPathId: svgPathId});\n  },\n\n  _highlightRow: function(rowId) {\n      this.setState({hoveredRowId: rowId});\n  },\n\n  _loadAnatomogram: function(svgFile) {\n\n      var svgCanvas = Snap(ReactDOM.findDOMNode(this.refs.anatomogram)),\n          $svgCanvas = $(ReactDOM.findDOMNode(this.refs.anatomogram)),\n          allElements = svgCanvas.selectAll(\"*\");\n\n      if (allElements) {\n          allElements.remove();\n      }\n\n      var displayAllOrganismPartsCallback = this._drawInitialLayout;\n      var registerHoverEventsCallback = this._registerHoverEvents;\n      Snap.load(\n          svgFile,\n          function (fragment) {\n              var g = fragment.select(\"g\");\n              g.transform(\"S1.6,0,0\");\n              displayAllOrganismPartsCallback(g);\n              registerHoverEventsCallback(g);\n              svgCanvas.append(g);\n              var img = fragment.select(\"#ccLogo\");\n              var heightTranslate = $svgCanvas.height() - 15;\n              var widthTranslate = $svgCanvas.width() / 2 - 40;\n              img.transform(\"t\"+widthTranslate+\",\"+heightTranslate);\n              svgCanvas.append(img);\n          }\n      );\n  },\n\n  _hoveredRowContainsPathId: function(svgPathId) {\n    return (this.state.hoveredRowId\n            && this.props.expressedFactorsPerRow.hasOwnProperty(this.state.hoveredRowId)\n            && this.props.expressedFactorsPerRow[this.state.hoveredRowId].indexOf(svgPathId) > -1 );\n  },\n\n  _registerHoverEvents: function(svg) {\n      if (svg) {  // Sometimes svg is null... why?\n          var mouseoverCallback = function(svgPathId) {\n              this.props.eventEmitter.emit('gxaAnatomogramTissueMouseEnter', svgPathId);\n              this.setState(function(previousState, currentProps){\n                  var a = [].concat(previousState.mousedOverSvgIds);\n                  a.push(svgPathId);\n                  while(a.length >5){\n                    a.shift();\n                  }\n                  return {mousedOverSvgIds: a};\n              });\n          }.bind(this);\n          var mouseoutCallback = function(svgPathId) {\n              this.props.eventEmitter.emit('gxaAnatomogramTissueMouseLeave', svgPathId);\n              this.setState(function(previousState, currentProps){\n                  var a = previousState.mousedOverSvgIds.map(\n                      function(el){return el===svgPathId ? \"\" : el}\n                    );\n                  return {mousedOverSvgIds: a};\n                });\n          }.bind(this);\n\n          var attachCallbacks = function(svgElement,svgPathId){\n            if(svgElement){\n              svgElement.mouseover(function() {mouseoverCallback(svgPathId)});\n              svgElement.mouseout(function() {mouseoutCallback(svgPathId)});\n            }\n          }\n\n          this.props.allSvgPathIds.forEach(function(svgPathId) {\n            var svgElement = svg.select(\"#\" + svgPathId);\n            attachCallbacks(svgElement,svgPathId);\n            if(svgElement && svgElement.type === \"use\"){\n              attachCallbacks(svg.select(svgElement.node.getAttribute(\"xlink:href\")),svgPathId);\n            }\n          }, this);\n      }\n  },\n\n  _highlightOrganismParts: function(svg, svgPathId, colour, opacity) {\n      var el = svg.select(\"#\" + svgPathId);\n      if(el && el.type === \"use\"){\n        AnatomogramImage._recursivelyChangeProperties(svg.select(el.node.getAttribute(\"xlink:href\")), colour, opacity);\n      }\n      AnatomogramImage._recursivelyChangeProperties(el,colour, opacity);\n  },\n\n  statics: {\n    _recursivelyChangeProperties: function(svgElement, colour, opacity) {\n      if (svgElement) {\n        svgElement.selectAll(\"*\").forEach(\n          function(innerElement) {\n            AnatomogramImage._recursivelyChangeProperties(innerElement);\n        });\n        svgElement.attr({\"fill\": colour, \"fill-opacity\": opacity});\n      }\n    }\n  }\n});\n\n\n\nvar Anatomogram = React.createClass({\n\n    propTypes: {\n        anatomogramData: React.PropTypes.object.isRequired,\n        expressedTissueColour: React.PropTypes.string.isRequired,\n        hoveredTissueColour: React.PropTypes.string.isRequired,\n        profileRows: React.PropTypes.arrayOf(\n            React.PropTypes.shape({\n                id: React.PropTypes.string,\n                name: React.PropTypes.string.isRequired,\n                expressions: React.PropTypes.arrayOf(\n                    React.PropTypes.shape({\n                        factorName: React.PropTypes.string,\n                        color: React.PropTypes.string,\n                        value: React.PropTypes.number, // missing represents \"NA\"/\"NT\"\n                        svgPathId: React.PropTypes.string\n                    })\n                ).isRequired\n            })\n        ).isRequired,\n        eventEmitter: React.PropTypes.instanceOf(EventEmitter),\n        atlasBaseURL: React.PropTypes.string.isRequired\n    },\n\n    _availableAnatomograms: function() {\n      return (\n        [].concat(\n          this.props.anatomogramData.maleAnatomogramFile ? [{\n            id: \"male\",\n            anatomogramFile: this.props.atlasBaseURL + \"/resources/svg/\" + this.props.anatomogramData.maleAnatomogramFile,\n            toggleSrcTemplate: this.props.atlasBaseURL + this.props.anatomogramData.toggleButtonMaleImageTemplate\n          }]: [],\n          this.props.anatomogramData.femaleAnatomogramFile ? [{\n            id: \"female\",\n            anatomogramFile: this.props.atlasBaseURL + \"/resources/svg/\" + this.props.anatomogramData.femaleAnatomogramFile,\n            toggleSrcTemplate: this.props.atlasBaseURL + this.props.anatomogramData.toggleButtonFemaleImageTemplate\n          }] : [],\n          this.props.anatomogramData.brainAnatomogramFile ? [{\n            id: \"brain\",\n            anatomogramFile: this.props.atlasBaseURL + \"/resources/svg/\" + this.props.anatomogramData.brainAnatomogramFile,\n            toggleSrcTemplate: this.props.atlasBaseURL + this.props.anatomogramData.toggleButtonBrainImageTemplate          }] : []\n        )\n      );\n    },\n\n    getInitialState: function() {\n        return {\n            selectedId: this._availableAnatomograms()[0].id,\n        };\n    },\n\n    render: function () {\n        function containsHuman(str) {\n            return str.indexOf(\"human\") > -1;\n        }\n\n        return (\n            <div className=\"gxaAnatomogram\" style={{display: \"table\", paddingTop: \"4px\"}}>\n                <div style={{display: \"table-row\"}}>\n                    <div style={{display: \"table-cell\", verticalAlign: \"top\"}}>\n                      {this._anatomogramSelectImageButtons()}\n                    </div>\n                    <AnatomogramImage\n                      key={this.state.selectedId}\n                      ref=\"currentImage\"\n                      file={this._getAnatomogramSVGFile(this.state.selectedId)}\n                      height={containsHuman(this.props.anatomogramData.maleAnatomogramFile) ? \"375\" : \"265\"}\n                      expressedFactorsPerRow={\n                        this.props.profileRows\n                        .reduce(function(result,row){\n                          result[row.name] =\n                            row.expressions.filter(function(expression){\n                              return expression.value;\n                            })\n                            .map(function(expression){\n                              return expression.svgPathId\n                            });\n                          return result;\n                        },{})}\n                      allSvgPathIds={this.props.anatomogramData.allSvgPathIds}\n                      eventEmitter={this.props.eventEmitter}\n                      expressedTissueColour={this.props.expressedTissueColour}\n                      hoveredTissueColour={this.props.hoveredTissueColour}/>\n                </div>\n            </div>\n        );\n    },\n\n    _anatomogramSelectImageButtons : function(){\n      return (\n        this._availableAnatomograms().length < 2\n        ? []\n        : this._availableAnatomograms()\n          .map(function(availableAnatomogram) {\n             return(\n                 <AnatomogramSelectImageButton\n                  key={availableAnatomogram.id + \"_toggle\"}\n                  anatomogramId={availableAnatomogram.id}\n                  selected={this.state.selectedId === availableAnatomogram.id}\n                  toggleSrcTemplate={availableAnatomogram.toggleSrcTemplate}\n                  onClick={this._afterUserSelectedAnatomogram}/>\n             )\n          }.bind(this))\n      );\n    },\n\n    _registerListenerIfNecessary: function(name, fn){\n        if (this.props.eventEmitter &&\n            this.props.eventEmitter._events &&\n            !this.props.eventEmitter._events.hasOwnProperty(name)){\n            this.props.eventEmitter.addListener(name, fn);\n          }\n    },\n\n    componentDidMount: function() {\n        this._registerListenerIfNecessary(\"gxaHeatmapColumnHoverChange\", this._highlightPath);\n        this._registerListenerIfNecessary(\"gxaHeatmapRowHoverChange\", this._highlightRow);\n    },\n\n    componentDidUpdate: function () {\n      this._registerListenerIfNecessary(\"gxaHeatmapColumnHoverChange\", this._highlightPath);\n      this._registerListenerIfNecessary(\"gxaHeatmapRowHoverChange\", this._highlightRow);\n    },\n\n    _afterUserSelectedAnatomogram: function(newSelectedId) {\n        if (newSelectedId !== this.state.selectedId) {\n            this.setState({selectedId: newSelectedId});\n        }\n    },\n\n    _highlightPath: function(svgPathId) {\n        this.refs.currentImage._highlightPath(svgPathId);\n    },\n\n    _highlightRow: function(rowId) {\n      this.refs.currentImage._highlightRow(rowId);\n    },\n\n    _getAnatomogramSVGFile: function(id) {\n      return (\n        this._availableAnatomograms()\n        .filter(function(e,ix){\n          return (\n            e.id === id\n          )\n        })\n        .map(function(e){\n          return e.anatomogramFile;\n        })\n        .concat([\"\"])\n        [0]\n      );\n    }\n\n});\n\n//*------------------------------------------------------------------*\n\nmodule.exports = Anatomogram;\n\n\n\n/** WEBPACK FOOTER **\n ** ./expression-atlas-anatomogram/~/anatomogram/src/Anatomogram.jsx\n **/"],"sourceRoot":""}