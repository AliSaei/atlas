var expressionAtlasHeatmap =
webpackJsonp_name_([3],[
/* 0 */
/*!*******************************************!*\
  !*** ./expression-atlas-heatmap/index.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/heatmapAnatomogramRenderer.js */ 1196);


/***/ },
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */,
/* 18 */,
/* 19 */,
/* 20 */,
/* 21 */,
/* 22 */,
/* 23 */,
/* 24 */,
/* 25 */,
/* 26 */,
/* 27 */,
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */,
/* 34 */,
/* 35 */,
/* 36 */,
/* 37 */,
/* 38 */,
/* 39 */,
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */,
/* 48 */,
/* 49 */,
/* 50 */,
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */,
/* 56 */,
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */,
/* 61 */,
/* 62 */,
/* 63 */,
/* 64 */,
/* 65 */,
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */,
/* 71 */,
/* 72 */,
/* 73 */,
/* 74 */,
/* 75 */,
/* 76 */,
/* 77 */,
/* 78 */,
/* 79 */,
/* 80 */,
/* 81 */,
/* 82 */,
/* 83 */,
/* 84 */,
/* 85 */,
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */,
/* 90 */,
/* 91 */,
/* 92 */,
/* 93 */,
/* 94 */,
/* 95 */,
/* 96 */,
/* 97 */,
/* 98 */,
/* 99 */,
/* 100 */,
/* 101 */,
/* 102 */,
/* 103 */,
/* 104 */,
/* 105 */,
/* 106 */,
/* 107 */,
/* 108 */,
/* 109 */,
/* 110 */,
/* 111 */,
/* 112 */,
/* 113 */,
/* 114 */,
/* 115 */,
/* 116 */,
/* 117 */,
/* 118 */,
/* 119 */,
/* 120 */,
/* 121 */,
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */,
/* 131 */,
/* 132 */,
/* 133 */,
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */,
/* 140 */,
/* 141 */,
/* 142 */,
/* 143 */,
/* 144 */,
/* 145 */,
/* 146 */,
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */,
/* 151 */,
/* 152 */,
/* 153 */,
/* 154 */,
/* 155 */,
/* 156 */,
/* 157 */,
/* 158 */,
/* 159 */,
/* 160 */,
/* 161 */,
/* 162 */,
/* 163 */,
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */,
/* 168 */,
/* 169 */,
/* 170 */,
/* 171 */,
/* 172 */,
/* 173 */,
/* 174 */,
/* 175 */,
/* 176 */,
/* 177 */,
/* 178 */,
/* 179 */,
/* 180 */,
/* 181 */,
/* 182 */,
/* 183 */,
/* 184 */,
/* 185 */,
/* 186 */,
/* 187 */,
/* 188 */,
/* 189 */,
/* 190 */,
/* 191 */,
/* 192 */,
/* 193 */,
/* 194 */,
/* 195 */,
/* 196 */,
/* 197 */,
/* 198 */,
/* 199 */,
/* 200 */,
/* 201 */,
/* 202 */,
/* 203 */,
/* 204 */,
/* 205 */,
/* 206 */,
/* 207 */,
/* 208 */,
/* 209 */,
/* 210 */,
/* 211 */,
/* 212 */,
/* 213 */,
/* 214 */,
/* 215 */,
/* 216 */,
/* 217 */,
/* 218 */,
/* 219 */,
/* 220 */,
/* 221 */,
/* 222 */,
/* 223 */,
/* 224 */,
/* 225 */,
/* 226 */,
/* 227 */,
/* 228 */,
/* 229 */,
/* 230 */,
/* 231 */,
/* 232 */,
/* 233 */,
/* 234 */,
/* 235 */,
/* 236 */,
/* 237 */,
/* 238 */,
/* 239 */,
/* 240 */,
/* 241 */,
/* 242 */,
/* 243 */,
/* 244 */,
/* 245 */,
/* 246 */,
/* 247 */,
/* 248 */,
/* 249 */,
/* 250 */,
/* 251 */,
/* 252 */,
/* 253 */,
/* 254 */,
/* 255 */,
/* 256 */,
/* 257 */,
/* 258 */,
/* 259 */,
/* 260 */,
/* 261 */,
/* 262 */,
/* 263 */,
/* 264 */,
/* 265 */,
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */,
/* 283 */,
/* 284 */,
/* 285 */,
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */,
/* 290 */,
/* 291 */,
/* 292 */,
/* 293 */,
/* 294 */,
/* 295 */,
/* 296 */,
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */,
/* 301 */,
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */,
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */,
/* 310 */,
/* 311 */,
/* 312 */,
/* 313 */,
/* 314 */,
/* 315 */,
/* 316 */,
/* 317 */,
/* 318 */,
/* 319 */,
/* 320 */,
/* 321 */,
/* 322 */,
/* 323 */,
/* 324 */,
/* 325 */,
/* 326 */,
/* 327 */,
/* 328 */,
/* 329 */,
/* 330 */,
/* 331 */,
/* 332 */,
/* 333 */,
/* 334 */,
/* 335 */,
/* 336 */,
/* 337 */,
/* 338 */,
/* 339 */,
/* 340 */,
/* 341 */,
/* 342 */,
/* 343 */,
/* 344 */,
/* 345 */,
/* 346 */,
/* 347 */,
/* 348 */,
/* 349 */,
/* 350 */,
/* 351 */,
/* 352 */,
/* 353 */,
/* 354 */,
/* 355 */,
/* 356 */,
/* 357 */,
/* 358 */,
/* 359 */,
/* 360 */,
/* 361 */,
/* 362 */,
/* 363 */,
/* 364 */,
/* 365 */,
/* 366 */,
/* 367 */,
/* 368 */,
/* 369 */,
/* 370 */,
/* 371 */,
/* 372 */,
/* 373 */,
/* 374 */,
/* 375 */,
/* 376 */,
/* 377 */,
/* 378 */,
/* 379 */,
/* 380 */,
/* 381 */,
/* 382 */,
/* 383 */,
/* 384 */,
/* 385 */,
/* 386 */,
/* 387 */,
/* 388 */,
/* 389 */,
/* 390 */,
/* 391 */,
/* 392 */,
/* 393 */,
/* 394 */,
/* 395 */,
/* 396 */,
/* 397 */,
/* 398 */,
/* 399 */,
/* 400 */,
/* 401 */,
/* 402 */,
/* 403 */,
/* 404 */,
/* 405 */,
/* 406 */,
/* 407 */,
/* 408 */,
/* 409 */,
/* 410 */,
/* 411 */,
/* 412 */,
/* 413 */,
/* 414 */,
/* 415 */,
/* 416 */,
/* 417 */,
/* 418 */,
/* 419 */,
/* 420 */,
/* 421 */,
/* 422 */,
/* 423 */,
/* 424 */,
/* 425 */,
/* 426 */,
/* 427 */,
/* 428 */,
/* 429 */,
/* 430 */,
/* 431 */,
/* 432 */,
/* 433 */,
/* 434 */,
/* 435 */,
/* 436 */,
/* 437 */,
/* 438 */,
/* 439 */,
/* 440 */,
/* 441 */,
/* 442 */,
/* 443 */,
/* 444 */,
/* 445 */,
/* 446 */,
/* 447 */,
/* 448 */,
/* 449 */,
/* 450 */,
/* 451 */,
/* 452 */,
/* 453 */,
/* 454 */,
/* 455 */,
/* 456 */,
/* 457 */,
/* 458 */,
/* 459 */,
/* 460 */,
/* 461 */,
/* 462 */,
/* 463 */,
/* 464 */,
/* 465 */,
/* 466 */,
/* 467 */,
/* 468 */,
/* 469 */,
/* 470 */,
/* 471 */,
/* 472 */,
/* 473 */,
/* 474 */,
/* 475 */,
/* 476 */,
/* 477 */,
/* 478 */,
/* 479 */,
/* 480 */,
/* 481 */,
/* 482 */,
/* 483 */,
/* 484 */,
/* 485 */,
/* 486 */,
/* 487 */,
/* 488 */,
/* 489 */,
/* 490 */,
/* 491 */,
/* 492 */,
/* 493 */,
/* 494 */,
/* 495 */,
/* 496 */,
/* 497 */,
/* 498 */,
/* 499 */,
/* 500 */,
/* 501 */,
/* 502 */,
/* 503 */,
/* 504 */,
/* 505 */,
/* 506 */,
/* 507 */,
/* 508 */,
/* 509 */,
/* 510 */,
/* 511 */,
/* 512 */,
/* 513 */,
/* 514 */,
/* 515 */,
/* 516 */,
/* 517 */,
/* 518 */,
/* 519 */,
/* 520 */,
/* 521 */,
/* 522 */,
/* 523 */,
/* 524 */,
/* 525 */,
/* 526 */,
/* 527 */,
/* 528 */,
/* 529 */,
/* 530 */,
/* 531 */
/*!***************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/react.js ***!
  \***************************************************/
[1951, 532],
/* 532 */
/*!*******************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/React.js ***!
  \*******************************************************/
[1952, 533, 677, 681, 568, 686],
/* 533 */
/*!**********************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOM.js ***!
  \**********************************************************/
[1953, 534, 535, 600, 574, 557, 547, 579, 583, 675, 620, 676, 554, 538],
/* 534 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactCurrentOwner.js ***!
  \*******************************************************************/
5,
/* 535 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMTextComponent.js ***!
  \***********************************************************************/
[1954, 536, 551, 555, 557, 568, 550, 549, 599],
/* 536 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/DOMChildrenOperations.js ***!
  \***********************************************************************/
[1955, 537, 545, 547, 548, 549, 542],
/* 537 */
/*!********************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/Danger.js ***!
  \********************************************************/
[1956, 538, 539, 544, 543, 542],
/* 538 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/ExecutionEnvironment.js ***!
  \*****************************************************************************/
9,
/* 539 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/createNodesFromMarkup.js ***!
  \******************************************************************************/
[1957, 538, 540, 543, 542],
/* 540 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/createArrayFromMixed.js ***!
  \*****************************************************************************/
[1958, 541],
/* 541 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/toArray.js ***!
  \****************************************************************/
[1959, 542],
/* 542 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/invariant.js ***!
  \******************************************************************/
13,
/* 543 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/getMarkupWrap.js ***!
  \**********************************************************************/
[1960, 538, 542],
/* 544 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/emptyFunction.js ***!
  \**********************************************************************/
15,
/* 545 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactMultiChildUpdateTypes.js ***!
  \****************************************************************************/
[1961, 546],
/* 546 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/keyMirror.js ***!
  \******************************************************************/
[1962, 542],
/* 547 */
/*!***********************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactPerf.js ***!
  \***********************************************************/
18,
/* 548 */
/*!**************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/setInnerHTML.js ***!
  \**************************************************************/
[1963, 538],
/* 549 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/setTextContent.js ***!
  \****************************************************************/
[1964, 538, 550, 548],
/* 550 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/escapeTextContentForBrowser.js ***!
  \*****************************************************************************/
21,
/* 551 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/DOMPropertyOperations.js ***!
  \***********************************************************************/
[1965, 552, 547, 553, 554],
/* 552 */
/*!*************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/DOMProperty.js ***!
  \*************************************************************/
[1966, 542],
/* 553 */
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/quoteAttributeValueForBrowser.js ***!
  \*******************************************************************************/
[1967, 550],
/* 554 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/warning.js ***!
  \****************************************************************/
[1968, 544],
/* 555 */
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactComponentBrowserEnvironment.js ***!
  \**********************************************************************************/
[1969, 556, 557],
/* 556 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMIDOperations.js ***!
  \**********************************************************************/
[1970, 536, 551, 557, 547, 542],
/* 557 */
/*!************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactMount.js ***!
  \************************************************************/
[1971, 552, 558, 534, 570, 571, 573, 574, 576, 577, 547, 579, 582, 583, 568, 587, 588, 591, 542, 548, 596, 599, 554],
/* 558 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactBrowserEventEmitter.js ***!
  \**************************************************************************/
[1972, 559, 560, 561, 566, 547, 567, 568, 569],
/* 559 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/EventConstants.js ***!
  \****************************************************************/
[1973, 546],
/* 560 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/EventPluginHub.js ***!
  \****************************************************************/
[1974, 561, 562, 563, 564, 565, 542, 554],
/* 561 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/EventPluginRegistry.js ***!
  \*********************************************************************/
[1975, 542],
/* 562 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/EventPluginUtils.js ***!
  \******************************************************************/
[1976, 559, 563, 542, 554],
/* 563 */
/*!*****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactErrorUtils.js ***!
  \*****************************************************************/
34,
/* 564 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/accumulateInto.js ***!
  \****************************************************************/
[1977, 542],
/* 565 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/forEachAccumulated.js ***!
  \********************************************************************/
36,
/* 566 */
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactEventEmitterMixin.js ***!
  \************************************************************************/
[1978, 560],
/* 567 */
/*!*****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ViewportMetrics.js ***!
  \*****************************************************************/
38,
/* 568 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/Object.assign.js ***!
  \***************************************************************/
39,
/* 569 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/isEventSupported.js ***!
  \******************************************************************/
[1979, 538],
/* 570 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMFeatureFlags.js ***!
  \**********************************************************************/
41,
/* 571 */
/*!**************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactElement.js ***!
  \**************************************************************/
[1980, 534, 568, 572],
/* 572 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/canDefineProperty.js ***!
  \*******************************************************************/
43,
/* 573 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactEmptyComponentRegistry.js ***!
  \*****************************************************************************/
44,
/* 574 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactInstanceHandles.js ***!
  \**********************************************************************/
[1981, 575, 542],
/* 575 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactRootIndex.js ***!
  \****************************************************************/
46,
/* 576 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactInstanceMap.js ***!
  \******************************************************************/
47,
/* 577 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactMarkupChecksum.js ***!
  \*********************************************************************/
[1982, 578],
/* 578 */
/*!*********************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/adler32.js ***!
  \*********************************************************/
49,
/* 579 */
/*!*****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactReconciler.js ***!
  \*****************************************************************/
[1983, 580],
/* 580 */
/*!**********************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactRef.js ***!
  \**********************************************************/
[1984, 581],
/* 581 */
/*!************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactOwner.js ***!
  \************************************************************/
[1985, 542],
/* 582 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactUpdateQueue.js ***!
  \******************************************************************/
[1986, 534, 571, 576, 583, 568, 542, 554],
/* 583 */
/*!**************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactUpdates.js ***!
  \**************************************************************/
[1987, 584, 585, 547, 579, 586, 568, 542],
/* 584 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/CallbackQueue.js ***!
  \***************************************************************/
[1988, 585, 568, 542],
/* 585 */
/*!*************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/PooledClass.js ***!
  \*************************************************************/
[1989, 542],
/* 586 */
/*!*************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/Transaction.js ***!
  \*************************************************************/
[1990, 542],
/* 587 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/emptyObject.js ***!
  \********************************************************************/
58,
/* 588 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/containsNode.js ***!
  \*********************************************************************/
[1991, 589],
/* 589 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/isTextNode.js ***!
  \*******************************************************************/
[1992, 590],
/* 590 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/isNode.js ***!
  \***************************************************************/
61,
/* 591 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/instantiateReactComponent.js ***!
  \***************************************************************************/
[1993, 592, 597, 598, 568, 542, 554],
/* 592 */
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactCompositeComponent.js ***!
  \*************************************************************************/
[1994, 593, 534, 571, 576, 547, 594, 595, 579, 582, 568, 587, 542, 596, 554],
/* 593 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactComponentEnvironment.js ***!
  \***************************************************************************/
[1995, 542],
/* 594 */
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactPropTypeLocations.js ***!
  \************************************************************************/
[1996, 546],
/* 595 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactPropTypeLocationNames.js ***!
  \****************************************************************************/
66,
/* 596 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/shouldUpdateReactComponent.js ***!
  \****************************************************************************/
67,
/* 597 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactEmptyComponent.js ***!
  \*********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 571);
	var ReactEmptyComponentRegistry = __webpack_require__(/*! ./ReactEmptyComponentRegistry */ 573);
	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 579);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 568);
	
	var placeholderElement;
	
	var ReactEmptyComponentInjection = {
	  injectEmptyComponent: function (component) {
	    placeholderElement = ReactElement.createElement(component);
	  }
	};
	
	function registerNullComponentID() {
	  ReactEmptyComponentRegistry.registerNullComponentID(this._rootNodeID);
	}
	
	var ReactEmptyComponent = function (instantiate) {
	  this._currentElement = null;
	  this._rootNodeID = null;
	  this._renderedComponent = instantiate(placeholderElement);
	};
	assign(ReactEmptyComponent.prototype, {
	  construct: function (element) {},
	  mountComponent: function (rootID, transaction, context) {
	    transaction.getReactMountReady().enqueue(registerNullComponentID, this);
	    this._rootNodeID = rootID;
	    return ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, context);
	  },
	  receiveComponent: function () {},
	  unmountComponent: function (rootID, transaction, context) {
	    ReactReconciler.unmountComponent(this._renderedComponent);
	    ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);
	    this._rootNodeID = null;
	    this._renderedComponent = null;
	  }
	});
	
	ReactEmptyComponent.injection = ReactEmptyComponentInjection;
	
	module.exports = ReactEmptyComponent;

/***/ },
/* 598 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactNativeComponent.js ***!
  \**********************************************************************/
[1997, 568, 542],
/* 599 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/validateDOMNesting.js ***!
  \********************************************************************/
[1998, 568, 544, 554],
/* 600 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDefaultInjection.js ***!
  \***********************************************************************/
[1999, 601, 609, 612, 613, 614, 538, 618, 619, 555, 621, 622, 535, 647, 650, 574, 557, 654, 659, 660, 661, 670, 671],
/* 601 */
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/BeforeInputEventPlugin.js ***!
  \************************************************************************/
[2000, 559, 602, 538, 603, 605, 607, 608],
/* 602 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/EventPropagators.js ***!
  \******************************************************************/
[2001, 559, 560, 554, 564, 565],
/* 603 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/FallbackCompositionState.js ***!
  \**************************************************************************/
[2002, 585, 568, 604],
/* 604 */
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/getTextContentAccessor.js ***!
  \************************************************************************/
[2003, 538],
/* 605 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticCompositionEvent.js ***!
  \***************************************************************************/
[2004, 606],
/* 606 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticEvent.js ***!
  \****************************************************************/
[2005, 585, 568, 544, 554],
/* 607 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticInputEvent.js ***!
  \*********************************************************************/
[2006, 606],
/* 608 */
/*!**************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/keyOf.js ***!
  \**************************************************************/
79,
/* 609 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ChangeEventPlugin.js ***!
  \*******************************************************************/
[2007, 559, 560, 602, 538, 583, 606, 610, 569, 611, 608],
/* 610 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/getEventTarget.js ***!
  \****************************************************************/
81,
/* 611 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/isTextInputElement.js ***!
  \********************************************************************/
82,
/* 612 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ClientReactRootIndex.js ***!
  \**********************************************************************/
83,
/* 613 */
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/DefaultEventPluginOrder.js ***!
  \*************************************************************************/
[2008, 608],
/* 614 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/EnterLeaveEventPlugin.js ***!
  \***********************************************************************/
[2009, 559, 602, 615, 557, 608],
/* 615 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticMouseEvent.js ***!
  \*********************************************************************/
[2010, 616, 567, 617],
/* 616 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticUIEvent.js ***!
  \******************************************************************/
[2011, 606, 610],
/* 617 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/getEventModifierState.js ***!
  \***********************************************************************/
88,
/* 618 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/HTMLDOMPropertyConfig.js ***!
  \***********************************************************************/
[2012, 552, 538],
/* 619 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactBrowserComponentMixin.js ***!
  \****************************************************************************/
[2013, 576, 620, 554],
/* 620 */
/*!*************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/findDOMNode.js ***!
  \*************************************************************/
[2014, 534, 576, 557, 542, 554],
/* 621 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDefaultBatchingStrategy.js ***!
  \******************************************************************************/
[2015, 583, 586, 568, 544],
/* 622 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMComponent.js ***!
  \*******************************************************************/
[2016, 623, 625, 552, 551, 559, 558, 555, 633, 634, 638, 641, 642, 557, 643, 547, 582, 568, 572, 550, 542, 569, 608, 548, 549, 646, 599, 554],
/* 623 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/AutoFocusUtils.js ***!
  \****************************************************************/
[2017, 557, 620, 624],
/* 624 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/focusNode.js ***!
  \******************************************************************/
95,
/* 625 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/CSSPropertyOperations.js ***!
  \***********************************************************************/
[2018, 626, 538, 547, 627, 629, 630, 632, 554],
/* 626 */
/*!*************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/CSSProperty.js ***!
  \*************************************************************/
97,
/* 627 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/camelizeStyleName.js ***!
  \**************************************************************************/
[2019, 628],
/* 628 */
/*!*****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/camelize.js ***!
  \*****************************************************************/
99,
/* 629 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/dangerousStyleValue.js ***!
  \*********************************************************************/
[2020, 626],
/* 630 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/hyphenateStyleName.js ***!
  \***************************************************************************/
[2021, 631],
/* 631 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/hyphenate.js ***!
  \******************************************************************/
102,
/* 632 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/memoizeStringOnly.js ***!
  \**************************************************************************/
103,
/* 633 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMButton.js ***!
  \****************************************************************/
104,
/* 634 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMInput.js ***!
  \***************************************************************/
[2022, 556, 635, 557, 583, 568, 542],
/* 635 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/LinkedValueUtils.js ***!
  \******************************************************************/
[2023, 636, 594, 542, 554],
/* 636 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactPropTypes.js ***!
  \****************************************************************/
[2024, 571, 595, 544, 637],
/* 637 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/getIteratorFn.js ***!
  \***************************************************************/
108,
/* 638 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMOption.js ***!
  \****************************************************************/
[2025, 639, 641, 568, 554],
/* 639 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactChildren.js ***!
  \***************************************************************/
[2026, 585, 571, 544, 640],
/* 640 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/traverseAllChildren.js ***!
  \*********************************************************************/
[2027, 534, 571, 574, 637, 542, 554],
/* 641 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMSelect.js ***!
  \****************************************************************/
[2028, 635, 557, 583, 568, 554],
/* 642 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMTextarea.js ***!
  \******************************************************************/
[2029, 635, 556, 583, 568, 542, 554],
/* 643 */
/*!*****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactMultiChild.js ***!
  \*****************************************************************/
[2030, 593, 545, 534, 579, 644, 645],
/* 644 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactChildReconciler.js ***!
  \**********************************************************************/
[2031, 579, 591, 596, 640, 554],
/* 645 */
/*!*****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/flattenChildren.js ***!
  \*****************************************************************/
[2032, 640, 554],
/* 646 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/shallowEqual.js ***!
  \*********************************************************************/
117,
/* 647 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactEventListener.js ***!
  \********************************************************************/
[2033, 648, 538, 585, 574, 557, 583, 568, 610, 649],
/* 648 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/EventListener.js ***!
  \**********************************************************************/
[2034, 544],
/* 649 */
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/getUnboundedScrollPosition.js ***!
  \***********************************************************************************/
120,
/* 650 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactInjection.js ***!
  \****************************************************************/
[2035, 552, 560, 593, 651, 597, 558, 598, 547, 575, 583],
/* 651 */
/*!************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactClass.js ***!
  \************************************************************/
[2036, 652, 571, 594, 595, 653, 568, 587, 542, 546, 608, 554],
/* 652 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactComponent.js ***!
  \****************************************************************/
[2037, 653, 572, 587, 542, 554],
/* 653 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactNoopUpdateQueue.js ***!
  \**********************************************************************/
[2038, 554],
/* 654 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactReconcileTransaction.js ***!
  \***************************************************************************/
[2039, 584, 585, 558, 570, 655, 586, 568],
/* 655 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactInputSelection.js ***!
  \*********************************************************************/
[2040, 656, 588, 624, 658],
/* 656 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMSelection.js ***!
  \*******************************************************************/
[2041, 538, 657, 604],
/* 657 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/getNodeForCharacterOffset.js ***!
  \***************************************************************************/
128,
/* 658 */
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/getActiveElement.js ***!
  \*************************************************************************/
129,
/* 659 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SelectEventPlugin.js ***!
  \*******************************************************************/
[2042, 559, 602, 538, 655, 606, 658, 611, 608, 646],
/* 660 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ServerReactRootIndex.js ***!
  \**********************************************************************/
131,
/* 661 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SimpleEventPlugin.js ***!
  \*******************************************************************/
[2043, 559, 648, 602, 557, 662, 606, 663, 664, 615, 667, 668, 616, 669, 544, 665, 542, 608],
/* 662 */
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticClipboardEvent.js ***!
  \*************************************************************************/
[2044, 606],
/* 663 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticFocusEvent.js ***!
  \*********************************************************************/
[2045, 616],
/* 664 */
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticKeyboardEvent.js ***!
  \************************************************************************/
[2046, 616, 665, 666, 617],
/* 665 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/getEventCharCode.js ***!
  \******************************************************************/
136,
/* 666 */
/*!*************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/getEventKey.js ***!
  \*************************************************************/
[2047, 665],
/* 667 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticDragEvent.js ***!
  \********************************************************************/
[2048, 615],
/* 668 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticTouchEvent.js ***!
  \*********************************************************************/
[2049, 616, 617],
/* 669 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticWheelEvent.js ***!
  \*********************************************************************/
[2050, 615],
/* 670 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SVGDOMPropertyConfig.js ***!
  \**********************************************************************/
[2051, 552],
/* 671 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDefaultPerf.js ***!
  \******************************************************************/
[2052, 552, 672, 557, 547, 673],
/* 672 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDefaultPerfAnalysis.js ***!
  \**************************************************************************/
[2053, 568],
/* 673 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/performanceNow.js ***!
  \***********************************************************************/
[2054, 674],
/* 674 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/performance.js ***!
  \********************************************************************/
[2055, 538],
/* 675 */
/*!**************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactVersion.js ***!
  \**************************************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */
	
	'use strict';
	
	module.exports = '0.14.8';

/***/ },
/* 676 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/renderSubtreeIntoContainer.js ***!
  \****************************************************************************/
[2056, 557],
/* 677 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMServer.js ***!
  \****************************************************************/
[2057, 600, 678, 675],
/* 678 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactServerRendering.js ***!
  \**********************************************************************/
[2058, 621, 571, 574, 577, 679, 680, 583, 587, 591, 542],
/* 679 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactServerBatchingStrategy.js ***!
  \*****************************************************************************/
150,
/* 680 */
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactServerRenderingTransaction.js ***!
  \*********************************************************************************/
[2059, 585, 584, 586, 568, 544],
/* 681 */
/*!*****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactIsomorphic.js ***!
  \*****************************************************************/
[2060, 639, 652, 651, 682, 571, 683, 636, 675, 568, 685],
/* 682 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMFactories.js ***!
  \*******************************************************************/
[2061, 571, 683, 684],
/* 683 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactElementValidator.js ***!
  \***********************************************************************/
[2062, 571, 594, 595, 534, 572, 637, 542, 554],
/* 684 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/mapObject.js ***!
  \******************************************************************/
155,
/* 685 */
/*!***********************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/onlyChild.js ***!
  \***********************************************************/
[2063, 571, 542],
/* 686 */
/*!************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/deprecated.js ***!
  \************************************************************/
[2064, 568, 554],
/* 687 */
/*!*******************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-dom/index.js ***!
  \*******************************************************/
[2065, 533],
/* 688 */,
/* 689 */
/*!**********************************************************!*\
  !*** ./expression-atlas-heatmap/~/jquery/dist/jquery.js ***!
  \**********************************************************/
511,
/* 690 */
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/jquery-hc-sticky/jquery.hc-sticky.js ***!
  \*************************************************************************/
[2180, 689],
/* 691 */
/*!*********************************************************!*\
  !*** ./expression-atlas-heatmap/~/anatomogram/index.js ***!
  \*********************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/Anatomogram.jsx */ 692);

/***/ },
/* 692 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/anatomogram/src/Anatomogram.jsx ***!
  \********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 531);
	var ReactDOM = __webpack_require__(/*! react-dom */ 687);
	
	var $ = __webpack_require__(/*! jquery */ 689);
	__webpack_require__(/*! jquery-hc-sticky */ 693);
	__webpack_require__(/*! jquery-ui-bundle */ 694);
	
	var Snap = __webpack_require__(/*! imports-loader?this=>window,fix=>module.exports=0!snapsvg/dist/snap.svg.js */ 695);
	
	var EventEmitter = __webpack_require__(/*! events */ 526);
	
	//*------------------------------------------------------------------*
	
	var AnatomogramSelectImageButton = React.createClass({
	    displayName: 'AnatomogramSelectImageButton',
	
	    propTypes: {
	        anatomogramId: React.PropTypes.string.isRequired,
	        selected: React.PropTypes.bool.isRequired,
	        toggleSrcTemplate: React.PropTypes.string.isRequired,
	        onClick: React.PropTypes.func.isRequired
	    },
	
	    render: function () {
	        var selectedToggleSrc = this.props.toggleSrcTemplate + "_selected.png",
	            unselectedToggleSrc = this.props.toggleSrcTemplate + "_unselected.png";
	
	        return React.createElement(
	            'div',
	            null,
	            React.createElement('img', { ref: 'toggleButton', onClick: this._onClick, src: this.props.selected ? selectedToggleSrc : unselectedToggleSrc,
	                style: { width: "24px", height: "24px", padding: "2px" } })
	        );
	    },
	
	    componentDidMount: function () {
	        $(ReactDOM.findDOMNode(this.refs.toggleButton)).button();
	    },
	
	    _onClick: function () {
	        this.props.onClick(this.props.anatomogramId);
	    }
	});
	
	var AnatomogramSelectImageButtons = React.createClass({
	    displayName: 'AnatomogramSelectImageButtons',
	
	    propTypes: {
	        selectedId: React.PropTypes.string.isRequired,
	        availableAnatomograms: React.PropTypes.array.isRequired,
	        onClick: React.PropTypes.func.isRequired
	    },
	
	    render: function () {
	        if (this.props.availableAnatomograms.length > 1) {
	            var selectedId = this.props.selectedId,
	                onClick = this.props.onClick;
	            var anatomogramSelectImageButtons = this.props.availableAnatomograms.map(function (availableAnatomogram) {
	                return React.createElement(AnatomogramSelectImageButton, { key: availableAnatomogram.id + "_toggle",
	                    anatomogramId: availableAnatomogram.id, selected: selectedId === availableAnatomogram.id, toggleSrcTemplate: availableAnatomogram.toggleSrcTemplate, onClick: onClick });
	            });
	
	            return React.createElement(
	                'span',
	                null,
	                anatomogramSelectImageButtons
	            );
	        } else {
	            return null;
	        }
	    }
	
	});
	
	var AnatomogramImageParts = React.createClass({
	    displayName: 'AnatomogramImageParts',
	
	    propTypes: {
	        idsExpressedInExperiment: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        idsHeatmapWantsHighlighted: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        idsMousedOver: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        idsNotHighlighted: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        expressedTissueColour: React.PropTypes.string.isRequired,
	        hoveredTissueColour: React.PropTypes.string.isRequired
	    },
	
	    getInitialState: function () {
	        return { toDraw: [].concat(AnatomogramImageParts.idsThatShouldBeStronglyHighlighted(this.props).map(this._highlightStrongly), this.props.idsExpressedInExperiment.map(this._highlightSlightly), this.props.idsNotHighlighted.map(this._highlightAsBackground)) };
	    },
	
	    render: function () {
	        return React.createElement('span', null);
	    },
	
	    _highlightStrongly: function (svgPathId) {
	        return { id: svgPathId, colour: this.props.hoveredTissueColour, opacity: 0.7 };
	    },
	
	    _highlightSlightly: function (svgPathId) {
	        return { id: svgPathId, colour: this.props.expressedTissueColour, opacity: 0.7 };
	    },
	
	    _highlightAsBackground: function (svgPathId) {
	        return { id: svgPathId, colour: "gray", opacity: 0.5 };
	    },
	
	    componentWillReceiveProps: function (nextProps) {
	        var oldStrong = AnatomogramImageParts.idsThatShouldBeStronglyHighlighted(this.props);
	        var newStrong = AnatomogramImageParts.idsThatShouldBeStronglyHighlighted(nextProps);
	        var oldWeak = this.props.idsExpressedInExperiment;
	        var newWeak = nextProps.idsExpressedInExperiment;
	
	        var toDraw = [].concat(
	        //ids that heatmap wants highlighted are the most highlighted
	        newStrong.filter(function (id) {
	            return oldStrong.indexOf(id) < 0;
	        }).map(this._highlightStrongly),
	        //ids that are expressed in the experiment are highlighted with a weaker colour, often the same as background
	        newWeak.filter(function (id) {
	            return newStrong.indexOf(id) < 0;
	        }).filter(function (id) {
	            return oldWeak.indexOf(id) < 0;
	        }.bind(this)).map(this._highlightSlightly), nextProps.idsNotHighlighted.filter(function (id) {
	            return this.props.idsNotHighlighted.indexOf(id) < 0;
	        }.bind(this)).map(this._highlightAsBackground));
	
	        this.setState({ toDraw: toDraw });
	    },
	
	    statics: {
	        idsThatShouldBeStronglyHighlighted(properties) {
	            return properties.idsHeatmapWantsHighlighted.concat(properties.idsMousedOver);
	        }
	    }
	});
	
	var AnatomogramImage = React.createClass({
	    displayName: 'AnatomogramImage',
	
	    propTypes: {
	        file: React.PropTypes.string.isRequired,
	        height: React.PropTypes.string.isRequired,
	        expressedFactors: React.PropTypes.arrayOf(React.PropTypes.string),
	        expressedFactorsPerRow: React.PropTypes.object.isRequired,
	        allSvgPathIds: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        expressedTissueColour: React.PropTypes.string.isRequired,
	        hoveredTissueColour: React.PropTypes.string.isRequired
	    },
	
	    getInitialState: function () {
	        return {
	            hoveredPathId: null,
	            hoveredRowId: null,
	            mousedOverSvgIds: []
	        };
	    },
	
	    componentWillReceiveProps: function (nextProps) {
	        if (nextProps.file !== this.props.file) {
	            this._loadAnatomogram(nextProps.file);
	        }
	    },
	
	    componentDidMount: function () {
	        this._loadAnatomogram(this.props.file);
	        this._draw();
	    },
	
	    componentDidUpdate: function () {
	        this._draw();
	    },
	
	    _draw: function () {
	        var svg = Snap(ReactDOM.findDOMNode(this.refs.anatomogram)).select("g");
	        if (svg !== null) {
	            this._drawOnSvg(svg, this.refs.imageParts.state.toDraw);
	            this.refs.imageParts.setState({ toDraw: [] });
	        }
	    },
	    _drawInitialLayout: function (svg) {
	        this._drawOnSvg(svg, this.refs.imageParts.getInitialState().toDraw);
	        this.refs.imageParts.setState({ toDraw: [] });
	    },
	
	    _drawOnSvg: function (svg, instructions) {
	        instructions.forEach(function (instruction) {
	            this._highlightOrganismParts(svg, instruction.id, instruction.colour, instruction.opacity);
	        }.bind(this));
	    },
	
	    render: function () {
	        var idsExpressedInExperiment = [],
	            idsHoveredOver = [],
	            idsHeatmapWantsHighlighted = [],
	            idsNotHighlighted = [];
	        for (var i = 0; i < this.props.allSvgPathIds.length; i++) {
	            var id = this.props.allSvgPathIds[i];
	            if (this.state.mousedOverSvgIds.indexOf(id) > -1) {
	                idsHoveredOver.push(id);
	            } else if (this._hoveredRowContainsPathId(id) || this.state.hoveredPathId === id) {
	                idsHeatmapWantsHighlighted.push(id);
	            } else if (this.props.expressedFactors.indexOf(id) > -1) {
	                idsExpressedInExperiment.push(id);
	            } else {
	                idsNotHighlighted.push(id);
	            }
	        }
	
	        return React.createElement(
	            'span',
	            null,
	            React.createElement('svg', { ref: 'anatomogram', style: { display: "table-cell", width: "230px", height: this.props.height + "px" } }),
	            React.createElement(AnatomogramImageParts, { ref: 'imageParts', key: this.props.file,
	                idsExpressedInExperiment: idsExpressedInExperiment,
	                idsHeatmapWantsHighlighted: idsHeatmapWantsHighlighted,
	                idsMousedOver: idsHoveredOver,
	                idsNotHighlighted: idsNotHighlighted,
	                expressedTissueColour: this.props.expressedTissueColour,
	                hoveredTissueColour: this.props.hoveredTissueColour })
	        );
	    },
	
	    _highlightPath: function (svgPathId) {
	        this.setState({ hoveredPathId: svgPathId });
	    },
	
	    _highlightRow: function (rowId) {
	        this.setState({ hoveredRowId: rowId });
	    },
	
	    _loadAnatomogram: function (svgFile) {
	
	        var svgCanvas = Snap(ReactDOM.findDOMNode(this.refs.anatomogram)),
	            $svgCanvas = $(ReactDOM.findDOMNode(this.refs.anatomogram)),
	            allElements = svgCanvas.selectAll("*");
	
	        if (allElements) {
	            allElements.remove();
	        }
	
	        var displayAllOrganismPartsCallback = this._drawInitialLayout;
	        var registerHoverEventsCallback = this._registerHoverEvents;
	        Snap.load(svgFile, function (fragment) {
	            var g = fragment.select("g");
	            g.transform("S1.6,0,0");
	            displayAllOrganismPartsCallback(g);
	            registerHoverEventsCallback(g);
	            svgCanvas.append(g);
	            var img = fragment.select("#ccLogo");
	            var heightTranslate = $svgCanvas.height() - 15;
	            var widthTranslate = $svgCanvas.width() / 2 - 40;
	            img.transform("t" + widthTranslate + "," + heightTranslate);
	            svgCanvas.append(img);
	        });
	    },
	
	    _hoveredRowContainsPathId: function (svgPathId) {
	        return this.state.hoveredRowId && this.props.expressedFactorsPerRow.hasOwnProperty(this.state.hoveredRowId) && this.props.expressedFactorsPerRow[this.state.hoveredRowId].indexOf(svgPathId) > -1;
	    },
	
	    _registerHoverEvents: function (svg) {
	        if (svg) {
	            // Sometimes svg is null... why?
	            var mouseoverCallback = function (svgPathId) {
	                this.props.eventEmitter.emit('gxaAnatomogramTissueMouseEnter', svgPathId);
	                this.setState(function (previousState, currentProps) {
	                    var a = [].concat(previousState.mousedOverSvgIds);
	                    a.push(svgPathId);
	                    while (a.length > 5) {
	                        a.shift();
	                    }
	                    return { mousedOverSvgIds: a };
	                });
	            }.bind(this);
	            var mouseoutCallback = function (svgPathId) {
	                this.props.eventEmitter.emit('gxaAnatomogramTissueMouseLeave', svgPathId);
	                this.setState(function (previousState, currentProps) {
	                    var a = previousState.mousedOverSvgIds.map(function (el) {
	                        return el === svgPathId ? "" : el;
	                    });
	                    return { mousedOverSvgIds: a };
	                });
	            }.bind(this);
	
	            this.props.allSvgPathIds.forEach(function (svgPathId) {
	                var svgElement = svg.select("#" + svgPathId);
	                if (svgElement) {
	                    svgElement.mouseover(function () {
	                        mouseoverCallback(svgPathId);
	                    });
	                    svgElement.mouseout(function () {
	                        mouseoutCallback(svgPathId);
	                    });
	                }
	            }, this);
	        }
	    },
	
	    _highlightOrganismParts: function (svg, svgPathId, colour, opacity) {
	        AnatomogramImage._recursivelyChangeProperties(svg.select("#" + svgPathId), colour, opacity);
	    },
	
	    statics: {
	        _recursivelyChangeProperties: function (svgElement, colour, opacity) {
	
	            if (svgElement) {
	                var innerElements = svgElement.selectAll("*");
	
	                if (innerElements.length > 0) {
	                    innerElements.forEach(function (innerElement) {
	                        AnatomogramImage._recursivelyChangeProperties(innerElement);
	                    });
	                }
	
	                svgElement.attr({ "fill": colour, "fill-opacity": opacity });
	            }
	        },
	        _recursivelySelectElements: function (svgElement) {
	            if (!svgElement) {
	                return [];
	            }
	
	            var innerElements = svgElement.selectAll("*");
	            if (innerElements.length === 0) {
	                return [svgElement];
	            } else {
	                var allElements = [];
	                innerElements.forEach(function (innerElement) {
	                    allElements = allElements.concat(AnatomogramImage._recursivelySelectElements(innerElement));
	                });
	                return allElements;
	            }
	        }
	    }
	});
	
	var Anatomogram = React.createClass({
	    displayName: 'Anatomogram',
	
	
	    propTypes: {
	        anatomogramData: React.PropTypes.object.isRequired,
	        expressedTissueColour: React.PropTypes.string.isRequired,
	        hoveredTissueColour: React.PropTypes.string.isRequired,
	        profileRows: React.PropTypes.arrayOf(React.PropTypes.shape({
	            id: React.PropTypes.string,
	            name: React.PropTypes.string.isRequired,
	            expressions: React.PropTypes.arrayOf(React.PropTypes.shape({
	                factorName: React.PropTypes.string,
	                color: React.PropTypes.string,
	                value: React.PropTypes.number, // missing represents "NA"/"NT"
	                svgPathId: React.PropTypes.string
	            })).isRequired
	        })).isRequired,
	        eventEmitter: React.PropTypes.instanceOf(EventEmitter),
	        atlasBaseURL: React.PropTypes.string.isRequired
	    },
	
	    getInitialState: function () {
	
	        var availableAnatomograms = [];
	        if (this.props.anatomogramData.maleAnatomogramFile) {
	            availableAnatomograms.push({ id: "male",
	                anatomogramFile: this.props.atlasBaseURL + "/resources/svg/" + this.props.anatomogramData.maleAnatomogramFile,
	                toggleSrcTemplate: this.props.atlasBaseURL + this.props.anatomogramData.toggleButtonMaleImageTemplate });
	        }
	        if (this.props.anatomogramData.femaleAnatomogramFile) {
	            availableAnatomograms.push({ id: "female",
	                anatomogramFile: this.props.atlasBaseURL + "/resources/svg/" + this.props.anatomogramData.femaleAnatomogramFile,
	                toggleSrcTemplate: this.props.atlasBaseURL + this.props.anatomogramData.toggleButtonFemaleImageTemplate });
	        }
	        if (this.props.anatomogramData.brainAnatomogramFile) {
	            availableAnatomograms.push({ id: "brain",
	                anatomogramFile: this.props.atlasBaseURL + "/resources/svg/" + this.props.anatomogramData.brainAnatomogramFile,
	                toggleSrcTemplate: this.props.atlasBaseURL + this.props.anatomogramData.toggleButtonBrainImageTemplate });
	        }
	
	        var allExpressedFactors = [],
	            expressedFactorsPerRow = {};
	        this.props.profileRows.forEach(function (profileRow) {
	            var expressedFactors = [];
	            profileRow.expressions.forEach(function (expression) {
	                if (! typeof expression.value !== "undefined" && expression.value) {
	                    expressedFactors.push(expression.svgPathId);
	                }
	            });
	            expressedFactorsPerRow[profileRow.name] = expressedFactors;
	            allExpressedFactors = allExpressedFactors.concat(expressedFactors);
	        });
	
	        function onlyUnique(value, index, self) {
	            return self.indexOf(value) === index;
	        }
	
	        return {
	            selectedId: availableAnatomograms[0].id,
	            availableAnatomograms: availableAnatomograms,
	            expressedFactors: allExpressedFactors.filter(onlyUnique),
	            expressedFactorsPerRow: expressedFactorsPerRow
	        };
	    },
	
	    render: function () {
	        function containsHuman(str) {
	            return str.indexOf("human") > -1;
	        }
	
	        return React.createElement(
	            'div',
	            { className: 'gxaAnatomogram', style: { display: "table", paddingTop: "4px" } },
	            React.createElement(
	                'div',
	                { style: { display: "table-row" } },
	                React.createElement(
	                    'div',
	                    { style: { display: "table-cell", verticalAlign: "top" } },
	                    React.createElement(AnatomogramSelectImageButtons, { selectedId: this.state.selectedId, availableAnatomograms: this.state.availableAnatomograms, onClick: this._handleChange })
	                ),
	                React.createElement(AnatomogramImage, {
	                    key: this.state.selectedId,
	                    ref: 'currentImage',
	                    file: this._getAnatomogramSVGFile(this.state.selectedId),
	                    height: containsHuman(this.props.anatomogramData.maleAnatomogramFile) ? "375" : "265",
	                    expressedFactors: this.state.expressedFactors,
	                    expressedFactorsPerRow: this.state.expressedFactorsPerRow,
	                    allSvgPathIds: this.props.anatomogramData.allSvgPathIds,
	                    eventEmitter: this.props.eventEmitter,
	                    expressedTissueColour: this.props.expressedTissueColour,
	                    hoveredTissueColour: this.props.hoveredTissueColour })
	            )
	        );
	    },
	    _registerListenerIfNecessary(name, fn) {
	        if (this.props.eventEmitter && this.props.eventEmitter._events && !this.props.eventEmitter._events.hasOwnProperty(name)) {
	            this.props.eventEmitter.addListener(name, fn);
	        }
	    },
	
	    componentDidMount: function () {
	        this._registerListenerIfNecessary("gxaHeatmapColumnHoverChange", this._highlightPath);
	        this._registerListenerIfNecessary("gxaHeatmapRowHoverChange", this._highlightRow);
	    },
	
	    componentDidUpdate: function () {
	        this._registerListenerIfNecessary("gxaHeatmapColumnHoverChange", this._highlightPath);
	        this._registerListenerIfNecessary("gxaHeatmapRowHoverChange", this._highlightRow);
	    },
	
	    _handleChange: function (newSelectedId) {
	        if (newSelectedId !== this.state.selectedId) {
	            this.setState({ selectedId: newSelectedId });
	        }
	    },
	
	    _highlightPath: function (svgPathId) {
	        this.refs.currentImage._highlightPath(svgPathId);
	    },
	
	    _highlightRow: function (rowId) {
	        this.refs.currentImage._highlightRow(rowId);
	    },
	
	    _getAnatomogramSVGFile: function (id) {
	        for (var i = 0; i < this.state.availableAnatomograms.length; i++) {
	            if (id === this.state.availableAnatomograms[i].id) {
	                return this.state.availableAnatomograms[i].anatomogramFile;
	            }
	        }
	    }
	
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = Anatomogram;

/***/ },
/* 693 */
/*!***************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/anatomogram/~/jquery-hc-sticky/jquery.hc-sticky.js ***!
  \***************************************************************************************/
[2180, 689],
/* 694 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/jquery-ui-bundle/jquery-ui.js ***!
  \******************************************************************/
[2177, 689],
/* 695 */
/*!********************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/imports-loader?this=>window,fix=>module.exports=0!./expression-atlas-heatmap/~/snapsvg/dist/snap.svg.js ***!
  \********************************************************************************************************************************************/
527,
/* 696 */,
/* 697 */,
/* 698 */,
/* 699 */,
/* 700 */,
/* 701 */,
/* 702 */,
/* 703 */,
/* 704 */,
/* 705 */,
/* 706 */,
/* 707 */,
/* 708 */,
/* 709 */,
/* 710 */,
/* 711 */,
/* 712 */,
/* 713 */,
/* 714 */,
/* 715 */,
/* 716 */,
/* 717 */,
/* 718 */,
/* 719 */,
/* 720 */,
/* 721 */,
/* 722 */,
/* 723 */,
/* 724 */,
/* 725 */,
/* 726 */,
/* 727 */,
/* 728 */,
/* 729 */,
/* 730 */,
/* 731 */,
/* 732 */,
/* 733 */,
/* 734 */,
/* 735 */,
/* 736 */,
/* 737 */,
/* 738 */,
/* 739 */,
/* 740 */,
/* 741 */,
/* 742 */,
/* 743 */,
/* 744 */,
/* 745 */,
/* 746 */,
/* 747 */,
/* 748 */,
/* 749 */,
/* 750 */,
/* 751 */,
/* 752 */,
/* 753 */,
/* 754 */,
/* 755 */,
/* 756 */,
/* 757 */,
/* 758 */,
/* 759 */,
/* 760 */,
/* 761 */,
/* 762 */,
/* 763 */,
/* 764 */,
/* 765 */,
/* 766 */,
/* 767 */,
/* 768 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader/lib/css-base.js ***!
  \***************************************************************/
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 769 */
/*!**************************************************************!*\
  !*** ./expression-atlas-heatmap/~/style-loader/addStyles.js ***!
  \**************************************************************/
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];
	
	module.exports = function(list, options) {
		if(true) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
	
		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();
	
		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";
	
		var styles = listToStyles(list);
		addStylesToDom(styles, options);
	
		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}
	
	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}
	
	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}
	
	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}
	
	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}
	
	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}
	
	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}
	
	function addStyle(obj, options) {
		var styleElement, update, remove;
	
		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}
	
		update(obj);
	
		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}
	
	var replaceText = (function () {
		var textStore = [];
	
		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();
	
	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;
	
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}
	
	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
	
		if(media) {
			styleElement.setAttribute("media", media)
		}
	
		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}
	
	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;
	
		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}
	
		var blob = new Blob([css], { type: "text/css" });
	
		var oldSrc = linkElement.href;
	
		linkElement.href = URL.createObjectURL(blob);
	
		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ },
/* 770 */
/*!**************************************************!*\
  !*** ./expression-atlas-heatmap/src/Heatmap.jsx ***!
  \**************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 531);
	var ReactDOM = __webpack_require__(/*! react-dom */ 687);
	var ReactDOMServer = __webpack_require__(/*! react-dom/server */ 771);
	var RadioGroup = __webpack_require__(/*! react-radio-group */ 772);
	var Slider = __webpack_require__(/*! rc-slider */ 773);
	__webpack_require__(/*! rc-slider/assets/index.css */ 830);
	
	var DownloadProfilesButton = __webpack_require__(/*! download-profiles-button */ 832);
	
	var $ = __webpack_require__(/*! jquery */ 689);
	
	__webpack_require__(/*! jquery-ui-bundle */ 694);
	__webpack_require__(/*! jquery.browser */ 965);
	__webpack_require__(/*! jquery-hc-sticky */ 690);
	__webpack_require__(/*! atlas-modernizr */ 966); // Leaks Modernizr to the global window namespace
	
	__webpack_require__(/*! fancybox */ 967)($);
	__webpack_require__(/*! fancybox/dist/css/jquery.fancybox.css */ 968);
	
	__webpack_require__(/*! jquery-toolbar */ 976);
	__webpack_require__(/*! jquery-toolbar/jquery.toolbar.css */ 977);
	
	//*------------------------------------------------------------------*
	
	var HeatmapBaselineCellVariance = __webpack_require__(/*! heatmap-baseline-cell-variance */ 979);
	var Legend = __webpack_require__(/*! legend */ 984);
	var LegendBaseline = Legend.LegendBaseline;
	var LegendDifferential = Legend.LegendDifferential;
	var CellDifferential = __webpack_require__(/*! cell-differential */ 999);
	var DisplayLevelsButton = __webpack_require__(/*! display-levels-button */ 1005);
	var NumberFormat = __webpack_require__(/*! number-format */ 997);
	var HelpTooltips = __webpack_require__(/*! help-tooltips */ 989);
	var ContrastTooltips = __webpack_require__(/*! contrast-tooltips */ 1007);
	
	var GenePropertiesTooltipModule = __webpack_require__(/*! ./genePropertiesTooltipModule.js */ 1013);
	var FactorTooltipModule = __webpack_require__(/*! ./factorTooltipModule.js */ 1016);
	
	var StickyHeaderModule = __webpack_require__(/*! ./stickyHeaderModule.js */ 1020);
	__webpack_require__(/*! ./stickyHeaderModule.css */ 1021);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./Heatmap.css */ 1023);
	
	//*------------------------------------------------------------------*
	
	var Heatmap = React.createClass({
	    displayName: 'Heatmap',
	
	
	    propTypes: {
	        type: React.PropTypes.shape({
	            isBaseline: React.PropTypes.bool,
	            isProteomics: React.PropTypes.bool,
	            isDifferential: React.PropTypes.bool,
	            isMultiExperiment: React.PropTypes.bool,
	            heatmapTooltip: React.PropTypes.string.isRequired
	        }),
	        heatmapConfig: React.PropTypes.object.isRequired,
	        columnHeaders: React.PropTypes.oneOfType([React.PropTypes.arrayOf(React.PropTypes.shape({
	            assayGroupId: React.PropTypes.string.isRequired,
	            factorValue: React.PropTypes.string.isRequired,
	            factorValueOntologyTermId: React.PropTypes.string
	        })), React.PropTypes.arrayOf(React.PropTypes.shape({
	            id: React.PropTypes.string.isRequired,
	            referenceAssayGroup: React.PropTypes.shape({
	                id: React.PropTypes.string.isRequired,
	                assayAccessions: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	                replicates: React.PropTypes.number.isRequired
	            }).isRequired,
	            testAssayGroup: React.PropTypes.shape({
	                id: React.PropTypes.string.isRequired,
	                assayAccessions: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	                replicates: React.PropTypes.number.isRequired
	            }).isRequired,
	            displayName: React.PropTypes.string.isRequired
	        }))]).isRequired,
	        nonExpressedColumnHeaders: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        profiles: React.PropTypes.object.isRequired,
	        jsonCoexpressions: React.PropTypes.arrayOf(React.PropTypes.shape({
	            geneName: React.PropTypes.string.isRequired,
	            jsonProfiles: React.PropTypes.object.isRequired
	        })),
	        geneSetProfiles: React.PropTypes.object,
	        prefFormDisplayLevels: React.PropTypes.object,
	        ensemblEventEmitter: React.PropTypes.object,
	        anatomogramEventEmitter: React.PropTypes.object,
	        googleAnalytics: React.PropTypes.bool,
	        atlasBaseURL: React.PropTypes.string.isRequired,
	        linksAtlasBaseURL: React.PropTypes.string.isRequired,
	        googleAnalyticsCallback: React.PropTypes.func.isRequired
	    },
	
	    getInitialState: function () {
	        var displayLevels = this.props.prefFormDisplayLevels ? this.props.prefFormDisplayLevels.val() === "true" : false;
	        var coexpressionsDisplayed = {};
	        if (this.props.jsonCoexpressions) {
	            for (var i = 0; i < this.props.jsonCoexpressions.length; i++) {
	                coexpressionsDisplayed[this.props.jsonCoexpressions[i].geneId] = 0;
	            }
	        }
	        return {
	            showGeneSetProfiles: false,
	            displayLevels: displayLevels,
	            selectedColumnId: null,
	            selectedGeneId: null,
	            hoveredColumnId: null,
	            hoveredGeneId: null,
	            selectedRadioButton: "gradients",
	            coexpressionsDisplayed: coexpressionsDisplayed,
	            userInteractedWithTheHeatmap: false
	        };
	    },
	
	    _coexpressionsCurrentlyShown: function () {
	        var ans = 0;
	        for (var k in this.state.coexpressionsDisplayed) {
	            ans += this.state.coexpressionsDisplayed[k];
	        }
	        return ans;
	    },
	
	    _getProfiles: function () {
	        if (this.state.showGeneSetProfiles) {
	            return this.props.geneSetProfiles;
	        } else if (!this.props.jsonCoexpressions) {
	            return this.props.profiles;
	        } else {
	            var newRows = [];
	            for (var i = 0; i < this.props.profiles.rows.length; i++) {
	                var thisRow = this.props.profiles.rows[i];
	                newRows.push(thisRow);
	                var coexpressionsForThisRow = this.props.jsonCoexpressions.filter(function (o) {
	                    return o.geneId === thisRow.id && this.state.coexpressionsDisplayed[o.geneId];
	                }.bind(this));
	                for (var j = 0; j < coexpressionsForThisRow.length; j++) {
	                    [].push.apply(newRows, coexpressionsForThisRow[j].jsonProfiles.rows.slice(0, this.state.coexpressionsDisplayed[coexpressionsForThisRow[j].geneId]));
	                }
	            }
	            return Object.create(this.props.profiles, { rows: { value: newRows } });
	        }
	    },
	
	    _hoverColumn: function (columnId) {
	        this.setState({ hoveredColumnId: columnId }, function () {
	            this.props.anatomogramEventEmitter.emit('gxaHeatmapColumnHoverChange', columnId);
	        });
	    },
	
	    _hoverRow: function (rowId) {
	        this.setState({ hoveredRowId: rowId }, function () {
	            this.props.anatomogramEventEmitter.emit('gxaHeatmapRowHoverChange', rowId);
	        });
	    },
	
	    selectColumn: function (columnId) {
	        var selectedColumnId = columnId === this.state.selectedColumnId ? null : columnId;
	        this.setState({ selectedColumnId: selectedColumnId }, function () {
	            this.props.ensemblEventEmitter.emit('onColumnSelectionChange', selectedColumnId);
	        });
	    },
	
	    selectGene: function (geneId) {
	        var selectedGeneId = geneId === this.state.selectedGeneId ? null : geneId;
	        this.setState({ selectedGeneId: selectedGeneId }, function () {
	            this.props.ensemblEventEmitter.emit('onGeneSelectionChange', selectedGeneId);
	        });
	    },
	
	    toggleGeneSets: function () {
	        this.setState({ showGeneSetProfiles: !this.state.showGeneSetProfiles });
	    },
	
	    toggleDisplayLevels: function () {
	        var newDisplayLevels = !this.state.displayLevels;
	        this.setState({ displayLevels: newDisplayLevels });
	        if (this.props.prefFormDisplayLevels) {
	            this.props.prefFormDisplayLevels.val(newDisplayLevels);
	        }
	        $(window).resize();
	    },
	
	    toggleRadioButton: function (newSelected) {
	        this.setState({ selectedRadioButton: newSelected });
	        this.setState({ displayLevels: newSelected === "levels" }); //update the LegendType
	    },
	
	    isMicroarray: function () {
	        return this.props.profiles.rows[0].hasOwnProperty("designElement") && this.props.profiles.rows[0].designElement;
	    },
	
	    hasQuartiles: function () {
	        var hasQuartiles = false;
	        for (var i = 0; i < this.props.profiles.rows[0].expressions.length; i++) {
	            if (this.props.profiles.rows[0].expressions[i].quartiles != undefined) {
	                hasQuartiles = true;
	                break;
	            }
	        }
	        return hasQuartiles;
	    },
	
	    isSingleGeneResult: function () {
	        return this.props.profiles.rows.length == 1;
	    },
	
	    _stateChangeRepresentsInteraction: function (s1, s2) {
	        var ks = ["displayLevels", "showGeneSetProfiles", "selectedColumnId", "selectedGeneId", "hoveredColumnId", "hoveredGeneId", "hoveredRowId"];
	        for (var i = 0; i < ks.length; i++) {
	            var k = ks[i];
	            if (s1[k] !== s2[k]) {
	                return k || true;
	            }
	        }
	        return false;
	    },
	
	    componentWillUpdate: function (nextProps, nextState) {
	        if (!this.state.userInteractedWithTheHeatmap) {
	            if (this._stateChangeRepresentsInteraction(this.state, nextState)) {
	                this.props.googleAnalyticsCallback('send', 'event', 'HeatmapReact', 'interact');
	                this.setState({ userInteractedWithTheHeatmap: true });
	            }
	        }
	    },
	
	    componentDidMount: function () {
	        var table = ReactDOM.findDOMNode(this.refs.heatmapTable),
	            stickyIntersect = ReactDOM.findDOMNode(this.refs.stickyIntersect),
	            stickyColumn = ReactDOM.findDOMNode(this.refs.stickyColumn),
	            stickyHeadRow = ReactDOM.findDOMNode(this.refs.stickyHeader),
	            stickyWrap = ReactDOM.findDOMNode(this.refs.stickyWrap),
	            countAndLegend = ReactDOM.findDOMNode(this.refs.countAndLegend);
	
	        var stickyHeader = StickyHeaderModule(table, stickyIntersect, stickyColumn, stickyHeadRow, stickyWrap, countAndLegend);
	
	        stickyHeader.setWidthsAndReposition();
	        $(countAndLegend).hcSticky({ bottomEnd: stickyHeader.calculateAllowance() });
	
	        $(stickyWrap).scroll(stickyHeader.stickyReposition);
	        $(window).resize(stickyHeader.setWidthsAndReposition).scroll(stickyHeader.stickyReposition).on("gxaResizeHeatmapAnatomogramHeader", function () {
	            stickyHeader.setWidthAndHeight();
	            $(countAndLegend).hcSticky("resize");
	        });
	    },
	
	    _getMaxExpressionLevel: function () {
	        var maxExpressionLevel = -Infinity;
	        var profileRows = this._getProfiles().rows;
	        for (var i = 0; i < profileRows.length; i++) {
	            for (var j = 0; j < (profileRows[i].expressions || []).length; j++) {
	                var value = profileRows[i].expressions[j].value;
	                if (!isNaN(value) && value > maxExpressionLevel) {
	                    maxExpressionLevel = value;
	                }
	            }
	        }
	        return maxExpressionLevel;
	    },
	
	    _getMinExpressionLevel: function () {
	        var minExpressionLevel = Infinity;
	        var profileRows = this._getProfiles().rows;
	        for (var i = 0; i < profileRows.length; i++) {
	            for (var j = 0; j < (profileRows[i].expressions || []).length; j++) {
	                var value = profileRows[i].expressions[j].value;
	                if (!isNaN(value) && value < minExpressionLevel) {
	                    minExpressionLevel = value;
	                }
	            }
	        }
	        return minExpressionLevel;
	    },
	
	    legendType: function () {
	        if (this.props.type.isBaseline || this.props.type.isMultiExperiment) {
	            return React.createElement(LegendBaseline, {
	                atlasBaseURL: this.props.atlasBaseURL,
	                minExpressionLevel: this._getMinExpressionLevel().toString(),
	                maxExpressionLevel: this._getMaxExpressionLevel().toString(),
	                isMultiExperiment: this.props.type.isMultiExperiment ? true : false });
	        } else {
	            var ps = this._getProfiles();
	            return React.createElement(LegendDifferential, {
	                atlasBaseURL: this.props.atlasBaseURL,
	                minDownLevel: ps.hasOwnProperty("minDownLevel") ? ps.minDownLevel.toString() : "NaN",
	                maxDownLevel: ps.hasOwnProperty("maxDownLevel") ? ps.maxDownLevel.toString() : "NaN",
	                minUpLevel: ps.hasOwnProperty("minUpLevel") ? ps.minUpLevel.toString() : "NaN",
	                maxUpLevel: ps.hasOwnProperty("maxUpLevel") ? ps.maxUpLevel.toString() : "NaN" });
	        }
	    },
	
	    _getCoexpressionsAvailable: function () {
	        return !this.props.jsonCoexpressions ? [] : this.props.jsonCoexpressions.map(function (value) {
	            return { name: value.geneName, id: value.geneId, amount: value.jsonProfiles.rows.length };
	        });
	    },
	
	    _showCoexpressionsFor: function (geneId, amount) {
	        this.setState(function (previousState) {
	            if (previousState.coexpressionsDisplayed.hasOwnProperty(geneId)) {
	                previousState.coexpressionsDisplayed[geneId] = amount;
	            }
	            return { coexpressionsDisplayed: previousState.coexpressionsDisplayed };
	        });
	    },
	
	    _showGeneCount: function () {
	        var shownRows, totalRows;
	        if (this.props.type.isMultiExperiment || !this.state.showGeneSetProfiles || !this.props.geneSetProfiles) {
	            shownRows = this.props.profiles.rows.length;
	            totalRows = this.props.profiles.searchResultTotal;
	        } else {
	            shownRows = this.props.geneSetProfiles.rows.length;
	            totalRows = this.props.geneSetProfiles.searchResultTotal;
	        }
	
	        return React.createElement(
	            'div',
	            { style: { display: "inline-block", 'verticalAlign': "top" } },
	            this.props.type.isMultiExperiment ? React.createElement(
	                'span',
	                { id: 'geneCount' },
	                'Showing ',
	                shownRows,
	                ' of ',
	                totalRows,
	                ' experiments found: '
	            ) : React.createElement(
	                'span',
	                { id: 'geneCount' },
	                'Showing ',
	                shownRows,
	                ' of ',
	                totalRows,
	                ' ',
	                this.state.showGeneSetProfiles ? 'gene sets' : 'genes',
	                ' found',
	                !this.props.jsonCoexpressions || !this.props.jsonCoexpressions.length ? ":" : " and " + (this._getProfiles().rows.length - shownRows) + " similarly expressed genes:"
	            ),
	            this.props.geneSetProfiles && !this.props.type.isMultiExperiment ? React.createElement(
	                'a',
	                { href: 'javascript:void(0)', onClick: this.toggleGeneSets },
	                this.state.showGeneSetProfiles ? '(show individual genes)' : '(show by gene set)'
	            ) : ''
	        );
	    },
	
	    _constructDownloadProfilesURL: function () {
	        return this.props.heatmapConfig.downloadProfilesURL.match(/.*\?.+/) && Object.keys(this.state.coexpressionsDisplayed).length > 0 ? this.props.heatmapConfig.downloadProfilesURL + "&coexpressions=" + JSON.stringify(this.state.coexpressionsDisplayed) : this.props.heatmapConfig.downloadProfilesURL;
	    },
	
	    render: function () {
	        var paddingMargin = "15px";
	
	        return React.createElement(
	            'div',
	            null,
	            React.createElement(
	                'div',
	                { ref: 'countAndLegend', className: 'gxaHeatmapCountAndLegend', style: { "paddingBottom": paddingMargin, "position": "sticky" } },
	                this._showGeneCount(),
	                React.createElement(
	                    'div',
	                    { style: { display: "inline-block", "paddingLeft": "10px", "verticalAlign": "top" } },
	                    React.createElement(DownloadProfilesButton, { ref: 'downloadProfilesButton',
	                        downloadProfilesURL: this._constructDownloadProfilesURL(),
	                        atlasBaseURL: this.props.atlasBaseURL,
	                        isFortLauderdale: this.props.heatmapConfig.isFortLauderdale,
	                        onDownloadCallbackForAnalytics: function () {
	                            this.props.googleAnalyticsCallback('send', 'event', 'HeatmapReact', 'downloadData');
	                        }.bind(this) })
	                ),
	                React.createElement(
	                    'div',
	                    { style: { display: "inline-block", "paddingLeft": "20px" } },
	                    this.legendType()
	                )
	            ),
	            React.createElement(
	                'div',
	                { ref: 'stickyWrap', className: 'gxaStickyTableWrap', style: { "marginTop": paddingMargin } },
	                React.createElement(
	                    'table',
	                    { ref: 'heatmapTable', className: 'gxaTableGrid gxaStickyEnabled', id: 'heatmap-table' },
	                    React.createElement(HeatmapTableHeader, { ref: 'heatmapTableHeader',
	                        radioId: 'table',
	                        isMicroarray: this.isMicroarray(),
	                        hasQuartiles: this.hasQuartiles(),
	                        isSingleGeneResult: this.isSingleGeneResult(),
	                        currentlyShowingCoexpressions: !!this._coexpressionsCurrentlyShown(),
	                        type: this.props.type,
	                        columnHeaders: this.props.columnHeaders,
	                        nonExpressedColumnHeaders: this.props.nonExpressedColumnHeaders,
	                        multipleColumnHeaders: this.props.multipleColumnHeaders,
	                        selectedColumnId: this.state.selectedColumnId,
	                        selectColumn: this.selectColumn,
	                        hoverColumnCallback: this._hoverColumn,
	                        heatmapConfig: this.props.heatmapConfig,
	                        atlasBaseURL: this.props.atlasBaseURL,
	                        displayLevels: this.state.displayLevels,
	                        toggleDisplayLevels: this.toggleDisplayLevels,
	                        showGeneSetProfiles: this.state.showGeneSetProfiles,
	                        selectedRadioButton: this.state.selectedRadioButton,
	                        toggleRadioButton: this.toggleRadioButton,
	                        renderContrastFactorHeaders: true,
	                        anatomogramEventEmitter: this.props.anatomogramEventEmitter }),
	                    React.createElement(HeatmapTableRows, { profiles: this._getProfiles().rows,
	                        nonExpressedColumnHeaders: this.props.nonExpressedColumnHeaders,
	                        selectedGeneId: this.state.selectedGeneId,
	                        selectGene: this.selectGene,
	                        type: this.props.type,
	                        heatmapConfig: this.props.heatmapConfig,
	                        atlasBaseURL: this.props.atlasBaseURL,
	                        linksAtlasBaseURL: this.props.linksAtlasBaseURL,
	                        displayLevels: this.state.displayLevels,
	                        showGeneSetProfiles: this.state.showGeneSetProfiles,
	                        selectedRadioButton: this.state.selectedRadioButton,
	                        hoverColumnCallback: this._hoverColumn,
	                        hoverRowCallback: this._hoverRow,
	                        hasQuartiles: this.hasQuartiles(),
	                        isSingleGeneResult: this.isSingleGeneResult(),
	                        renderExpressionCells: true })
	                ),
	                React.createElement(
	                    'div',
	                    { ref: 'stickyIntersect', className: 'gxaStickyTableIntersect' },
	                    React.createElement(
	                        'table',
	                        { className: 'gxaTableGrid' },
	                        React.createElement(HeatmapTableHeader, { isMicroarray: this.isMicroarray(),
	                            radioId: 'intersect',
	                            hasQuartiles: this.hasQuartiles(),
	                            isSingleGeneResult: this.isSingleGeneResult(),
	                            currentlyShowingCoexpressions: !!this._coexpressionsCurrentlyShown(),
	                            type: this.props.type,
	                            columnHeaders: this.props.columnHeaders,
	                            nonExpressedColumnHeaders: this.props.nonExpressedColumnHeaders,
	                            multipleColumnHeaders: this.props.multipleColumnHeaders,
	                            selectedColumnId: this.state.selectedColumnId,
	                            selectColumn: this.selectColumn,
	                            heatmapConfig: this.props.heatmapConfig,
	                            atlasBaseURL: this.props.atlasBaseURL,
	                            linksAtlasBaseURL: this.props.linksAtlasBaseURL,
	                            displayLevels: this.state.displayLevels,
	                            toggleDisplayLevels: this.toggleDisplayLevels,
	                            showGeneSetProfiles: this.state.showGeneSetProfiles,
	                            selectedRadioButton: this.state.selectedRadioButton,
	                            toggleRadioButton: this.toggleRadioButton,
	                            renderContrastFactorHeaders: false })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { ref: 'stickyColumn', className: 'gxaStickyTableColumn' },
	                    React.createElement(
	                        'table',
	                        { className: 'gxaTableGrid' },
	                        React.createElement(HeatmapTableHeader, { isMicroarray: this.isMicroarray(),
	                            radioId: 'column',
	                            hasQuartiles: this.hasQuartiles(),
	                            isSingleGeneResult: this.isSingleGeneResult(),
	                            currentlyShowingCoexpressions: !!this._coexpressionsCurrentlyShown(),
	                            columnHeaders: this.props.columnHeaders,
	                            nonExpressedColumnHeaders: this.props.nonExpressedColumnHeaders,
	                            type: this.props.type,
	                            multipleColumnHeaders: this.props.multipleColumnHeaders,
	                            selectedColumnId: this.state.selectedColumnId,
	                            selectColumn: this.selectColumn,
	                            heatmapConfig: this.props.heatmapConfig,
	                            atlasBaseURL: this.props.atlasBaseURL,
	                            displayLevels: this.state.displayLevels,
	                            toggleDisplayLevels: this.toggleDisplayLevels,
	                            showGeneSetProfiles: this.state.showGeneSetProfiles,
	                            selectedRadioButton: this.state.selectedRadioButton,
	                            toggleRadioButton: this.toggleRadioButton,
	                            renderContrastFactorHeaders: false }),
	                        React.createElement(HeatmapTableRows, { profiles: this._getProfiles().rows,
	                            nonExpressedColumnHeaders: this.props.nonExpressedColumnHeaders,
	                            selectedGeneId: this.state.selectedGeneId,
	                            selectGene: this.selectGene,
	                            type: this.props.type,
	                            heatmapConfig: this.props.heatmapConfig,
	                            atlasBaseURL: this.props.atlasBaseURL,
	                            linksAtlasBaseURL: this.props.linksAtlasBaseURL,
	                            displayLevels: this.state.displayLevels,
	                            showGeneSetProfiles: this.state.showGeneSetProfiles,
	                            selectedRadioButton: this.state.selectedRadioButton,
	                            hoverRowCallback: this._hoverRow,
	                            hasQuartiles: this.hasQuartiles(),
	                            isSingleGeneResult: this.isSingleGeneResult(),
	                            renderExpressionCells: false })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { ref: 'stickyHeader', className: 'gxaStickyTableHeader' },
	                    React.createElement(
	                        'table',
	                        { className: 'gxaTableGrid' },
	                        React.createElement(HeatmapTableHeader, { isMicroarray: this.isMicroarray(),
	                            radioId: 'header',
	                            hasQuartiles: this.hasQuartiles(),
	                            isSingleGeneResult: this.isSingleGeneResult(),
	                            currentlyShowingCoexpressions: !!this._coexpressionsCurrentlyShown(),
	                            hoverColumnCallback: this._hoverColumn,
	                            type: this.props.type,
	                            columnHeaders: this.props.columnHeaders,
	                            nonExpressedColumnHeaders: this.props.nonExpressedColumnHeaders,
	                            multipleColumnHeaders: this.props.multipleColumnHeaders,
	                            selectedColumnId: this.state.selectedColumnId,
	                            selectColumn: this.selectColumn,
	                            heatmapConfig: this.props.heatmapConfig,
	                            atlasBaseURL: this.props.atlasBaseURL,
	                            linksAtlasBaseURL: this.props.linksAtlasBaseURL,
	                            displayLevels: this.state.displayLevels,
	                            toggleDisplayLevels: this.toggleDisplayLevels,
	                            showGeneSetProfiles: this.state.showGeneSetProfiles,
	                            selectedRadioButton: this.state.selectedRadioButton,
	                            toggleRadioButton: this.toggleRadioButton,
	                            renderContrastFactorHeaders: true,
	                            anatomogramEventEmitter: this.props.anatomogramEventEmitter })
	                    )
	                ),
	                React.createElement(HeatmapBottomOptions, { coexpressionsAvailable: this._getCoexpressionsAvailable(),
	                    showCoexpressionsFor: this._showCoexpressionsFor,
	                    googleAnalyticsCallback: this.props.googleAnalyticsCallback })
	            )
	        );
	    }
	
	});
	
	var HeatmapTableHeader = React.createClass({
	    displayName: 'HeatmapTableHeader',
	
	    propTypes: {
	        nonExpressedColumnHeaders: React.PropTypes.arrayOf(React.PropTypes.string),
	        currentlyShowingCoexpressions: React.PropTypes.bool.isRequired
	    },
	
	    renderContrastFactorHeaders: function () {
	        var heatmapConfig = this.props.heatmapConfig;
	        if (this.props.type.isBaseline) {
	            return renderFactorHeaders(heatmapConfig, this.props.atlasBaseURL, this.props.mainHeaderNames, this.props.type, this.props.columnHeaders, this.props.nonExpressedColumnHeaders, heatmapConfig.experimentAccession, this.props.selectColumn, this.props.selectedColumnId, this.props.hoverColumnCallback, this.props.anatomogramEventEmitter);
	        } else if (this.props.type.isDifferential) {
	            return React.createElement(ContrastHeaders, { heatmapConfig: heatmapConfig,
	                atlasBaseURL: this.props.atlasBaseURL,
	                contrasts: this.props.columnHeaders,
	                selectedColumnId: this.props.selectedColumnId,
	                selectColumn: this.props.selectColumn,
	                experimentAccession: heatmapConfig.experimentAccession,
	                showMaPlotButton: heatmapConfig.showMaPlotButton,
	                gseaPlots: heatmapConfig.gseaPlots });
	        } else if (this.props.type.isMultiExperiment) {
	            return renderFactorHeaders(heatmapConfig, this.props.atlasBaseURL, null, this.props.type, this.props.columnHeaders, this.props.nonExpressedColumnHeaders, "", this.props.selectColumn, this.props.selectedColumnId, this.props.hoverColumnCallback, this.props.anatomogramEventEmitter);
	        }
	    },
	
	    render: function () {
	        var showGeneProfile = this.props.showGeneSetProfiles ? "Gene set" : "Gene";
	        var showExperimentProfile = this.props.type.isMultiExperiment ? "Experiment" : showGeneProfile;
	
	        return React.createElement(
	            'thead',
	            null,
	            React.createElement(
	                'tr',
	                null,
	                React.createElement(
	                    'th',
	                    { className: 'gxaHorizontalHeaderCell gxaHeatmapTableIntersect', colSpan: this.props.isMicroarray ? 2 : undefined },
	                    React.createElement(TopLeftCorner, { type: this.props.type,
	                        hasQuartiles: this.props.hasQuartiles,
	                        radioId: this.props.radioId,
	                        isSingleGeneResult: this.props.isSingleGeneResult,
	                        currentlyShowingCoexpressions: this.props.currentlyShowingCoexpressions,
	                        heatmapConfig: this.props.heatmapConfig,
	                        displayLevels: this.props.displayLevels,
	                        toggleDisplayLevels: this.props.toggleDisplayLevels,
	                        selectedRadioButton: this.props.selectedRadioButton,
	                        toggleRadioButton: this.props.toggleRadioButton,
	                        atlasBaseURL: this.props.atlasBaseURL })
	                ),
	                this.props.renderContrastFactorHeaders ? this.renderContrastFactorHeaders() : null
	            ),
	            React.createElement(
	                'tr',
	                null,
	                React.createElement(
	                    'th',
	                    { className: 'gxaHorizontalHeaderCell gxaHeatmapTableIntersect', style: this.props.isMicroarray ? { width: "166px" } : {} },
	                    React.createElement(
	                        'div',
	                        null,
	                        showExperimentProfile
	                    )
	                ),
	                this.props.isMicroarray ? React.createElement(
	                    'th',
	                    { className: 'gxaHorizontalHeaderCell gxaHeatmapTableIntersect' },
	                    React.createElement(
	                        'div',
	                        null,
	                        'Design Element'
	                    )
	                ) : null
	            )
	        );
	    }
	});
	
	function restrictLabelSize(label, maxSize) {
	    var result = label;
	    if (result.length > maxSize + 1) {
	        // +1 to account for the extra ellipsis character appended
	        result = result.substring(0, maxSize);
	        if (result.lastIndexOf(" ") > maxSize - 5) {
	            result = result.substring(0, result.lastIndexOf(" "));
	        }
	        result = result + "…";
	    }
	    return result;
	}
	
	function renderFactorHeaders(heatmapConfig, atlasBaseURL, mainHeaderNames, type, assayGroupFactors, nonExpressedGroupFactors, experimentAccession, selectColumn, selectedColumnId, hoverColumnCallback, anatomogramEventEmitter) {
	
	    return assayGroupFactors.map(function (assayGroupFactor) {
	        return React.createElement(FactorHeader, { key: mainHeaderNames + assayGroupFactor.factorValue,
	            type: type,
	            heatmapConfig: heatmapConfig,
	            factorName: assayGroupFactor.factorValue,
	            svgPathId: assayGroupFactor.factorValueOntologyTermId,
	            assayGroupId: assayGroupFactor.assayGroupId,
	            experimentAccession: experimentAccession,
	            selectColumn: selectColumn,
	            selected: assayGroupFactor.assayGroupId === selectedColumnId,
	            hoverColumnCallback: hoverColumnCallback,
	            anatomogramEventEmitter: anatomogramEventEmitter,
	            atlasBaseURL: atlasBaseURL });
	    });
	}
	
	var FactorHeader = React.createClass({
	    displayName: 'FactorHeader',
	
	
	    getInitialState: function () {
	        return { hover: false, selected: false };
	    },
	
	    onMouseEnter: function () {
	        if (this.props.heatmapConfig.enableEnsemblLauncher) {
	            this.setState({ hover: true });
	        }
	        this.props.hoverColumnCallback(this.props.svgPathId);
	    },
	
	    onMouseLeave: function () {
	        if (this.props.heatmapConfig.enableEnsemblLauncher) {
	            this.setState({ hover: false });
	        }
	        this.props.hoverColumnCallback(null);
	        this._closeTooltip();
	    },
	
	    _closeTooltip: function () {
	        if (!this.props.type.isMultiExperiment) {
	            $(ReactDOM.findDOMNode(this)).tooltip("close");
	        }
	    },
	
	    _anatomogramTissueMouseEnter: function (svgPathId) {
	        if (svgPathId === this.props.svgPathId) {
	            $(ReactDOM.findDOMNode(this.refs.headerCell)).addClass("gxaHeaderHover");
	        }
	    },
	
	    _anatomogramTissueMouseLeave: function (svgPathId) {
	        if (svgPathId === this.props.svgPathId) {
	            $(ReactDOM.findDOMNode(this.refs.headerCell)).removeClass("gxaHeaderHover");
	        }
	    },
	
	    onClick: function () {
	        if (this.props.heatmapConfig.enableEnsemblLauncher) {
	            this.props.selectColumn(this.props.assayGroupId);
	        }
	    },
	
	    componentDidMount: function () {
	        if (!this.props.type.isMultiExperiment) {
	            FactorTooltipModule.init(this.props.atlasBaseURL, this.props.heatmapConfig.accessKey, ReactDOM.findDOMNode(this), this.props.experimentAccession, this.props.assayGroupId);
	        }
	        if (this.props.anatomogramEventEmitter) {
	            this.props.anatomogramEventEmitter.addListener('gxaAnatomogramTissueMouseEnter', this._anatomogramTissueMouseEnter);
	            this.props.anatomogramEventEmitter.addListener('gxaAnatomogramTissueMouseLeave', this._anatomogramTissueMouseLeave);
	        }
	    },
	
	    render: function () {
	        var showSelectTextOnHover = this.state.hover && !this.props.selected ? React.createElement(
	            'span',
	            { style: { position: "absolute", width: "10px", right: "0px", left: "95px", float: "right", color: "green" } },
	            '  select'
	        ) : null;
	        var showTickWhenSelected = this.props.selected ? React.createElement(
	            'span',
	            { className: 'rotate_tick', style: { position: "absolute", width: "5px", right: "0px", left: "125px", float: "right", color: "green" } },
	            ' ✔ '
	        ) : null;
	        var thClass = "rotated_cell gxaHoverableHeader" + (this.props.selected ? " gxaVerticalHeaderCell-selected" : " gxaVerticalHeaderCell") + (this.props.heatmapConfig.enableEnsemblLauncher ? " gxaSelectableHeader" : "");
	        var divClass = "rotate_text factor-header";
	        var factorName = Modernizr.csstransforms ? restrictLabelSize(this.props.factorName, 14) : this.props.factorName;
	
	        return React.createElement(
	            'th',
	            { ref: 'headerCell', className: thClass, onMouseEnter: this.onMouseEnter, onMouseLeave: this.onMouseLeave, onClick: this.onClick, rowSpan: '2' },
	            React.createElement(
	                'div',
	                { 'data-assay-group-id': this.props.assayGroupId, 'data-experiment-accession': this.props.experimentAccession, className: divClass },
	                factorName,
	                showSelectTextOnHover,
	                showTickWhenSelected
	            )
	        );
	    }
	
	});
	
	var ContrastHeaders = React.createClass({
	    displayName: 'ContrastHeaders',
	
	
	    render: function () {
	        var heatmapConfig = this.props.heatmapConfig;
	
	        var contrastHeaders = this.props.contrasts.map(function (contrast) {
	            var gseaPlotsThisContrast = this.props.gseaPlots ? this.props.gseaPlots[contrast.id] : { go: false, interpro: false, reactome: false };
	            return React.createElement(ContrastHeader, { key: contrast.id,
	                heatmapConfig: heatmapConfig,
	                atlasBaseURL: this.props.atlasBaseURL,
	                selectColumn: this.props.selectColumn,
	                selected: contrast.id === this.props.selectedColumnId,
	                contrastName: contrast.displayName, arrayDesignAccession: contrast.arrayDesignAccession,
	                contrastId: contrast.id, experimentAccession: this.props.experimentAccession,
	                showMaPlotButton: this.props.showMaPlotButton,
	                showGseaGoPlot: gseaPlotsThisContrast.go,
	                showGseaInterproPlot: gseaPlotsThisContrast.interpro,
	                showGseaReactomePlot: gseaPlotsThisContrast.reactome });
	        }.bind(this));
	
	        return React.createElement(
	            'div',
	            null,
	            contrastHeaders
	        );
	    }
	
	});
	
	var ContrastHeader = React.createClass({
	    displayName: 'ContrastHeader',
	
	
	    getInitialState: function () {
	        return { hover: false, selected: false };
	    },
	
	    onMouseEnter: function () {
	        this.setState({ hover: true });
	    },
	
	    onMouseLeave: function () {
	        this.setState({ hover: false });
	        this._closeTooltip();
	    },
	
	    _closeTooltip: function () {
	        $(ReactDOM.findDOMNode(this)).tooltip("close");
	    },
	
	    onClick: function () {
	        this.props.selectColumn(this.props.contrastId);
	    },
	
	    componentDidMount: function () {
	        ContrastTooltips(this.props.atlasBaseURL, this.props.heatmapConfig.accessKey, ReactDOM.findDOMNode(this), this.props.experimentAccession, this.props.contrastId);
	
	        if (this.showPlotsButton()) {
	            this.renderToolBarContent(ReactDOM.findDOMNode(this.refs.plotsToolBarContent));
	
	            var $plotsButton = $(ReactDOM.findDOMNode(this.refs.plotsButton));
	            $plotsButton.tooltip({
	                hide: false,
	                show: false,
	                tooltipClass: "gxaHelpTooltip"
	            }).button();
	            $plotsButton.toolbar({
	                content: ReactDOM.findDOMNode(this.refs.plotsToolBarContent),
	                position: "right",
	                style: "white",
	                event: "click",
	                hideOnClick: true
	            });
	            $plotsButton.addClass("gxaNoTextButton");
	        }
	    },
	
	    renderToolBarContent: function (contentNode) {
	
	        var $contentNode = $(contentNode);
	
	        var maPlotURL = this.props.atlasBaseURL + "/external-resources/" + this.props.experimentAccession + '/' + (this.props.arrayDesignAccession ? this.props.arrayDesignAccession + "/" : "") + this.props.contrastId + "/ma-plot.png";
	        var maPlotImgSrcURL = this.props.atlasBaseURL + "/resources/images/maplot-button.png";
	
	        var gseaGoPlotURL = this.props.atlasBaseURL + "/external-resources/" + this.props.experimentAccession + '/' + this.props.contrastId + "/gsea_go.png";
	        var gseaGoPlotImgSrcURL = this.props.atlasBaseURL + "/resources/images/gsea-go-button.png";
	
	        var gseaInterproPlotURL = this.props.atlasBaseURL + "/external-resources/" + this.props.experimentAccession + '/' + this.props.contrastId + "/gsea_interpro.png";
	        var gseaInterproImgSrcURL = this.props.atlasBaseURL + '/resources/images/gsea-interpro-button.png';
	
	        var gseaReactomePlotURL = this.props.atlasBaseURL + "/external-resources/" + this.props.experimentAccession + '/' + this.props.contrastId + "/gsea_reactome.png";
	        var gseaReactomePlotImgSrcURL = this.props.atlasBaseURL + "/resources/images/gsea-reactome-button.png";
	
	        var content = React.createElement(
	            'div',
	            null,
	            this.props.showMaPlotButton ? React.createElement(
	                'a',
	                { href: maPlotURL, id: 'maButtonID', title: 'Click to view MA plot for the contrast across all genes', onClick: this.clickButton },
	                React.createElement('img', { src: maPlotImgSrcURL })
	            ) : null,
	            this.props.showGseaGoPlot ? React.createElement(
	                'a',
	                { href: gseaGoPlotURL, id: 'goButtonID', title: 'Click to view GO terms enrichment analysis plot', onClick: this.clickButton },
	                React.createElement('img', { src: gseaGoPlotImgSrcURL })
	            ) : null,
	            this.props.showGseaInterproPlot ? React.createElement(
	                'a',
	                { href: gseaInterproPlotURL, id: 'interproButtonID', title: 'Click to view Interpro domains enrichment analysis plot', onClick: this.clickButton },
	                React.createElement('img', { src: gseaInterproImgSrcURL })
	            ) : null,
	            this.props.showGseaReactomePlot ? React.createElement(
	                'a',
	                { href: gseaReactomePlotURL, id: 'reactomeButtonID', title: 'Click to view Reactome pathways enrichment analysis plot', onClick: this.clickButton },
	                React.createElement('img', { src: gseaReactomePlotImgSrcURL })
	            ) : null
	        );
	
	        // the tool bar content will be copied around the DOM by the toolbar plugin
	        // so we render using static markup because otherwise when copied, we'll end up with
	        // duplicate data-reactids
	        $contentNode.html(ReactDOMServer.renderToStaticMarkup(content));
	
	        $contentNode.find('a').tooltip({
	            tooltipClass: "gxaHelpTooltip"
	        });
	
	        //need to use each here otherwise we get a fancybox error
	        $contentNode.find('a').each(function (index, button) {
	            $(button).fancybox({
	                padding: 0,
	                openEffect: 'elastic',
	                closeEffect: 'elastic'
	            });
	        });
	    },
	
	    clickButton: function (event) {
	        // prevent contrast from being selected
	        event.stopPropagation();
	    },
	
	    showPlotsButton: function () {
	        return this.props.showMaPlotButton || this.props.showGseaGoPlot || this.props.showGseaInterproPlot || this.props.showGseaReactomePlot;
	    },
	
	    render: function () {
	        var thStyle = this.showPlotsButton() ? { minWidth: "80px" } : {};
	        var textStyle = this.showPlotsButton() ? { top: "57px" } : {};
	
	        var plotsImgSrcURL = this.props.atlasBaseURL + "/resources/images/yellow-chart-icon.png";
	
	        var plotsButton = React.createElement(
	            'div',
	            { style: { textAlign: "right", paddingRight: "3px" } },
	            React.createElement(
	                'a',
	                { href: '#', ref: 'plotsButton', onClick: this.clickButton, title: 'Click to view plots' },
	                React.createElement('img', { src: plotsImgSrcURL })
	            )
	        );
	
	        var showSelectTextOnHover = this.state.hover && !this.props.selected ? React.createElement(
	            'span',
	            { style: { position: "absolute", width: "10px", right: "0px", left: "95px", bottom: "-35px", color: "green" } },
	            '  select'
	        ) : null;
	        var showTickWhenSelected = this.props.selected ? React.createElement(
	            'span',
	            { className: 'rotate_tick', style: { position: "absolute", width: "5px", right: "0px", left: "125px", bottom: "-35px", color: "green" } },
	            ' ✔ '
	        ) : null;
	        var thClass = "rotated_cell gxaHoverableHeader" + (this.props.selected ? " gxaVerticalHeaderCell-selected" : " gxaVerticalHeaderCell") + (this.props.heatmapConfig.enableEnsemblLauncher ? " gxaSelectableHeader " : "");
	        var divClass = "rotate_text factor-header";
	        var contrastName = Modernizr.csstransforms ? restrictLabelSize(this.props.contrastName, 17) : this.props.contrastName;
	
	        return React.createElement(
	            'th',
	            { className: thClass, rowSpan: '2', style: thStyle, onMouseEnter: this.props.heatmapConfig.enableEnsemblLauncher ? this.onMouseEnter : undefined, onMouseLeave: this.props.heatmapConfig.enableEnsemblLauncher ? this.onMouseLeave : this._closeTooltip, onClick: this.props.heatmapConfig.enableEnsemblLauncher ? this.onClick : undefined },
	            React.createElement(
	                'div',
	                { 'data-contrast-id': this.props.contrastId, 'data-experiment-accession': this.props.experimentAccession, className: divClass, style: textStyle },
	                contrastName,
	                showSelectTextOnHover,
	                showTickWhenSelected
	            ),
	            this.showPlotsButton() ? plotsButton : null,
	            this.showPlotsButton() ? React.createElement(
	                'div',
	                { ref: 'plotsToolBarContent', style: { display: "none" } },
	                'placeholder'
	            ) : null
	        );
	    }
	
	});
	
	var TopLeftCorner = React.createClass({
	    displayName: 'TopLeftCorner',
	
	
	    displayLevelsBaseline: function () {
	        if (this.props.hasQuartiles && this.props.isSingleGeneResult) {
	            var LRG = this.props.currentlyShowingCoexpressions ? LevelsRadioGroup("gradients", "levels") : LevelsRadioGroup("gradients", "levels", "variance");
	            return React.createElement(LRG, { radioId: this.props.radioId,
	                selectedRadioButton: this.props.selectedRadioButton,
	                toggleRadioButton: this.props.toggleRadioButton });
	        } else if (this.props.type.isBaseline || this.props.type.isMultiExperiment) {
	            return React.createElement(DisplayLevelsButton, { hideText: 'Hide levels',
	                showText: 'Display levels',
	                onClickCallback: this.props.toggleDisplayLevels,
	                displayLevels: this.props.displayLevels,
	                width: '150px', fontSize: '14px' });
	        } else {
	            return React.createElement(DisplayLevelsButton, { hideText: 'Hide log<sub>2</sub>-fold change',
	                showText: 'Display log<sub>2</sub>-fold change',
	                onClickCallback: this.props.toggleDisplayLevels,
	                displayLevels: this.props.displayLevels,
	                width: '200px', fontSize: '14px' });
	        }
	    },
	
	    render: function () {
	        return React.createElement(
	            'div',
	            { className: 'gxaHeatmapMatrixTopLeftCorner' },
	            React.createElement('span', { 'data-help-loc': this.props.type.heatmapTooltip, ref: 'tooltipSpan' }),
	            React.createElement(
	                'div',
	                { style: { display: "table-cell", verticalAlign: "middle", textAlign: "center" } },
	                this.displayLevelsBaseline()
	            )
	        );
	    },
	
	    componentDidMount: function () {
	        HelpTooltips(this.props.atlasBaseURL, 'experiment', ReactDOM.findDOMNode(this.refs.tooltipSpan));
	    }
	
	});
	
	var LevelsRadioGroup = function (__args__) {
	    var inputElements = [].concat.apply({}, [].slice.call(arguments).map(function (el, ix) {
	        return [React.createElement('input', { key: 3 * ix, type: 'radio', value: el }), React.createElement(
	            'span',
	            { key: 3 * ix + 1 },
	            "Display " + el
	        ), React.createElement('br', { key: 3 * ix + 2 })];
	    })).slice(1, -1);
	    return React.createClass({
	
	        getInitialState: function () {
	            return { value: this.props.selectedRadioButton };
	        },
	
	        render: function () {
	            return React.createElement(
	                RadioGroup,
	                { name: "displayLevelsGroup_" + this.props.radioId, value: this.props.selectedRadioButton, onChange: this.handleChange },
	                React.createElement(
	                    'div',
	                    { style: { "marginLeft": "10px", "marginTop": "8px" } },
	                    inputElements
	                )
	            );
	        },
	
	        handleChange: function (event) {
	            this.props.toggleRadioButton(event.target.value);
	            this.setState({ value: this.props.selectedRadioButton });
	
	            // To resize the sticky column/header in case the row height or column width changes
	            $(window).resize();
	        }
	    });
	};
	
	var HeatmapTableRows = React.createClass({
	    displayName: 'HeatmapTableRows',
	
	    propTypes: {
	        nonExpressedColumnHeaders: React.PropTypes.arrayOf(React.PropTypes.string),
	        profiles: React.PropTypes.arrayOf(React.PropTypes.object).isRequired
	    },
	
	    profileRowType: function (profile) {
	        var geneProfileKey = this.props.heatmapConfig.species + "-" + (this.props.type.isDifferential ? profile.name + "-" + profile.designElement : profile.name);
	        return this.props.type.isMultiExperiment ? React.createElement(GeneProfileRow, { key: geneProfileKey,
	            id: profile.id,
	            name: profile.name,
	            type: this.props.type,
	            experimentType: profile.experimentType,
	            expressions: profile.expressions,
	            nonExpressedColumnHeaders: this.props.nonExpressedColumnHeaders,
	            serializedFilterFactors: profile.serializedFilterFactors,
	            heatmapConfig: this.props.heatmapConfig,
	            atlasBaseURL: this.props.atlasBaseURL,
	            linksAtlasBaseURL: this.props.linksAtlasBaseURL,
	            displayLevels: this.props.displayLevels,
	            renderExpressionCells: this.props.renderExpressionCells,
	            hoverColumnCallback: this.props.hoverColumnCallback,
	            hoverRowCallback: this.props.hoverRowCallback }) : React.createElement(GeneProfileRow, { key: geneProfileKey,
	            selected: profile.id === this.props.selectedGeneId,
	            selectGene: this.props.selectGene,
	            designElement: profile.designElement,
	            id: profile.id,
	            name: profile.name,
	            type: this.props.type,
	            expressions: profile.expressions,
	            nonExpressedColumnHeaders: this.props.nonExpressedColumnHeaders,
	            heatmapConfig: this.props.heatmapConfig,
	            atlasBaseURL: this.props.atlasBaseURL,
	            linksAtlasBaseURL: this.props.linksAtlasBaseURL,
	            displayLevels: this.props.displayLevels,
	            showGeneSetProfiles: this.props.showGeneSetProfiles,
	            selectedRadioButton: this.props.selectedRadioButton,
	            hasQuartiles: this.props.hasQuartiles,
	            isSingleGeneResult: this.props.isSingleGeneResult,
	            renderExpressionCells: this.props.renderExpressionCells,
	            hoverColumnCallback: this.props.hoverColumnCallback,
	            hoverRowCallback: this.props.hoverRowCallback });
	    },
	
	    render: function () {
	        var geneProfilesRows = this.props.profiles.map(function (profile) {
	
	            return this.profileRowType(profile);
	        }.bind(this));
	
	        return React.createElement(
	            'tbody',
	            null,
	            geneProfilesRows
	        );
	    }
	});
	
	var GeneProfileRow = React.createClass({
	    displayName: 'GeneProfileRow',
	
	    propTypes: {
	        nonExpressedColumnHeaders: React.PropTypes.arrayOf(React.PropTypes.string),
	        atlasBaseURL: React.PropTypes.string.isRequired,
	        linksAtlasBaseURL: React.PropTypes.string.isRequired
	    },
	
	    getInitialState: function () {
	        return { hover: false, selected: false, levels: this.props.displayLevels };
	    },
	
	    onMouseEnter: function () {
	        if (this.props.heatmapConfig.enableEnsemblLauncher) {
	            this.setState({ hover: true });
	        }
	        // We use name instead of id because in multiexperiment the same id can appear under different name (same experiment, different conditions)
	        this.props.hoverRowCallback(this.props.name);
	    },
	
	    onMouseLeave: function () {
	        if (this.props.heatmapConfig.enableEnsemblLauncher) {
	            this.setState({ hover: false });
	        }
	        this._closeTooltip();
	        this.props.hoverRowCallback(null);
	    },
	
	    onClick: function () {
	        if (this.props.heatmapConfig.enableEnsemblLauncher) {
	            this.props.selectGene(this.props.id);
	        }
	    },
	
	    geneNameLinked: function () {
	        var experimentURL = '/experiments/' + this.props.id + '?geneQuery=' + this.props.heatmapConfig.geneQuery + (this.props.serializedFilterFactors ? "&serializedFilterFactors=" + encodeURIComponent(this.props.serializedFilterFactors) : "");
	        var geneURL = this.props.showGeneSetProfiles ? '/query?geneQuery=' + this.props.name + '&exactMatch=' + this.props.heatmapConfig.isExactMatch : '/genes/' + this.props.id;
	
	        var titleTooltip = this.props.type.isMultiExperiment ? this.props.experimentType == "PROTEOMICS_BASELINE" ? "Protein Expression" : "RNA Expression" : "";
	
	        var experimentOrGeneURL = this.props.linksAtlasBaseURL + (this.props.type.isMultiExperiment ? experimentURL : geneURL);
	
	        // don't render id for gene sets to prevent tooltips
	        // The vertical align in the <a> element is needed because the kerning in the font used in icon-conceptual is vertically off
	        return React.createElement(
	            'span',
	            { title: titleTooltip, style: { "display": "table-cell" } },
	            React.createElement('span', { className: 'icon icon-conceptual icon-c2', 'data-icon': this.props.type.isMultiExperiment ? this.props.experimentType == "PROTEOMICS_BASELINE" ? 'P' : 'd' : '' }),
	            React.createElement(
	                'a',
	                { ref: 'geneName', id: this.props.showGeneSetProfiles ? '' : this.props.id, href: experimentOrGeneURL, onClick: this.geneNameLinkClicked, style: { "verticalAlign": "15%" } },
	                this.props.name
	            )
	        );
	    },
	
	    geneNameLinkClicked: function (event) {
	        // prevent row from being selected
	        event.stopPropagation();
	    },
	
	    geneNameNotLinked: function () {
	        // don't render id for gene sets to prevent tooltips
	        return React.createElement(
	            'span',
	            { style: { "float": "left" }, ref: 'geneName', title: '', id: this.props.showGeneSetProfiles ? '' : this.props.id },
	            this.props.name
	        );
	    },
	
	    displayLevelsRadio: function () {
	        if (this.props.hasQuartiles && this.props.isSingleGeneResult) {
	            return this.props.selectedRadioButton === "levels";
	        } else return this.props.displayLevels;
	    },
	
	    cellType: function (expression) {
	        if (this.props.type.isBaseline) {
	            if (this.props.selectedRadioButton === "variance" && expression.quartiles) {
	                return React.createElement(HeatmapBaselineCellVariance, { key: this.props.id + expression.factorName,
	                    quartiles: expression.quartiles,
	                    hoverColumnCallback: this.props.hoverColumnCallback });
	            } else {
	                return React.createElement(CellBaseline, { key: this.props.id + expression.factorName,
	                    factorName: expression.factorName,
	                    color: expression.color,
	                    value: expression.value,
	                    heatmapConfig: this.props.heatmapConfig,
	                    displayLevels: this.displayLevelsRadio(),
	                    svgPathId: expression.svgPathId,
	                    geneSetProfiles: this.props.showGeneSetProfiles,
	                    id: this.props.id,
	                    name: this.props.name,
	                    hoverColumnCallback: this.props.hoverColumnCallback });
	            }
	        } else if (this.props.type.isDifferential) {
	            return React.createElement(CellDifferential, { key: this.props.designElement + this.props.name + expression.contrastName,
	                colour: expression.color,
	                foldChange: expression.foldChange,
	                pValue: expression.pValue,
	                tStat: expression.tStat,
	                displayLevels: this.props.displayLevels });
	        } else if (this.props.type.isMultiExperiment) {
	            return React.createElement(CellMultiExperiment, { key: this.props.id + expression.factorName,
	                factorName: expression.factorName,
	                serializedFilterFactors: this.props.serializedFilterFactors,
	                color: expression.color,
	                value: expression.value,
	                displayLevels: this.props.displayLevels,
	                svgPathId: expression.svgPathId,
	                id: this.props.id,
	                name: this.props.name,
	                hoverColumnCallback: this.props.hoverColumnCallback });
	        }
	    },
	
	    cells: function (expressions, nonExpressedColumnHeaders) {
	        //var filteredExpressions = expressions.filter(function(expression) {
	        //    return (nonExpressedColumnHeaders.indexOf(expression.factorName) == -1)
	        //});
	        //
	        //return filteredExpressions.map(function (expression) {
	        //    return this.cellType(expression);
	        //}.bind(this));
	
	        return expressions.map(function (expression) {
	            return this.cellType(expression);
	        }.bind(this));
	    },
	
	    render: function () {
	        var showSelectTextOnHover = this.state.hover && !this.props.selected ? React.createElement(
	            'span',
	            { style: { "display": "table-cell", "textAlign": "right", "paddingLeft": "10px", "color": "green", "visibility": "visible" } },
	            'select'
	        ) : React.createElement(
	            'span',
	            { style: { "display": "table-cell", "textAlign": "right", "paddingLeft": "10px", "color": "green", "visibility": "hidden" } },
	            'select'
	        );
	        var showTickWhenSelected = this.props.selected ? React.createElement(
	            'span',
	            { style: { "float": "right", "color": "green" } },
	            ' ✔ '
	        ) : null;
	        var className = (this.props.selected ? "gxaHorizontalHeaderCell-selected gxaHoverableHeader" : "gxaHorizontalHeaderCell gxaHoverableHeader") + (this.props.heatmapConfig.enableEnsemblLauncher ? " gxaSelectableHeader" : "");
	        var rowClassName = this.props.type.isMultiExperiment ? this.props.experimentType == "PROTEOMICS_BASELINE" ? "gxaProteomicsExperiment" : "gxaTranscriptomicsExperiment" : "";
	
	        return React.createElement(
	            'tr',
	            { className: rowClassName },
	            React.createElement(
	                'th',
	                { className: className, onMouseEnter: this.onMouseEnter, onMouseLeave: this.onMouseLeave, onClick: this.onClick },
	                React.createElement(
	                    'div',
	                    { style: { display: "table", width: "100%" } },
	                    React.createElement(
	                        'div',
	                        { style: { display: "table-row" } },
	                        this.props.heatmapConfig.enableGeneLinks ? this.geneNameLinked() : this.geneNameNotLinked(),
	                        this.props.heatmapConfig.enableEnsemblLauncher ? showSelectTextOnHover : null,
	                        this.props.heatmapConfig.enableEnsemblLauncher ? showTickWhenSelected : null
	                    )
	                )
	            ),
	            this.props.designElement ? React.createElement(
	                'th',
	                { className: 'gxaHeatmapTableDesignElement' },
	                this.props.designElement
	            ) : null,
	            this.props.renderExpressionCells ? this.cells(this.props.expressions, this.props.nonExpressedColumnHeaders) : null
	        );
	    },
	
	    componentDidMount: function () {
	        if (!this.props.type.isMultiExperiment) {
	            GenePropertiesTooltipModule.init(this.props.atlasBaseURL, ReactDOM.findDOMNode(this.refs.geneName), this.props.id, this.props.name);
	        }
	    },
	
	    _closeTooltip: function () {
	        if (!this.props.type.isMultiExperiment) {
	            $(ReactDOM.findDOMNode(this.refs.geneName)).tooltip("close");
	        }
	    }
	
	});
	
	var CellBaseline = React.createClass({
	    displayName: 'CellBaseline',
	
	    render: function () {
	        if (this._noExpression()) {
	            return React.createElement('td', null);
	        }
	
	        var style = { "backgroundColor": this._isUnknownExpression() ? "white" : this.props.color };
	
	        return React.createElement(
	            'td',
	            { style: style, onMouseEnter: this._onMouseEnter, onMouseLeave: this._onMouseLeave },
	            React.createElement(
	                'div',
	                {
	                    className: 'gxaHeatmapCell',
	                    style: { visibility: this._isUnknownExpression() || this.props.displayLevels ? "visible" : "hidden" } },
	                this._isUnknownExpression() ? this._unknownCell() : NumberFormat.baselineExpression(this.props.value)
	            )
	        );
	    },
	
	    componentDidMount: function () {
	        this.addQuestionMarkTooltip();
	    },
	
	    // need this so that we re-add question mark tooltip, if it doesn't exist, when switching between
	    // individual genes and gene sets
	    componentDidUpdate: function () {
	        this.addQuestionMarkTooltip();
	    },
	
	    addQuestionMarkTooltip: function () {
	        function hasQuestionMark(unknownElement) {
	            return unknownElement.children.length;
	        }
	
	        if (this._isUnknownExpression() && !hasQuestionMark(ReactDOM.findDOMNode(this.refs.unknownCell))) {
	            HelpTooltips(this.props.atlasBaseURL, 'experiment', ReactDOM.findDOMNode(this.refs.unknownCell));
	        }
	    },
	
	    _hasKnownExpression: function () {
	        // true if not blank or UNKNOWN, ie: has a expression with a known value
	        return this.props.value && !this._isUnknownExpression();
	    },
	
	    _isUnknownExpression: function () {
	        return this.propsvalue === "UNKNOWN";
	    },
	
	    _noExpression: function () {
	        return !this.props.value;
	    },
	
	    _unknownCell: function () {
	        return React.createElement('span', { ref: 'unknownCell', 'data-help-loc': this.props.geneSetProfiles ? '#heatMapTableGeneSetUnknownCell' : '#heatMapTableUnknownCell' });
	    },
	
	    _onMouseEnter: function () {
	        if (this._hasKnownExpression()) {
	            this.props.hoverColumnCallback(this.props.svgPathId);
	        }
	    },
	
	    _onMouseLeave: function () {
	        if (this._hasKnownExpression()) {
	            this.props.hoverColumnCallback(null);
	        }
	    }
	});
	
	var CellMultiExperiment = React.createClass({
	    displayName: 'CellMultiExperiment',
	
	    _isNAExpression: function () {
	        return this.props.value === "NT";
	    },
	
	    _noExpression: function () {
	        return !this.props.value;
	    },
	
	    _tissueNotStudiedInExperiment: function () {
	        return React.createElement(
	            'span',
	            null,
	            'NA'
	        );
	    },
	
	    _onMouseEnter: function () {
	        if (!this._noExpression() && !this._isNAExpression()) {
	            this.props.hoverColumnCallback(this.props.svgPathId);
	        }
	    },
	
	    _onMouseLeave: function () {
	        if (!this._noExpression() && !this._isNAExpression()) {
	            this.props.hoverColumnCallback(null);
	        }
	    },
	
	    render: function () {
	
	        if (this._noExpression()) {
	            return React.createElement('td', null);
	        }
	
	        var style = { "backgroundColor": this.props.color };
	
	        return React.createElement(
	            'td',
	            { style: style, onMouseEnter: this._onMouseEnter, onMouseLeave: this._onMouseLeave },
	            React.createElement(
	                'div',
	                { className: 'gxaHeatmapCell', style: { visibility: this._isNAExpression() || this.props.displayLevels ? "visible" : "hidden" } },
	                this._isNAExpression(this.props.value) ? this._tissueNotStudiedInExperiment() : NumberFormat.baselineExpression(this.props.value)
	            )
	        );
	    }
	});
	
	var HeatmapBottomOptions = React.createClass({
	    displayName: 'HeatmapBottomOptions',
	
	    propTypes: {
	        coexpressionsAvailable: React.PropTypes.arrayOf(React.PropTypes.shape({
	            name: React.PropTypes.string.isRequired,
	            id: React.PropTypes.string.isRequired,
	            amount: React.PropTypes.number.isRequired
	        })).isRequired,
	        showCoexpressionsFor: React.PropTypes.func.isRequired,
	        googleAnalyticsCallback: React.PropTypes.func.isRequired
	    },
	
	    render: function () {
	        var options = [];
	        for (var i = 0; i < this.props.coexpressionsAvailable.length; i++) {
	            var el = this.props.coexpressionsAvailable[i];
	            options.push(React.createElement(CoexpressionOption, {
	                key: i,
	                geneName: el.name,
	                numCoexpressionsAvailable: el.amount,
	                showCoexpressionsCallback: function (amount) {
	                    this.props.googleAnalyticsCallback('send', 'event', 'HeatmapReact', 'coexpressions-use');
	                    this.props.showCoexpressionsFor(el.id, amount);
	                }.bind(this)
	            }));
	        }
	        ;
	        return React.createElement(
	            'div',
	            null,
	            options
	        );
	    },
	
	    componentDidMount: function () {
	        if (this.props.coexpressionsAvailable.length > 0) {
	            this.props.googleAnalyticsCallback('send', 'event', 'HeatmapReact', 'coexpressions-display');
	        }
	    }
	
	});
	
	var CoexpressionOption = React.createClass({
	    displayName: 'CoexpressionOption',
	
	    propTypes: {
	        geneName: React.PropTypes.string.isRequired,
	        numCoexpressionsAvailable: React.PropTypes.number.isRequired,
	        showCoexpressionsCallback: React.PropTypes.func.isRequired
	    },
	    getInitialState: function () {
	        return { visible: 0 };
	    },
	    _chooseValue: function (amount) {
	        this.setState({ visible: amount });
	        this.props.showCoexpressionsCallback(amount);
	    },
	
	    _turnOnWithDefaultValue: function () {
	        this._chooseValue(10);
	    },
	
	    _showOfferToDisplay: function () {
	        return React.createElement(DisplayLevelsButton, { hideText: '',
	            showText: 'Add similarly expressed genes',
	            onClickCallback: this._turnOnWithDefaultValue,
	            displayLevels: false,
	            width: '250px',
	            fontSize: '14px' });
	    },
	
	    _showSlider: function () {
	        var marks = {
	            0: "off",
	            10: "10"
	        };
	        marks[this.props.numCoexpressionsAvailable] = this.props.numCoexpressionsAvailable;
	        return React.createElement(
	            'div',
	            null,
	            React.createElement(
	                'p',
	                null,
	                "Display genes with similar expressions to " + this.props.geneName + ":"
	            ),
	            React.createElement(
	                'div',
	                { className: 'gxaSlider' },
	                React.createElement(Slider, { min: 0, max: this.props.numCoexpressionsAvailable, onAfterChange: this._chooseValue,
	                    marks: marks, included: false, defaultValue: 10 })
	            )
	        );
	    },
	
	    render: function () {
	        return React.createElement(
	            'div',
	            { className: 'gxaDisplayCoexpressionOffer' },
	            this.state.visible ? this._showSlider() : this._showOfferToDisplay()
	        );
	    },
	
	    componentDidUpdate: function () {
	        $(window).trigger("gxaResizeHeatmapAnatomogramHeader");
	    }
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = Heatmap;

/***/ },
/* 771 */
/*!********************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-dom/server.js ***!
  \********************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(/*! react/lib/ReactDOMServer */ 677);


/***/ },
/* 772 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-radio-group/index.js ***!
  \***************************************************************/
[2066, 531],
/* 773 */
/*!***********************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/lib/index.js ***!
  \***********************************************************/
[2155, 774],
/* 774 */
/*!************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/lib/Slider.js ***!
  \************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _react = __webpack_require__(/*! react */ 531);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _rcUtil = __webpack_require__(/*! rc-util */ 775);
	
	var _classnames = __webpack_require__(/*! classnames */ 779);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Track = __webpack_require__(/*! ./Track */ 797);
	
	var _Track2 = _interopRequireDefault(_Track);
	
	var _Handle = __webpack_require__(/*! ./Handle */ 798);
	
	var _Handle2 = _interopRequireDefault(_Handle);
	
	var _Steps = __webpack_require__(/*! ./Steps */ 828);
	
	var _Steps2 = _interopRequireDefault(_Steps);
	
	var _Marks = __webpack_require__(/*! ./Marks */ 829);
	
	var _Marks2 = _interopRequireDefault(_Marks);
	
	function noop() {}
	
	function isNotTouchEvent(e) {
	  return e.touches.length > 1 || e.type.toLowerCase() === 'touchend' && e.touches.length > 0;
	}
	
	function getTouchPosition(vertical, e) {
	  return vertical ? e.touches[0].clientY : e.touches[0].pageX;
	}
	
	function getMousePosition(vertical, e) {
	  return vertical ? e.clientY : e.pageX;
	}
	
	function pauseEvent(e) {
	  e.stopPropagation();
	  e.preventDefault();
	}
	
	var Slider = (function (_React$Component) {
	  _inherits(Slider, _React$Component);
	
	  function Slider(props) {
	    _classCallCheck(this, Slider);
	
	    _get(Object.getPrototypeOf(Slider.prototype), 'constructor', this).call(this, props);
	
	    var range = props.range;
	    var min = props.min;
	    var max = props.max;
	
	    var initialValue = range ? [min, min] : min;
	    var defaultValue = 'defaultValue' in props ? props.defaultValue : initialValue;
	    var value = props.value !== undefined ? props.value : defaultValue;
	
	    var upperBound = undefined;
	    var lowerBound = undefined;
	    if (props.range) {
	      lowerBound = this.trimAlignValue(value[0]);
	      upperBound = this.trimAlignValue(value[1]);
	    } else {
	      upperBound = this.trimAlignValue(value);
	    }
	
	    var recent = undefined;
	    if (props.range && upperBound === lowerBound) {
	      if (lowerBound === max) {
	        recent = 'lowerBound';
	      }
	      if (upperBound === min) {
	        recent = 'upperBound';
	      }
	    } else {
	      recent = 'upperBound';
	    }
	
	    this.state = {
	      handle: null,
	      recent: recent,
	      upperBound: upperBound,
	      // If Slider is not range, set `lowerBound` equal to `min`.
	      lowerBound: lowerBound || min
	    };
	  }
	
	  _createClass(Slider, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (!('value' in nextProps || 'min' in nextProps || 'max' in nextProps)) return;
	
	      var _state = this.state;
	      var lowerBound = _state.lowerBound;
	      var upperBound = _state.upperBound;
	
	      if (nextProps.range) {
	        var value = nextProps.value || [lowerBound, upperBound];
	        var nextUpperBound = this.trimAlignValue(value[1], nextProps);
	        var nextLowerBound = this.trimAlignValue(value[0], nextProps);
	        if (nextLowerBound === lowerBound && nextUpperBound === upperBound) return;
	
	        this.setState({
	          upperBound: nextUpperBound,
	          lowerBound: nextLowerBound
	        });
	        if (this.isValueOutOfBounds(upperBound, nextProps) || this.isValueOutOfBounds(lowerBound, nextProps)) {
	          this.props.onChange([nextLowerBound, nextUpperBound]);
	        }
	      } else {
	        var value = nextProps.value !== undefined ? nextProps.value : upperBound;
	        var nextValue = this.trimAlignValue(value, nextProps);
	        if (nextValue === upperBound && lowerBound === nextProps.min) return;
	
	        this.setState({
	          upperBound: nextValue,
	          lowerBound: nextProps.min
	        });
	        if (this.isValueOutOfBounds(upperBound, nextProps)) {
	          this.props.onChange(nextValue);
	        }
	      }
	    }
	  }, {
	    key: 'onChange',
	    value: function onChange(state) {
	      var props = this.props;
	      var isNotControlled = !('value' in props);
	      if (isNotControlled) {
	        this.setState(state);
	      } else if (state.handle) {
	        this.setState({ handle: state.handle });
	      }
	
	      var data = _extends({}, this.state, state);
	      var changedValue = props.range ? [data.lowerBound, data.upperBound] : data.upperBound;
	      props.onChange(changedValue);
	    }
	  }, {
	    key: 'onMouseMove',
	    value: function onMouseMove(e) {
	      var position = getMousePosition(this.props.vertical, e);
	      this.onMove(e, position);
	    }
	  }, {
	    key: 'onTouchMove',
	    value: function onTouchMove(e) {
	      if (isNotTouchEvent(e)) {
	        this.end('touch');
	        return;
	      }
	
	      var position = getTouchPosition(this.props.vertical, e);
	      this.onMove(e, position);
	    }
	  }, {
	    key: 'onMove',
	    value: function onMove(e, position) {
	      pauseEvent(e);
	      var props = this.props;
	      var state = this.state;
	
	      var diffPosition = position - this.startPosition;
	      diffPosition = this.props.vertical ? -diffPosition : diffPosition;
	      var diffValue = diffPosition / this.getSliderLength() * (props.max - props.min);
	
	      var value = this.trimAlignValue(this.startValue + diffValue);
	      var oldValue = state[state.handle];
	      if (value === oldValue) return;
	
	      if (props.allowCross && value < state.lowerBound && state.handle === 'upperBound') {
	        this.onChange({
	          handle: 'lowerBound',
	          lowerBound: value,
	          upperBound: this.state.lowerBound
	        });
	        return;
	      }
	      if (props.allowCross && value > state.upperBound && state.handle === 'lowerBound') {
	        this.onChange({
	          handle: 'upperBound',
	          upperBound: value,
	          lowerBound: this.state.upperBound
	        });
	        return;
	      }
	
	      this.onChange(_defineProperty({}, state.handle, value));
	    }
	  }, {
	    key: 'onTouchStart',
	    value: function onTouchStart(e) {
	      if (isNotTouchEvent(e)) return;
	
	      var position = getTouchPosition(this.props.vertical, e);
	      this.onStart(position);
	      this.addDocumentEvents('touch');
	      pauseEvent(e);
	    }
	  }, {
	    key: 'onMouseDown',
	    value: function onMouseDown(e) {
	      var position = getMousePosition(this.props.vertical, e);
	      this.onStart(position);
	      this.addDocumentEvents('mouse');
	      pauseEvent(e);
	    }
	  }, {
	    key: 'onStart',
	    value: function onStart(position) {
	      var props = this.props;
	      props.onBeforeChange(this.getValue());
	
	      var value = this.calcValueByPos(position);
	      this.startValue = value;
	      this.startPosition = position;
	
	      var state = this.state;
	      var upperBound = state.upperBound;
	      var lowerBound = state.lowerBound;
	
	      var valueNeedChanging = 'upperBound';
	      if (this.props.range) {
	        var isLowerBoundCloser = Math.abs(upperBound - value) > Math.abs(lowerBound - value);
	        if (isLowerBoundCloser) {
	          valueNeedChanging = 'lowerBound';
	        }
	
	        var isAtTheSamePoint = upperBound === lowerBound;
	        if (isAtTheSamePoint) {
	          valueNeedChanging = state.recent;
	        }
	
	        if (isAtTheSamePoint && value !== upperBound) {
	          valueNeedChanging = value < upperBound ? 'lowerBound' : 'upperBound';
	        }
	      }
	
	      this.setState({
	        handle: valueNeedChanging,
	        recent: valueNeedChanging
	      });
	
	      var oldValue = state[valueNeedChanging];
	      if (value === oldValue) return;
	
	      this.onChange(_defineProperty({}, valueNeedChanging, value));
	    }
	  }, {
	    key: 'getValue',
	    value: function getValue() {
	      var _state2 = this.state;
	      var lowerBound = _state2.lowerBound;
	      var upperBound = _state2.upperBound;
	
	      return this.props.range ? [lowerBound, upperBound] : upperBound;
	    }
	  }, {
	    key: 'getSliderLength',
	    value: function getSliderLength() {
	      var slider = this.refs.slider;
	      if (!slider) {
	        return 0;
	      }
	
	      return this.props.vertical ? slider.clientHeight : slider.clientWidth;
	    }
	  }, {
	    key: 'getSliderStart',
	    value: function getSliderStart() {
	      var slider = this.refs.slider;
	      var rect = slider.getBoundingClientRect();
	
	      return this.props.vertical ? rect.top : rect.left;
	    }
	  }, {
	    key: 'getPrecision',
	    value: function getPrecision() {
	      var props = this.props;
	      var stepString = props.step.toString();
	      var precision = 0;
	      if (stepString.indexOf('.') >= 0) {
	        precision = stepString.length - stepString.indexOf('.') - 1;
	      }
	      return precision;
	    }
	  }, {
	    key: 'isValueOutOfBounds',
	    value: function isValueOutOfBounds(value, props) {
	      return value < props.min || value > props.max;
	    }
	  }, {
	    key: 'trimAlignValue',
	    value: function trimAlignValue(v, nextProps) {
	      var state = this.state || {};
	      var handle = state.handle;
	      var lowerBound = state.lowerBound;
	      var upperBound = state.upperBound;
	
	      var _extends2 = _extends({}, this.props, nextProps || {});
	
	      var marks = _extends2.marks;
	      var step = _extends2.step;
	      var min = _extends2.min;
	      var max = _extends2.max;
	      var allowCross = _extends2.allowCross;
	
	      var val = v;
	      if (val <= min) {
	        val = min;
	      }
	      if (val >= max) {
	        val = max;
	      }
	      if (!allowCross && handle === 'upperBound' && val <= lowerBound) {
	        val = lowerBound;
	      }
	      if (!allowCross && handle === 'lowerBound' && val >= upperBound) {
	        val = upperBound;
	      }
	
	      var points = Object.keys(marks).map(parseFloat);
	      if (step !== null) {
	        var closestStep = Math.round(val / step) * step;
	        points.push(closestStep);
	      }
	
	      var diffs = points.map(function (point) {
	        return Math.abs(val - point);
	      });
	      var closestPoint = points[diffs.indexOf(Math.min.apply(Math, diffs))];
	
	      return step !== null ? parseFloat(closestPoint.toFixed(this.getPrecision())) : closestPoint;
	    }
	  }, {
	    key: 'calcOffset',
	    value: function calcOffset(value) {
	      var _props = this.props;
	      var min = _props.min;
	      var max = _props.max;
	
	      var ratio = (value - min) / (max - min);
	      return ratio * 100;
	    }
	  }, {
	    key: 'calcValue',
	    value: function calcValue(offset) {
	      var _props2 = this.props;
	      var vertical = _props2.vertical;
	      var min = _props2.min;
	      var max = _props2.max;
	
	      var ratio = Math.abs(offset / this.getSliderLength());
	      var value = vertical ? (1 - ratio) * (max - min) + min : ratio * (max - min) + min;
	      return value;
	    }
	  }, {
	    key: 'calcValueByPos',
	    value: function calcValueByPos(position) {
	      var pixelOffset = position - this.getSliderStart();
	      var nextValue = this.trimAlignValue(this.calcValue(pixelOffset));
	      return nextValue;
	    }
	  }, {
	    key: 'addDocumentEvents',
	    value: function addDocumentEvents(type) {
	      if (type === 'touch') {
	        // just work for chrome iOS Safari and Android Browser
	        this.onTouchMoveListener = _rcUtil.Dom.addEventListener(document, 'touchmove', this.onTouchMove.bind(this));
	        this.onTouchUpListener = _rcUtil.Dom.addEventListener(document, 'touchend', this.end.bind(this, 'touch'));
	      } else if (type === 'mouse') {
	        this.onMouseMoveListener = _rcUtil.Dom.addEventListener(document, 'mousemove', this.onMouseMove.bind(this));
	        this.onMouseUpListener = _rcUtil.Dom.addEventListener(document, 'mouseup', this.end.bind(this, 'mouse'));
	      }
	    }
	  }, {
	    key: 'removeEvents',
	    value: function removeEvents(type) {
	      if (type === 'touch') {
	        this.onTouchMoveListener.remove();
	        this.onTouchUpListener.remove();
	      } else if (type === 'mouse') {
	        this.onMouseMoveListener.remove();
	        this.onMouseUpListener.remove();
	      }
	    }
	  }, {
	    key: 'end',
	    value: function end(type) {
	      this.removeEvents(type);
	      this.props.onAfterChange(this.getValue());
	      this.setState({ handle: null });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _classNames;
	
	      var _state3 = this.state;
	      var handle = _state3.handle;
	      var upperBound = _state3.upperBound;
	      var lowerBound = _state3.lowerBound;
	      var _props3 = this.props;
	      var className = _props3.className;
	      var prefixCls = _props3.prefixCls;
	      var disabled = _props3.disabled;
	      var vertical = _props3.vertical;
	      var dots = _props3.dots;
	      var included = _props3.included;
	      var range = _props3.range;
	      var step = _props3.step;
	      var marks = _props3.marks;
	      var max = _props3.max;
	      var min = _props3.min;
	      var tipTransitionName = _props3.tipTransitionName;
	      var tipFormatter = _props3.tipFormatter;
	      var children = _props3.children;
	
	      var upperOffset = this.calcOffset(upperBound);
	      var lowerOffset = this.calcOffset(lowerBound);
	
	      var handleClassName = prefixCls + '-handle';
	      var isNoTip = step === null || tipFormatter === null;
	
	      var upper = _react2['default'].createElement(_Handle2['default'], { className: handleClassName,
	        noTip: isNoTip, tipTransitionName: tipTransitionName, tipFormatter: tipFormatter,
	        vertical: vertical, offset: upperOffset, value: upperBound, dragging: handle === 'upperBound' });
	
	      var lower = null;
	      if (range) {
	        lower = _react2['default'].createElement(_Handle2['default'], { className: handleClassName,
	          noTip: isNoTip, tipTransitionName: tipTransitionName, tipFormatter: tipFormatter,
	          vertical: vertical, offset: lowerOffset, value: lowerBound, dragging: handle === 'lowerBound' });
	      }
	
	      var sliderClassName = (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, prefixCls + '-disabled', disabled), _defineProperty(_classNames, className, !!className), _defineProperty(_classNames, prefixCls + '-vertical', this.props.vertical), _classNames));
	      var isIncluded = included || range;
	      return _react2['default'].createElement(
	        'div',
	        { ref: 'slider', className: sliderClassName,
	          onTouchStart: disabled ? noop : this.onTouchStart.bind(this),
	          onMouseDown: disabled ? noop : this.onMouseDown.bind(this) },
	        upper,
	        lower,
	        _react2['default'].createElement(_Track2['default'], { className: prefixCls + '-track', vertical: vertical, included: isIncluded,
	          offset: lowerOffset, length: upperOffset - lowerOffset }),
	        _react2['default'].createElement(_Steps2['default'], { prefixCls: prefixCls, vertical: vertical, marks: marks, dots: dots, step: step,
	          included: isIncluded, lowerBound: lowerBound,
	          upperBound: upperBound, max: max, min: min }),
	        _react2['default'].createElement(_Marks2['default'], { className: prefixCls + '-mark', vertical: vertical, marks: marks,
	          included: isIncluded, lowerBound: lowerBound,
	          upperBound: upperBound, max: max, min: min }),
	        children
	      );
	    }
	  }]);
	
	  return Slider;
	})(_react2['default'].Component);
	
	Slider.propTypes = {
	  min: _react2['default'].PropTypes.number,
	  max: _react2['default'].PropTypes.number,
	  step: _react2['default'].PropTypes.number,
	  defaultValue: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.number, _react2['default'].PropTypes.arrayOf(_react2['default'].PropTypes.number)]),
	  value: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.number, _react2['default'].PropTypes.arrayOf(_react2['default'].PropTypes.number)]),
	  marks: _react2['default'].PropTypes.object,
	  included: _react2['default'].PropTypes.bool,
	  className: _react2['default'].PropTypes.string,
	  prefixCls: _react2['default'].PropTypes.string,
	  disabled: _react2['default'].PropTypes.bool,
	  children: _react2['default'].PropTypes.any,
	  onBeforeChange: _react2['default'].PropTypes.func,
	  onChange: _react2['default'].PropTypes.func,
	  onAfterChange: _react2['default'].PropTypes.func,
	  tipTransitionName: _react2['default'].PropTypes.string,
	  tipFormatter: _react2['default'].PropTypes.func,
	  dots: _react2['default'].PropTypes.bool,
	  range: _react2['default'].PropTypes.bool,
	  vertical: _react2['default'].PropTypes.bool,
	  allowCross: _react2['default'].PropTypes.bool
	};
	
	Slider.defaultProps = {
	  prefixCls: 'rc-slider',
	  className: '',
	  tipTransitionName: '',
	  min: 0,
	  max: 100,
	  step: 1,
	  marks: {},
	  onBeforeChange: noop,
	  onChange: noop,
	  onAfterChange: noop,
	  tipFormatter: function tipFormatter(value) {
	    return value;
	  },
	  included: true,
	  disabled: false,
	  dots: false,
	  range: false,
	  vertical: false,
	  allowCross: true
	};
	
	exports['default'] = Slider;
	module.exports = exports['default'];

/***/ },
/* 775 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/lib/index.js ***!
  \*********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	  guid: __webpack_require__(/*! ./guid */ 776),
	  classSet: __webpack_require__(/*! ./classSet */ 777),
	  joinClasses: __webpack_require__(/*! ./joinClasses */ 780),
	  KeyCode: __webpack_require__(/*! ./KeyCode */ 781),
	  PureRenderMixin: __webpack_require__(/*! ./PureRenderMixin */ 782),
	  shallowEqual: __webpack_require__(/*! shallowequal */ 783),
	  createChainedFunction: __webpack_require__(/*! ./createChainedFunction */ 788),
	  Dom: {
	    addEventListener: __webpack_require__(/*! ./Dom/addEventListener */ 789),
	    contains: __webpack_require__(/*! ./Dom/contains */ 794)
	  },
	  Children: {
	    toArray: __webpack_require__(/*! ./Children/toArray */ 795),
	    mapSelf: __webpack_require__(/*! ./Children/mapSelf */ 796)
	  }
	};

/***/ },
/* 776 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/lib/guid.js ***!
  \********************************************************************/
417,
/* 777 */
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/lib/classSet.js ***!
  \************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var deprecate = __webpack_require__(/*! util-deprecate */ 778);
	var classNames = __webpack_require__(/*! classnames */ 779);
	
	module.exports = deprecate(classNames, '`rcUtil.classSet()` is deprecated, use `classNames()` by `require(\'classnames\')` instead');

/***/ },
/* 778 */
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/~/util-deprecate/browser.js ***!
  \************************************************************************************/
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {
	/**
	 * Module exports.
	 */
	
	module.exports = deprecate;
	
	/**
	 * Mark that a method should not be used.
	 * Returns a modified function which warns once by default.
	 *
	 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
	 *
	 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
	 * will throw an Error when invoked.
	 *
	 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
	 * will invoke `console.trace()` instead of `console.error()`.
	 *
	 * @param {Function} fn - the function to deprecate
	 * @param {String} msg - the string to print to the console when `fn` is invoked
	 * @returns {Function} a new "deprecated" version of `fn`
	 * @api public
	 */
	
	function deprecate (fn, msg) {
	  if (config('noDeprecation')) {
	    return fn;
	  }
	
	  var warned = false;
	  function deprecated() {
	    if (!warned) {
	      if (config('throwDeprecation')) {
	        throw new Error(msg);
	      } else if (config('traceDeprecation')) {
	        console.trace(msg);
	      } else {
	        console.warn(msg);
	      }
	      warned = true;
	    }
	    return fn.apply(this, arguments);
	  }
	
	  return deprecated;
	}
	
	/**
	 * Checks `localStorage` for boolean values for the given `name`.
	 *
	 * @param {String} name
	 * @returns {Boolean}
	 * @api private
	 */
	
	function config (name) {
	  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
	  try {
	    if (!global.localStorage) return false;
	  } catch (_) {
	    return false;
	  }
	  var val = global.localStorage[name];
	  if (null == val) return false;
	  return String(val).toLowerCase() === 'true';
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 779 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/classnames/index.js ***!
  \********************************************************************/
196,
/* 780 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/lib/joinClasses.js ***!
  \***************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var deprecate = __webpack_require__(/*! util-deprecate */ 778);
	var classNames = __webpack_require__(/*! classnames */ 779);
	
	module.exports = deprecate(classNames, '`rcUtil.joinClasses()` is deprecated, use `classNames()` by `require(\'classnames\')` instead');

/***/ },
/* 781 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/lib/KeyCode.js ***!
  \***********************************************************************/
421,
/* 782 */
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/lib/PureRenderMixin.js ***!
  \*******************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var shallowEqual = __webpack_require__(/*! shallowequal */ 783);
	
	/**
	 * If your React component's render function is "pure", e.g. it will render the
	 * same result given the same props and state, provide this Mixin for a
	 * considerable performance boost.
	 *
	 * Most React components have pure render functions.
	 *
	 * Example:
	 *
	 *   const ReactComponentWithPureRenderMixin =
	 *     require('ReactComponentWithPureRenderMixin');
	 *   React.createClass({
	 *     mixins: [ReactComponentWithPureRenderMixin],
	 *
	 *     render: function() {
	 *       return <div className={this.props.className}>foo</div>;
	 *     }
	 *   });
	 *
	 * Note: This only checks shallow equality for props and state. If these contain
	 * complex data structures this mixin may have false-negatives for deeper
	 * differences. Only mixin to components which have simple props and state, or
	 * use `forceUpdate()` when you know deep data structures have changed.
	 */
	var ReactComponentWithPureRenderMixin = {
	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState);
	  }
	};
	
	module.exports = ReactComponentWithPureRenderMixin;

/***/ },
/* 783 */
/*!****************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/~/shallowequal/modules/index.js ***!
  \****************************************************************************************/
[2156, 784],
/* 784 */
/*!**********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/~/shallowequal/~/lodash.keys/index.js ***!
  \**********************************************************************************************/
[2157, 785, 786, 787],
/* 785 */
/*!******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/~/shallowequal/~/lodash.keys/~/lodash._getnative/index.js ***!
  \******************************************************************************************************************/
429,
/* 786 */
/*!*******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/~/shallowequal/~/lodash.keys/~/lodash.isarguments/index.js ***!
  \*******************************************************************************************************************/
430,
/* 787 */
/*!***************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/~/shallowequal/~/lodash.keys/~/lodash.isarray/index.js ***!
  \***************************************************************************************************************/
431,
/* 788 */
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/lib/createChainedFunction.js ***!
  \*************************************************************************************/
432,
/* 789 */
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/lib/Dom/addEventListener.js ***!
  \************************************************************************************/
[2158, 790, 687],
/* 790 */
/*!**********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/~/add-dom-event-listener/lib/index.js ***!
  \**********************************************************************************************/
[2159, 791],
/* 791 */
/*!****************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/~/add-dom-event-listener/lib/EventObject.js ***!
  \****************************************************************************************************/
[2160, 792, 793],
/* 792 */
/*!********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/~/add-dom-event-listener/lib/EventBaseObject.js ***!
  \********************************************************************************************************/
436,
/* 793 */
/*!**********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/~/add-dom-event-listener/~/object-assign/index.js ***!
  \**********************************************************************************************************/
/***/ function(module, exports) {

	/* eslint-disable no-unused-vars */
	'use strict';
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}
	
		return Object(val);
	}
	
	module.exports = Object.assign || function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;
	
		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);
	
			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}
	
			if (Object.getOwnPropertySymbols) {
				symbols = Object.getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}
	
		return to;
	};


/***/ },
/* 794 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/lib/Dom/contains.js ***!
  \****************************************************************************/
438,
/* 795 */
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/lib/Children/toArray.js ***!
  \********************************************************************************/
[2161, 531],
/* 796 */
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/lib/Children/mapSelf.js ***!
  \********************************************************************************/
[2162, 531],
/* 797 */
/*!***********************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/lib/Track.js ***!
  \***********************************************************/
[2163, 531],
/* 798 */
/*!************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/lib/Handle.js ***!
  \************************************************************/
[2164, 531, 799],
/* 799 */
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/lib/index.js ***!
  \************************************************************************/
[2165, 800],
/* 800 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/lib/Tooltip.js ***!
  \**************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var _react = __webpack_require__(/*! react */ 531);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _placements = __webpack_require__(/*! ./placements */ 801);
	
	var _rcTrigger = __webpack_require__(/*! rc-trigger */ 802);
	
	var _rcTrigger2 = _interopRequireDefault(_rcTrigger);
	
	var Tooltip = _react2['default'].createClass({
	  displayName: 'Tooltip',
	
	  propTypes: {
	    trigger: _react.PropTypes.any,
	    children: _react.PropTypes.any,
	    defaultVisible: _react.PropTypes.bool,
	    visible: _react.PropTypes.bool,
	    placement: _react.PropTypes.string,
	    transitionName: _react.PropTypes.string,
	    animation: _react.PropTypes.any,
	    onVisibleChange: _react.PropTypes.func,
	    afterVisibleChange: _react.PropTypes.func,
	    overlay: _react.PropTypes.node.isRequired,
	    overlayStyle: _react.PropTypes.object,
	    overlayClassName: _react.PropTypes.string,
	    prefixCls: _react.PropTypes.string,
	    mouseEnterDelay: _react.PropTypes.number,
	    mouseLeaveDelay: _react.PropTypes.number,
	    getTooltipContainer: _react.PropTypes.func,
	    destroyTooltipOnHide: _react.PropTypes.bool,
	    align: _react.PropTypes.shape({
	      offset: _react.PropTypes.array,
	      targetOffset: _react.PropTypes.array
	    }),
	    arrowContent: _react.PropTypes.any
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      prefixCls: 'rc-tooltip',
	      mouseEnterDelay: 0,
	      destroyTooltipOnHide: false,
	      mouseLeaveDelay: 0.1,
	      align: {},
	      placement: 'right',
	      trigger: ['hover'],
	      arrowContent: null
	    };
	  },
	
	  getPopupElement: function getPopupElement() {
	    var _props = this.props;
	    var arrowContent = _props.arrowContent;
	    var overlay = _props.overlay;
	    var prefixCls = _props.prefixCls;
	
	    return [_react2['default'].createElement(
	      'div',
	      { className: prefixCls + '-arrow', key: 'arrow' },
	      arrowContent
	    ), _react2['default'].createElement(
	      'div',
	      { className: prefixCls + '-inner', key: 'content' },
	      overlay
	    )];
	  },
	
	  getPopupDomNode: function getPopupDomNode() {
	    return this.refs.trigger.popupDomNode;
	  },
	
	  render: function render() {
	    var _props2 = this.props;
	    var overlayClassName = _props2.overlayClassName;
	    var trigger = _props2.trigger;
	    var mouseEnterDelay = _props2.mouseEnterDelay;
	    var mouseLeaveDelay = _props2.mouseLeaveDelay;
	    var overlayStyle = _props2.overlayStyle;
	    var prefixCls = _props2.prefixCls;
	    var children = _props2.children;
	    var onVisibleChange = _props2.onVisibleChange;
	    var transitionName = _props2.transitionName;
	    var animation = _props2.animation;
	    var placement = _props2.placement;
	    var align = _props2.align;
	    var destroyTooltipOnHide = _props2.destroyTooltipOnHide;
	    var defaultVisible = _props2.defaultVisible;
	    var getTooltipContainer = _props2.getTooltipContainer;
	
	    var restProps = _objectWithoutProperties(_props2, ['overlayClassName', 'trigger', 'mouseEnterDelay', 'mouseLeaveDelay', 'overlayStyle', 'prefixCls', 'children', 'onVisibleChange', 'transitionName', 'animation', 'placement', 'align', 'destroyTooltipOnHide', 'defaultVisible', 'getTooltipContainer']);
	
	    var extraProps = _extends({}, restProps);
	    if ('visible' in this.props) {
	      extraProps.popupVisible = this.props.visible;
	    }
	    return _react2['default'].createElement(
	      _rcTrigger2['default'],
	      _extends({ popupClassName: overlayClassName,
	        ref: 'trigger',
	        prefixCls: prefixCls,
	        popup: this.getPopupElement(),
	        action: trigger,
	        builtinPlacements: _placements.placements,
	        popupPlacement: placement,
	        popupAlign: align,
	        getPopupContainer: getTooltipContainer,
	        onPopupVisibleChange: onVisibleChange,
	        popupTransitionName: transitionName,
	        popupAnimation: animation,
	        defaultPopupVisible: defaultVisible,
	        destroyPopupOnHide: destroyTooltipOnHide,
	        mouseLeaveDelay: mouseLeaveDelay,
	        popupStyle: overlayStyle,
	        mouseEnterDelay: mouseEnterDelay
	      }, extraProps),
	      children
	    );
	  }
	});
	
	exports['default'] = Tooltip;
	module.exports = exports['default'];

/***/ },
/* 801 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/lib/placements.js ***!
  \*****************************************************************************/
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	var autoAdjustOverflow = {
	  adjustX: 1,
	  adjustY: 1
	};
	
	var targetOffset = [0, 0];
	
	var placements = {
	  left: {
	    points: ['cr', 'cl'],
	    overflow: autoAdjustOverflow,
	    offset: [-4, 0],
	    targetOffset: targetOffset
	  },
	  right: {
	    points: ['cl', 'cr'],
	    overflow: autoAdjustOverflow,
	    offset: [4, 0],
	    targetOffset: targetOffset
	  },
	  top: {
	    points: ['bc', 'tc'],
	    overflow: autoAdjustOverflow,
	    offset: [0, -4],
	    targetOffset: targetOffset
	  },
	  bottom: {
	    points: ['tc', 'bc'],
	    overflow: autoAdjustOverflow,
	    offset: [0, 4],
	    targetOffset: targetOffset
	  },
	  topLeft: {
	    points: ['bl', 'tl'],
	    overflow: autoAdjustOverflow,
	    offset: [0, -4],
	    targetOffset: targetOffset
	  },
	  leftTop: {
	    points: ['tr', 'tl'],
	    overflow: autoAdjustOverflow,
	    offset: [-3, 0],
	    targetOffset: targetOffset
	  },
	  topRight: {
	    points: ['br', 'tr'],
	    overflow: autoAdjustOverflow,
	    offset: [0, -4],
	    targetOffset: targetOffset
	  },
	  rightTop: {
	    points: ['tl', 'tr'],
	    overflow: autoAdjustOverflow,
	    offset: [4, 0],
	    targetOffset: targetOffset
	  },
	  bottomRight: {
	    points: ['tr', 'br'],
	    overflow: autoAdjustOverflow,
	    offset: [0, 4],
	    targetOffset: targetOffset
	  },
	  rightBottom: {
	    points: ['bl', 'br'],
	    overflow: autoAdjustOverflow,
	    offset: [4, 0],
	    targetOffset: targetOffset
	  },
	  bottomLeft: {
	    points: ['tl', 'bl'],
	    overflow: autoAdjustOverflow,
	    offset: [0, 4],
	    targetOffset: targetOffset
	  },
	  leftBottom: {
	    points: ['br', 'bl'],
	    overflow: autoAdjustOverflow,
	    offset: [-4, 0],
	    targetOffset: targetOffset
	  }
	};
	
	exports.placements = placements;
	exports['default'] = placements;

/***/ },
/* 802 */
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/lib/index.js ***!
  \*************************************************************************************/
[2166, 803],
/* 803 */
/*!***************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/lib/Trigger.js ***!
  \***************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(/*! react */ 531);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(/*! react-dom */ 687);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _rcUtil = __webpack_require__(/*! rc-util */ 775);
	
	var _Popup = __webpack_require__(/*! ./Popup */ 804);
	
	var _Popup2 = _interopRequireDefault(_Popup);
	
	var _utils = __webpack_require__(/*! ./utils */ 827);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function noop() {}
	
	function returnEmptyString() {
	  return '';
	}
	
	var ALL_HANDLERS = ['onClick', 'onMouseDown', 'onTouchStart', 'onMouseEnter', 'onMouseLeave', 'onFocus', 'onBlur'];
	
	var Trigger = _react2["default"].createClass({
	  displayName: 'Trigger',
	
	  propTypes: {
	    action: _react.PropTypes.any,
	    showAction: _react.PropTypes.any,
	    hideAction: _react.PropTypes.any,
	    getPopupClassNameFromAlign: _react.PropTypes.any,
	    onPopupVisibleChange: _react.PropTypes.func,
	    afterPopupVisibleChange: _react.PropTypes.func,
	    popup: _react.PropTypes.node.isRequired,
	    popupStyle: _react.PropTypes.object,
	    prefixCls: _react.PropTypes.string,
	    popupClassName: _react.PropTypes.string,
	    popupPlacement: _react.PropTypes.string,
	    builtinPlacements: _react.PropTypes.object,
	    popupTransitionName: _react.PropTypes.string,
	    popupAnimation: _react.PropTypes.any,
	    mouseEnterDelay: _react.PropTypes.number,
	    mouseLeaveDelay: _react.PropTypes.number,
	    zIndex: _react.PropTypes.number,
	    focusDelay: _react.PropTypes.number,
	    blurDelay: _react.PropTypes.number,
	    getPopupContainer: _react.PropTypes.func,
	    destroyPopupOnHide: _react.PropTypes.bool,
	    mask: _react.PropTypes.bool,
	    onPopupAlign: _react.PropTypes.func,
	    popupAlign: _react.PropTypes.object,
	    popupVisible: _react.PropTypes.bool,
	    maskTransitionName: _react.PropTypes.string,
	    maskAnimation: _react.PropTypes.string
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      prefixCls: 'rc-trigger-popup',
	      getPopupClassNameFromAlign: returnEmptyString,
	      onPopupVisibleChange: noop,
	      afterPopupVisibleChange: noop,
	      onPopupAlign: noop,
	      popupClassName: '',
	      mouseEnterDelay: 0,
	      mouseLeaveDelay: 0.1,
	      focusDelay: 0,
	      blurDelay: 0.15,
	      popupStyle: {},
	      destroyPopupOnHide: false,
	      popupAlign: {},
	      defaultPopupVisible: false,
	      mask: false,
	      action: [],
	      showAction: [],
	      hideAction: []
	    };
	  },
	  getInitialState: function getInitialState() {
	    var props = this.props;
	    var popupVisible = void 0;
	    if ('popupVisible' in props) {
	      popupVisible = !!props.popupVisible;
	    } else {
	      popupVisible = !!props.defaultPopupVisible;
	    }
	    return {
	      popupVisible: popupVisible
	    };
	  },
	  componentDidMount: function componentDidMount() {
	    this.componentDidUpdate({}, {
	      popupVisible: this.state.popupVisible
	    });
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    if ('popupVisible' in nextProps) {
	      this.setState({
	        popupVisible: !!nextProps.popupVisible
	      });
	    }
	  },
	  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
	    var _this = this;
	
	    var props = this.props;
	    var state = this.state;
	    if (this.popupRendered) {
	      var _ret = function () {
	        var self = _this;
	        _reactDom2["default"].unstable_renderSubtreeIntoContainer(_this, _this.getPopupElement(), _this.getPopupContainer(), function renderPopup() {
	          /* eslint react/no-is-mounted:0 */
	          if (this.isMounted()) {
	            self.popupDomNode = this.getPopupDomNode();
	          } else {
	            self.popupDomNode = null;
	          }
	          if (prevState.popupVisible !== state.popupVisible) {
	            props.afterPopupVisibleChange(state.popupVisible);
	          }
	        });
	        if (props.action.indexOf('click') !== -1) {
	          if (state.popupVisible) {
	            if (!_this.clickOutsideHandler) {
	              _this.clickOutsideHandler = _rcUtil.Dom.addEventListener(document, 'mousedown', _this.onDocumentClick);
	              _this.touchOutsideHandler = _rcUtil.Dom.addEventListener(document, 'touchstart', _this.onDocumentClick);
	            }
	            return {
	              v: void 0
	            };
	          }
	        }
	        if (_this.clickOutsideHandler) {
	          _this.clickOutsideHandler.remove();
	          _this.touchOutsideHandler.remove();
	          _this.clickOutsideHandler = null;
	          _this.touchOutsideHandler = null;
	        }
	      }();
	
	      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	    }
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var popupContainer = this.popupContainer;
	    if (popupContainer) {
	      _reactDom2["default"].unmountComponentAtNode(popupContainer);
	      popupContainer.parentNode.removeChild(popupContainer);
	      this.popupContainer = null;
	    }
	    this.clearDelayTimer();
	    if (this.clickOutsideHandler) {
	      this.clickOutsideHandler.remove();
	      this.touchOutsideHandler.remove();
	      this.clickOutsideHandler = null;
	      this.touchOutsideHandler = null;
	    }
	  },
	  onMouseEnter: function onMouseEnter() {
	    this.delaySetPopupVisible(true, this.props.mouseEnterDelay);
	  },
	  onMouseLeave: function onMouseLeave() {
	    this.delaySetPopupVisible(false, this.props.mouseLeaveDelay);
	  },
	  onFocus: function onFocus() {
	    this.focusTime = Date.now();
	    this.delaySetPopupVisible(true, this.props.focusDelay);
	  },
	  onMouseDown: function onMouseDown() {
	    this.preClickTime = Date.now();
	  },
	  onTouchStart: function onTouchStart() {
	    this.preTouchTime = Date.now();
	  },
	  onBlur: function onBlur() {
	    this.delaySetPopupVisible(false, this.props.blurDelay);
	  },
	  onClick: function onClick(event) {
	    // focus will trigger click
	    if (this.focusTime) {
	      var preTime = void 0;
	      if (this.preClickTime && this.preTouchTime) {
	        preTime = Math.min(this.preClickTime, this.preTouchTime);
	      } else if (this.preClickTime) {
	        preTime = this.preClickTime;
	      } else if (this.preTouchTime) {
	        preTime = this.preTouchTime;
	      }
	      if (Math.abs(preTime - this.focusTime) < 20) {
	        return;
	      }
	      this.focusTime = 0;
	    }
	    this.preClickTime = 0;
	    this.preTouchTime = 0;
	    event.preventDefault();
	    var nextVisible = !this.state.popupVisible;
	    if (this.isClickToHide() && !nextVisible || nextVisible && this.isClickToShow()) {
	      this.setPopupVisible(!this.state.popupVisible);
	    }
	  },
	  onDocumentClick: function onDocumentClick(event) {
	    var target = event.target;
	    var root = (0, _reactDom.findDOMNode)(this);
	    var popupNode = this.getPopupDomNode();
	    if (!_rcUtil.Dom.contains(root, target) && !_rcUtil.Dom.contains(popupNode, target)) {
	      this.setPopupVisible(false);
	    }
	  },
	  getPopupDomNode: function getPopupDomNode() {
	    // for test
	    return this.popupDomNode;
	  },
	  getRootDomNode: function getRootDomNode() {
	    return _reactDom2["default"].findDOMNode(this);
	  },
	  getPopupContainer: function getPopupContainer() {
	    if (!this.popupContainer) {
	      this.popupContainer = document.createElement('div');
	      var mountNode = this.props.getPopupContainer ? this.props.getPopupContainer((0, _reactDom.findDOMNode)(this)) : document.body;
	      mountNode.appendChild(this.popupContainer);
	    }
	    return this.popupContainer;
	  },
	  getPopupClassNameFromAlign: function getPopupClassNameFromAlign(align) {
	    var className = [];
	    var props = this.props;
	    var popupPlacement = props.popupPlacement;
	    var builtinPlacements = props.builtinPlacements;
	    var prefixCls = props.prefixCls;
	
	    if (popupPlacement && builtinPlacements) {
	      className.push((0, _utils.getPopupClassNameFromAlign)(builtinPlacements, prefixCls, align));
	    }
	    if (props.getPopupClassNameFromAlign) {
	      className.push(props.getPopupClassNameFromAlign(align));
	    }
	    return className.join(' ');
	  },
	  getPopupAlign: function getPopupAlign() {
	    var props = this.props;
	    var popupPlacement = props.popupPlacement;
	    var popupAlign = props.popupAlign;
	    var builtinPlacements = props.builtinPlacements;
	
	    if (popupPlacement && builtinPlacements) {
	      return (0, _utils.getAlignFromPlacement)(builtinPlacements, popupPlacement, popupAlign);
	    }
	    return popupAlign;
	  },
	  getPopupElement: function getPopupElement() {
	    var props = this.props;
	    var state = this.state;
	    var mouseProps = {};
	    if (props.action.indexOf('hover') !== -1) {
	      mouseProps.onMouseEnter = this.onMouseEnter;
	      mouseProps.onMouseLeave = this.onMouseLeave;
	    }
	    return _react2["default"].createElement(
	      _Popup2["default"],
	      _extends({
	        prefixCls: props.prefixCls,
	        destroyPopupOnHide: props.destroyPopupOnHide,
	        visible: state.popupVisible,
	        className: props.popupClassName,
	        action: props.action,
	        align: this.getPopupAlign(),
	        onAlign: props.onPopupAlign,
	        animation: props.popupAnimation,
	        getClassNameFromAlign: this.getPopupClassNameFromAlign
	      }, mouseProps, {
	        getRootDomNode: this.getRootDomNode,
	        style: props.popupStyle,
	        mask: props.mask,
	        zIndex: props.zIndex,
	        transitionName: props.popupTransitionName,
	        maskAnimation: props.maskAnimation,
	        maskTransitionName: props.maskTransitionName
	      }),
	      props.popup
	    );
	  },
	  setPopupVisible: function setPopupVisible(popupVisible) {
	    this.clearDelayTimer();
	    if (this.state.popupVisible !== popupVisible) {
	      if (!('popupVisible' in this.props)) {
	        this.setState({
	          popupVisible: popupVisible
	        });
	      }
	      this.props.onPopupVisibleChange(popupVisible);
	    }
	  },
	  delaySetPopupVisible: function delaySetPopupVisible(visible, delayS) {
	    var _this2 = this;
	
	    var delay = delayS * 1000;
	    this.clearDelayTimer();
	    if (delay) {
	      this.delayTimer = setTimeout(function () {
	        _this2.setPopupVisible(visible);
	        _this2.clearDelayTimer();
	      }, delay);
	    } else {
	      this.setPopupVisible(visible);
	    }
	  },
	  clearDelayTimer: function clearDelayTimer() {
	    if (this.delayTimer) {
	      clearTimeout(this.delayTimer);
	      this.delayTimer = null;
	    }
	  },
	  isClickToShow: function isClickToShow() {
	    var _props = this.props;
	    var action = _props.action;
	    var showAction = _props.showAction;
	
	    return action.indexOf('click') !== -1 || showAction.indexOf('click') !== -1;
	  },
	  isClickToHide: function isClickToHide() {
	    var _props2 = this.props;
	    var action = _props2.action;
	    var hideAction = _props2.hideAction;
	
	    return action.indexOf('click') !== -1 || hideAction.indexOf('click') !== -1;
	  },
	  isMouseEnterToShow: function isMouseEnterToShow() {
	    var _props3 = this.props;
	    var action = _props3.action;
	    var showAction = _props3.showAction;
	
	    return action.indexOf('hover') !== -1 || showAction.indexOf('mouseEnter') !== -1;
	  },
	  isMouseLeaveToHide: function isMouseLeaveToHide() {
	    var _props4 = this.props;
	    var action = _props4.action;
	    var hideAction = _props4.hideAction;
	
	    return action.indexOf('hover') !== -1 || hideAction.indexOf('mouseLeave') !== -1;
	  },
	  isFocusToShow: function isFocusToShow() {
	    var _props5 = this.props;
	    var action = _props5.action;
	    var showAction = _props5.showAction;
	
	    return action.indexOf('focus') !== -1 || showAction.indexOf('focus') !== -1;
	  },
	  isBlurToHide: function isBlurToHide() {
	    var _props6 = this.props;
	    var action = _props6.action;
	    var hideAction = _props6.hideAction;
	
	    return action.indexOf('focus') !== -1 || hideAction.indexOf('blur') !== -1;
	  },
	  render: function render() {
	    this.popupRendered = this.popupRendered || this.state.popupVisible;
	    var props = this.props;
	    var children = props.children;
	    var child = _react2["default"].Children.only(children);
	    var childProps = child.props || {};
	    var newChildProps = {};
	
	    if (this.isClickToHide() || this.isClickToShow()) {
	      newChildProps.onClick = (0, _rcUtil.createChainedFunction)(this.onClick, childProps.onClick);
	      newChildProps.onMouseDown = (0, _rcUtil.createChainedFunction)(this.onMouseDown, childProps.onMouseDown);
	      newChildProps.onTouchStart = (0, _rcUtil.createChainedFunction)(this.onTouchStart, childProps.onTouchStart);
	    }
	    if (this.isMouseEnterToShow()) {
	      newChildProps.onMouseEnter = (0, _rcUtil.createChainedFunction)(this.onMouseEnter, childProps.onMouseEnter);
	    }
	    if (this.isMouseLeaveToHide()) {
	      newChildProps.onMouseLeave = (0, _rcUtil.createChainedFunction)(this.onMouseLeave, childProps.onMouseLeave);
	    }
	    if (this.isFocusToShow()) {
	      newChildProps.onFocus = (0, _rcUtil.createChainedFunction)(this.onFocus, childProps.onFocus);
	    }
	    if (this.isBlurToHide()) {
	      newChildProps.onBlur = (0, _rcUtil.createChainedFunction)(this.onBlur, childProps.onBlur);
	    }
	
	    ALL_HANDLERS.forEach(function (handler) {
	      var newFn = void 0;
	      if (props[handler] && newChildProps[handler]) {
	        newFn = (0, _rcUtil.createChainedFunction)(props[handler], newChildProps[handler]);
	      } else {
	        newFn = props[handler] || newChildProps[handler];
	      }
	      if (newFn) {
	        newChildProps[handler] = newFn;
	      }
	    });
	
	    return _react2["default"].cloneElement(child, newChildProps);
	  }
	});
	
	exports["default"] = Trigger;
	module.exports = exports['default'];

/***/ },
/* 804 */
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/lib/Popup.js ***!
  \*************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(/*! react */ 531);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(/*! react-dom */ 687);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _rcAlign = __webpack_require__(/*! rc-align */ 805);
	
	var _rcAlign2 = _interopRequireDefault(_rcAlign);
	
	var _rcAnimate = __webpack_require__(/*! rc-animate */ 816);
	
	var _rcAnimate2 = _interopRequireDefault(_rcAnimate);
	
	var _PopupInner = __webpack_require__(/*! ./PopupInner */ 825);
	
	var _PopupInner2 = _interopRequireDefault(_PopupInner);
	
	var _LazyRenderBox = __webpack_require__(/*! ./LazyRenderBox */ 826);
	
	var _LazyRenderBox2 = _interopRequireDefault(_LazyRenderBox);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	var Popup = _react2["default"].createClass({
	  displayName: 'Popup',
	
	  propTypes: {
	    visible: _react.PropTypes.bool,
	    style: _react.PropTypes.object,
	    getClassNameFromAlign: _react.PropTypes.func,
	    onAlign: _react.PropTypes.func,
	    getRootDomNode: _react.PropTypes.func,
	    onMouseEnter: _react.PropTypes.func,
	    align: _react.PropTypes.any,
	    destroyPopupOnHide: _react.PropTypes.bool,
	    className: _react.PropTypes.string,
	    prefixCls: _react.PropTypes.string,
	    onMouseLeave: _react.PropTypes.func
	  },
	
	  componentDidMount: function componentDidMount() {
	    this.rootNode = this.getPopupDomNode();
	  },
	  onAlign: function onAlign(popupDomNode, align) {
	    var props = this.props;
	    var alignClassName = props.getClassNameFromAlign(props.align);
	    var currentAlignClassName = props.getClassNameFromAlign(align);
	    if (alignClassName !== currentAlignClassName) {
	      this.currentAlignClassName = currentAlignClassName;
	      popupDomNode.className = this.getClassName(currentAlignClassName);
	    }
	    props.onAlign(popupDomNode, align);
	  },
	  getPopupDomNode: function getPopupDomNode() {
	    return _reactDom2["default"].findDOMNode(this.refs.popup);
	  },
	  getTarget: function getTarget() {
	    return this.props.getRootDomNode();
	  },
	  getMaskTransitionName: function getMaskTransitionName() {
	    var props = this.props;
	    var transitionName = props.maskTransitionName;
	    var animation = props.maskAnimation;
	    if (!transitionName && animation) {
	      transitionName = props.prefixCls + '-' + animation;
	    }
	    return transitionName;
	  },
	  getTransitionName: function getTransitionName() {
	    var props = this.props;
	    var transitionName = props.transitionName;
	    if (!transitionName && props.animation) {
	      transitionName = props.prefixCls + '-' + props.animation;
	    }
	    return transitionName;
	  },
	  getClassName: function getClassName(currentAlignClassName) {
	    return this.props.prefixCls + ' ' + this.props.className + ' ' + currentAlignClassName;
	  },
	  getPopupElement: function getPopupElement() {
	    var props = this.props;
	    var align = props.align;
	    var style = props.style;
	    var visible = props.visible;
	    var prefixCls = props.prefixCls;
	    var destroyPopupOnHide = props.destroyPopupOnHide;
	
	    var className = this.getClassName(this.currentAlignClassName || props.getClassNameFromAlign(align));
	    var hiddenClassName = prefixCls + '-hidden';
	    if (!visible) {
	      this.currentAlignClassName = null;
	    }
	    var newStyle = _extends({}, style, this.getZIndexStyle());
	    var popupInnerProps = {
	      className: className,
	      prefixCls: prefixCls,
	      ref: 'popup',
	      onMouseEnter: props.onMouseEnter,
	      onMouseLeave: props.onMouseLeave,
	      style: newStyle
	    };
	    if (destroyPopupOnHide) {
	      return _react2["default"].createElement(
	        _rcAnimate2["default"],
	        {
	          component: '',
	          exclusive: true,
	          transitionAppear: true,
	          transitionName: this.getTransitionName()
	        },
	        visible ? _react2["default"].createElement(
	          _rcAlign2["default"],
	          {
	            target: this.getTarget,
	            key: 'popup',
	            monitorWindowResize: true,
	            align: align,
	            onAlign: this.onAlign
	          },
	          _react2["default"].createElement(
	            _PopupInner2["default"],
	            _extends({
	              visible: true
	            }, popupInnerProps),
	            props.children
	          )
	        ) : null
	      );
	    }
	    return _react2["default"].createElement(
	      _rcAnimate2["default"],
	      {
	        component: '',
	        exclusive: true,
	        transitionAppear: true,
	        transitionName: this.getTransitionName(),
	        showProp: 'xVisible'
	      },
	      _react2["default"].createElement(
	        _rcAlign2["default"],
	        {
	          target: this.getTarget,
	          key: 'popup',
	          monitorWindowResize: true,
	          xVisible: visible,
	          childrenProps: { visible: 'xVisible' },
	          disabled: !visible,
	          align: align,
	          onAlign: this.onAlign
	        },
	        _react2["default"].createElement(
	          _PopupInner2["default"],
	          _extends({
	            hiddenClassName: hiddenClassName
	          }, popupInnerProps),
	          props.children
	        )
	      )
	    );
	  },
	  getZIndexStyle: function getZIndexStyle() {
	    var style = {};
	    var props = this.props;
	    if (props.zIndex !== undefined) {
	      style.zIndex = props.zIndex;
	    }
	    return style;
	  },
	  getMaskElement: function getMaskElement() {
	    var props = this.props;
	    var maskElement = void 0;
	    if (props.mask) {
	      var maskTransition = this.getMaskTransitionName();
	      maskElement = _react2["default"].createElement(_LazyRenderBox2["default"], {
	        style: this.getZIndexStyle(),
	        key: 'mask',
	        className: props.prefixCls + '-mask',
	        hiddenClassName: props.prefixCls + '-mask-hidden',
	        visible: props.visible
	      });
	      if (maskTransition) {
	        maskElement = _react2["default"].createElement(
	          _rcAnimate2["default"],
	          {
	            key: 'mask',
	            showProp: 'visible',
	            transitionAppear: true,
	            component: '',
	            transitionName: maskTransition
	          },
	          maskElement
	        );
	      }
	    }
	    return maskElement;
	  },
	  render: function render() {
	    return _react2["default"].createElement(
	      'div',
	      null,
	      this.getMaskElement(),
	      this.getPopupElement()
	    );
	  }
	});
	
	exports["default"] = Popup;
	module.exports = exports['default'];

/***/ },
/* 805 */
/*!************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/lib/index.js ***!
  \************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// export this package's api
	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _Align = __webpack_require__(/*! ./Align */ 806);
	
	var _Align2 = _interopRequireDefault(_Align);
	
	exports['default'] = _Align2['default'];
	module.exports = exports['default'];

/***/ },
/* 806 */
/*!************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/lib/Align.js ***!
  \************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _react = __webpack_require__(/*! react */ 531);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(/*! react-dom */ 687);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _domAlign = __webpack_require__(/*! dom-align */ 807);
	
	var _domAlign2 = _interopRequireDefault(_domAlign);
	
	var _rcUtil = __webpack_require__(/*! rc-util */ 775);
	
	var _isWindow = __webpack_require__(/*! ./isWindow */ 815);
	
	var _isWindow2 = _interopRequireDefault(_isWindow);
	
	function buffer(fn, ms) {
	  var timer = undefined;
	  return function bufferFn() {
	    if (timer) {
	      clearTimeout(timer);
	    }
	    timer = setTimeout(fn, ms);
	  };
	}
	
	var Align = _react2['default'].createClass({
	  displayName: 'Align',
	
	  propTypes: {
	    childrenProps: _react.PropTypes.object,
	    align: _react.PropTypes.object.isRequired,
	    target: _react.PropTypes.func,
	    onAlign: _react.PropTypes.func,
	    monitorBufferTime: _react.PropTypes.number,
	    monitorWindowResize: _react.PropTypes.bool,
	    disabled: _react.PropTypes.bool,
	    children: _react.PropTypes.any
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      target: function target() {
	        return window;
	      },
	      onAlign: function onAlign() {},
	      monitorBufferTime: 50,
	      monitorWindowResize: false,
	      disabled: false
	    };
	  },
	
	  componentDidMount: function componentDidMount() {
	    var props = this.props;
	    // if parent ref not attached .... use document.getElementById
	    if (!props.disabled) {
	      var source = _reactDom2['default'].findDOMNode(this);
	      props.onAlign(source, (0, _domAlign2['default'])(source, props.target(), props.align));
	      if (props.monitorWindowResize) {
	        this.startMonitorWindowResize();
	      }
	    }
	  },
	
	  componentDidUpdate: function componentDidUpdate(prevProps) {
	    var reAlign = false;
	    var props = this.props;
	    var currentTarget = undefined;
	
	    if (!props.disabled) {
	      if (prevProps.disabled || prevProps.align !== props.align) {
	        reAlign = true;
	        currentTarget = props.target();
	      } else {
	        var lastTarget = prevProps.target();
	        currentTarget = props.target();
	        if ((0, _isWindow2['default'])(lastTarget) && (0, _isWindow2['default'])(currentTarget)) {
	          reAlign = false;
	        } else if (lastTarget !== currentTarget) {
	          reAlign = true;
	        }
	      }
	    }
	
	    if (reAlign) {
	      var source = _reactDom2['default'].findDOMNode(this);
	      props.onAlign(source, (0, _domAlign2['default'])(source, currentTarget, props.align));
	    }
	
	    if (props.monitorWindowResize && !props.disabled) {
	      this.startMonitorWindowResize();
	    } else {
	      this.stopMonitorWindowResize();
	    }
	  },
	
	  componentWillUnmount: function componentWillUnmount() {
	    this.stopMonitorWindowResize();
	  },
	
	  onWindowResize: function onWindowResize() {
	    var props = this.props;
	    if (!props.disabled) {
	      var source = _reactDom2['default'].findDOMNode(this);
	      props.onAlign(source, (0, _domAlign2['default'])(source, props.target(), props.align));
	    }
	  },
	
	  startMonitorWindowResize: function startMonitorWindowResize() {
	    if (!this.resizeHandler) {
	      this.resizeHandler = _rcUtil.Dom.addEventListener(window, 'resize', buffer(this.onWindowResize, this.props.monitorBufferTime));
	    }
	  },
	
	  stopMonitorWindowResize: function stopMonitorWindowResize() {
	    if (this.resizeHandler) {
	      this.resizeHandler.remove();
	      this.resizeHandler = null;
	    }
	  },
	
	  render: function render() {
	    var _props = this.props;
	    var childrenProps = _props.childrenProps;
	    var children = _props.children;
	
	    var child = _react2['default'].Children.only(children);
	    if (childrenProps) {
	      var newProps = {};
	      for (var prop in childrenProps) {
	        if (childrenProps.hasOwnProperty(prop)) {
	          newProps[prop] = this.props[childrenProps[prop]];
	        }
	      }
	      return _react2['default'].cloneElement(child, newProps);
	    }
	    return child;
	  }
	});
	
	exports['default'] = Align;
	module.exports = exports['default'];

/***/ },
/* 807 */
/*!************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/~/dom-align/lib/index.js ***!
  \************************************************************************************************************/
[2167, 808, 809, 810, 811, 812, 813],
/* 808 */
/*!************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/~/dom-align/lib/utils.js ***!
  \************************************************************************************************************/
488,
/* 809 */
/*!**********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/~/dom-align/lib/getOffsetParent.js ***!
  \**********************************************************************************************************************/
[2168, 808],
/* 810 */
/*!*******************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/~/dom-align/lib/getVisibleRectForElement.js ***!
  \*******************************************************************************************************************************/
[2169, 808, 809],
/* 811 */
/*!************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/~/dom-align/lib/adjustForViewport.js ***!
  \************************************************************************************************************************/
[2170, 808],
/* 812 */
/*!****************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/~/dom-align/lib/getRegion.js ***!
  \****************************************************************************************************************/
[2171, 808],
/* 813 */
/*!*********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/~/dom-align/lib/getElFuturePos.js ***!
  \*********************************************************************************************************************/
[2172, 814],
/* 814 */
/*!*********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/~/dom-align/lib/getAlignOffset.js ***!
  \*********************************************************************************************************************/
494,
/* 815 */
/*!***************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/lib/isWindow.js ***!
  \***************************************************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = isWindow;
	
	function isWindow(obj) {
	  /* eslint no-eq-null: 0 */
	  /* eslint eqeqeq: 0 */
	  return obj != null && obj == obj.window;
	}
	
	module.exports = exports["default"];

/***/ },
/* 816 */
/*!**************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-animate/lib/index.js ***!
  \**************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// export this package's api
	'use strict';
	
	module.exports = __webpack_require__(/*! ./Animate */ 817);

/***/ },
/* 817 */
/*!****************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-animate/lib/Animate.js ***!
  \****************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var _react = __webpack_require__(/*! react */ 531);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _ChildrenUtils = __webpack_require__(/*! ./ChildrenUtils */ 818);
	
	var _AnimateChild = __webpack_require__(/*! ./AnimateChild */ 819);
	
	var _AnimateChild2 = _interopRequireDefault(_AnimateChild);
	
	var _util = __webpack_require__(/*! ./util */ 824);
	
	var _util2 = _interopRequireDefault(_util);
	
	var defaultKey = 'rc_animate_' + Date.now();
	
	function getChildrenFromProps(props) {
	  var children = props.children;
	  if (_react2['default'].isValidElement(children)) {
	    if (!children.key) {
	      return _react2['default'].cloneElement(children, {
	        key: defaultKey
	      });
	    }
	  }
	  return children;
	}
	
	function noop() {}
	
	var Animate = _react2['default'].createClass({
	  displayName: 'Animate',
	
	  propTypes: {
	    component: _react2['default'].PropTypes.any,
	    animation: _react2['default'].PropTypes.object,
	    transitionName: _react2['default'].PropTypes.string,
	    transitionEnter: _react2['default'].PropTypes.bool,
	    transitionAppear: _react2['default'].PropTypes.bool,
	    exclusive: _react2['default'].PropTypes.bool,
	    transitionLeave: _react2['default'].PropTypes.bool,
	    onEnd: _react2['default'].PropTypes.func,
	    onEnter: _react2['default'].PropTypes.func,
	    onLeave: _react2['default'].PropTypes.func,
	    onAppear: _react2['default'].PropTypes.func,
	    showProp: _react2['default'].PropTypes.string
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      animation: {},
	      component: 'span',
	      transitionEnter: true,
	      transitionLeave: true,
	      transitionAppear: false,
	      onEnd: noop,
	      onEnter: noop,
	      onLeave: noop,
	      onAppear: noop
	    };
	  },
	
	  getInitialState: function getInitialState() {
	    this.currentlyAnimatingKeys = {};
	    this.keysToEnter = [];
	    this.keysToLeave = [];
	    return {
	      children: (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(this.props))
	    };
	  },
	
	  componentDidMount: function componentDidMount() {
	    var _this = this;
	
	    var showProp = this.props.showProp;
	    var children = this.state.children;
	    if (showProp) {
	      children = children.filter(function (child) {
	        return !!child.props[showProp];
	      });
	    }
	    children.forEach(function (child) {
	      _this.performAppear(child.key);
	    });
	  },
	
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var _this2 = this;
	
	    this.nextProps = nextProps;
	    var nextChildren = (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(nextProps));
	    var props = this.props;
	    // exclusive needs immediate response
	    if (props.exclusive) {
	      Object.keys(this.currentlyAnimatingKeys).forEach(function (key) {
	        _this2.stop(key);
	      });
	    }
	    var showProp = props.showProp;
	    var currentlyAnimatingKeys = this.currentlyAnimatingKeys;
	    // last props children if exclusive
	    var currentChildren = props.exclusive ? (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(props)) : this.state.children;
	    // in case destroy in showProp mode
	    var newChildren = [];
	    if (showProp) {
	      currentChildren.forEach(function (currentChild) {
	        var nextChild = (0, _ChildrenUtils.findChildInChildrenByKey)(nextChildren, currentChild.key);
	        var newChild = undefined;
	        if ((!nextChild || !nextChild.props[showProp]) && currentChild.props[showProp]) {
	          newChild = _react2['default'].cloneElement(nextChild || currentChild, _defineProperty({}, showProp, true));
	        } else {
	          newChild = nextChild;
	        }
	        if (newChild) {
	          newChildren.push(newChild);
	        }
	      });
	      nextChildren.forEach(function (nextChild) {
	        if (!(0, _ChildrenUtils.findChildInChildrenByKey)(currentChildren, nextChild.key)) {
	          newChildren.push(nextChild);
	        }
	      });
	    } else {
	      newChildren = (0, _ChildrenUtils.mergeChildren)(currentChildren, nextChildren);
	    }
	
	    // need render to avoid update
	    this.setState({
	      children: newChildren
	    });
	
	    nextChildren.forEach(function (child) {
	      var key = child.key;
	      if (currentlyAnimatingKeys[key]) {
	        return;
	      }
	      var hasPrev = (0, _ChildrenUtils.findChildInChildrenByKey)(currentChildren, key);
	      if (showProp) {
	        var showInNext = child.props[showProp];
	        if (hasPrev) {
	          var showInNow = (0, _ChildrenUtils.findShownChildInChildrenByKey)(currentChildren, key, showProp);
	          if (!showInNow && showInNext) {
	            _this2.keysToEnter.push(key);
	          }
	        } else if (showInNext) {
	          _this2.keysToEnter.push(key);
	        }
	      } else if (!hasPrev) {
	        _this2.keysToEnter.push(key);
	      }
	    });
	
	    currentChildren.forEach(function (child) {
	      var key = child.key;
	      if (currentlyAnimatingKeys[key]) {
	        return;
	      }
	      var hasNext = (0, _ChildrenUtils.findChildInChildrenByKey)(nextChildren, key);
	      if (showProp) {
	        var showInNow = child.props[showProp];
	        if (hasNext) {
	          var showInNext = (0, _ChildrenUtils.findShownChildInChildrenByKey)(nextChildren, key, showProp);
	          if (!showInNext && showInNow) {
	            _this2.keysToLeave.push(key);
	          }
	        } else if (showInNow) {
	          _this2.keysToLeave.push(key);
	        }
	      } else if (!hasNext) {
	        _this2.keysToLeave.push(key);
	      }
	    });
	  },
	
	  componentDidUpdate: function componentDidUpdate() {
	    if (this.isMounted()) {
	      var keysToEnter = this.keysToEnter;
	      this.keysToEnter = [];
	      keysToEnter.forEach(this.performEnter);
	      var keysToLeave = this.keysToLeave;
	      this.keysToLeave = [];
	      keysToLeave.forEach(this.performLeave);
	    }
	  },
	
	  performEnter: function performEnter(key) {
	    // may already remove by exclusive
	    if (this.refs[key]) {
	      this.currentlyAnimatingKeys[key] = true;
	      this.refs[key].componentWillEnter(this.handleDoneAdding.bind(this, key, 'enter'));
	    }
	  },
	
	  performAppear: function performAppear(key) {
	    if (this.refs[key]) {
	      this.currentlyAnimatingKeys[key] = true;
	      this.refs[key].componentWillAppear(this.handleDoneAdding.bind(this, key, 'appear'));
	    }
	  },
	
	  handleDoneAdding: function handleDoneAdding(key, type) {
	    var props = this.props;
	    delete this.currentlyAnimatingKeys[key];
	    // if update on exclusive mode, skip check
	    if (props.exclusive && props !== this.nextProps) {
	      return;
	    }
	    var currentChildren = (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(props));
	    if (!this.isValidChildByKey(currentChildren, key)) {
	      // exclusive will not need this
	      this.performLeave(key);
	    } else {
	      if (type === 'appear') {
	        if (_util2['default'].allowAppearCallback(props)) {
	          props.onAppear(key);
	          props.onEnd(key, true);
	        }
	      } else {
	        if (_util2['default'].allowEnterCallback(props)) {
	          props.onEnter(key);
	          props.onEnd(key, true);
	        }
	      }
	    }
	  },
	
	  performLeave: function performLeave(key) {
	    // may already remove by exclusive
	    if (this.refs[key]) {
	      this.currentlyAnimatingKeys[key] = true;
	      this.refs[key].componentWillLeave(this.handleDoneLeaving.bind(this, key));
	    }
	  },
	
	  handleDoneLeaving: function handleDoneLeaving(key) {
	    var props = this.props;
	    delete this.currentlyAnimatingKeys[key];
	    // if update on exclusive mode, skip check
	    if (props.exclusive && props !== this.nextProps) {
	      return;
	    }
	    var currentChildren = (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(props));
	    // in case state change is too fast
	    if (this.isValidChildByKey(currentChildren, key)) {
	      this.performEnter(key);
	    } else {
	      if (_util2['default'].allowLeaveCallback(props)) {
	        props.onLeave(key);
	        props.onEnd(key, false);
	      }
	      if (this.isMounted() && !(0, _ChildrenUtils.isSameChildren)(this.state.children, currentChildren, props.showProp)) {
	        this.setState({
	          children: currentChildren
	        });
	      }
	    }
	  },
	
	  isValidChildByKey: function isValidChildByKey(currentChildren, key) {
	    var showProp = this.props.showProp;
	    if (showProp) {
	      return (0, _ChildrenUtils.findShownChildInChildrenByKey)(currentChildren, key, showProp);
	    }
	    return (0, _ChildrenUtils.findChildInChildrenByKey)(currentChildren, key);
	  },
	
	  stop: function stop(key) {
	    delete this.currentlyAnimatingKeys[key];
	    var component = this.refs[key];
	    if (component) {
	      component.stop();
	    }
	  },
	
	  render: function render() {
	    var props = this.props;
	    this.nextProps = props;
	    var stateChildren = this.state.children;
	    var children = null;
	    if (stateChildren) {
	      children = stateChildren.map(function (child) {
	        if (child === null) {
	          return child;
	        }
	        if (!child.key) {
	          throw new Error('must set key for <rc-animate> children');
	        }
	        return _react2['default'].createElement(
	          _AnimateChild2['default'],
	          {
	            key: child.key,
	            ref: child.key,
	            animation: props.animation,
	            transitionName: props.transitionName,
	            transitionEnter: props.transitionEnter,
	            transitionAppear: props.transitionAppear,
	            transitionLeave: props.transitionLeave },
	          child
	        );
	      });
	    }
	    var Component = props.component;
	    if (Component) {
	      return _react2['default'].createElement(
	        Component,
	        this.props,
	        children
	      );
	    }
	    return children[0] || null;
	  }
	});
	
	exports['default'] = Animate;
	module.exports = exports['default'];

/***/ },
/* 818 */
/*!**********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-animate/lib/ChildrenUtils.js ***!
  \**********************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports.toArrayChildren = toArrayChildren;
	exports.findChildInChildrenByKey = findChildInChildrenByKey;
	exports.findShownChildInChildrenByKey = findShownChildInChildrenByKey;
	exports.findHiddenChildInChildrenByKey = findHiddenChildInChildrenByKey;
	exports.isSameChildren = isSameChildren;
	exports.mergeChildren = mergeChildren;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _react = __webpack_require__(/*! react */ 531);
	
	var _react2 = _interopRequireDefault(_react);
	
	function toArrayChildren(children) {
	  var ret = [];
	  _react2['default'].Children.forEach(children, function (child) {
	    ret.push(child);
	  });
	  return ret;
	}
	
	function findChildInChildrenByKey(children, key) {
	  var ret = null;
	  if (children) {
	    children.forEach(function (child) {
	      if (ret) {
	        return;
	      }
	      if (child.key === key) {
	        ret = child;
	      }
	    });
	  }
	  return ret;
	}
	
	function findShownChildInChildrenByKey(children, key, showProp) {
	  var ret = null;
	  if (children) {
	    children.forEach(function (child) {
	      if (child.key === key && child.props[showProp]) {
	        if (ret) {
	          throw new Error('two child with same key for <rc-animate> children');
	        }
	        ret = child;
	      }
	    });
	  }
	  return ret;
	}
	
	function findHiddenChildInChildrenByKey(children, key, showProp) {
	  var found = 0;
	  if (children) {
	    children.forEach(function (child) {
	      if (found) {
	        return;
	      }
	      found = child.key === key && !child.props[showProp];
	    });
	  }
	  return found;
	}
	
	function isSameChildren(c1, c2, showProp) {
	  var same = c1.length === c2.length;
	  if (same) {
	    c1.forEach(function (child, index) {
	      var child2 = c2[index];
	      if (child.key !== child2.key) {
	        same = false;
	      } else if (showProp && child.props[showProp] !== child2.props[showProp]) {
	        same = false;
	      }
	    });
	  }
	  return same;
	}
	
	function mergeChildren(prev, next) {
	  var ret = [];
	
	  // For each key of `next`, the list of keys to insert before that key in
	  // the combined list
	  var nextChildrenPending = {};
	  var pendingChildren = [];
	  prev.forEach(function (child) {
	    if (findChildInChildrenByKey(next, child.key)) {
	      if (pendingChildren.length) {
	        nextChildrenPending[child.key] = pendingChildren;
	        pendingChildren = [];
	      }
	    } else {
	      pendingChildren.push(child);
	    }
	  });
	
	  next.forEach(function (child) {
	    if (nextChildrenPending.hasOwnProperty(child.key)) {
	      ret = ret.concat(nextChildrenPending[child.key]);
	    }
	    ret.push(child);
	  });
	
	  ret = ret.concat(pendingChildren);
	
	  return ret;
	}

/***/ },
/* 819 */
/*!*********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-animate/lib/AnimateChild.js ***!
  \*********************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _react = __webpack_require__(/*! react */ 531);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(/*! react-dom */ 687);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _cssAnimation = __webpack_require__(/*! css-animation */ 820);
	
	var _cssAnimation2 = _interopRequireDefault(_cssAnimation);
	
	var _util = __webpack_require__(/*! ./util */ 824);
	
	var _util2 = _interopRequireDefault(_util);
	
	var transitionMap = {
	  enter: 'transitionEnter',
	  appear: 'transitionAppear',
	  leave: 'transitionLeave'
	};
	
	var AnimateChild = _react2['default'].createClass({
	  displayName: 'AnimateChild',
	
	  propTypes: {
	    children: _react2['default'].PropTypes.any
	  },
	
	  componentWillUnmount: function componentWillUnmount() {
	    this.stop();
	  },
	
	  componentWillEnter: function componentWillEnter(done) {
	    if (_util2['default'].isEnterSupported(this.props)) {
	      this.transition('enter', done);
	    } else {
	      done();
	    }
	  },
	
	  componentWillAppear: function componentWillAppear(done) {
	    if (_util2['default'].isAppearSupported(this.props)) {
	      this.transition('appear', done);
	    } else {
	      done();
	    }
	  },
	
	  componentWillLeave: function componentWillLeave(done) {
	    if (_util2['default'].isLeaveSupported(this.props)) {
	      this.transition('leave', done);
	    } else {
	      done();
	    }
	  },
	
	  transition: function transition(animationType, finishCallback) {
	    var _this = this;
	
	    var node = _reactDom2['default'].findDOMNode(this);
	    var props = this.props;
	    var transitionName = props.transitionName;
	    this.stop();
	    var end = function end() {
	      _this.stopper = null;
	      finishCallback();
	    };
	    if ((_cssAnimation.isCssAnimationSupported || !props.animation[animationType]) && transitionName && props[transitionMap[animationType]]) {
	      this.stopper = (0, _cssAnimation2['default'])(node, transitionName + '-' + animationType, end);
	    } else {
	      this.stopper = props.animation[animationType](node, end);
	    }
	  },
	
	  stop: function stop() {
	    var stopper = this.stopper;
	    if (stopper) {
	      this.stopper = null;
	      stopper.stop();
	    }
	  },
	
	  render: function render() {
	    return this.props.children;
	  }
	});
	
	exports['default'] = AnimateChild;
	module.exports = exports['default'];

/***/ },
/* 820 */
/*!******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-animate/~/css-animation/lib/index.js ***!
  \******************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Event = __webpack_require__(/*! ./Event */ 821);
	
	var _Event2 = _interopRequireDefault(_Event);
	
	var _componentClasses = __webpack_require__(/*! component-classes */ 822);
	
	var _componentClasses2 = _interopRequireDefault(_componentClasses);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	var isCssAnimationSupported = _Event2["default"].endEvents.length !== 0;
	
	
	var capitalPrefixes = ['Webkit', 'Moz', 'O',
	// ms is special .... !
	'ms'];
	var prefixes = ['-webkit-', '-moz-', '-o-', 'ms-', ''];
	
	function getDuration(node, name) {
	  var style = window.getComputedStyle(node);
	
	  var ret = '';
	  for (var i = 0; i < prefixes.length; i++) {
	    ret = style.getPropertyValue(prefixes[i] + name);
	    if (ret) {
	      break;
	    }
	  }
	  return ret;
	}
	
	function fixBrowserByTimeout(node) {
	  if (isCssAnimationSupported) {
	    var transitionDuration = parseFloat(getDuration(node, 'transition-duration')) || 0;
	    var animationDuration = parseFloat(getDuration(node, 'animation-duration')) || 0;
	    var time = Math.max(transitionDuration, animationDuration);
	    // sometimes, browser bug
	    node.rcEndAnimTimeout = setTimeout(function () {
	      node.rcEndAnimTimeout = null;
	      if (node.rcEndListener) {
	        node.rcEndListener();
	      }
	    }, time * 1000 + 200);
	  }
	}
	
	function clearBrowserBugTimeout(node) {
	  if (node.rcEndAnimTimeout) {
	    clearTimeout(node.rcEndAnimTimeout);
	    node.rcEndAnimTimeout = null;
	  }
	}
	
	var cssAnimation = function cssAnimation(node, transitionName, endCallback) {
	  var className = transitionName;
	  var activeClassName = className + '-active';
	  var end = endCallback;
	  var start = void 0;
	  var active = void 0;
	  var nodeClasses = (0, _componentClasses2["default"])(node);
	
	  if (endCallback && Object.prototype.toString.call(endCallback) === '[object Object]') {
	    end = endCallback.end;
	    start = endCallback.start;
	    active = endCallback.active;
	  }
	
	  if (node.rcEndListener) {
	    node.rcEndListener();
	  }
	
	  node.rcEndListener = function (e) {
	    if (e && e.target !== node) {
	      return;
	    }
	
	    if (node.rcAnimTimeout) {
	      clearTimeout(node.rcAnimTimeout);
	      node.rcAnimTimeout = null;
	    }
	
	    clearBrowserBugTimeout(node);
	
	    nodeClasses.remove(className);
	    nodeClasses.remove(activeClassName);
	
	    _Event2["default"].removeEndEventListener(node, node.rcEndListener);
	    node.rcEndListener = null;
	
	    // Usually this optional end is used for informing an owner of
	    // a leave animation and telling it to remove the child.
	    if (end) {
	      end();
	    }
	  };
	
	  _Event2["default"].addEndEventListener(node, node.rcEndListener);
	
	  nodeClasses.add(className);
	
	  if (start) {
	    start();
	  }
	
	  node.rcAnimTimeout = setTimeout(function () {
	    node.rcAnimTimeout = null;
	    nodeClasses.add(activeClassName);
	    if (active) {
	      active();
	    }
	    fixBrowserByTimeout(node);
	  }, 0);
	
	  return {
	    stop: function stop() {
	      if (node.rcEndListener) {
	        node.rcEndListener();
	      }
	    }
	  };
	};
	
	cssAnimation.style = function (node, style, callback) {
	  if (node.rcEndListener) {
	    node.rcEndListener();
	  }
	
	  node.rcEndListener = function (e) {
	    if (e && e.target !== node) {
	      return;
	    }
	
	    if (node.rcAnimTimeout) {
	      clearTimeout(node.rcAnimTimeout);
	      node.rcAnimTimeout = null;
	    }
	
	    clearBrowserBugTimeout(node);
	
	    _Event2["default"].removeEndEventListener(node, node.rcEndListener);
	    node.rcEndListener = null;
	
	    // Usually this optional callback is used for informing an owner of
	    // a leave animation and telling it to remove the child.
	    if (callback) {
	      callback();
	    }
	  };
	
	  _Event2["default"].addEndEventListener(node, node.rcEndListener);
	
	  node.rcAnimTimeout = setTimeout(function () {
	    for (var s in style) {
	      if (style.hasOwnProperty(s)) {
	        node.style[s] = style[s];
	      }
	    }
	    node.rcAnimTimeout = null;
	    fixBrowserByTimeout(node);
	  }, 0);
	};
	
	cssAnimation.setTransition = function (node, p, value) {
	  var property = p;
	  var v = value;
	  if (value === undefined) {
	    v = property;
	    property = '';
	  }
	  property = property || '';
	  capitalPrefixes.forEach(function (prefix) {
	    node.style[prefix + 'Transition' + property] = v;
	  });
	};
	
	cssAnimation.isCssAnimationSupported = isCssAnimationSupported;
	
	exports["default"] = cssAnimation;
	module.exports = exports['default'];

/***/ },
/* 821 */
/*!******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-animate/~/css-animation/lib/Event.js ***!
  \******************************************************************************************************************/
501,
/* 822 */
/*!**********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-animate/~/css-animation/~/component-classes/index.js ***!
  \**********************************************************************************************************************************/
[2173, 823, 823],
/* 823 */
/*!******************************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-animate/~/css-animation/~/component-classes/~/component-indexof/index.js ***!
  \******************************************************************************************************************************************************/
503,
/* 824 */
/*!*************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-animate/lib/util.js ***!
  \*************************************************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var util = {
	  isAppearSupported: function isAppearSupported(props) {
	    return props.transitionName && props.transitionAppear || props.animation.appear;
	  },
	  isEnterSupported: function isEnterSupported(props) {
	    return props.transitionName && props.transitionEnter || props.animation.enter;
	  },
	  isLeaveSupported: function isLeaveSupported(props) {
	    return props.transitionName && props.transitionLeave || props.animation.leave;
	  },
	
	  allowAppearCallback: function allowAppearCallback(props) {
	    return props.transitionAppear || props.animation.appear;
	  },
	  allowEnterCallback: function allowEnterCallback(props) {
	    return props.transitionEnter || props.animation.enter;
	  },
	  allowLeaveCallback: function allowLeaveCallback(props) {
	    return props.transitionLeave || props.animation.leave;
	  }
	};
	exports["default"] = util;
	module.exports = exports["default"];

/***/ },
/* 825 */
/*!******************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/lib/PopupInner.js ***!
  \******************************************************************************************/
[2174, 531, 826],
/* 826 */
/*!*********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/lib/LazyRenderBox.js ***!
  \*********************************************************************************************/
[2175, 531],
/* 827 */
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/lib/utils.js ***!
  \*************************************************************************************/
507,
/* 828 */
/*!***********************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/lib/Steps.js ***!
  \***********************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var _react = __webpack_require__(/*! react */ 531);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(/*! classnames */ 779);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function calcPoints(vertical, marks, dots, step, min, max) {
	  var points = Object.keys(marks).map(parseFloat);
	  if (dots) {
	    for (var i = min; i <= max; i = i + step) {
	      if (points.indexOf(i) >= 0) continue;
	      points.push(i);
	    }
	  }
	  return points;
	}
	
	var Steps = function Steps(_ref) {
	  var prefixCls = _ref.prefixCls;
	  var vertical = _ref.vertical;
	  var marks = _ref.marks;
	  var dots = _ref.dots;
	  var step = _ref.step;
	  var included = _ref.included;
	  var lowerBound = _ref.lowerBound;
	  var upperBound = _ref.upperBound;
	  var max = _ref.max;
	  var min = _ref.min;
	
	  var range = max - min;
	  var elements = calcPoints(vertical, marks, dots, step, min, max).map(function (point) {
	    var _classNames;
	
	    var offset = Math.abs(point - min) / range * 100 + '%';
	    var style = vertical ? { bottom: offset } : { left: offset };
	
	    var isActived = !included && point === upperBound || included && point <= upperBound && point >= lowerBound;
	    var pointClassName = (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, prefixCls + '-dot', true), _defineProperty(_classNames, prefixCls + '-dot-active', isActived), _classNames));
	
	    return _react2['default'].createElement('span', { className: pointClassName, style: style, key: point });
	  });
	
	  return _react2['default'].createElement(
	    'div',
	    { className: prefixCls + '-step' },
	    elements
	  );
	};
	
	exports['default'] = Steps;
	module.exports = exports['default'];

/***/ },
/* 829 */
/*!***********************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/lib/Marks.js ***!
  \***********************************************************/
[2176, 531, 779],
/* 830 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/assets/index.css ***!
  \***************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../../css-loader!./index.css */ 831);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../../style-loader/addStyles.js */ 769)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../css-loader/index.js!./index.css", function() {
				var newContent = require("!!./../../css-loader/index.js!./index.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 831 */
/*!*******************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/~/rc-slider/assets/index.css ***!
  \*******************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../../css-loader/lib/css-base.js */ 768)();
	// imports
	
	
	// module
	exports.push([module.id, ".rc-slider {\n  position: relative;\n  height: 4px;\n  width: 100%;\n  border-radius: 6px;\n  background-color: #e9e9e9;\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n.rc-slider * {\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n.rc-slider-track {\n  position: absolute;\n  left: 0;\n  height: 4px;\n  border-radius: 6px;\n  background-color: #abe2fb;\n  z-index: 1;\n}\n.rc-slider-handle {\n  position: absolute;\n  margin-left: -7px;\n  margin-top: -5px;\n  width: 14px;\n  height: 14px;\n  cursor: pointer;\n  border-radius: 50%;\n  border: solid 2px #96dbfa;\n  background-color: #fff;\n  z-index: 2;\n}\n.rc-slider-handle:hover {\n  border-color: #57c5f7;\n}\n.rc-slider-handle-active:active {\n  border-color: #57c5f7;\n  box-shadow: 0 0 5px #57c5f7;\n}\n.rc-slider-mark {\n  position: absolute;\n  top: 10px;\n  left: 0;\n  width: 100%;\n  font-size: 12px;\n  z-index: 3;\n}\n.rc-slider-mark-text {\n  position: absolute;\n  display: inline-block;\n  vertical-align: middle;\n  text-align: center;\n  cursor: pointer;\n  color: #999;\n}\n.rc-slider-mark-text-active {\n  color: #666;\n}\n.rc-slider-step {\n  position: absolute;\n  width: 100%;\n  height: 4px;\n  background: transparent;\n  z-index: 1;\n}\n.rc-slider-dot {\n  position: absolute;\n  bottom: -2px;\n  margin-left: -4px;\n  width: 8px;\n  height: 8px;\n  border: 2px solid #e9e9e9;\n  background-color: #fff;\n  cursor: pointer;\n  border-radius: 50%;\n  vertical-align: middle;\n}\n.rc-slider-dot:first-child {\n  margin-left: -4px;\n}\n.rc-slider-dot:last-child {\n  margin-left: -4px;\n}\n.rc-slider-dot-active {\n  border-color: #96dbfa;\n}\n.rc-slider-disabled {\n  background-color: #e9e9e9;\n}\n.rc-slider-disabled .rc-slider-track {\n  background-color: #ccc;\n}\n.rc-slider-disabled .rc-slider-handle,\n.rc-slider-disabled .rc-slider-dot {\n  border-color: #ccc;\n  background-color: #fff;\n  cursor: not-allowed;\n}\n.rc-slider-disabled .rc-slider-mark-text,\n.rc-slider-disabled .rc-slider-dot {\n  cursor: not-allowed !important;\n}\n.rc-slider-vertical {\n  width: 4px;\n  height: 100%;\n}\n.rc-slider-vertical .rc-slider-track {\n  bottom: 0;\n  width: 4px;\n}\n.rc-slider-vertical .rc-slider-handle {\n  position: absolute;\n  margin-left: -5px;\n  margin-bottom: -7px;\n}\n.rc-slider-vertical .rc-slider-mark {\n  top: 0;\n  left: 10px;\n  height: 100%;\n}\n.rc-slider-vertical .rc-slider-step {\n  height: 100%;\n  width: 4px;\n}\n.rc-slider-vertical .rc-slider-dot {\n  left: 2px;\n  margin-bottom: -4px;\n}\n.rc-slider-vertical .rc-slider-dot:first-child {\n  margin-bottom: -4px;\n}\n.rc-slider-vertical .rc-slider-dot:last-child {\n  margin-bottom: -4px;\n}\n.rc-slider-tooltip-zoom-down-enter,\n.rc-slider-tooltip-zoom-down-appear {\n  -webkit-animation-duration: .3s;\n          animation-duration: .3s;\n  -webkit-animation-fill-mode: both;\n          animation-fill-mode: both;\n  display: block !important;\n  -webkit-animation-play-state: paused;\n          animation-play-state: paused;\n}\n.rc-slider-tooltip-zoom-down-leave {\n  -webkit-animation-duration: .3s;\n          animation-duration: .3s;\n  -webkit-animation-fill-mode: both;\n          animation-fill-mode: both;\n  display: block !important;\n  -webkit-animation-play-state: paused;\n          animation-play-state: paused;\n}\n.rc-slider-tooltip-zoom-down-enter.rc-slider-tooltip-zoom-down-enter-active,\n.rc-slider-tooltip-zoom-down-appear.rc-slider-tooltip-zoom-down-appear-active {\n  -webkit-animation-name: rcSliderTooltipZoomDownIn;\n          animation-name: rcSliderTooltipZoomDownIn;\n  -webkit-animation-play-state: running;\n          animation-play-state: running;\n}\n.rc-slider-tooltip-zoom-down-leave.rc-slider-tooltip-zoom-down-leave-active {\n  -webkit-animation-name: rcSliderTooltipZoomDownOut;\n          animation-name: rcSliderTooltipZoomDownOut;\n  -webkit-animation-play-state: running;\n          animation-play-state: running;\n}\n.rc-slider-tooltip-zoom-down-enter,\n.rc-slider-tooltip-zoom-down-appear {\n  -webkit-transform: scale(0, 0);\n          transform: scale(0, 0);\n  -webkit-animation-timing-function: cubic-bezier(0.23, 1, 0.32, 1);\n          animation-timing-function: cubic-bezier(0.23, 1, 0.32, 1);\n}\n.rc-slider-tooltip-zoom-down-leave {\n  -webkit-animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n          animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n}\n@-webkit-keyframes rcSliderTooltipZoomDownIn {\n  0% {\n    opacity: 0;\n    -webkit-transform-origin: 50% 100%;\n            transform-origin: 50% 100%;\n    -webkit-transform: scale(0, 0);\n            transform: scale(0, 0);\n  }\n  100% {\n    -webkit-transform-origin: 50% 100%;\n            transform-origin: 50% 100%;\n    -webkit-transform: scale(1, 1);\n            transform: scale(1, 1);\n  }\n}\n@keyframes rcSliderTooltipZoomDownIn {\n  0% {\n    opacity: 0;\n    -webkit-transform-origin: 50% 100%;\n            transform-origin: 50% 100%;\n    -webkit-transform: scale(0, 0);\n            transform: scale(0, 0);\n  }\n  100% {\n    -webkit-transform-origin: 50% 100%;\n            transform-origin: 50% 100%;\n    -webkit-transform: scale(1, 1);\n            transform: scale(1, 1);\n  }\n}\n@-webkit-keyframes rcSliderTooltipZoomDownOut {\n  0% {\n    -webkit-transform-origin: 50% 100%;\n            transform-origin: 50% 100%;\n    -webkit-transform: scale(1, 1);\n            transform: scale(1, 1);\n  }\n  100% {\n    opacity: 0;\n    -webkit-transform-origin: 50% 100%;\n            transform-origin: 50% 100%;\n    -webkit-transform: scale(0, 0);\n            transform: scale(0, 0);\n  }\n}\n@keyframes rcSliderTooltipZoomDownOut {\n  0% {\n    -webkit-transform-origin: 50% 100%;\n            transform-origin: 50% 100%;\n    -webkit-transform: scale(1, 1);\n            transform: scale(1, 1);\n  }\n  100% {\n    opacity: 0;\n    -webkit-transform-origin: 50% 100%;\n            transform-origin: 50% 100%;\n    -webkit-transform: scale(0, 0);\n            transform: scale(0, 0);\n  }\n}\n.rc-tooltip {\n  position: absolute;\n  left: -9999px;\n  top: -9999px;\n  z-index: 4;\n  visibility: visible;\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n.rc-tooltip * {\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n.rc-tooltip-hidden {\n  display: none;\n}\n.rc-tooltip-placement-top {\n  padding: 4px 0 8px 0;\n}\n.rc-tooltip-inner {\n  padding: 6px 2px;\n  min-width: 24px;\n  height: 24px;\n  font-size: 12px;\n  line-height: 1;\n  color: #fff;\n  text-align: center;\n  text-decoration: none;\n  background-color: #6c6c6c;\n  border-radius: 6px;\n  box-shadow: 0 0 4px #d9d9d9;\n}\n.rc-tooltip-arrow {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border-color: transparent;\n  border-style: solid;\n}\n.rc-tooltip-placement-top .rc-tooltip-arrow {\n  bottom: 4px;\n  left: 50%;\n  margin-left: -4px;\n  border-width: 4px 4px 0;\n  border-top-color: #6c6c6c;\n}\n", ""]);
	
	// exports


/***/ },
/* 832 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/index.js ***!
  \**********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/DownloadProfilesButton.jsx */ 833);


/***/ },
/* 833 */
/*!********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/src/DownloadProfilesButton.jsx ***!
  \********************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 531);
	
	var Modal = __webpack_require__(/*! react-bootstrap/lib/Modal */ 834);
	var Button = __webpack_require__(/*! react-bootstrap/lib/Button */ 948);
	var Glyphicon = __webpack_require__(/*! react-bootstrap/lib/Glyphicon */ 949);
	var Tooltip = __webpack_require__(/*! react-bootstrap/lib/Tooltip */ 950);
	var OverlayTrigger = __webpack_require__(/*! react-bootstrap/lib/OverlayTrigger */ 952);
	
	var BlueprintText = __webpack_require__(/*! ./BlueprintText.jsx */ 964);
	
	//*------------------------------------------------------------------*
	
	//*------------------------------------------------------------------*
	var DownloadProfilesButton = React.createClass({
	    displayName: 'DownloadProfilesButton',
	
	    propTypes: {
	        atlasBaseURL: React.PropTypes.string.isRequired,
	        downloadProfilesURL: React.PropTypes.string.isRequired,
	        isFortLauderdale: React.PropTypes.bool.isRequired,
	        onDownloadCallbackForAnalytics: React.PropTypes.func.isRequired
	    },
	    getInitialState: function () {
	        return { showModal: false };
	    },
	
	    _closeModal: function () {
	        this.setState({ showModal: false });
	    },
	
	    _afterDownloadButtonClicked: function () {
	        if (!this.props.isFortLauderdale) {
	            this._commenceDownload();
	        } else {
	            this.setState({ showModal: true });
	        }
	    },
	
	    _commenceDownload: function () {
	        this.props.onDownloadCallbackForAnalytics();
	        window.location.href = this.props.atlasBaseURL + this.props.downloadProfilesURL;
	    },
	
	    _commenceDownloadAndCloseModal: function () {
	        this._commenceDownload();
	        this._closeModal();
	    },
	
	    render: function () {
	        return React.createElement(
	            'a',
	            { ref: 'downloadProfilesLink', onClick: this._afterDownloadButtonClicked },
	            React.createElement(
	                Button,
	                { bsStyle: 'primary', bsSize: 'xsmall' },
	                React.createElement(Glyphicon, { style: { verticalAlign: 'middle', paddingBottom: '2px' }, glyph: 'download-alt' }),
	                React.createElement(
	                    'span',
	                    { style: { verticalAlign: 'middle', paddingTop: '2px' } },
	                    ' Download all results'
	                )
	            ),
	            React.createElement(
	                Modal,
	                { show: this.state.showModal, onHide: this._closeModal, bsSize: 'large' },
	                React.createElement(Modal.Header, { closeButton: true }),
	                React.createElement(
	                    Modal.Body,
	                    { style: { maxHeight: '360px' } },
	                    React.createElement(BlueprintText, null)
	                ),
	                React.createElement(
	                    Modal.Footer,
	                    null,
	                    React.createElement(
	                        Button,
	                        { onClick: this._closeModal },
	                        'Close'
	                    ),
	                    React.createElement(
	                        Button,
	                        { bsStyle: 'primary', onClick: this._commenceDownloadAndCloseModal },
	                        'Continue downloading'
	                    )
	                )
	            )
	        );
	    }
	});
	
	module.exports = DownloadProfilesButton;

/***/ },
/* 834 */
/*!*****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/lib/Modal.js ***!
  \*****************************************************************/
[2126, 835, 851, 852, 856, 857, 531, 687, 858, 859, 864, 865, 866, 867, 873, 875, 887, 888, 889, 891, 892, 893, 913, 919],
/* 835 */
/*!***************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/helpers/extends.js ***!
  \***************************************************************************************/
[2068, 836],
/* 836 */
/*!*********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/core-js/object/assign.js ***!
  \*********************************************************************************************/
[2069, 837],
/* 837 */
/*!**********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/fn/object/assign.js ***!
  \**********************************************************************************************************/
[2070, 838, 841],
/* 838 */
/*!*******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/es6.object.assign.js ***!
  \*******************************************************************************************************************/
[2071, 839, 844],
/* 839 */
/*!**********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.export.js ***!
  \**********************************************************************************************************/
[2072, 840, 841, 842],
/* 840 */
/*!**********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.global.js ***!
  \**********************************************************************************************************/
173,
/* 841 */
/*!********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.core.js ***!
  \********************************************************************************************************/
174,
/* 842 */
/*!*******************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.ctx.js ***!
  \*******************************************************************************************************/
[2073, 843],
/* 843 */
/*!**************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.a-function.js ***!
  \**************************************************************************************************************/
176,
/* 844 */
/*!*****************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.object-assign.js ***!
  \*****************************************************************************************************************/
[2074, 845, 846, 848, 850],
/* 845 */
/*!***************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.js ***!
  \***************************************************************************************************/
178,
/* 846 */
/*!*************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.to-object.js ***!
  \*************************************************************************************************************/
[2075, 847],
/* 847 */
/*!***********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.defined.js ***!
  \***********************************************************************************************************/
180,
/* 848 */
/*!***********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.iobject.js ***!
  \***********************************************************************************************************/
[2076, 849],
/* 849 */
/*!*******************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.cof.js ***!
  \*******************************************************************************************************/
182,
/* 850 */
/*!*********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.fails.js ***!
  \*********************************************************************************************************/
183,
/* 851 */
/*!*********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/helpers/object-without-properties.js ***!
  \*********************************************************************************************************/
195,
/* 852 */
/*!*******************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/core-js/object/keys.js ***!
  \*******************************************************************************************/
[2080, 853],
/* 853 */
/*!********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/fn/object/keys.js ***!
  \********************************************************************************************************/
[2081, 854, 841],
/* 854 */
/*!*****************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/es6.object.keys.js ***!
  \*****************************************************************************************************************/
[2082, 846, 855],
/* 855 */
/*!**************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.object-sap.js ***!
  \**************************************************************************************************************/
[2083, 839, 841, 850],
/* 856 */
/*!*******************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/helpers/interop-require-default.js ***!
  \*******************************************************************************************************/
161,
/* 857 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/classnames/index.js ***!
  \**************************************************************************/
196,
/* 858 */
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/lib/utils/bootstrapUtils.js ***!
  \********************************************************************************/
[2067, 835, 856, 531, 859, 862, 863],
/* 859 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/lib/styleMaps.js ***!
  \*********************************************************************/
[2077, 836, 860, 852],
/* 860 */
/*!*********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/core-js/object/create.js ***!
  \*********************************************************************************************/
[2078, 861],
/* 861 */
/*!**********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/fn/object/create.js ***!
  \**********************************************************************************************************/
[2079, 845],
/* 862 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/invariant/browser.js ***!
  \***************************************************************************/
191,
/* 863 */
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/warning/browser.js ***!
  \*************************************************************************/
192,
/* 864 */
/*!****************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/util/scrollbarSize.js ***!
  \****************************************************************************************/
[2127, 865],
/* 865 */
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/util/inDOM.js ***!
  \********************************************************************************/
238,
/* 866 */
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/ownerDocument.js ***!
  \***********************************************************************************/
244,
/* 867 */
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/events/index.js ***!
  \**********************************************************************************/
[2128, 868, 869, 870],
/* 868 */
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/events/on.js ***!
  \*******************************************************************************/
[2099, 865],
/* 869 */
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/events/off.js ***!
  \********************************************************************************/
[2123, 865],
/* 870 */
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/events/filter.js ***!
  \***********************************************************************************/
[2129, 871, 872],
/* 871 */
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/query/contains.js ***!
  \************************************************************************************/
[2102, 865],
/* 872 */
/*!********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/query/querySelectorAll.js ***!
  \********************************************************************************************/
352,
/* 873 */
/*!******************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-prop-types/lib/elementType.js ***!
  \******************************************************************************************/
[2091, 531, 874],
/* 874 */
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-prop-types/lib/common.js ***!
  \*************************************************************************************/
212,
/* 875 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/lib/Fade.js ***!
  \****************************************************************/
[2130, 876, 883, 835, 856, 531, 857, 884, 886],
/* 876 */
/*!****************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/helpers/inherits.js ***!
  \****************************************************************************************/
[2084, 860, 877],
/* 877 */
/*!*******************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/core-js/object/set-prototype-of.js ***!
  \*******************************************************************************************************/
[2085, 878],
/* 878 */
/*!********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/fn/object/set-prototype-of.js ***!
  \********************************************************************************************************************/
[2086, 879, 841],
/* 879 */
/*!*****************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/es6.object.set-prototype-of.js ***!
  \*****************************************************************************************************************************/
[2087, 839, 880],
/* 880 */
/*!*************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.set-proto.js ***!
  \*************************************************************************************************************/
[2088, 845, 881, 882, 842],
/* 881 */
/*!*************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.is-object.js ***!
  \*************************************************************************************************************/
207,
/* 882 */
/*!*************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.an-object.js ***!
  \*************************************************************************************************************/
[2089, 881],
/* 883 */
/*!************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/babel-runtime/helpers/class-call-check.js ***!
  \************************************************************************************************/
209,
/* 884 */
/*!***************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-overlays/lib/Transition.js ***!
  \***************************************************************************************/
[2097, 531, 687, 885, 868, 857],
/* 885 */
/*!*******************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/transition/properties.js ***!
  \*******************************************************************************************/
[2098, 865],
/* 886 */
/*!*****************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-prop-types/lib/deprecated.js ***!
  \*****************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = deprecated;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(/*! warning */ 863);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function deprecated(propType, explanation) {
	  return function validate(props, propName, componentName) {
	    if (props[propName] != null) {
	      _warning2['default'](false, '"' + propName + '" property of "' + componentName + '" has been deprecated.\n' + explanation);
	    }
	
	    return propType(props, propName, componentName);
	  };
	}
	
	module.exports = exports['default'];

/***/ },
/* 887 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/lib/ModalDialog.js ***!
  \***********************************************************************/
[2131, 835, 856, 531, 857, 858, 859],
/* 888 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/lib/ModalBody.js ***!
  \*********************************************************************/
[2132, 876, 883, 835, 856, 531, 857, 858],
/* 889 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/lib/ModalHeader.js ***!
  \***********************************************************************/
[2133, 876, 883, 851, 835, 856, 531, 857, 858, 890],
/* 890 */
/*!***************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/lib/utils/createChainedFunction.js ***!
  \***************************************************************************************/
165,
/* 891 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/lib/ModalTitle.js ***!
  \**********************************************************************/
[2134, 876, 883, 835, 856, 531, 857, 858],
/* 892 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/lib/ModalFooter.js ***!
  \***********************************************************************/
[2135, 876, 883, 835, 856, 531, 857, 858],
/* 893 */
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-overlays/lib/Modal.js ***!
  \**********************************************************************************/
[2136, 531, 863, 894, 896, 897, 900, 898, 916, 917, 865, 918, 871, 899],
/* 894 */
/*!*********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-overlays/~/react-prop-types/lib/mountable.js ***!
  \*********************************************************************************************************/
[2137, 895],
/* 895 */
/*!******************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-overlays/~/react-prop-types/lib/common.js ***!
  \******************************************************************************************************/
212,
/* 896 */
/*!***********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-overlays/~/react-prop-types/lib/elementType.js ***!
  \***********************************************************************************************************/
[2091, 531, 895],
/* 897 */
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-overlays/lib/Portal.js ***!
  \***********************************************************************************/
[2138, 531, 687, 894, 898, 899],
/* 898 */
/*!************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-overlays/lib/utils/ownerDocument.js ***!
  \************************************************************************************************/
[2124, 687, 866],
/* 899 */
/*!***********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-overlays/lib/utils/getContainer.js ***!
  \***********************************************************************************************/
[2139, 687],
/* 900 */
/*!*****************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-overlays/lib/ModalManager.js ***!
  \*****************************************************************************************/
[2140, 901, 909, 864, 913, 915],
/* 901 */
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/style/index.js ***!
  \*********************************************************************************/
[2093, 902, 904, 906, 908],
/* 902 */
/*!****************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/util/camelizeStyle.js ***!
  \****************************************************************************************/
[2094, 903],
/* 903 */
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/util/camelize.js ***!
  \***********************************************************************************/
230,
/* 904 */
/*!*****************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/util/hyphenateStyle.js ***!
  \*****************************************************************************************/
[2095, 905],
/* 905 */
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/util/hyphenate.js ***!
  \************************************************************************************/
232,
/* 906 */
/*!********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/style/getComputedStyle.js ***!
  \********************************************************************************************/
[2096, 907, 902],
/* 907 */
/*!***************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/util/babelHelpers.js ***!
  \***************************************************************************************/
234,
/* 908 */
/*!***************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/style/removeStyle.js ***!
  \***************************************************************************************/
235,
/* 909 */
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/class/index.js ***!
  \*********************************************************************************/
[2141, 910, 912, 911],
/* 910 */
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/class/addClass.js ***!
  \************************************************************************************/
[2142, 911],
/* 911 */
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/class/hasClass.js ***!
  \************************************************************************************/
368,
/* 912 */
/*!***************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/class/removeClass.js ***!
  \***************************************************************************************/
369,
/* 913 */
/*!************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-overlays/lib/utils/isOverflowing.js ***!
  \************************************************************************************************/
[2143, 914, 866],
/* 914 */
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/query/isWindow.js ***!
  \************************************************************************************/
371,
/* 915 */
/*!***************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-overlays/lib/utils/manageAriaHidden.js ***!
  \***************************************************************************************************/
372,
/* 916 */
/*!***************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-overlays/lib/utils/addEventListener.js ***!
  \***************************************************************************************************/
[2122, 868, 869],
/* 917 */
/*!***************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-overlays/lib/utils/addFocusListener.js ***!
  \***************************************************************************************************/
373,
/* 918 */
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/activeElement.js ***!
  \***********************************************************************************/
[2101, 907, 866],
/* 919 */
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/object/pick.js ***!
  \***********************************************************************************/
[2125, 920, 937, 939, 940, 947],
/* 920 */
/*!********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/internal/baseFlatten.js ***!
  \********************************************************************************************/
[2117, 921, 922, 932, 923, 929],
/* 921 */
/*!******************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/internal/arrayPush.js ***!
  \******************************************************************************************/
310,
/* 922 */
/*!****************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/lang/isArguments.js ***!
  \****************************************************************************************/
[2113, 923, 929],
/* 923 */
/*!********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/internal/isArrayLike.js ***!
  \********************************************************************************************/
[2110, 924, 931],
/* 924 */
/*!******************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/internal/getLength.js ***!
  \******************************************************************************************/
[2111, 925],
/* 925 */
/*!*********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/internal/baseProperty.js ***!
  \*********************************************************************************************/
[2112, 926],
/* 926 */
/*!*****************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/internal/toObject.js ***!
  \*****************************************************************************************/
[2105, 927, 928, 930],
/* 927 */
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/lang/isObject.js ***!
  \*************************************************************************************/
253,
/* 928 */
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/lang/isString.js ***!
  \*************************************************************************************/
[2106, 929],
/* 929 */
/*!*********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/internal/isObjectLike.js ***!
  \*********************************************************************************************/
255,
/* 930 */
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/support.js ***!
  \*******************************************************************************/
256,
/* 931 */
/*!*****************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/internal/isLength.js ***!
  \*****************************************************************************************/
265,
/* 932 */
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/lang/isArray.js ***!
  \************************************************************************************/
[2114, 933, 931, 929],
/* 933 */
/*!******************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/internal/getNative.js ***!
  \******************************************************************************************/
[2107, 934],
/* 934 */
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/lang/isNative.js ***!
  \*************************************************************************************/
[2108, 935, 936, 929],
/* 935 */
/*!***************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/lang/isFunction.js ***!
  \***************************************************************************************/
[2109, 927],
/* 936 */
/*!*********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/internal/isHostObject.js ***!
  \*********************************************************************************************/
261,
/* 937 */
/*!*********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/internal/bindCallback.js ***!
  \*********************************************************************************************/
[2116, 938],
/* 938 */
/*!****************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/utility/identity.js ***!
  \****************************************************************************************/
295,
/* 939 */
/*!********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/internal/pickByArray.js ***!
  \********************************************************************************************/
[2118, 926],
/* 940 */
/*!***********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/internal/pickByCallback.js ***!
  \***********************************************************************************************/
[2119, 941],
/* 941 */
/*!******************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/internal/baseForIn.js ***!
  \******************************************************************************************/
[2120, 942, 944],
/* 942 */
/*!****************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/internal/baseFor.js ***!
  \****************************************************************************************/
[2103, 943],
/* 943 */
/*!**********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/internal/createBaseFor.js ***!
  \**********************************************************************************************/
[2104, 926],
/* 944 */
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/object/keysIn.js ***!
  \*************************************************************************************/
[2115, 945, 922, 932, 935, 946, 931, 927, 928, 930],
/* 945 */
/*!******************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/internal/arrayEach.js ***!
  \******************************************************************************************/
271,
/* 946 */
/*!****************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/internal/isIndex.js ***!
  \****************************************************************************************/
269,
/* 947 */
/*!******************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/lodash-compat/function/restParam.js ***!
  \******************************************************************************************/
314,
/* 948 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/lib/Button.js ***!
  \******************************************************************/
[2090, 835, 856, 531, 857, 873, 858, 859],
/* 949 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/lib/Glyphicon.js ***!
  \*********************************************************************/
[2092, 835, 856, 531, 857],
/* 950 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/lib/Tooltip.js ***!
  \*******************************************************************/
[2154, 835, 856, 531, 857, 858, 951],
/* 951 */
/*!************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-prop-types/lib/isRequiredForA11y.js ***!
  \************************************************************************************************/
315,
/* 952 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/lib/OverlayTrigger.js ***!
  \**************************************************************************/
[2153, 835, 852, 856, 871, 919, 531, 687, 863, 953, 890],
/* 953 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/lib/Overlay.js ***!
  \*******************************************************************/
[2144, 876, 883, 835, 851, 856, 531, 954, 873, 875, 857],
/* 954 */
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-overlays/lib/Overlay.js ***!
  \************************************************************************************/
[2145, 531, 897, 955, 962, 896],
/* 955 */
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-overlays/lib/Position.js ***!
  \*************************************************************************************/
[2146, 531, 687, 857, 898, 899, 956, 894],
/* 956 */
/*!*******************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-overlays/lib/utils/overlayPositionUtils.js ***!
  \*******************************************************************************************************/
[2147, 898, 957, 958, 960],
/* 957 */
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/query/offset.js ***!
  \**********************************************************************************/
[2148, 871, 914, 866],
/* 958 */
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/query/position.js ***!
  \************************************************************************************/
[2149, 907, 957, 959, 960, 961, 901],
/* 959 */
/*!****************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/query/offsetParent.js ***!
  \****************************************************************************************/
[2150, 907, 866, 901],
/* 960 */
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/query/scrollTop.js ***!
  \*************************************************************************************/
[2151, 914],
/* 961 */
/*!**************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/dom-helpers/query/scrollLeft.js ***!
  \**************************************************************************************/
[2152, 914],
/* 962 */
/*!*********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-overlays/lib/RootCloseWrapper.js ***!
  \*********************************************************************************************/
[2121, 531, 687, 916, 963, 898],
/* 963 */
/*!********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-bootstrap/~/react-overlays/lib/utils/createChainedFunction.js ***!
  \********************************************************************************************************/
165,
/* 964 */
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/src/BlueprintText.jsx ***!
  \***********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 531);
	
	var BlueprintText = React.createClass({
	    displayName: "BlueprintText",
	
	    render: function () {
	        return React.createElement(
	            "div",
	            null,
	            React.createElement("meta", { charSet: "UTF-8" }),
	            React.createElement(
	                "title",
	                null,
	                "The Blueprint project Data Reuse statement"
	            ),
	            React.createElement(
	                "h3",
	                null,
	                "The Blueprint project Data Reuse statement"
	            ),
	            React.createElement("br", null),
	            React.createElement(
	                "p",
	                null,
	                "This document refers to the reuse of data generated by the EC funded FP7 High Impact Project, Blueprint."
	            ),
	            React.createElement(
	                "p",
	                null,
	                "Blueprint regularly released analysis results via its ftp site and makes the raw sequence data available through the sequence archives at the EMBL-EBI. Much Blueprint data is generated from samples whose data must be released through a managed access process. For these data sets external users must apply for permission to access the data from the European Genome-phenome Archive (EGA) through the Blueprint Data Access Committee.",
	                React.createElement("br", null),
	                "The Blueprint consortium expects this data to be valuable to other researchers and in keeping with Fort Lauderdale principles data users may use the data for many studies, but are expected to allow the data producers to make the first presentations and to publish the first paper with global analyses of the data."
	            ),
	            React.createElement(
	                "h5",
	                null,
	                "Global analyses of Project data"
	            ),
	            React.createElement(
	                "p",
	                null,
	                "Blueprint plans to publish global analyses of the sequencing data, epigenetic marks, expression levels and variation both in the context of normal hematopoietic cells and of those neoplastic and non-neoplastic diseases studied within th econsortium. Talks, posters, and papers on all such analyses are to be published first by the Blueprint project, by approved presenters on behalf of the Project, with the Project as author. When the first major Project paper on these analyses is published, then researchers inside and outside the Project are free to present and publish using the Project data for these and other analyses."
	            ),
	            React.createElement(
	                "h5",
	                null,
	                "Large-scale analyses of Project data"
	            ),
	            React.createElement(
	                "p",
	                null,
	                "Groups within the Project may make presentations and publish papers on more extensive analyses of topics to be included in the main analysis presentations and papers, coincident with the main project analysis presentations and papers. The major points would be included in the main Project presentations and papers, but these additional presentations and papers allow more focused discussion of methods and results. The author list would include the Consortium."
	            ),
	            React.createElement(
	                "h5",
	                null,
	                "Methods development using Project data"
	            ),
	            React.createElement(
	                "p",
	                null,
	                "Researchers who have used small amounts of Project data (<= one chromosome) may present methods development posters, talks, and papers that include these data prior to the first major Project paper, without needing Project approval or authorship, although the Project should be acknowledged. Methods presentations or papers on global analyses or analyses using large amounts of Project data, on topics that the Consortium plans to examine, would be similar to large-scale analyses of Project data: researchers within the Project may make presentations or submit papers at the same time as the main Project presentations and papers, and others could do so after the Project publishes the first major analysis paper."
	            ),
	            React.createElement(
	                "h5",
	                null,
	                "Disease studies using Project data"
	            ),
	            React.createElement(
	                "p",
	                null,
	                "Researchers may present and publish on use of Project data in specific chromosome regions (that are not of general interest) or as summaries (such as number of differentially expressed genes in cell types assayed by Blueprint) for studies on diseases not studied by BLUEPRINT without Project approval, prior to the first major Project paper being published. The Project should not be listed as an author."
	            ),
	            React.createElement(
	                "h5",
	                null,
	                "Authors who use data from the project must acknowledge Blueprint using the following wording"
	            ),
	            React.createElement(
	                "p",
	                null,
	                "This study makes use of data generated by the Blueprint Consortium. A full list of the investigators who contributed to the generation of the data is available from www.blueprint-epigenome.eu. Funding for the project was provided by the European Union's Seventh Framework Programme (FP7/2007-2013) under grant agreement no 282510 BLUEPRINT."
	            )
	        );
	    }
	});
	
	module.exports = BlueprintText;

/***/ },
/* 965 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/jquery.browser/dist/jquery.browser.js ***!
  \**************************************************************************/
[2178, 689],
/* 966 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/atlas-modernizr/modernizr.3.0.0-alpha3.js ***!
  \******************************************************************************/
525,
/* 967 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/fancybox/dist/js/jquery.fancybox.cjs.js ***!
  \****************************************************************************/
516,
/* 968 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/fancybox/dist/css/jquery.fancybox.css ***!
  \**************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../../../css-loader!./jquery.fancybox.css */ 969);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../../../style-loader/addStyles.js */ 769)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../css-loader/index.js!./jquery.fancybox.css", function() {
				var newContent = require("!!./../../../css-loader/index.js!./jquery.fancybox.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 969 */
/*!******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/~/fancybox/dist/css/jquery.fancybox.css ***!
  \******************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../../../css-loader/lib/css-base.js */ 768)();
	// imports
	
	
	// module
	exports.push([module.id, "/*! fancyBox v2.1.5 fancyapps.com | fancyapps.com/fancybox/#license */\n.fancybox-wrap, .fancybox-skin, .fancybox-outer, .fancybox-inner, .fancybox-image, .fancybox-wrap iframe, .fancybox-wrap object, .fancybox-nav, .fancybox-nav span, .fancybox-tmp {\n  padding: 0;\n  margin: 0;\n  border: 0;\n  outline: none;\n  vertical-align: top; }\n\n.fancybox-wrap {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 8020; }\n\n.fancybox-skin {\n  position: relative;\n  background: #f9f9f9;\n  color: #444;\n  text-shadow: none;\n  -webkit-border-radius: 4px;\n  -moz-border-radius: 4px;\n  border-radius: 4px; }\n\n.fancybox-opened {\n  z-index: 8030; }\n\n.fancybox-opened .fancybox-skin {\n  -webkit-box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);\n  -moz-box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5); }\n\n.fancybox-outer, .fancybox-inner {\n  position: relative; }\n\n.fancybox-inner {\n  overflow: hidden; }\n\n.fancybox-type-iframe .fancybox-inner {\n  -webkit-overflow-scrolling: touch; }\n\n.fancybox-error {\n  color: #444;\n  font: 14px/20px \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  margin: 0;\n  padding: 15px;\n  white-space: nowrap; }\n\n.fancybox-image, .fancybox-iframe {\n  display: block;\n  width: 100%;\n  height: 100%; }\n\n.fancybox-image {\n  max-width: 100%;\n  max-height: 100%; }\n\n#fancybox-loading, .fancybox-close, .fancybox-prev span, .fancybox-next span {\n  background-image: url(" + __webpack_require__(/*! ../img/fancybox_sprite.png */ 970) + "); }\n\n#fancybox-loading {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  margin-top: -22px;\n  margin-left: -22px;\n  background-position: 0 -108px;\n  opacity: 0.8;\n  cursor: pointer;\n  z-index: 8060; }\n\n#fancybox-loading div {\n  width: 44px;\n  height: 44px;\n  background: url(" + __webpack_require__(/*! ../img/fancybox_loading.gif */ 971) + ") center center no-repeat; }\n\n.fancybox-close {\n  position: absolute;\n  top: -18px;\n  right: -18px;\n  width: 36px;\n  height: 36px;\n  cursor: pointer;\n  z-index: 8040; }\n\n.fancybox-nav {\n  position: absolute;\n  top: 0;\n  width: 40%;\n  height: 100%;\n  cursor: pointer;\n  text-decoration: none;\n  background: transparent url(" + __webpack_require__(/*! ../img/blank.gif */ 972) + ");\n  /* helps IE */\n  -webkit-tap-highlight-color: transparent;\n  z-index: 8040; }\n\n.fancybox-prev {\n  left: 0; }\n\n.fancybox-next {\n  right: 0; }\n\n.fancybox-nav span {\n  position: absolute;\n  top: 50%;\n  width: 36px;\n  height: 34px;\n  margin-top: -18px;\n  cursor: pointer;\n  z-index: 8040;\n  visibility: hidden; }\n\n.fancybox-prev span {\n  left: 10px;\n  background-position: 0 -36px; }\n\n.fancybox-next span {\n  right: 10px;\n  background-position: 0 -72px; }\n\n.fancybox-nav:hover span {\n  visibility: visible; }\n\n.fancybox-tmp {\n  position: absolute;\n  top: -99999px;\n  left: -99999px;\n  max-width: 99999px;\n  max-height: 99999px;\n  overflow: visible !important; }\n\n/* Overlay helper */\n.fancybox-lock {\n  overflow: visible !important;\n  width: auto; }\n\n.fancybox-lock body {\n  overflow: hidden !important; }\n\n.fancybox-lock-test {\n  overflow-y: hidden !important; }\n\n.fancybox-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  overflow: hidden;\n  display: none;\n  z-index: 8010;\n  background: url(" + __webpack_require__(/*! ../img/fancybox_overlay.png */ 973) + "); }\n\n.fancybox-overlay-fixed {\n  position: fixed;\n  bottom: 0;\n  right: 0; }\n\n.fancybox-lock .fancybox-overlay {\n  overflow: auto;\n  overflow-y: scroll; }\n\n/* Title helper */\n.fancybox-title {\n  visibility: hidden;\n  font: normal 13px/20px \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  position: relative;\n  text-shadow: none;\n  z-index: 8050; }\n\n.fancybox-opened .fancybox-title {\n  visibility: visible; }\n\n.fancybox-title-float-wrap {\n  position: absolute;\n  bottom: 0;\n  right: 50%;\n  margin-bottom: -35px;\n  z-index: 8050;\n  text-align: center; }\n\n.fancybox-title-float-wrap .child {\n  display: inline-block;\n  margin-right: -100%;\n  padding: 2px 20px;\n  background: transparent;\n  /* Fallback for web browsers that doesn't support RGBa */\n  background: rgba(0, 0, 0, 0.8);\n  -webkit-border-radius: 15px;\n  -moz-border-radius: 15px;\n  border-radius: 15px;\n  text-shadow: 0 1px 2px #222;\n  color: #FFF;\n  font-weight: bold;\n  line-height: 24px;\n  white-space: nowrap; }\n\n.fancybox-title-outside-wrap {\n  position: relative;\n  margin-top: 10px;\n  color: #fff; }\n\n.fancybox-title-inside-wrap {\n  padding-top: 10px; }\n\n.fancybox-title-over-wrap {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  color: #fff;\n  padding: 10px;\n  background: #000;\n  background: rgba(0, 0, 0, 0.8); }\n\n/*Retina graphics!*/\n@media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {\n  #fancybox-loading, .fancybox-close, .fancybox-prev span, .fancybox-next span {\n    background-image: url(" + __webpack_require__(/*! ../img/fancybox_sprite@2x.png */ 974) + ");\n    background-size: 44px 152px;\n    /*The size of the normal image, half the size of the hi-res image*/ }\n  #fancybox-loading div {\n    background-image: url(" + __webpack_require__(/*! ../img/fancybox_loading@2x.gif */ 975) + ");\n    background-size: 24px 24px;\n    /*The size of the normal image, half the size of the hi-res image*/ } }\n", ""]);
	
	// exports


/***/ },
/* 970 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/fancybox/dist/img/fancybox_sprite.png ***!
  \**************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "783d4031fe50c3d83c960911e1fbc705.png";

/***/ },
/* 971 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/fancybox/dist/img/fancybox_loading.gif ***!
  \***************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "328cc0f6c78211485058d460e80f4fa8.gif";

/***/ },
/* 972 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/fancybox/dist/img/blank.gif ***!
  \****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "325472601571f31e1bf00674c368d335.gif";

/***/ },
/* 973 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/fancybox/dist/img/fancybox_overlay.png ***!
  \***************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "77aeaa52715b898b73c74d68c630330e.png";

/***/ },
/* 974 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/fancybox/dist/img/fancybox_sprite@2x.png ***!
  \*****************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "ed9970ce22242421e66ff150aa97fe5f.png";

/***/ },
/* 975 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/fancybox/dist/img/fancybox_loading@2x.gif ***!
  \******************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "f92938639fa894a0e8ded1c3368abe98.gif";

/***/ },
/* 976 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/jquery-toolbar/jquery.toolbar.js ***!
  \*********************************************************************/
[2181, 689],
/* 977 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/jquery-toolbar/jquery.toolbar.css ***!
  \**********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../css-loader!./jquery.toolbar.css */ 978);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../style-loader/addStyles.js */ 769)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../css-loader/index.js!./jquery.toolbar.css", function() {
				var newContent = require("!!./../css-loader/index.js!./jquery.toolbar.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 978 */
/*!**************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/~/jquery-toolbar/jquery.toolbar.css ***!
  \**************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../css-loader/lib/css-base.js */ 768)();
	// imports
	
	
	// module
	exports.push([module.id, ".btn-toolbar {\n  background: #364347;\n  width: 20px;\n  height: 20px;\n  text-align: center;\n  padding: 10px;\n  border-radius: 6px;\n  display: block;\n  transition: none;\n}\n.btn-toolbar > i {\n  color: #02baf2;\n  font-size: 16px;\n}\n.btn-toolbar:hover {\n  background: #02baf2;\n  cursor: pointer;\n}\n.btn-toolbar:hover > i {\n  color: white;\n}\n.btn-toolbar-primary {\n  background-color: #009dcd;\n}\n.btn-toolbar-primary.pressed {\n  background-color: #02baf2;\n}\n.btn-toolbar-primary:hover {\n  background-color: #02baf2;\n}\n.btn-toolbar-primary > i {\n  color: white;\n}\n.btn-toolbar-danger {\n  background-color: #cc0000;\n}\n.btn-toolbar-danger.pressed {\n  background-color: #f84545;\n}\n.btn-toolbar-danger:hover {\n  background-color: #f84545;\n}\n.btn-toolbar-danger > i {\n  color: white;\n}\n.btn-toolbar-warning {\n  background-color: #f3bc65;\n}\n.btn-toolbar-warning.pressed {\n  background-color: #fad46b;\n}\n.btn-toolbar-warning:hover {\n  background-color: #fad46b;\n}\n.btn-toolbar-warning > i {\n  color: white;\n}\n.btn-toolbar-info {\n  background-color: #e96300;\n}\n.btn-toolbar-info.pressed {\n  background-color: #f58410;\n}\n.btn-toolbar-info:hover {\n  background-color: #f58410;\n}\n.btn-toolbar-info > i {\n  color: white;\n}\n.btn-toolbar-success {\n  background-color: #28948c;\n}\n.btn-toolbar-success.pressed {\n  background-color: #3eb5ac;\n}\n.btn-toolbar-success:hover {\n  background-color: #3eb5ac;\n}\n.btn-toolbar-success > i {\n  color: white;\n}\n.btn-toolbar-info-o {\n  background-color: #9175bd;\n}\n.btn-toolbar-info-o.pressed {\n  background-color: #a88cd5;\n}\n.btn-toolbar-info-o:hover {\n  background-color: #a88cd5;\n}\n.btn-toolbar-info-o > i {\n  color: white;\n}\n.btn-toolbar-light {\n  background-color: #b2c6cd;\n}\n.btn-toolbar-light.pressed {\n  background-color: #d6e1e5;\n}\n.btn-toolbar-light:hover {\n  background-color: #d6e1e5;\n}\n.btn-toolbar-light > i {\n  color: white;\n}\n.btn-toolbar-dark {\n  background-color: #364347;\n}\n.btn-toolbar-dark.pressed {\n  background-color: #5e696d;\n}\n.btn-toolbar-dark:hover {\n  background-color: #5e696d;\n}\n.btn-toolbar-dark > i {\n  color: white;\n}\n.tool-container {\n  background-color: #5e696d;\n  background-size: 100% 100%;\n  border-radius: 6px;\n  position: absolute;\n  box-shadow: 0 0 2px grey;\n}\n.tool-container.tool-top,\n.tool-container.tool-bottom {\n  height: 40px;\n  border-bottom: 0px solid #beb8b8;\n}\n.tool-container.tool-top .tool-item,\n.tool-container.tool-bottom .tool-item {\n  float: left;\n  border-right: 0;\n  border-left: 0;\n}\n.tool-item {\n  height: 100%;\n  display: block;\n  width: 20px;\n  height: 20px;\n  text-align: center;\n  padding: 10px;\n  transition: none;\n}\n.tool-item > .fa {\n  color: #b2c6cd;\n}\n.tool-item.selected,\n.tool-item:hover {\n  background: #02baf2;\n}\n.tool-item.selected > .fa,\n.tool-item:hover > .fa {\n  color: white;\n}\n.tool-top .tool-item:first-child:hover,\n.tool-bottom .tool-item:first-child:hover {\n  border-top-left-radius: 6px;\n  border-bottom-left-radius: 6px;\n}\n.tool-top .tool-item:last-child:hover,\n.tool-bottom .tool-item:last-child:hover {\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n}\n.tool-vertical-top .tool-item:first-child:hover,\n.tool-vertical-bottom .tool-item:first-child:hover,\n.tool-right .tool-item:first-child:hover,\n.tool-left .tool-item:first-child:hover {\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n}\n.tool-vertical-top .tool-item:last-child:hover,\n.tool-vertical-bottom .tool-item:last-child:hover,\n.tool-right .tool-item:last-child:hover,\n.tool-left .tool-item:last-child:hover {\n  border-bottom-left-radius: 6px;\n  border-bottom-right-radius: 6px;\n}\n.tool-container .arrow {\n  width: 0;\n  height: 0;\n  position: absolute;\n  border-width: 7px;\n  border-style: solid;\n}\n.tool-container.tool-top .arrow {\n  border-color: #5e696d transparent transparent;\n  left: 50%;\n  bottom: -14px;\n  margin-left: -7px;\n}\n.tool-container.tool-bottom .arrow {\n  border-color: transparent transparent #5e696d;\n  left: 50%;\n  top: -14px;\n  margin-left: -7px;\n}\n.tool-container.tool-left .arrow {\n  border-color: transparent transparent transparent #5e696d;\n  top: 50%;\n  right: -14px;\n  margin-top: -7px;\n}\n.tool-container.tool-right .arrow {\n  border-color: transparent #5e696d transparent transparent;\n  top: 50%;\n  left: -14px;\n  margin-top: -7px;\n}\n.toolbar-primary {\n  background-color: #02baf2;\n}\n.toolbar-primary.tool-top .arrow {\n  border-color: #02baf2 transparent transparent;\n}\n.toolbar-primary.tool-bottom .arrow {\n  border-color: transparent transparent #02baf2;\n}\n.toolbar-primary.tool-left .arrow {\n  border-color: transparent transparent transparent #02baf2;\n}\n.toolbar-primary.tool-right .arrow {\n  border-color: transparent #02baf2 transparent transparent;\n}\n.toolbar-primary .tool-item > .fa {\n  color: white;\n}\n.toolbar-primary .tool-item.selected,\n.toolbar-primary .tool-item:hover {\n  background: #009dcd;\n  color: white;\n}\n.toolbar-danger {\n  background-color: #f84545;\n}\n.toolbar-danger.tool-top .arrow {\n  border-color: #f84545 transparent transparent;\n}\n.toolbar-danger.tool-bottom .arrow {\n  border-color: transparent transparent #f84545;\n}\n.toolbar-danger.tool-left .arrow {\n  border-color: transparent transparent transparent #f84545;\n}\n.toolbar-danger.tool-right .arrow {\n  border-color: transparent #f84545 transparent transparent;\n}\n.toolbar-danger .tool-item > .fa {\n  color: white;\n}\n.toolbar-danger .tool-item.selected,\n.toolbar-danger .tool-item:hover {\n  background: #cc0000;\n  color: white;\n}\n.toolbar-warning {\n  background-color: #f3bc65;\n}\n.toolbar-warning.tool-top .arrow {\n  border-color: #f3bc65 transparent transparent;\n}\n.toolbar-warning.tool-bottom .arrow {\n  border-color: transparent transparent #f3bc65;\n}\n.toolbar-warning.tool-left .arrow {\n  border-color: transparent transparent transparent #f3bc65;\n}\n.toolbar-warning.tool-right .arrow {\n  border-color: transparent #f3bc65 transparent transparent;\n}\n.toolbar-warning .tool-item > .fa {\n  color: white;\n}\n.toolbar-warning .tool-item.selected,\n.toolbar-warning .tool-item:hover {\n  background: #fad46b;\n  color: white;\n}\n.toolbar-info {\n  background-color: #e96300;\n}\n.toolbar-info.tool-top .arrow {\n  border-color: #e96300 transparent transparent;\n}\n.toolbar-info.tool-bottom .arrow {\n  border-color: transparent transparent #e96300;\n}\n.toolbar-info.tool-left .arrow {\n  border-color: transparent transparent transparent #e96300;\n}\n.toolbar-info.tool-right .arrow {\n  border-color: transparent #e96300 transparent transparent;\n}\n.toolbar-info .tool-item > .fa {\n  color: white;\n}\n.toolbar-info .tool-item.selected,\n.toolbar-info .tool-item:hover {\n  background: #f58410;\n  color: white;\n}\n.toolbar-success {\n  background-color: #28948c;\n}\n.toolbar-success.tool-top .arrow {\n  border-color: #28948c transparent transparent;\n}\n.toolbar-success.tool-bottom .arrow {\n  border-color: transparent transparent #28948c;\n}\n.toolbar-success.tool-left .arrow {\n  border-color: transparent transparent transparent #28948c;\n}\n.toolbar-success.tool-right .arrow {\n  border-color: transparent #28948c transparent transparent;\n}\n.toolbar-success .tool-item > .fa {\n  color: white;\n}\n.toolbar-success .tool-item.selected,\n.toolbar-success .tool-item:hover {\n  background: #3eb5ac;\n  color: white;\n}\n.toolbar-info-o {\n  background-color: #9175bd;\n}\n.toolbar-info-o.tool-top .arrow {\n  border-color: #9175bd transparent transparent;\n}\n.toolbar-info-o.tool-bottom .arrow {\n  border-color: transparent transparent #9175bd;\n}\n.toolbar-info-o.tool-left .arrow {\n  border-color: transparent transparent transparent #9175bd;\n}\n.toolbar-info-o.tool-right .arrow {\n  border-color: transparent #9175bd transparent transparent;\n}\n.toolbar-info-o .tool-item > .fa {\n  color: white;\n}\n.toolbar-info-o .tool-item.selected,\n.toolbar-info-o .tool-item:hover {\n  background: #a88cd5;\n  color: white;\n}\n.toolbar-light {\n  background-color: #b2c6cd;\n}\n.toolbar-light.tool-top .arrow {\n  border-color: #b2c6cd transparent transparent;\n}\n.toolbar-light.tool-bottom .arrow {\n  border-color: transparent transparent #b2c6cd;\n}\n.toolbar-light.tool-left .arrow {\n  border-color: transparent transparent transparent #b2c6cd;\n}\n.toolbar-light.tool-right .arrow {\n  border-color: transparent #b2c6cd transparent transparent;\n}\n.toolbar-light .tool-item > .fa {\n  color: white;\n}\n.toolbar-light .tool-item.selected,\n.toolbar-light .tool-item:hover {\n  background: #d6e1e5;\n  color: white;\n}\n.toolbar-dark {\n  background-color: #364347;\n}\n.toolbar-dark.tool-top .arrow {\n  border-color: #364347 transparent transparent;\n}\n.toolbar-dark.tool-bottom .arrow {\n  border-color: transparent transparent #364347;\n}\n.toolbar-dark.tool-left .arrow {\n  border-color: transparent transparent transparent #364347;\n}\n.toolbar-dark.tool-right .arrow {\n  border-color: transparent #364347 transparent transparent;\n}\n.toolbar-dark .tool-item > .fa {\n  color: white;\n}\n.toolbar-dark .tool-item.selected,\n.toolbar-dark .tool-item:hover {\n  background: #5e696d;\n  color: white;\n}\n.animate-standard {\n  -webkit-animation: standardAnimate 0.3s 1 ease;\n}\n.animate-flyin {\n  -webkit-animation: rotateAnimate 0.5s 1 ease;\n}\n.animate-grow {\n  -webkit-animation: growAnimate 0.4s 1 ease;\n}\n.animate-flip {\n  -webkit-animation: flipAnimate 0.4s 1 ease;\n}\n.animate-bounce {\n  -webkit-animation: bounceAnimate 0.4s 1 ease-out;\n}\n@-webkit-keyframes rotateAnimate {\n  from {\n    transform: rotate(180deg) translate(-120px);\n    opacity: 0;\n  }\n  to {\n    transform: rotate(0deg) translate(0px);\n    opacity: 1;\n  }\n}\n@-webkit-keyframes standardAnimate {\n  from {\n    transform: translateY(20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0px);\n    opacity: 1;\n  }\n}\n@-webkit-keyframes growAnimate {\n  0% {\n    transform: scale(0) translateY(40px);\n    opacity: 0;\n  }\n  70% {\n    transform: scale(1.5) translate(0px);\n  }\n  100% {\n    transform: scale(1) translate(0px);\n    opacity: 1;\n  }\n}\n@-webkit-keyframes rotate2Animate {\n  from {\n    transform: rotate(-90deg);\n    transform-origin: 0% 100%;\n    opacity: 0;\n  }\n  to {\n    transform: rotate(0deg);\n    opacity: 1;\n  }\n}\n@-webkit-keyframes flipAnimate {\n  from {\n    transform: rotate3d(2, 2, 2, 180deg);\n    opacity: 0;\n  }\n  to {\n    transform: rotate3d(0, 0, 0, 0deg);\n    opacity: 1;\n  }\n}\n@-webkit-keyframes bounceAnimate {\n  0% {\n    transform: translateY(40px);\n    opacity: 0;\n  }\n  30% {\n    transform: translateY(-40px);\n  }\n  70% {\n    transform: translateY(20px);\n  }\n  100% {\n    transform: translateY(0px);\n    opacity: 1;\n  }\n}\n.hidden {\n  display: none;\n}\n\n/* Custom white theme */\n\n.btn-toolbar-white {\n    background-color: #b2c6cd;\n}\n.btn-toolbar-white.pressed {\n    background-color: #d6e1e5;\n}\n.btn-toolbar-white:hover {\n    background-color: #d6e1e5;\n}\n.btn-toolbar-white > i {\n    color: white;\n}\n\n.toolbar-white {\n    background-color: whitesmoke;\n}\n.toolbar-white.tool-top .arrow {\n    border-color: #b2c6cd transparent transparent;\n}\n.toolbar-white.tool-bottom .arrow {\n    border-color: transparent transparent #b2c6cd;\n}\n.toolbar-white.tool-left .arrow {\n    border-color: transparent transparent transparent #b2c6cd;\n}\n.toolbar-white.tool-right .arrow {\n    border-color: transparent lightgrey transparent transparent;\n}\n.toolbar-white .tool-item > .fa {\n    color: white;\n}\n.toolbar-white .tool-item.selected,\n.toolbar-white .tool-item:hover {\n    background: lightgoldenrodyellow;\n    color: white;\n}\n", ""]);
	
	// exports


/***/ },
/* 979 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/heatmap-baseline-cell-variance/index.js ***!
  \****************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/HeatmapBaselineCellVariance.jsx */ 980);


/***/ },
/* 980 */
/*!*******************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/heatmap-baseline-cell-variance/src/HeatmapBaselineCellVariance.jsx ***!
  \*******************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 531);
	var Highcharts = __webpack_require__(/*! react-highcharts */ 981);
	__webpack_require__(/*! highcharts-more */ 983)(Highcharts.Highcharts);
	
	//*------------------------------------------------------------------*
	
	var HeatmapBaselineCellVariance = React.createClass({
	    displayName: 'HeatmapBaselineCellVariance',
	
	
	    propTypes: {
	        quartiles: React.PropTypes.shape({
	            min: React.PropTypes.number,
	            lower: React.PropTypes.number,
	            median: React.PropTypes.number,
	            upper: React.PropTypes.number,
	            max: React.PropTypes.number
	        }).isRequired
	    },
	
	    render: function () {
	
	        var chartWidth = 115;
	        var chartHeight = 105;
	        var chartMargin = 0;
	
	        var highchartsOptions = {
	            credits: { enabled: false },
	            chart: { type: "boxplot", width: chartWidth, height: chartHeight, margin: chartMargin },
	            title: { text: "" },
	            legend: { enabled: false },
	            xAxis: { title: { text: "Variance" } },
	            yAxis: {
	                title: { text: "Expression level" },
	                labels: {
	                    align: "left",
	                    x: 0,
	                    y: -2
	                }
	            },
	            plotOptions: {
	                boxplot: {
	                    fillColor: "#F0F0E0",
	                    lineWidth: 2,
	                    medianColor: "#0C5DA5",
	                    medianWidth: 3,
	                    stemColor: "#A63400",
	                    stemDashStyle: "dot",
	                    stemWidth: 1,
	                    whiskerColor: "#3D9200",
	                    whiskerLength: "20%",
	                    whiskerWidth: 3
	                }
	            },
	            series: [{
	                name: "Expression",
	                data: [[this.props.quartiles.min, this.props.quartiles.lower, this.props.quartiles.median, this.props.quartiles.upper, this.props.quartiles.max]]
	            }],
	            tooltip: {
	                headerFormat: "",
	                style: {
	                    fontSize: "10px",
	                    padding: 5
	                }
	            }
	        };
	
	        var boxPlotStyle = { width: chartWidth, height: chartHeight, margin: chartMargin };
	        return React.createElement(
	            'td',
	            null,
	            React.createElement(
	                'div',
	                { id: 'container', ref: 'container', style: boxPlotStyle },
	                React.createElement(Highcharts, { config: highchartsOptions })
	            )
	        );
	    }
	
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = HeatmapBaselineCellVariance;

/***/ },
/* 981 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-highcharts/dist/ReactHighcharts.js ***!
  \*****************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	!function(t,r){ true?module.exports=r(__webpack_require__(/*! react */ 531),__webpack_require__(/*! highcharts */ 982)):"function"==typeof define&&define.amd?define(["react","highcharts"],r):"object"==typeof exports?exports.ReactHighcharts=r(require("react"),require("highcharts")):t.ReactHighcharts=r(t.React,t.Highcharts)}(this,function(t,r){return function(t){function r(n){if(e[n])return e[n].exports;var o=e[n]={exports:{},id:n,loaded:!1};return t[n].call(o.exports,o,o.exports,r),o.loaded=!0,o.exports}var e={};return r.m=t,r.c=e,r.p="",r(0)}([function(t,r,e){t.exports=e(3)},function(r,e){r.exports=t},function(t,r,e){(function(r){"use strict";var n=Object.assign||function(t){for(var r=1;r<arguments.length;r++){var e=arguments[r];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])}return t},o=e(1);t.exports=function(t,e){var i="Highcharts"+t,c=o.createClass({displayName:i,propTypes:{config:o.PropTypes.object.isRequired,isPureConfig:o.PropTypes.bool},renderChart:function(o){var c=this;if(!o)throw new Error("Config must be specified for the "+i+" component");var s=o.chart;this.chart=new e[t](n({},o,{chart:n({},s,{renderTo:this.refs.chart})})),r.requestAnimationFrame&&requestAnimationFrame(function(){c.chart.reflow()})},shouldComponentUpdate:function(t){return this.props.isPureConfig&&this.props.config===t.config||this.renderChart(t.config),!0},getChart:function(){if(!this.chart)throw new Error("getChart() should not be called before the component is mounted");return this.chart},componentDidMount:function(){this.renderChart(this.props.config)},componentWillUnmount:function(){this.chart.destroy()},render:function(){var t=this.props;return t=n({},t,{ref:"chart"}),o.createElement("div",t)}});return c.Highcharts=e,c}}).call(r,function(){return this}())},function(t,r,e){"use strict";t.exports=e(2)("Chart",e(4))},function(t,e){t.exports=r}])});

/***/ },
/* 982 */
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-highcharts/~/highcharts/highcharts.js ***!
  \********************************************************************************/
/***/ function(module, exports) {

	/*
	 Highcharts JS v4.2.3 (2016-02-08)
	
	 (c) 2009-2016 Torstein Honsi
	
	 License: www.highcharts.com/license
	*/
	(function(E,X){typeof module==="object"&&module.exports?module.exports=E.document?X(E):X:E.Highcharts=X(E)})(typeof window!=="undefined"?window:this,function(E){function X(a,b){var c="Highcharts error #"+a+": www.highcharts.com/errors/"+a;if(b)throw Error(c);E.console&&console.log(c)}function pb(a,b,c){this.options=b;this.elem=a;this.prop=c}function D(){var a,b=arguments,c,d={},e=function(a,b){var c,d;typeof a!=="object"&&(a={});for(d in b)b.hasOwnProperty(d)&&(c=b[d],a[d]=c&&typeof c==="object"&&
	Object.prototype.toString.call(c)!=="[object Array]"&&d!=="renderTo"&&typeof c.nodeType!=="number"?e(a[d]||{},c):b[d]);return a};b[0]===!0&&(d=b[1],b=Array.prototype.slice.call(b,2));c=b.length;for(a=0;a<c;a++)d=e(d,b[a]);return d}function C(a,b){return parseInt(a,b||10)}function xa(a){return typeof a==="string"}function Y(a){return a&&typeof a==="object"}function Ia(a){return Object.prototype.toString.call(a)==="[object Array]"}function ma(a){return typeof a==="number"}function Da(a){return W.log(a)/
	W.LN10}function na(a){return W.pow(10,a)}function oa(a,b){for(var c=a.length;c--;)if(a[c]===b){a.splice(c,1);break}}function q(a){return a!==z&&a!==null}function K(a,b,c){var d,e;if(xa(b))q(c)?a.setAttribute(b,c):a&&a.getAttribute&&(e=a.getAttribute(b));else if(q(b)&&Y(b))for(d in b)a.setAttribute(d,b[d]);return e}function ta(a){return Ia(a)?a:[a]}function Pa(a,b,c){if(b)return setTimeout(a,b,c);a.call(0,c)}function L(a,b){if(ya&&!ca&&b&&b.opacity!==z)b.filter="alpha(opacity="+b.opacity*100+")";u(a.style,
	b)}function Z(a,b,c,d,e){a=y.createElement(a);b&&u(a,b);e&&L(a,{padding:0,border:"none",margin:0});c&&L(a,c);d&&d.appendChild(a);return a}function pa(a,b){var c=function(){};c.prototype=new a;u(c.prototype,b);return c}function Ja(a,b){return Array((b||2)+1-String(a).length).join(0)+a}function Ya(a){return(Za&&Za(a)||qb||0)*6E4}function Ka(a,b){for(var c="{",d=!1,e,f,g,h,i,k=[];(c=a.indexOf(c))!==-1;){e=a.slice(0,c);if(d){f=e.split(":");g=f.shift().split(".");i=g.length;e=b;for(h=0;h<i;h++)e=e[g[h]];
	if(f.length)f=f.join(":"),g=/\.([0-9])/,h=N.lang,i=void 0,/f$/.test(f)?(i=(i=f.match(g))?i[1]:-1,e!==null&&(e=B.numberFormat(e,i,h.decimalPoint,f.indexOf(",")>-1?h.thousandsSep:""))):e=Qa(f,e)}k.push(e);a=a.slice(c+1);c=(d=!d)?"}":"{"}k.push(a);return k.join("")}function rb(a){return W.pow(10,T(W.log(a)/W.LN10))}function sb(a,b,c,d,e){var f,g=a,c=p(c,1);f=a/c;b||(b=[1,2,2.5,5,10],d===!1&&(c===1?b=[1,2,5,10]:c<=0.1&&(b=[1/c])));for(d=0;d<b.length;d++)if(g=b[d],e&&g*c>=a||!e&&f<=(b[d]+(b[d+1]||b[d]))/
	2)break;g*=c;return g}function ib(a,b){var c=a.length,d,e;for(e=0;e<c;e++)a[e].safeI=e;a.sort(function(a,c){d=b(a,c);return d===0?a.safeI-c.safeI:d});for(e=0;e<c;e++)delete a[e].safeI}function Ra(a){for(var b=a.length,c=a[0];b--;)a[b]<c&&(c=a[b]);return c}function Ea(a){for(var b=a.length,c=a[0];b--;)a[b]>c&&(c=a[b]);return c}function Sa(a,b){for(var c in a)a[c]&&a[c]!==b&&a[c].destroy&&a[c].destroy(),delete a[c]}function Ta(a){jb||(jb=Z(La));a&&jb.appendChild(a);jb.innerHTML=""}function fa(a,b){return parseFloat(a.toPrecision(b||
	14))}function Ua(a,b){b.renderer.globalAnimation=p(a,b.animation)}function Fb(){var a=N.global,b=a.useUTC,c=b?"getUTC":"get",d=b?"setUTC":"set";qa=a.Date||E.Date;qb=b&&a.timezoneOffset;Za=b&&a.getTimezoneOffset;kb=function(a,c,d,h,i,k){var j;b?(j=qa.UTC.apply(0,arguments),j+=Ya(j)):j=(new qa(a,c,p(d,1),p(h,0),p(i,0),p(k,0))).getTime();return j};tb=c+"Minutes";ub=c+"Hours";vb=c+"Day";$a=c+"Date";ab=c+"Month";bb=c+"FullYear";Gb=d+"Milliseconds";Hb=d+"Seconds";Ib=d+"Minutes";Jb=d+"Hours";wb=d+"Date";
	xb=d+"Month";yb=d+"FullYear"}function ia(a){if(!(this instanceof ia))return new ia(a);this.init(a)}function O(){}function Va(a,b,c,d){this.axis=a;this.pos=b;this.type=c||"";this.isNew=!0;!c&&!d&&this.addLabel()}function Kb(a,b,c,d,e){var f=a.chart.inverted;this.axis=a;this.isNegative=c;this.options=b;this.x=d;this.total=null;this.points={};this.stack=e;this.rightCliff=this.leftCliff=0;this.alignOptions={align:b.align||(f?c?"left":"right":"center"),verticalAlign:b.verticalAlign||(f?"middle":c?"bottom":
	"top"),y:p(b.y,f?4:c?14:-6),x:p(b.x,f?c?-6:6:0)};this.textAlign=b.textAlign||(f?c?"right":"left":"center")}var z,y=E.document,W=Math,A=W.round,T=W.floor,ua=W.ceil,t=W.max,F=W.min,P=W.abs,U=W.cos,$=W.sin,ra=W.PI,ga=ra*2/360,za=E.navigator&&E.navigator.userAgent||"",Lb=E.opera,ya=/(msie|trident|edge)/i.test(za)&&!Lb,lb=y&&y.documentMode===8,mb=!ya&&/AppleWebKit/.test(za),Ma=/Firefox/.test(za),Mb=/(Mobile|Android|Windows Phone)/.test(za),Fa="http://www.w3.org/2000/svg",ca=y&&y.createElementNS&&!!y.createElementNS(Fa,
	"svg").createSVGRect,Qb=Ma&&parseInt(za.split("Firefox/")[1],10)<4,ha=y&&!ca&&!ya&&!!y.createElement("canvas").getContext,cb,db,Nb={},zb=0,jb,N,Qa,G,Aa=function(){},S=[],eb=0,La="div",Rb=/^[0-9]+$/,nb=["plotTop","marginRight","marginBottom","plotLeft"],qa,kb,qb,Za,tb,ub,vb,$a,ab,bb,Gb,Hb,Ib,Jb,wb,xb,yb,I={},B;B=E.Highcharts?X(16,!0):{win:E};B.seriesTypes=I;var Ga=[],ja,sa,o,Na,Ab,Ba,M,V,H,Wa,Oa;pb.prototype={dSetter:function(){var a=this.paths[0],b=this.paths[1],c=[],d=this.now,e=a.length,f;if(d===
	1)c=this.toD;else if(e===b.length&&d<1)for(;e--;)f=parseFloat(a[e]),c[e]=isNaN(f)?a[e]:d*parseFloat(b[e]-f)+f;else c=b;this.elem.attr("d",c)},update:function(){var a=this.elem,b=this.prop,c=this.now,d=this.options.step;if(this[b+"Setter"])this[b+"Setter"]();else a.attr?a.element&&a.attr(b,c):a.style[b]=c+this.unit;d&&d.call(a,c,this)},run:function(a,b,c){var d=this,e=function(a){return e.stopped?!1:d.step(a)},f;this.startTime=+new qa;this.start=a;this.end=b;this.unit=c;this.now=this.start;this.pos=
	0;e.elem=this.elem;if(e()&&Ga.push(e)===1)e.timerId=setInterval(function(){for(f=0;f<Ga.length;f++)Ga[f]()||Ga.splice(f--,1);Ga.length||clearInterval(e.timerId)},13)},step:function(a){var b=+new qa,c,d=this.options;c=this.elem;var e=d.complete,f=d.duration,g=d.curAnim,h;if(c.attr&&!c.element)c=!1;else if(a||b>=f+this.startTime){this.now=this.end;this.pos=1;this.update();a=g[this.prop]=!0;for(h in g)g[h]!==!0&&(a=!1);a&&e&&e.call(c);c=!1}else this.pos=d.easing((b-this.startTime)/f),this.now=this.start+
	(this.end-this.start)*this.pos,this.update(),c=!0;return c},initPath:function(a,b,c){var b=b||"",d=a.shift,e=b.indexOf("C")>-1,f=e?7:3,g,b=b.split(" "),c=[].concat(c),h=a.isArea,i=h?2:1,k=function(a){for(g=a.length;g--;)(a[g]==="M"||a[g]==="L")&&a.splice(g+1,0,a[g+1],a[g+2],a[g+1],a[g+2])};e&&(k(b),k(c));if(d<=c.length/f&&b.length===c.length)for(;d--;)c=c.slice(0,f).concat(c),h&&(c=c.concat(c.slice(c.length-f)));a.shift=0;if(b.length)for(a=c.length;b.length<a;)d=b.slice().splice(b.length/i-f,f*i),
	e&&(d[f-6]=d[f-2],d[f-5]=d[f-1]),[].splice.apply(b,[b.length/i,0].concat(d));return[b,c]}};var u=B.extend=function(a,b){var c;a||(a={});for(c in b)a[c]=b[c];return a},p=B.pick=function(){var a=arguments,b,c,d=a.length;for(b=0;b<d;b++)if(c=a[b],c!==z&&c!==null)return c},fb=B.wrap=function(a,b,c){var d=a[b];a[b]=function(){var a=Array.prototype.slice.call(arguments);a.unshift(d);return c.apply(this,a)}};Qa=function(a,b,c){if(!q(b)||isNaN(b))return N.lang.invalidDate||"";var a=p(a,"%Y-%m-%d %H:%M:%S"),
	d=new qa(b-Ya(b)),e,f=d[ub](),g=d[vb](),h=d[$a](),i=d[ab](),k=d[bb](),j=N.lang,l=j.weekdays,d=u({a:l[g].substr(0,3),A:l[g],d:Ja(h),e:h,w:g,b:j.shortMonths[i],B:j.months[i],m:Ja(i+1),y:k.toString().substr(2,2),Y:k,H:Ja(f),k:f,I:Ja(f%12||12),l:f%12||12,M:Ja(d[tb]()),p:f<12?"AM":"PM",P:f<12?"am":"pm",S:Ja(d.getSeconds()),L:Ja(A(b%1E3),3)},B.dateFormats);for(e in d)for(;a.indexOf("%"+e)!==-1;)a=a.replace("%"+e,typeof d[e]==="function"?d[e](b):d[e]);return c?a.substr(0,1).toUpperCase()+a.substr(1):a};
	G={millisecond:1,second:1E3,minute:6E4,hour:36E5,day:864E5,week:6048E5,month:24192E5,year:314496E5};B.numberFormat=function(a,b,c,d){var a=+a||0,e=N.lang,f=(a.toString().split(".")[1]||"").length,g,h,i=Math.abs(a);b===-1?b=Math.min(f,20):isNaN(b)&&(b=2);g=String(C(i.toFixed(b)));h=g.length>3?g.length%3:0;c=p(c,e.decimalPoint);d=p(d,e.thousandsSep);a=a<0?"-":"";a+=h?g.substr(0,h)+d:"";a+=g.substr(h).replace(/(\d{3})(?=\d)/g,"$1"+d);+b&&(d=Math.abs(i-g+Math.pow(10,-Math.max(b,f)-1)),a+=c+d.toFixed(b).slice(2));
	return a};Math.easeInOutSine=function(a){return-0.5*(Math.cos(Math.PI*a)-1)};ja=function(a,b){var c;if(b==="width")return Math.min(a.offsetWidth,a.scrollWidth)-ja(a,"padding-left")-ja(a,"padding-right");else if(b==="height")return Math.min(a.offsetHeight,a.scrollHeight)-ja(a,"padding-top")-ja(a,"padding-bottom");return(c=E.getComputedStyle(a,void 0))&&C(c.getPropertyValue(b))};sa=function(a,b){return b.indexOf?b.indexOf(a):[].indexOf.call(b,a)};Na=function(a,b){return[].filter.call(a,b)};Ba=function(a,
	b){for(var c=[],d=0,e=a.length;d<e;d++)c[d]=b.call(a[d],a[d],d,a);return c};Ab=function(a){var b=y.documentElement,a=a.getBoundingClientRect();return{top:a.top+(E.pageYOffset||b.scrollTop)-(b.clientTop||0),left:a.left+(E.pageXOffset||b.scrollLeft)-(b.clientLeft||0)}};Oa=function(a){for(var b=Ga.length;b--;)if(Ga[b].elem===a)Ga[b].stopped=!0};o=function(a,b){return Array.prototype.forEach.call(a,b)};M=function(a,b,c){function d(b){b.target=b.srcElement||E;c.call(a,b)}var e=a.hcEvents=a.hcEvents||{};
	if(a.addEventListener)a.addEventListener(b,c,!1);else if(a.attachEvent){if(!a.hcEventsIE)a.hcEventsIE={};a.hcEventsIE[c.toString()]=d;a.attachEvent("on"+b,d)}e[b]||(e[b]=[]);e[b].push(c)};V=function(a,b,c){function d(b,c){a.removeEventListener?a.removeEventListener(b,c,!1):a.attachEvent&&(c=a.hcEventsIE[c.toString()],a.detachEvent("on"+b,c))}function e(){var c,e,f;if(a.nodeName)for(f in b?(c={},c[b]=!0):c=g,c)if(g[f])for(e=g[f].length;e--;)d(f,g[f][e])}var f,g=a.hcEvents,h;if(g)b?(f=g[b]||[],c?(h=
	sa(c,f),h>-1&&(f.splice(h,1),g[b]=f),d(b,c)):(e(),g[b]=[])):(e(),a.hcEvents={})};H=function(a,b,c,d){var e;e=a.hcEvents;var f,g,h,i,c=c||{};if(y.createEvent&&(a.dispatchEvent||a.fireEvent))e=y.createEvent("Events"),e.initEvent(b,!0,!0),e.target=a,u(e,c),a.dispatchEvent?a.dispatchEvent(e):a.fireEvent(b,e);else if(e){e=e[b]||[];f=e.length;h=function(){c.defaultPrevented=!0};for(g=0;g<f;g++){i=e[g];if(c.stopped)return;c.preventDefault=h;c.target=a;if(!c.type)c.type=b;i.call(a,c)===!1&&c.preventDefault()}}d&&
	!c.defaultPrevented&&d(c)};Wa=function(a,b,c){var d,e="",f,g,h;Y(c)||(d=arguments,c={duration:d[2],easing:d[3],complete:d[4]});if(!ma(c.duration))c.duration=400;c.easing=Math[c.easing]||Math.easeInOutSine;c.curAnim=D(b);for(h in b)g=new pb(a,c,h),f=null,h==="d"?(g.paths=g.initPath(a,a.d,b.d),g.toD=b.d,d=0,f=1):a.attr?d=a.attr(h):(d=parseFloat(ja(a,h))||0,h!=="opacity"&&(e="px")),f||(f=b[h]),f.match&&f.match("px")&&(f=f.replace(/px/g,"")),g.run(d,f,e)};if(E.jQuery)E.jQuery.fn.highcharts=function(){var a=
	[].slice.call(arguments);if(this[0])return a[0]?(new (B[xa(a[0])?a.shift():"Chart"])(this[0],a[0],a[1]),this):S[K(this[0],"data-highcharts-chart")]};y&&!y.defaultView&&(ja=function(a,b){var c;c={width:"clientWidth",height:"clientHeight"}[b];if(a.style[b])return C(a.style[b]);b==="opacity"&&(b="filter");if(c)return a.style.zoom=1,a[c]-2*ja(a,"padding");c=a.currentStyle[b.replace(/\-(\w)/g,function(a,b){return b.toUpperCase()})];b==="filter"&&(c=c.replace(/alpha\(opacity=([0-9]+)\)/,function(a,b){return b/
	100}));return c===""?1:C(c)});Array.prototype.forEach||(o=function(a,b){for(var c=0,d=a.length;c<d;c++)if(b.call(a[c],a[c],c,a)===!1)return c});Array.prototype.indexOf||(sa=function(a,b){var c,d=0;if(b)for(c=b.length;d<c;d++)if(b[d]===a)return d;return-1});Array.prototype.filter||(Na=function(a,b){for(var c=[],d=0,e=a.length;d<e;d++)b(a[d],d)&&c.push(a[d]);return c});B.Fx=pb;B.inArray=sa;B.each=o;B.grep=Na;B.offset=Ab;B.map=Ba;B.addEvent=M;B.removeEvent=V;B.fireEvent=H;B.animate=Wa;B.stop=Oa;N={colors:"#7cb5ec,#434348,#90ed7d,#f7a35c,#8085e9,#f15c80,#e4d354,#2b908f,#f45b5b,#91e8e1".split(","),
	symbols:["circle","diamond","square","triangle","triangle-down"],lang:{loading:"Loading...",months:"January,February,March,April,May,June,July,August,September,October,November,December".split(","),shortMonths:"Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec".split(","),weekdays:"Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday".split(","),decimalPoint:".",numericSymbols:"k,M,G,T,P,E".split(","),resetZoom:"Reset zoom",resetZoomTitle:"Reset zoom level 1:1",thousandsSep:" "},global:{useUTC:!0,
	canvasToolsURL:"http://code.highcharts.com/modules/canvas-tools.js",VMLRadialGradientURL:"http://code.highcharts.com/4.2.3/gfx/vml-radial-gradient.png"},chart:{borderColor:"#4572A7",borderRadius:0,defaultSeriesType:"line",ignoreHiddenSeries:!0,spacing:[10,10,15,10],backgroundColor:"#FFFFFF",plotBorderColor:"#C0C0C0",resetZoomButton:{theme:{zIndex:20},position:{align:"right",x:-10,y:10}}},title:{text:"Chart title",align:"center",margin:15,style:{color:"#333333",fontSize:"18px"}},subtitle:{text:"",
	align:"center",style:{color:"#555555"}},plotOptions:{line:{allowPointSelect:!1,showCheckbox:!1,animation:{duration:1E3},events:{},lineWidth:2,marker:{lineWidth:0,radius:4,lineColor:"#FFFFFF",states:{hover:{enabled:!0,lineWidthPlus:1,radiusPlus:2},select:{fillColor:"#FFFFFF",lineColor:"#000000",lineWidth:2}}},point:{events:{}},dataLabels:{align:"center",formatter:function(){return this.y===null?"":B.numberFormat(this.y,-1)},style:{color:"contrast",fontSize:"11px",fontWeight:"bold",textShadow:"0 0 6px contrast, 0 0 3px contrast"},
	verticalAlign:"bottom",x:0,y:0,padding:5},cropThreshold:300,pointRange:0,softThreshold:!0,states:{hover:{lineWidthPlus:1,marker:{},halo:{size:10,opacity:0.25}},select:{marker:{}}},stickyTracking:!0,turboThreshold:1E3}},labels:{style:{position:"absolute",color:"#3E576F"}},legend:{enabled:!0,align:"center",layout:"horizontal",labelFormatter:function(){return this.name},borderColor:"#909090",borderRadius:0,navigation:{activeColor:"#274b6d",inactiveColor:"#CCC"},shadow:!1,itemStyle:{color:"#333333",fontSize:"12px",
	fontWeight:"bold"},itemHoverStyle:{color:"#000"},itemHiddenStyle:{color:"#CCC"},itemCheckboxStyle:{position:"absolute",width:"13px",height:"13px"},symbolPadding:5,verticalAlign:"bottom",x:0,y:0,title:{style:{fontWeight:"bold"}}},loading:{labelStyle:{fontWeight:"bold",position:"relative",top:"45%"},style:{position:"absolute",backgroundColor:"white",opacity:0.5,textAlign:"center"}},tooltip:{enabled:!0,animation:ca,backgroundColor:"rgba(249, 249, 249, .85)",borderWidth:1,borderRadius:3,dateTimeLabelFormats:{millisecond:"%A, %b %e, %H:%M:%S.%L",
	second:"%A, %b %e, %H:%M:%S",minute:"%A, %b %e, %H:%M",hour:"%A, %b %e, %H:%M",day:"%A, %b %e, %Y",week:"Week from %A, %b %e, %Y",month:"%B %Y",year:"%Y"},footerFormat:"",headerFormat:'<span style="font-size: 10px">{point.key}</span><br/>',pointFormat:'<span style="color:{point.color}">\u25cf</span> {series.name}: <b>{point.y}</b><br/>',shadow:!0,snap:Mb?25:10,style:{color:"#333333",cursor:"default",fontSize:"12px",padding:"8px",pointerEvents:"none",whiteSpace:"nowrap"}},credits:{enabled:!0,text:"Highcharts.com",
	href:"http://www.highcharts.com",position:{align:"right",x:-10,verticalAlign:"bottom",y:-5},style:{cursor:"pointer",color:"#909090",fontSize:"9px"}}};var aa=N.plotOptions,da=aa.line;Fb();ia.prototype={parsers:[{regex:/rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]?(?:\.[0-9]+)?)\s*\)/,parse:function(a){return[C(a[1]),C(a[2]),C(a[3]),parseFloat(a[4],10)]}},{regex:/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/,parse:function(a){return[C(a[1],16),C(a[2],16),C(a[3],16),
	1]}},{regex:/rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/,parse:function(a){return[C(a[1]),C(a[2]),C(a[3]),1]}}],init:function(a){var b,c,d,e;if((this.input=a)&&a.stops)this.stops=Ba(a.stops,function(a){return new ia(a[1])});else for(d=this.parsers.length;d--&&!c;)e=this.parsers[d],(b=e.regex.exec(a))&&(c=e.parse(b));this.rgba=c||[]},get:function(a){var b=this.input,c=this.rgba,d;this.stops?(d=D(b),d.stops=[].concat(d.stops),o(this.stops,function(b,c){d.stops[c]=[d.stops[c][0],
	b.get(a)]})):d=c&&!isNaN(c[0])?a==="rgb"||!a&&c[3]===1?"rgb("+c[0]+","+c[1]+","+c[2]+")":a==="a"?c[3]:"rgba("+c.join(",")+")":b;return d},brighten:function(a){var b,c=this.rgba;if(this.stops)o(this.stops,function(b){b.brighten(a)});else if(ma(a)&&a!==0)for(b=0;b<3;b++)c[b]+=C(a*255),c[b]<0&&(c[b]=0),c[b]>255&&(c[b]=255);return this},setOpacity:function(a){this.rgba[3]=a;return this}};O.prototype={opacity:1,textProps:"direction,fontSize,fontWeight,fontFamily,fontStyle,color,lineHeight,width,textDecoration,textOverflow,textShadow".split(","),
	init:function(a,b){this.element=b==="span"?Z(b):y.createElementNS(Fa,b);this.renderer=a},animate:function(a,b,c){b=p(b,this.renderer.globalAnimation,!0);Oa(this);if(b){b=D(b,{});if(c)b.complete=c;Wa(this,a,b)}else this.attr(a,null,c);return this},colorGradient:function(a,b,c){var d=this.renderer,e,f,g,h,i,k,j,l,m,n,r,s=[],p;a.linearGradient?f="linearGradient":a.radialGradient&&(f="radialGradient");if(f){g=a[f];i=d.gradients;j=a.stops;n=c.radialReference;Ia(g)&&(a[f]=g={x1:g[0],y1:g[1],x2:g[2],y2:g[3],
	gradientUnits:"userSpaceOnUse"});f==="radialGradient"&&n&&!q(g.gradientUnits)&&(h=g,g=D(g,d.getRadialAttr(n,h),{gradientUnits:"userSpaceOnUse"}));for(r in g)r!=="id"&&s.push(r,g[r]);for(r in j)s.push(j[r]);s=s.join(",");i[s]?n=i[s].attr("id"):(g.id=n="highcharts-"+zb++,i[s]=k=d.createElement(f).attr(g).add(d.defs),k.radAttr=h,k.stops=[],o(j,function(a){a[1].indexOf("rgba")===0?(e=ia(a[1]),l=e.get("rgb"),m=e.get("a")):(l=a[1],m=1);a=d.createElement("stop").attr({offset:a[0],"stop-color":l,"stop-opacity":m}).add(k);
	k.stops.push(a)}));p="url("+d.url+"#"+n+")";c.setAttribute(b,p);c.gradient=s;a.toString=function(){return p}}},applyTextShadow:function(a){var b=this.element,c,d=a.indexOf("contrast")!==-1,e={},f=this.renderer.forExport,g=f||b.style.textShadow!==z&&!ya;if(d)e.textShadow=a=a.replace(/contrast/g,this.renderer.getContrast(b.style.fill));if(mb||f)e.textRendering="geometricPrecision";g?this.css(e):(this.fakeTS=!0,this.ySetter=this.xSetter,c=[].slice.call(b.getElementsByTagName("tspan")),o(a.split(/\s?,\s?/g),
	function(a){var d=b.firstChild,e,f,a=a.split(" ");e=a[a.length-1];(f=a[a.length-2])&&o(c,function(a,c){var g;c===0&&(a.setAttribute("x",b.getAttribute("x")),c=b.getAttribute("y"),a.setAttribute("y",c||0),c===null&&b.setAttribute("y",0));g=a.cloneNode(1);K(g,{"class":"highcharts-text-shadow",fill:e,stroke:e,"stroke-opacity":1/t(C(f),3),"stroke-width":f,"stroke-linejoin":"round"});b.insertBefore(g,d)})}))},attr:function(a,b,c){var d,e=this.element,f,g=this,h;typeof a==="string"&&b!==z&&(d=a,a={},a[d]=
	b);if(typeof a==="string")g=(this[a+"Getter"]||this._defaultGetter).call(this,a,e);else{for(d in a){b=a[d];h=!1;this.symbolName&&/^(x|y|width|height|r|start|end|innerR|anchorX|anchorY)/.test(d)&&(f||(this.symbolAttr(a),f=!0),h=!0);if(this.rotation&&(d==="x"||d==="y"))this.doTransform=!0;h||(h=this[d+"Setter"]||this._defaultSetter,h.call(this,b,d,e),this.shadows&&/^(width|height|visibility|x|y|d|transform|cx|cy|r)$/.test(d)&&this.updateShadows(d,b,h))}if(this.doTransform)this.updateTransform(),this.doTransform=
	!1}c&&c();return g},updateShadows:function(a,b,c){for(var d=this.shadows,e=d.length;e--;)c.call(null,a==="height"?Math.max(b-(d[e].cutHeight||0),0):a==="d"?this.d:b,a,d[e])},addClass:function(a){var b=this.element,c=K(b,"class")||"";c.indexOf(a)===-1&&K(b,"class",c+" "+a);return this},symbolAttr:function(a){var b=this;o("x,y,r,start,end,width,height,innerR,anchorX,anchorY".split(","),function(c){b[c]=p(a[c],b[c])});b.attr({d:b.renderer.symbols[b.symbolName](b.x,b.y,b.width,b.height,b)})},clip:function(a){return this.attr("clip-path",
	a?"url("+this.renderer.url+"#"+a.id+")":"none")},crisp:function(a){var b,c={},d,e=this.strokeWidth||0;d=A(e)%2/2;a.x=T(a.x||this.x||0)+d;a.y=T(a.y||this.y||0)+d;a.width=T((a.width||this.width||0)-2*d);a.height=T((a.height||this.height||0)-2*d);a.strokeWidth=e;for(b in a)this[b]!==a[b]&&(this[b]=c[b]=a[b]);return c},css:function(a){var b=this.styles,c={},d=this.element,e,f,g="";e=!b;if(a&&a.color)a.fill=a.color;if(b)for(f in a)a[f]!==b[f]&&(c[f]=a[f],e=!0);if(e){e=this.textWidth=a&&a.width&&d.nodeName.toLowerCase()===
	"text"&&C(a.width)||this.textWidth;b&&(a=u(b,c));this.styles=a;e&&(ha||!ca&&this.renderer.forExport)&&delete a.width;if(ya&&!ca)L(this.element,a);else{b=function(a,b){return"-"+b.toLowerCase()};for(f in a)g+=f.replace(/([A-Z])/g,b)+":"+a[f]+";";K(d,"style",g)}e&&this.added&&this.renderer.buildText(this)}return this},on:function(a,b){var c=this,d=c.element;db&&a==="click"?(d.ontouchstart=function(a){c.touchEventFired=qa.now();a.preventDefault();b.call(d,a)},d.onclick=function(a){(za.indexOf("Android")===
	-1||qa.now()-(c.touchEventFired||0)>1100)&&b.call(d,a)}):d["on"+a]=b;return this},setRadialReference:function(a){var b=this.renderer.gradients[this.element.gradient];this.element.radialReference=a;b&&b.radAttr&&b.animate(this.renderer.getRadialAttr(a,b.radAttr));return this},translate:function(a,b){return this.attr({translateX:a,translateY:b})},invert:function(){this.inverted=!0;this.updateTransform();return this},updateTransform:function(){var a=this.translateX||0,b=this.translateY||0,c=this.scaleX,
	d=this.scaleY,e=this.inverted,f=this.rotation,g=this.element;e&&(a+=this.attr("width"),b+=this.attr("height"));a=["translate("+a+","+b+")"];e?a.push("rotate(90) scale(-1,1)"):f&&a.push("rotate("+f+" "+(g.getAttribute("x")||0)+" "+(g.getAttribute("y")||0)+")");(q(c)||q(d))&&a.push("scale("+p(c,1)+" "+p(d,1)+")");a.length&&g.setAttribute("transform",a.join(" "))},toFront:function(){var a=this.element;a.parentNode.appendChild(a);return this},align:function(a,b,c){var d,e,f,g,h={};e=this.renderer;f=e.alignedObjects;
	if(a){if(this.alignOptions=a,this.alignByTranslate=b,!c||xa(c))this.alignTo=d=c||"renderer",oa(f,this),f.push(this),c=null}else a=this.alignOptions,b=this.alignByTranslate,d=this.alignTo;c=p(c,e[d],e);d=a.align;e=a.verticalAlign;f=(c.x||0)+(a.x||0);g=(c.y||0)+(a.y||0);if(d==="right"||d==="center")f+=(c.width-(a.width||0))/{right:1,center:2}[d];h[b?"translateX":"x"]=A(f);if(e==="bottom"||e==="middle")g+=(c.height-(a.height||0))/({bottom:1,middle:2}[e]||1);h[b?"translateY":"y"]=A(g);this[this.placed?
	"animate":"attr"](h);this.placed=!0;this.alignAttr=h;return this},getBBox:function(a,b){var c,d=this.renderer,e,f,g,h=this.element,i=this.styles;e=this.textStr;var k,j=h.style,l,m=d.cache,n=d.cacheKeys,r;f=p(b,this.rotation);g=f*ga;e!==z&&(r=["",f||0,i&&i.fontSize,h.style.width].join(","),r=e===""||Rb.test(e)?"num:"+e.toString().length+r:e+r);r&&!a&&(c=m[r]);if(!c){if(h.namespaceURI===Fa||d.forExport){try{l=this.fakeTS&&function(a){o(h.querySelectorAll(".highcharts-text-shadow"),function(b){b.style.display=
	a})},Ma&&j.textShadow?(k=j.textShadow,j.textShadow=""):l&&l("none"),c=h.getBBox?u({},h.getBBox()):{width:h.offsetWidth,height:h.offsetHeight},k?j.textShadow=k:l&&l("")}catch(s){}if(!c||c.width<0)c={width:0,height:0}}else c=this.htmlGetBBox();if(d.isSVG){d=c.width;e=c.height;if(ya&&i&&i.fontSize==="11px"&&e.toPrecision(3)==="16.9")c.height=e=14;if(f)c.width=P(e*$(g))+P(d*U(g)),c.height=P(e*U(g))+P(d*$(g))}if(r){for(;n.length>250;)delete m[n.shift()];m[r]||n.push(r);m[r]=c}}return c},show:function(a){return this.attr({visibility:a?
	"inherit":"visible"})},hide:function(){return this.attr({visibility:"hidden"})},fadeOut:function(a){var b=this;b.animate({opacity:0},{duration:a||150,complete:function(){b.attr({y:-9999})}})},add:function(a){var b=this.renderer,c=this.element,d;if(a)this.parentGroup=a;this.parentInverted=a&&a.inverted;this.textStr!==void 0&&b.buildText(this);this.added=!0;if(!a||a.handleZ||this.zIndex)d=this.zIndexSetter();d||(a?a.element:b.box).appendChild(c);if(this.onAdd)this.onAdd();return this},safeRemoveChild:function(a){var b=
	a.parentNode;b&&b.removeChild(a)},destroy:function(){var a=this,b=a.element||{},c=a.shadows,d=a.renderer.isSVG&&b.nodeName==="SPAN"&&a.parentGroup,e,f;b.onclick=b.onmouseout=b.onmouseover=b.onmousemove=b.point=null;Oa(a);if(a.clipPath)a.clipPath=a.clipPath.destroy();if(a.stops){for(f=0;f<a.stops.length;f++)a.stops[f]=a.stops[f].destroy();a.stops=null}a.safeRemoveChild(b);for(c&&o(c,function(b){a.safeRemoveChild(b)});d&&d.div&&d.div.childNodes.length===0;)b=d.parentGroup,a.safeRemoveChild(d.div),delete d.div,
	d=b;a.alignTo&&oa(a.renderer.alignedObjects,a);for(e in a)delete a[e];return null},shadow:function(a,b,c){var d=[],e,f,g=this.element,h,i,k,j;if(a){i=p(a.width,3);k=(a.opacity||0.15)/i;j=this.parentInverted?"(-1,-1)":"("+p(a.offsetX,1)+", "+p(a.offsetY,1)+")";for(e=1;e<=i;e++){f=g.cloneNode(0);h=i*2+1-2*e;K(f,{isShadow:"true",stroke:a.color||"black","stroke-opacity":k*e,"stroke-width":h,transform:"translate"+j,fill:"none"});if(c)K(f,"height",t(K(f,"height")-h,0)),f.cutHeight=h;b?b.element.appendChild(f):
	g.parentNode.insertBefore(f,g);d.push(f)}this.shadows=d}return this},xGetter:function(a){this.element.nodeName==="circle"&&(a={x:"cx",y:"cy"}[a]||a);return this._defaultGetter(a)},_defaultGetter:function(a){a=p(this[a],this.element?this.element.getAttribute(a):null,0);/^[\-0-9\.]+$/.test(a)&&(a=parseFloat(a));return a},dSetter:function(a,b,c){a&&a.join&&(a=a.join(" "));/(NaN| {2}|^$)/.test(a)&&(a="M 0 0");c.setAttribute(b,a);this[b]=a},dashstyleSetter:function(a){var b;if(a=a&&a.toLowerCase()){a=
	a.replace("shortdashdotdot","3,1,1,1,1,1,").replace("shortdashdot","3,1,1,1").replace("shortdot","1,1,").replace("shortdash","3,1,").replace("longdash","8,3,").replace(/dot/g,"1,3,").replace("dash","4,3,").replace(/,$/,"").split(",");for(b=a.length;b--;)a[b]=C(a[b])*this["stroke-width"];a=a.join(",").replace("NaN","none");this.element.setAttribute("stroke-dasharray",a)}},alignSetter:function(a){this.element.setAttribute("text-anchor",{left:"start",center:"middle",right:"end"}[a])},opacitySetter:function(a,
	b,c){this[b]=a;c.setAttribute(b,a)},titleSetter:function(a){var b=this.element.getElementsByTagName("title")[0];b||(b=y.createElementNS(Fa,"title"),this.element.appendChild(b));b.appendChild(y.createTextNode(String(p(a),"").replace(/<[^>]*>/g,"")))},textSetter:function(a){if(a!==this.textStr)delete this.bBox,this.textStr=a,this.added&&this.renderer.buildText(this)},fillSetter:function(a,b,c){typeof a==="string"?c.setAttribute(b,a):a&&this.colorGradient(a,b,c)},visibilitySetter:function(a,b,c){a===
	"inherit"?c.removeAttribute(b):c.setAttribute(b,a)},zIndexSetter:function(a,b){var c=this.renderer,d=this.parentGroup,c=(d||c).element||c.box,e,f,g=this.element,h;e=this.added;var i;q(a)&&(g.setAttribute(b,a),a=+a,this[b]===a&&(e=!1),this[b]=a);if(e){if((a=this.zIndex)&&d)d.handleZ=!0;d=c.childNodes;for(i=0;i<d.length&&!h;i++)if(e=d[i],f=K(e,"zIndex"),e!==g&&(C(f)>a||!q(a)&&q(f)))c.insertBefore(g,e),h=!0;h||c.appendChild(g)}return h},_defaultSetter:function(a,b,c){c.setAttribute(b,a)}};O.prototype.yGetter=
	O.prototype.xGetter;O.prototype.translateXSetter=O.prototype.translateYSetter=O.prototype.rotationSetter=O.prototype.verticalAlignSetter=O.prototype.scaleXSetter=O.prototype.scaleYSetter=function(a,b){this[b]=a;this.doTransform=!0};O.prototype["stroke-widthSetter"]=O.prototype.strokeSetter=function(a,b,c){this[b]=a;if(this.stroke&&this["stroke-width"])this.strokeWidth=this["stroke-width"],O.prototype.fillSetter.call(this,this.stroke,"stroke",c),c.setAttribute("stroke-width",this["stroke-width"]),
	this.hasStroke=!0;else if(b==="stroke-width"&&a===0&&this.hasStroke)c.removeAttribute("stroke"),this.hasStroke=!1};var Ca=function(){this.init.apply(this,arguments)};Ca.prototype={Element:O,init:function(a,b,c,d,e,f){var g,d=this.createElement("svg").attr({version:"1.1"}).css(this.getStyle(d));g=d.element;a.appendChild(g);a.innerHTML.indexOf("xmlns")===-1&&K(g,"xmlns",Fa);this.isSVG=!0;this.box=g;this.boxWrapper=d;this.alignedObjects=[];this.url=(Ma||mb)&&y.getElementsByTagName("base").length?E.location.href.replace(/#.*?$/,
	"").replace(/([\('\)])/g,"\\$1").replace(/ /g,"%20"):"";this.createElement("desc").add().element.appendChild(y.createTextNode("Created with Highcharts 4.2.3"));this.defs=this.createElement("defs").add();this.allowHTML=f;this.forExport=e;this.gradients={};this.cache={};this.cacheKeys=[];this.imgCount=0;this.setSize(b,c,!1);var h;if(Ma&&a.getBoundingClientRect)this.subPixelFix=b=function(){L(a,{left:0,top:0});h=a.getBoundingClientRect();L(a,{left:ua(h.left)-h.left+"px",top:ua(h.top)-h.top+"px"})},b(),
	M(E,"resize",b)},getStyle:function(a){return this.style=u({fontFamily:'"Lucida Grande", "Lucida Sans Unicode", Arial, Helvetica, sans-serif',fontSize:"12px"},a)},isHidden:function(){return!this.boxWrapper.getBBox().width},destroy:function(){var a=this.defs;this.box=null;this.boxWrapper=this.boxWrapper.destroy();Sa(this.gradients||{});this.gradients=null;if(a)this.defs=a.destroy();this.subPixelFix&&V(E,"resize",this.subPixelFix);return this.alignedObjects=null},createElement:function(a){var b=new this.Element;
	b.init(this,a);return b},draw:function(){},getRadialAttr:function(a,b){return{cx:a[0]-a[2]/2+b.cx*a[2],cy:a[1]-a[2]/2+b.cy*a[2],r:b.r*a[2]}},buildText:function(a){for(var b=a.element,c=this,d=c.forExport,e=p(a.textStr,"").toString(),f=e.indexOf("<")!==-1,g=b.childNodes,h,i,k=K(b,"x"),j=a.styles,l=a.textWidth,m=j&&j.lineHeight,n=j&&j.textShadow,r=j&&j.textOverflow==="ellipsis",s=g.length,R=l&&!a.added&&this.box,v=function(a){return m?C(m):c.fontMetrics(/(px|em)$/.test(a&&a.style.fontSize)?a.style.fontSize:
	j&&j.fontSize||c.style.fontSize||12,a).h},x=function(a){return a.replace(/&lt;/g,"<").replace(/&gt;/g,">")};s--;)b.removeChild(g[s]);!f&&!n&&!r&&e.indexOf(" ")===-1?b.appendChild(y.createTextNode(x(e))):(h=/<.*style="([^"]+)".*>/,i=/<.*href="(http[^"]+)".*>/,R&&R.appendChild(b),e=f?e.replace(/<(b|strong)>/g,'<span style="font-weight:bold">').replace(/<(i|em)>/g,'<span style="font-style:italic">').replace(/<a/g,"<span").replace(/<\/(b|strong|i|em|a)>/g,"</span>").split(/<br.*?>/g):[e],e[e.length-1]===
	""&&e.pop(),o(e,function(e,f){var g,m=0,e=e.replace(/<span/g,"|||<span").replace(/<\/span>/g,"</span>|||");g=e.split("|||");o(g,function(e){if(e!==""||g.length===1){var n={},s=y.createElementNS(Fa,"tspan"),p;h.test(e)&&(p=e.match(h)[1].replace(/(;| |^)color([ :])/,"$1fill$2"),K(s,"style",p));i.test(e)&&!d&&(K(s,"onclick",'location.href="'+e.match(i)[1]+'"'),L(s,{cursor:"pointer"}));e=x(e.replace(/<(.|\n)*?>/g,"")||" ");if(e!==" "){s.appendChild(y.createTextNode(e));if(m)n.dx=0;else if(f&&k!==null)n.x=
	k;K(s,n);b.appendChild(s);!m&&f&&(!ca&&d&&L(s,{display:"block"}),K(s,"dy",v(s)));if(l){for(var n=e.replace(/([^\^])-/g,"$1- ").split(" "),R=g.length>1||f||n.length>1&&j.whiteSpace!=="nowrap",o,w,q,t=[],u=v(s),A=1,z=a.rotation,B=e,D=B.length;(R||r)&&(n.length||t.length);)a.rotation=0,o=a.getBBox(!0),q=o.width,!ca&&c.forExport&&(q=c.measureSpanWidth(s.firstChild.data,a.styles)),o=q>l,w===void 0&&(w=o),r&&w?(D/=2,B===""||!o&&D<0.5?n=[]:(o&&(w=!0),B=e.substring(0,B.length+(o?-1:1)*ua(D)),n=[B+(l>3?"\u2026":
	"")],s.removeChild(s.firstChild))):!o||n.length===1?(n=t,t=[],n.length&&(A++,s=y.createElementNS(Fa,"tspan"),K(s,{dy:u,x:k}),p&&K(s,"style",p),b.appendChild(s)),q>l&&(l=q)):(s.removeChild(s.firstChild),t.unshift(n.pop())),n.length&&s.appendChild(y.createTextNode(n.join(" ").replace(/- /g,"-")));w&&a.attr("title",a.textStr);a.rotation=z}m++}}})}),R&&R.removeChild(b),n&&a.applyTextShadow&&a.applyTextShadow(n))},getContrast:function(a){a=ia(a).rgba;return a[0]+a[1]+a[2]>384?"#000000":"#FFFFFF"},button:function(a,
	b,c,d,e,f,g,h,i){var k=this.label(a,b,c,i,null,null,null,null,"button"),j=0,l,m,n,r,s,p,a={x1:0,y1:0,x2:0,y2:1},e=D({"stroke-width":1,stroke:"#CCCCCC",fill:{linearGradient:a,stops:[[0,"#FEFEFE"],[1,"#F6F6F6"]]},r:2,padding:5,style:{color:"black"}},e);n=e.style;delete e.style;f=D(e,{stroke:"#68A",fill:{linearGradient:a,stops:[[0,"#FFF"],[1,"#ACF"]]}},f);r=f.style;delete f.style;g=D(e,{stroke:"#68A",fill:{linearGradient:a,stops:[[0,"#9BD"],[1,"#CDF"]]}},g);s=g.style;delete g.style;h=D(e,{style:{color:"#CCC"}},
	h);p=h.style;delete h.style;M(k.element,ya?"mouseover":"mouseenter",function(){j!==3&&k.attr(f).css(r)});M(k.element,ya?"mouseout":"mouseleave",function(){j!==3&&(l=[e,f,g][j],m=[n,r,s][j],k.attr(l).css(m))});k.setState=function(a){(k.state=j=a)?a===2?k.attr(g).css(s):a===3&&k.attr(h).css(p):k.attr(e).css(n)};return k.on("click",function(a){j!==3&&d.call(k,a)}).attr(e).css(u({cursor:"default"},n))},crispLine:function(a,b){a[1]===a[4]&&(a[1]=a[4]=A(a[1])-b%2/2);a[2]===a[5]&&(a[2]=a[5]=A(a[2])+b%2/
	2);return a},path:function(a){var b={fill:"none"};Ia(a)?b.d=a:Y(a)&&u(b,a);return this.createElement("path").attr(b)},circle:function(a,b,c){a=Y(a)?a:{x:a,y:b,r:c};b=this.createElement("circle");b.xSetter=b.ySetter=function(a,b,c){c.setAttribute("c"+b,a)};return b.attr(a)},arc:function(a,b,c,d,e,f){if(Y(a))b=a.y,c=a.r,d=a.innerR,e=a.start,f=a.end,a=a.x;a=this.symbol("arc",a||0,b||0,c||0,c||0,{innerR:d||0,start:e||0,end:f||0});a.r=c;return a},rect:function(a,b,c,d,e,f){var e=Y(a)?a.r:e,g=this.createElement("rect"),
	a=Y(a)?a:a===z?{}:{x:a,y:b,width:t(c,0),height:t(d,0)};if(f!==z)g.strokeWidth=f,a=g.crisp(a);if(e)a.r=e;g.rSetter=function(a,b,c){K(c,{rx:a,ry:a})};return g.attr(a)},setSize:function(a,b,c){var d=this.alignedObjects,e=d.length;this.width=a;this.height=b;for(this.boxWrapper[p(c,!0)?"animate":"attr"]({width:a,height:b});e--;)d[e].align()},g:function(a){var b=this.createElement("g");return q(a)?b.attr({"class":"highcharts-"+a}):b},image:function(a,b,c,d,e){var f={preserveAspectRatio:"none"};arguments.length>
	1&&u(f,{x:b,y:c,width:d,height:e});f=this.createElement("image").attr(f);f.element.setAttributeNS?f.element.setAttributeNS("http://www.w3.org/1999/xlink","href",a):f.element.setAttribute("hc-svg-href",a);return f},symbol:function(a,b,c,d,e,f){var g=this,h,i=this.symbols[a],i=i&&i(A(b),A(c),d,e,f),k=/^url\((.*?)\)$/,j,l;if(i)h=this.path(i),u(h,{symbolName:a,x:b,y:c,width:d,height:e}),f&&u(h,f);else if(k.test(a))l=function(a,b){a.element&&(a.attr({width:b[0],height:b[1]}),a.alignByTranslate||a.translate(A((d-
	b[0])/2),A((e-b[1])/2)))},j=a.match(k)[1],a=Nb[j]||f&&f.width&&f.height&&[f.width,f.height],h=this.image(j).attr({x:b,y:c}),h.isImg=!0,a?l(h,a):(h.attr({width:0,height:0}),Z("img",{onload:function(){this.width===0&&(L(this,{position:"absolute",top:"-999em"}),y.body.appendChild(this));l(h,Nb[j]=[this.width,this.height]);this.parentNode&&this.parentNode.removeChild(this);g.imgCount--;if(!g.imgCount)S[g.chartIndex].onload()},src:j})),this.imgCount++;return h},symbols:{circle:function(a,b,c,d){var e=
	0.166*c;return["M",a+c/2,b,"C",a+c+e,b,a+c+e,b+d,a+c/2,b+d,"C",a-e,b+d,a-e,b,a+c/2,b,"Z"]},square:function(a,b,c,d){return["M",a,b,"L",a+c,b,a+c,b+d,a,b+d,"Z"]},triangle:function(a,b,c,d){return["M",a+c/2,b,"L",a+c,b+d,a,b+d,"Z"]},"triangle-down":function(a,b,c,d){return["M",a,b,"L",a+c,b,a+c/2,b+d,"Z"]},diamond:function(a,b,c,d){return["M",a+c/2,b,"L",a+c,b+d/2,a+c/2,b+d,a,b+d/2,"Z"]},arc:function(a,b,c,d,e){var f=e.start,c=e.r||c||d,g=e.end-0.001,d=e.innerR,h=e.open,i=U(f),k=$(f),j=U(g),g=$(g),
	e=e.end-f<ra?0:1;return["M",a+c*i,b+c*k,"A",c,c,0,e,1,a+c*j,b+c*g,h?"M":"L",a+d*j,b+d*g,"A",d,d,0,e,0,a+d*i,b+d*k,h?"":"Z"]},callout:function(a,b,c,d,e){var f=F(e&&e.r||0,c,d),g=f+6,h=e&&e.anchorX,e=e&&e.anchorY,i;i=["M",a+f,b,"L",a+c-f,b,"C",a+c,b,a+c,b,a+c,b+f,"L",a+c,b+d-f,"C",a+c,b+d,a+c,b+d,a+c-f,b+d,"L",a+f,b+d,"C",a,b+d,a,b+d,a,b+d-f,"L",a,b+f,"C",a,b,a,b,a+f,b];h&&h>c&&e>b+g&&e<b+d-g?i.splice(13,3,"L",a+c,e-6,a+c+6,e,a+c,e+6,a+c,b+d-f):h&&h<0&&e>b+g&&e<b+d-g?i.splice(33,3,"L",a,e+6,a-6,e,
	a,e-6,a,b+f):e&&e>d&&h>a+g&&h<a+c-g?i.splice(23,3,"L",h+6,b+d,h,b+d+6,h-6,b+d,a+f,b+d):e&&e<0&&h>a+g&&h<a+c-g&&i.splice(3,3,"L",h-6,b,h,b-6,h+6,b,c-f,b);return i}},clipRect:function(a,b,c,d){var e="highcharts-"+zb++,f=this.createElement("clipPath").attr({id:e}).add(this.defs),a=this.rect(a,b,c,d,0).add(f);a.id=e;a.clipPath=f;a.count=0;return a},text:function(a,b,c,d){var e=ha||!ca&&this.forExport,f={};if(d&&(this.allowHTML||!this.forExport))return this.html(a,b,c);f.x=Math.round(b||0);if(c)f.y=Math.round(c);
	if(a||a===0)f.text=a;a=this.createElement("text").attr(f);e&&a.css({position:"absolute"});if(!d)a.xSetter=function(a,b,c){var d=c.getElementsByTagName("tspan"),e,f=c.getAttribute(b),m;for(m=0;m<d.length;m++)e=d[m],e.getAttribute(b)===f&&e.setAttribute(b,a);c.setAttribute(b,a)};return a},fontMetrics:function(a,b){var c,d,a=a||this.style.fontSize;!a&&b&&E.getComputedStyle&&(b=b.element||b,a=(c=E.getComputedStyle(b,""))&&c.fontSize);a=/px/.test(a)?C(a):/em/.test(a)?parseFloat(a)*12:12;c=a<24?a+3:A(a*
	1.2);d=A(c*0.8);return{h:c,b:d,f:a}},rotCorr:function(a,b,c){var d=a;b&&c&&(d=t(d*U(b*ga),4));return{x:-a/3*$(b*ga),y:d}},label:function(a,b,c,d,e,f,g,h,i){var k=this,j=k.g(i),l=k.text("",0,0,g).attr({zIndex:1}),m,n,r=0,s=3,p=0,v,x,w,t,ba=0,gb={},B,y,Bb,F,E;Bb=function(){var a,b;a=l.element.style;n=(v===void 0||x===void 0||j.styles.textAlign)&&q(l.textStr)&&l.getBBox();j.width=(v||n.width||0)+2*s+p;j.height=(x||n.height||0)+2*s;B=s+k.fontMetrics(a&&a.fontSize,l).b;if(y){if(!m)a=ba,b=(h?-B:0)+ba,j.box=
	m=d?k.symbol(d,a,b,j.width,j.height,gb):k.rect(a,b,j.width,j.height,0,gb["stroke-width"]),m.isImg||m.attr("fill","none"),m.add(j);m.isImg||m.attr(u({width:A(j.width),height:A(j.height)},gb));gb=null}};F=function(){var a=j.styles,a=a&&a.textAlign,b=p+s,c;c=h?0:B;if(q(v)&&n&&(a==="center"||a==="right"))b+={center:0.5,right:1}[a]*(v-n.width);if(b!==l.x||c!==l.y)l.attr("x",b),c!==z&&l.attr("y",c);l.x=b;l.y=c};E=function(a,b){m?m.attr(a,b):gb[a]=b};j.onAdd=function(){l.add(j);j.attr({text:a||a===0?a:"",
	x:b,y:c});m&&q(e)&&j.attr({anchorX:e,anchorY:f})};j.widthSetter=function(a){v=a};j.heightSetter=function(a){x=a};j.paddingSetter=function(a){if(q(a)&&a!==s)s=j.padding=a,F()};j.paddingLeftSetter=function(a){q(a)&&a!==p&&(p=a,F())};j.alignSetter=function(a){a={left:0,center:0.5,right:1}[a];a!==r&&(r=a,n&&j.attr({x:b}))};j.textSetter=function(a){a!==z&&l.textSetter(a);Bb();F()};j["stroke-widthSetter"]=function(a,b){a&&(y=!0);ba=a%2/2;E(b,a)};j.strokeSetter=j.fillSetter=j.rSetter=function(a,b){b==="fill"&&
	a&&(y=!0);E(b,a)};j.anchorXSetter=function(a,b){e=a;E(b,A(a)-ba-w)};j.anchorYSetter=function(a,b){f=a;E(b,a-t)};j.xSetter=function(a){j.x=a;r&&(a-=r*((v||n.width)+2*s));w=A(a);j.attr("translateX",w)};j.ySetter=function(a){t=j.y=A(a);j.attr("translateY",t)};var C=j.css;return u(j,{css:function(a){if(a){var b={},a=D(a);o(j.textProps,function(c){a[c]!==z&&(b[c]=a[c],delete a[c])});l.css(b)}return C.call(j,a)},getBBox:function(){return{width:n.width+2*s,height:n.height+2*s,x:n.x-s,y:n.y-s}},shadow:function(a){m&&
	m.shadow(a);return j},destroy:function(){V(j.element,"mouseenter");V(j.element,"mouseleave");l&&(l=l.destroy());m&&(m=m.destroy());O.prototype.destroy.call(j);j=k=Bb=F=E=null}})}};cb=Ca;u(O.prototype,{htmlCss:function(a){var b=this.element;if(b=a&&b.tagName==="SPAN"&&a.width)delete a.width,this.textWidth=b,this.updateTransform();if(a&&a.textOverflow==="ellipsis")a.whiteSpace="nowrap",a.overflow="hidden";this.styles=u(this.styles,a);L(this.element,a);return this},htmlGetBBox:function(){var a=this.element;
	if(a.nodeName==="text")a.style.position="absolute";return{x:a.offsetLeft,y:a.offsetTop,width:a.offsetWidth,height:a.offsetHeight}},htmlUpdateTransform:function(){if(this.added){var a=this.renderer,b=this.element,c=this.translateX||0,d=this.translateY||0,e=this.x||0,f=this.y||0,g=this.textAlign||"left",h={left:0,center:0.5,right:1}[g],i=this.shadows,k=this.styles;L(b,{marginLeft:c,marginTop:d});i&&o(i,function(a){L(a,{marginLeft:c+1,marginTop:d+1})});this.inverted&&o(b.childNodes,function(c){a.invertChild(c,
	b)});if(b.tagName==="SPAN"){var i=this.rotation,j=C(this.textWidth),l=k&&k.whiteSpace,m=[i,g,b.innerHTML,this.textWidth,this.textAlign].join(",");if(m!==this.cTT){k=a.fontMetrics(b.style.fontSize).b;q(i)&&this.setSpanRotation(i,h,k);if(b.offsetWidth>j&&/[ \-]/.test(b.textContent||b.innerText))L(b,{width:j+"px",display:"block",whiteSpace:l||"normal"}),this.hasTextWidth=!0;else if(this.hasTextWidth)L(b,{width:"",display:"",whiteSpace:l||"nowrap"}),this.hasTextWidth=!1;this.getSpanCorrection(this.hasTextWidth?
	j:b.offsetWidth,k,h,i,g)}L(b,{left:e+(this.xCorr||0)+"px",top:f+(this.yCorr||0)+"px"});if(mb)k=b.offsetHeight;this.cTT=m}}else this.alignOnAdd=!0},setSpanRotation:function(a,b,c){var d={},e=ya?"-ms-transform":mb?"-webkit-transform":Ma?"MozTransform":Lb?"-o-transform":"";d[e]=d.transform="rotate("+a+"deg)";d[e+(Ma?"Origin":"-origin")]=d.transformOrigin=b*100+"% "+c+"px";L(this.element,d)},getSpanCorrection:function(a,b,c){this.xCorr=-a*c;this.yCorr=-b}});u(Ca.prototype,{html:function(a,b,c){var d=
	this.createElement("span"),e=d.element,f=d.renderer,g=function(a,b){o(["opacity","visibility"],function(c){fb(a,c+"Setter",function(a,c,d,e){a.call(this,c,d,e);b[d]=c})})};d.textSetter=function(a){a!==e.innerHTML&&delete this.bBox;e.innerHTML=this.textStr=a;d.htmlUpdateTransform()};g(d,d.element.style);d.xSetter=d.ySetter=d.alignSetter=d.rotationSetter=function(a,b){b==="align"&&(b="textAlign");d[b]=a;d.htmlUpdateTransform()};d.attr({text:a,x:A(b),y:A(c)}).css({position:"absolute",fontFamily:this.style.fontFamily,
	fontSize:this.style.fontSize});e.style.whiteSpace="nowrap";d.css=d.htmlCss;if(f.isSVG)d.add=function(a){var b,c=f.box.parentNode,j=[];if(this.parentGroup=a){if(b=a.div,!b){for(;a;)j.push(a),a=a.parentGroup;o(j.reverse(),function(a){var d,e=K(a.element,"class");e&&(e={className:e});b=a.div=a.div||Z(La,e,{position:"absolute",left:(a.translateX||0)+"px",top:(a.translateY||0)+"px"},b||c);d=b.style;u(a,{translateXSetter:function(b,c){d.left=b+"px";a[c]=b;a.doTransform=!0},translateYSetter:function(b,c){d.top=
	b+"px";a[c]=b;a.doTransform=!0}});g(a,d)})}}else b=c;b.appendChild(e);d.added=!0;d.alignOnAdd&&d.htmlUpdateTransform();return d};return d}});var J;if(!ca&&!ha){J={init:function(a,b){var c=["<",b,' filled="f" stroked="f"'],d=["position: ","absolute",";"],e=b===La;(b==="shape"||e)&&d.push("left:0;top:0;width:1px;height:1px;");d.push("visibility: ",e?"hidden":"visible");c.push(' style="',d.join(""),'"/>');if(b)c=e||b==="span"||b==="img"?c.join(""):a.prepVML(c),this.element=Z(c);this.renderer=a},add:function(a){var b=
	this.renderer,c=this.element,d=b.box,e=a&&a.inverted,d=a?a.element||a:d;if(a)this.parentGroup=a;e&&b.invertChild(c,d);d.appendChild(c);this.added=!0;this.alignOnAdd&&!this.deferUpdateTransform&&this.updateTransform();if(this.onAdd)this.onAdd();return this},updateTransform:O.prototype.htmlUpdateTransform,setSpanRotation:function(){var a=this.rotation,b=U(a*ga),c=$(a*ga);L(this.element,{filter:a?["progid:DXImageTransform.Microsoft.Matrix(M11=",b,", M12=",-c,", M21=",c,", M22=",b,", sizingMethod='auto expand')"].join(""):
	"none"})},getSpanCorrection:function(a,b,c,d,e){var f=d?U(d*ga):1,g=d?$(d*ga):0,h=p(this.elemHeight,this.element.offsetHeight),i;this.xCorr=f<0&&-a;this.yCorr=g<0&&-h;i=f*g<0;this.xCorr+=g*b*(i?1-c:c);this.yCorr-=f*b*(d?i?c:1-c:1);e&&e!=="left"&&(this.xCorr-=a*c*(f<0?-1:1),d&&(this.yCorr-=h*c*(g<0?-1:1)),L(this.element,{textAlign:e}))},pathToVML:function(a){for(var b=a.length,c=[];b--;)if(ma(a[b]))c[b]=A(a[b]*10)-5;else if(a[b]==="Z")c[b]="x";else if(c[b]=a[b],a.isArc&&(a[b]==="wa"||a[b]==="at"))c[b+
	5]===c[b+7]&&(c[b+7]+=a[b+7]>a[b+5]?1:-1),c[b+6]===c[b+8]&&(c[b+8]+=a[b+8]>a[b+6]?1:-1);return c.join(" ")||"x"},clip:function(a){var b=this,c;a?(c=a.members,oa(c,b),c.push(b),b.destroyClip=function(){oa(c,b)},a=a.getCSS(b)):(b.destroyClip&&b.destroyClip(),a={clip:lb?"inherit":"rect(auto)"});return b.css(a)},css:O.prototype.htmlCss,safeRemoveChild:function(a){a.parentNode&&Ta(a)},destroy:function(){this.destroyClip&&this.destroyClip();return O.prototype.destroy.apply(this)},on:function(a,b){this.element["on"+
	a]=function(){var a=E.event;a.target=a.srcElement;b(a)};return this},cutOffPath:function(a,b){var c,a=a.split(/[ ,]/);c=a.length;if(c===9||c===11)a[c-4]=a[c-2]=C(a[c-2])-10*b;return a.join(" ")},shadow:function(a,b,c){var d=[],e,f=this.element,g=this.renderer,h,i=f.style,k,j=f.path,l,m,n,r;j&&typeof j.value!=="string"&&(j="x");m=j;if(a){n=p(a.width,3);r=(a.opacity||0.15)/n;for(e=1;e<=3;e++){l=n*2+1-2*e;c&&(m=this.cutOffPath(j.value,l+0.5));k=['<shape isShadow="true" strokeweight="',l,'" filled="false" path="',
	m,'" coordsize="10 10" style="',f.style.cssText,'" />'];h=Z(g.prepVML(k),null,{left:C(i.left)+p(a.offsetX,1),top:C(i.top)+p(a.offsetY,1)});if(c)h.cutOff=l+1;k=['<stroke color="',a.color||"black",'" opacity="',r*e,'"/>'];Z(g.prepVML(k),null,null,h);b?b.element.appendChild(h):f.parentNode.insertBefore(h,f);d.push(h)}this.shadows=d}return this},updateShadows:Aa,setAttr:function(a,b){lb?this.element[a]=b:this.element.setAttribute(a,b)},classSetter:function(a){this.element.className=a},dashstyleSetter:function(a,
	b,c){(c.getElementsByTagName("stroke")[0]||Z(this.renderer.prepVML(["<stroke/>"]),null,null,c))[b]=a||"solid";this[b]=a},dSetter:function(a,b,c){var d=this.shadows,a=a||[];this.d=a.join&&a.join(" ");c.path=a=this.pathToVML(a);if(d)for(c=d.length;c--;)d[c].path=d[c].cutOff?this.cutOffPath(a,d[c].cutOff):a;this.setAttr(b,a)},fillSetter:function(a,b,c){var d=c.nodeName;if(d==="SPAN")c.style.color=a;else if(d!=="IMG")c.filled=a!=="none",this.setAttr("fillcolor",this.renderer.color(a,c,b,this))},"fill-opacitySetter":function(a,
	b,c){Z(this.renderer.prepVML(["<",b.split("-")[0],' opacity="',a,'"/>']),null,null,c)},opacitySetter:Aa,rotationSetter:function(a,b,c){c=c.style;this[b]=c[b]=a;c.left=-A($(a*ga)+1)+"px";c.top=A(U(a*ga))+"px"},strokeSetter:function(a,b,c){this.setAttr("strokecolor",this.renderer.color(a,c,b,this))},"stroke-widthSetter":function(a,b,c){c.stroked=!!a;this[b]=a;ma(a)&&(a+="px");this.setAttr("strokeweight",a)},titleSetter:function(a,b){this.setAttr(b,a)},visibilitySetter:function(a,b,c){a==="inherit"&&
	(a="visible");this.shadows&&o(this.shadows,function(c){c.style[b]=a});c.nodeName==="DIV"&&(a=a==="hidden"?"-999em":0,lb||(c.style[b]=a?"visible":"hidden"),b="top");c.style[b]=a},xSetter:function(a,b,c){this[b]=a;b==="x"?b="left":b==="y"&&(b="top");this.updateClipping?(this[b]=a,this.updateClipping()):c.style[b]=a},zIndexSetter:function(a,b,c){c.style[b]=a}};J["stroke-opacitySetter"]=J["fill-opacitySetter"];B.VMLElement=J=pa(O,J);J.prototype.ySetter=J.prototype.widthSetter=J.prototype.heightSetter=
	J.prototype.xSetter;var Cb={Element:J,isIE8:za.indexOf("MSIE 8.0")>-1,init:function(a,b,c,d){var e;this.alignedObjects=[];d=this.createElement(La).css(u(this.getStyle(d),{position:"relative"}));e=d.element;a.appendChild(d.element);this.isVML=!0;this.box=e;this.boxWrapper=d;this.gradients={};this.cache={};this.cacheKeys=[];this.imgCount=0;this.setSize(b,c,!1);if(!y.namespaces.hcv){y.namespaces.add("hcv","urn:schemas-microsoft-com:vml");try{y.createStyleSheet().cssText="hcv\\:fill, hcv\\:path, hcv\\:shape, hcv\\:stroke{ behavior:url(#default#VML); display: inline-block; } "}catch(f){y.styleSheets[0].cssText+=
	"hcv\\:fill, hcv\\:path, hcv\\:shape, hcv\\:stroke{ behavior:url(#default#VML); display: inline-block; } "}}},isHidden:function(){return!this.box.offsetWidth},clipRect:function(a,b,c,d){var e=this.createElement(),f=Y(a);return u(e,{members:[],count:0,left:(f?a.x:a)+1,top:(f?a.y:b)+1,width:(f?a.width:c)-1,height:(f?a.height:d)-1,getCSS:function(a){var b=a.element,c=b.nodeName,a=a.inverted,d=this.top-(c==="shape"?b.offsetTop:0),e=this.left,b=e+this.width,f=d+this.height,d={clip:"rect("+A(a?e:d)+"px,"+
	A(a?f:b)+"px,"+A(a?b:f)+"px,"+A(a?d:e)+"px)"};!a&&lb&&c==="DIV"&&u(d,{width:b+"px",height:f+"px"});return d},updateClipping:function(){o(e.members,function(a){a.element&&a.css(e.getCSS(a))})}})},color:function(a,b,c,d){var e=this,f,g=/^rgba/,h,i,k="none";a&&a.linearGradient?i="gradient":a&&a.radialGradient&&(i="pattern");if(i){var j,l,m=a.linearGradient||a.radialGradient,n,r,s,p,v,x="",a=a.stops,w,q=[],ba=function(){h=['<fill colors="'+q.join(",")+'" opacity="',s,'" o:opacity2="',r,'" type="',i,'" ',
	x,'focus="100%" method="any" />'];Z(e.prepVML(h),null,null,b)};n=a[0];w=a[a.length-1];n[0]>0&&a.unshift([0,n[1]]);w[0]<1&&a.push([1,w[1]]);o(a,function(a,b){g.test(a[1])?(f=ia(a[1]),j=f.get("rgb"),l=f.get("a")):(j=a[1],l=1);q.push(a[0]*100+"% "+j);b?(s=l,p=j):(r=l,v=j)});if(c==="fill")if(i==="gradient")c=m.x1||m[0]||0,a=m.y1||m[1]||0,n=m.x2||m[2]||0,m=m.y2||m[3]||0,x='angle="'+(90-W.atan((m-a)/(n-c))*180/ra)+'"',ba();else{var k=m.r,t=k*2,u=k*2,A=m.cx,B=m.cy,z=b.radialReference,y,k=function(){z&&(y=
	d.getBBox(),A+=(z[0]-y.x)/y.width-0.5,B+=(z[1]-y.y)/y.height-0.5,t*=z[2]/y.width,u*=z[2]/y.height);x='src="'+N.global.VMLRadialGradientURL+'" size="'+t+","+u+'" origin="0.5,0.5" position="'+A+","+B+'" color2="'+v+'" ';ba()};d.added?k():d.onAdd=k;k=p}else k=j}else if(g.test(a)&&b.tagName!=="IMG")f=ia(a),d[c+"-opacitySetter"](f.get("a"),c,b),k=f.get("rgb");else{k=b.getElementsByTagName(c);if(k.length)k[0].opacity=1,k[0].type="solid";k=a}return k},prepVML:function(a){var b=this.isIE8,a=a.join("");b?
	(a=a.replace("/>",' xmlns="urn:schemas-microsoft-com:vml" />'),a=a.indexOf('style="')===-1?a.replace("/>",' style="display:inline-block;behavior:url(#default#VML);" />'):a.replace('style="','style="display:inline-block;behavior:url(#default#VML);')):a=a.replace("<","<hcv:");return a},text:Ca.prototype.html,path:function(a){var b={coordsize:"10 10"};Ia(a)?b.d=a:Y(a)&&u(b,a);return this.createElement("shape").attr(b)},circle:function(a,b,c){var d=this.symbol("circle");if(Y(a))c=a.r,b=a.y,a=a.x;d.isCircle=
	!0;d.r=c;return d.attr({x:a,y:b})},g:function(a){var b;a&&(b={className:"highcharts-"+a,"class":"highcharts-"+a});return this.createElement(La).attr(b)},image:function(a,b,c,d,e){var f=this.createElement("img").attr({src:a});arguments.length>1&&f.attr({x:b,y:c,width:d,height:e});return f},createElement:function(a){return a==="rect"?this.symbol(a):Ca.prototype.createElement.call(this,a)},invertChild:function(a,b){var c=this,d=b.style,e=a.tagName==="IMG"&&a.style;L(a,{flip:"x",left:C(d.width)-(e?C(e.top):
	1),top:C(d.height)-(e?C(e.left):1),rotation:-90});o(a.childNodes,function(b){c.invertChild(b,a)})},symbols:{arc:function(a,b,c,d,e){var f=e.start,g=e.end,h=e.r||c||d,c=e.innerR,d=U(f),i=$(f),k=U(g),j=$(g);if(g-f===0)return["x"];f=["wa",a-h,b-h,a+h,b+h,a+h*d,b+h*i,a+h*k,b+h*j];e.open&&!c&&f.push("e","M",a,b);f.push("at",a-c,b-c,a+c,b+c,a+c*k,b+c*j,a+c*d,b+c*i,"x","e");f.isArc=!0;return f},circle:function(a,b,c,d,e){e&&(c=d=2*e.r);e&&e.isCircle&&(a-=c/2,b-=d/2);return["wa",a,b,a+c,b+d,a+c,b+d/2,a+c,
	b+d/2,"e"]},rect:function(a,b,c,d,e){return Ca.prototype.symbols[!q(e)||!e.r?"square":"callout"].call(0,a,b,c,d,e)}}};B.VMLRenderer=J=function(){this.init.apply(this,arguments)};J.prototype=D(Ca.prototype,Cb);cb=J}Ca.prototype.measureSpanWidth=function(a,b){var c=y.createElement("span"),d;d=y.createTextNode(a);c.appendChild(d);L(c,b);this.box.appendChild(c);d=c.offsetWidth;Ta(c);return d};var Ob;if(ha)B.CanVGRenderer=J=function(){Fa="http://www.w3.org/1999/xhtml"},J.prototype.symbols={},Ob=function(){function a(){var a=
	b.length,d;for(d=0;d<a;d++)b[d]();b=[]}var b=[];return{push:function(c,d){if(b.length===0){var e=y.getElementsByTagName("head")[0],f=y.createElement("script");f.type="text/javascript";f.src=d;f.onload=a;e.appendChild(f)}b.push(c)}}}(),cb=J;Va.prototype={addLabel:function(){var a=this.axis,b=a.options,c=a.chart,d=a.categories,e=a.names,f=this.pos,g=b.labels,h=a.tickPositions,i=f===h[0],k=f===h[h.length-1],e=d?p(d[f],e[f],f):f,d=this.label,h=h.info,j;a.isDatetimeAxis&&h&&(j=b.dateTimeLabelFormats[h.higherRanks[f]||
	h.unitName]);this.isFirst=i;this.isLast=k;b=a.labelFormatter.call({axis:a,chart:c,isFirst:i,isLast:k,dateTimeLabelFormat:j,value:a.isLog?fa(na(e)):e});q(d)?d&&d.attr({text:b}):(this.labelLength=(this.label=d=q(b)&&g.enabled?c.renderer.text(b,0,0,g.useHTML).css(D(g.style)).add(a.labelGroup):null)&&d.getBBox().width,this.rotation=0)},getLabelSize:function(){return this.label?this.label.getBBox()[this.axis.horiz?"height":"width"]:0},handleOverflow:function(a){var b=this.axis,c=a.x,d=b.chart.chartWidth,
	e=b.chart.spacing,f=p(b.labelLeft,F(b.pos,e[3])),e=p(b.labelRight,t(b.pos+b.len,d-e[1])),g=this.label,h=this.rotation,i={left:0,center:0.5,right:1}[b.labelAlign],k=g.getBBox().width,j=b.slotWidth,l=1,m,n={};if(h)h<0&&c-i*k<f?m=A(c/U(h*ga)-f):h>0&&c+i*k>e&&(m=A((d-c)/U(h*ga)));else if(d=c+(1-i)*k,c-i*k<f?j=a.x+j*(1-i)-f:d>e&&(j=e-a.x+j*i,l=-1),j=F(b.slotWidth,j),j<b.slotWidth&&b.labelAlign==="center"&&(a.x+=l*(b.slotWidth-j-i*(b.slotWidth-F(k,j)))),k>j||b.autoRotation&&g.styles.width)m=j;if(m){n.width=
	m;if(!b.options.labels.style.textOverflow)n.textOverflow="ellipsis";g.css(n)}},getPosition:function(a,b,c,d){var e=this.axis,f=e.chart,g=d&&f.oldChartHeight||f.chartHeight;return{x:a?e.translate(b+c,null,null,d)+e.transB:e.left+e.offset+(e.opposite?(d&&f.oldChartWidth||f.chartWidth)-e.right-e.left:0),y:a?g-e.bottom+e.offset-(e.opposite?e.height:0):g-e.translate(b+c,null,null,d)-e.transB}},getLabelPosition:function(a,b,c,d,e,f,g,h){var i=this.axis,k=i.transA,j=i.reversed,l=i.staggerLines,m=i.tickRotCorr||
	{x:0,y:0},n=e.y;q(n)||(n=i.side===2?m.y+8:n=U(c.rotation*ga)*(m.y-c.getBBox(!1,0).height/2));a=a+e.x+m.x-(f&&d?f*k*(j?-1:1):0);b=b+n-(f&&!d?f*k*(j?1:-1):0);l&&(c=g/(h||1)%l,i.opposite&&(c=l-c-1),b+=c*(i.labelOffset/l));return{x:a,y:A(b)}},getMarkPath:function(a,b,c,d,e,f){return f.crispLine(["M",a,b,"L",a+(e?0:-c),b+(e?c:0)],d)},render:function(a,b,c){var d=this.axis,e=d.options,f=d.chart.renderer,g=d.horiz,h=this.type,i=this.label,k=this.pos,j=e.labels,l=this.gridLine,m=h?h+"Grid":"grid",n=h?h+"Tick":
	"tick",r=e[m+"LineWidth"],s=e[m+"LineColor"],o=e[m+"LineDashStyle"],v=e[n+"Length"],m=p(e[n+"Width"],!h&&d.isXAxis?1:0),x=e[n+"Color"],w=e[n+"Position"],n=this.mark,q=j.step,ba=!0,t=d.tickmarkOffset,u=this.getPosition(g,k,t,b),A=u.x,u=u.y,B=g&&A===d.pos+d.len||!g&&u===d.pos?-1:1,c=p(c,1);this.isActive=!0;if(r){k=d.getPlotLinePath(k+t,r*B,b,!0);if(l===z){l={stroke:s,"stroke-width":r};if(o)l.dashstyle=o;if(!h)l.zIndex=1;if(b)l.opacity=0;this.gridLine=l=r?f.path(k).attr(l).add(d.gridGroup):null}if(!b&&
	l&&k)l[this.isNew?"attr":"animate"]({d:k,opacity:c})}if(m&&v)w==="inside"&&(v=-v),d.opposite&&(v=-v),h=this.getMarkPath(A,u,v,m*B,g,f),n?n.animate({d:h,opacity:c}):this.mark=f.path(h).attr({stroke:x,"stroke-width":m,opacity:c}).add(d.axisGroup);if(i&&!isNaN(A))i.xy=u=this.getLabelPosition(A,u,i,g,j,t,a,q),this.isFirst&&!this.isLast&&!p(e.showFirstLabel,1)||this.isLast&&!this.isFirst&&!p(e.showLastLabel,1)?ba=!1:g&&!d.isRadial&&!j.step&&!j.rotation&&!b&&c!==0&&this.handleOverflow(u),q&&a%q&&(ba=!1),
	ba&&!isNaN(u.y)?(u.opacity=c,i[this.isNew?"attr":"animate"](u),this.isNew=!1):i.attr("y",-9999)},destroy:function(){Sa(this,this.axis)}};B.PlotLineOrBand=function(a,b){this.axis=a;if(b)this.options=b,this.id=b.id};B.PlotLineOrBand.prototype={render:function(){var a=this,b=a.axis,c=b.horiz,d=a.options,e=d.label,f=a.label,g=d.width,h=d.to,i=d.from,k=q(i)&&q(h),j=d.value,l=d.dashStyle,m=a.svgElem,n=[],r,s=d.color,o=p(d.zIndex,0),v=d.events,x={},w=b.chart.renderer;b.isLog&&(i=Da(i),h=Da(h),j=Da(j));if(g){if(n=
	b.getPlotLinePath(j,g),x={stroke:s,"stroke-width":g},l)x.dashstyle=l}else if(k){n=b.getPlotBandPath(i,h,d);if(s)x.fill=s;if(d.borderWidth)x.stroke=d.borderColor,x["stroke-width"]=d.borderWidth}else return;x.zIndex=o;if(m)if(n)m.show(),m.animate({d:n});else{if(m.hide(),f)a.label=f=f.destroy()}else if(n&&n.length&&(a.svgElem=m=w.path(n).attr(x).add(),v))for(r in d=function(b){m.on(b,function(c){v[b].apply(a,[c])})},v)d(r);e&&q(e.text)&&n&&n.length&&b.width>0&&b.height>0&&!n.flat?(e=D({align:c&&k&&"center",
	x:c?!k&&4:10,verticalAlign:!c&&k&&"middle",y:c?k?16:10:k?6:-4,rotation:c&&!k&&90},e),this.renderLabel(e,n,k,o)):f&&f.hide();return a},renderLabel:function(a,b,c,d){var e=this.label,f=this.axis.chart.renderer;if(!e)e={align:a.textAlign||a.align,rotation:a.rotation},e.zIndex=d,this.label=e=f.text(a.text,0,0,a.useHTML).attr(e).css(a.style).add();d=[b[1],b[4],c?b[6]:b[1]];b=[b[2],b[5],c?b[7]:b[2]];c=Ra(d);f=Ra(b);e.align(a,!1,{x:c,y:f,width:Ea(d)-c,height:Ea(b)-f});e.show()},destroy:function(){oa(this.axis.plotLinesAndBands,
	this);delete this.axis;Sa(this)}};var ka=B.Axis=function(){this.init.apply(this,arguments)};ka.prototype={defaultOptions:{dateTimeLabelFormats:{millisecond:"%H:%M:%S.%L",second:"%H:%M:%S",minute:"%H:%M",hour:"%H:%M",day:"%e. %b",week:"%e. %b",month:"%b '%y",year:"%Y"},endOnTick:!1,gridLineColor:"#D8D8D8",labels:{enabled:!0,style:{color:"#606060",cursor:"default",fontSize:"11px"},x:0,y:15},lineColor:"#C0D0E0",lineWidth:1,minPadding:0.01,maxPadding:0.01,minorGridLineColor:"#E0E0E0",minorGridLineWidth:1,
	minorTickColor:"#A0A0A0",minorTickLength:2,minorTickPosition:"outside",startOfWeek:1,startOnTick:!1,tickColor:"#C0D0E0",tickLength:10,tickmarkPlacement:"between",tickPixelInterval:100,tickPosition:"outside",title:{align:"middle",style:{color:"#707070"}},type:"linear"},defaultYAxisOptions:{endOnTick:!0,gridLineWidth:1,tickPixelInterval:72,showLastLabel:!0,labels:{x:-8,y:3},lineWidth:0,maxPadding:0.05,minPadding:0.05,startOnTick:!0,title:{rotation:270,text:"Values"},stackLabels:{enabled:!1,formatter:function(){return B.numberFormat(this.total,
	-1)},style:D(aa.line.dataLabels.style,{color:"#000000"})}},defaultLeftAxisOptions:{labels:{x:-15,y:null},title:{rotation:270}},defaultRightAxisOptions:{labels:{x:15,y:null},title:{rotation:90}},defaultBottomAxisOptions:{labels:{autoRotation:[-45],x:0,y:null},title:{rotation:0}},defaultTopAxisOptions:{labels:{autoRotation:[-45],x:0,y:-15},title:{rotation:0}},init:function(a,b){var c=b.isX;this.chart=a;this.horiz=a.inverted?!c:c;this.coll=(this.isXAxis=c)?"xAxis":"yAxis";this.opposite=b.opposite;this.side=
	b.side||(this.horiz?this.opposite?0:2:this.opposite?1:3);this.setOptions(b);var d=this.options,e=d.type;this.labelFormatter=d.labels.formatter||this.defaultLabelFormatter;this.userOptions=b;this.minPixelPadding=0;this.reversed=d.reversed;this.visible=d.visible!==!1;this.zoomEnabled=d.zoomEnabled!==!1;this.categories=d.categories||e==="category";this.names=this.names||[];this.isLog=e==="logarithmic";this.isDatetimeAxis=e==="datetime";this.isLinked=q(d.linkedTo);this.ticks={};this.labelEdge=[];this.minorTicks=
	{};this.plotLinesAndBands=[];this.alternateBands={};this.len=0;this.minRange=this.userMinRange=d.minRange||d.maxZoom;this.range=d.range;this.offset=d.offset||0;this.stacks={};this.oldStacks={};this.stacksTouched=0;this.min=this.max=null;this.crosshair=p(d.crosshair,ta(a.options.tooltip.crosshairs)[c?0:1],!1);var f,d=this.options.events;sa(this,a.axes)===-1&&(c&&!this.isColorAxis?a.axes.splice(a.xAxis.length,0,this):a.axes.push(this),a[this.coll].push(this));this.series=this.series||[];if(a.inverted&&
	c&&this.reversed===z)this.reversed=!0;this.removePlotLine=this.removePlotBand=this.removePlotBandOrLine;for(f in d)M(this,f,d[f]);if(this.isLog)this.val2lin=Da,this.lin2val=na},setOptions:function(a){this.options=D(this.defaultOptions,this.isXAxis?{}:this.defaultYAxisOptions,[this.defaultTopAxisOptions,this.defaultRightAxisOptions,this.defaultBottomAxisOptions,this.defaultLeftAxisOptions][this.side],D(N[this.coll],a))},defaultLabelFormatter:function(){var a=this.axis,b=this.value,c=a.categories,d=
	this.dateTimeLabelFormat,e=N.lang.numericSymbols,f=e&&e.length,g,h=a.options.labels.format,a=a.isLog?b:a.tickInterval;if(h)g=Ka(h,this);else if(c)g=b;else if(d)g=Qa(d,b);else if(f&&a>=1E3)for(;f--&&g===z;)c=Math.pow(1E3,f+1),a>=c&&b*10%c===0&&e[f]!==null&&(g=B.numberFormat(b/c,-1)+e[f]);g===z&&(g=P(b)>=1E4?B.numberFormat(b,-1):B.numberFormat(b,-1,z,""));return g},getSeriesExtremes:function(){var a=this,b=a.chart;a.hasVisibleSeries=!1;a.dataMin=a.dataMax=a.threshold=null;a.softThreshold=!a.isXAxis;
	a.buildStacks&&a.buildStacks();o(a.series,function(c){if(c.visible||!b.options.chart.ignoreHiddenSeries){var d=c.options,e=d.threshold,f;a.hasVisibleSeries=!0;a.isLog&&e<=0&&(e=null);if(a.isXAxis){if(d=c.xData,d.length)a.dataMin=F(p(a.dataMin,d[0]),Ra(d)),a.dataMax=t(p(a.dataMax,d[0]),Ea(d))}else{c.getExtremes();f=c.dataMax;c=c.dataMin;if(q(c)&&q(f))a.dataMin=F(p(a.dataMin,c),c),a.dataMax=t(p(a.dataMax,f),f);if(q(e))a.threshold=e;if(!d.softThreshold||a.isLog)a.softThreshold=!1}}})},translate:function(a,
	b,c,d,e,f){var g=this.linkedParent||this,h=1,i=0,k=d?g.oldTransA:g.transA,d=d?g.oldMin:g.min,j=g.minPixelPadding,e=(g.isOrdinal||g.isBroken||g.isLog&&e)&&g.lin2val;if(!k)k=g.transA;if(c)h*=-1,i=g.len;g.reversed&&(h*=-1,i-=h*(g.sector||g.len));b?(a=a*h+i,a-=j,a=a/k+d,e&&(a=g.lin2val(a))):(e&&(a=g.val2lin(a)),f==="between"&&(f=0.5),a=h*(a-d)*k+i+h*j+(ma(f)?k*f*g.pointRange:0));return a},toPixels:function(a,b){return this.translate(a,!1,!this.horiz,null,!0)+(b?0:this.pos)},toValue:function(a,b){return this.translate(a-
	(b?0:this.pos),!0,!this.horiz,null,!0)},getPlotLinePath:function(a,b,c,d,e){var f=this.chart,g=this.left,h=this.top,i,k,j=c&&f.oldChartHeight||f.chartHeight,l=c&&f.oldChartWidth||f.chartWidth,m;i=this.transB;var n=function(a,b,c){if(a<b||a>c)d?a=F(t(b,a),c):m=!0;return a},e=p(e,this.translate(a,null,null,c)),a=c=A(e+i);i=k=A(j-e-i);isNaN(e)?m=!0:this.horiz?(i=h,k=j-this.bottom,a=c=n(a,g,g+this.width)):(a=g,c=l-this.right,i=k=n(i,h,h+this.height));return m&&!d?null:f.renderer.crispLine(["M",a,i,"L",
	c,k],b||1)},getLinearTickPositions:function(a,b,c){var d,e=fa(T(b/a)*a),f=fa(ua(c/a)*a),g=[];if(b===c&&ma(b))return[b];for(b=e;b<=f;){g.push(b);b=fa(b+a);if(b===d)break;d=b}return g},getMinorTickPositions:function(){var a=this.options,b=this.tickPositions,c=this.minorTickInterval,d=[],e,f=this.pointRangePadding||0;e=this.min-f;var f=this.max+f,g=f-e;if(g&&g/c<this.len/3)if(this.isLog){f=b.length;for(e=1;e<f;e++)d=d.concat(this.getLogTickPositions(c,b[e-1],b[e],!0))}else if(this.isDatetimeAxis&&a.minorTickInterval===
	"auto")d=d.concat(this.getTimeTicks(this.normalizeTimeTickInterval(c),e,f,a.startOfWeek));else for(b=e+(b[0]-e)%c;b<=f;b+=c)d.push(b);d.length!==0&&this.trimTicks(d,a.startOnTick,a.endOnTick);return d},adjustForMinRange:function(){var a=this.options,b=this.min,c=this.max,d,e=this.dataMax-this.dataMin>=this.minRange,f,g,h,i,k,j;if(this.isXAxis&&this.minRange===z&&!this.isLog)q(a.min)||q(a.max)?this.minRange=null:(o(this.series,function(a){i=a.xData;for(g=k=a.xIncrement?1:i.length-1;g>0;g--)if(h=i[g]-
	i[g-1],f===z||h<f)f=h}),this.minRange=F(f*5,this.dataMax-this.dataMin));if(c-b<this.minRange){j=this.minRange;d=(j-c+b)/2;d=[b-d,p(a.min,b-d)];if(e)d[2]=this.dataMin;b=Ea(d);c=[b+j,p(a.max,b+j)];if(e)c[2]=this.dataMax;c=Ra(c);c-b<j&&(d[0]=c-j,d[1]=p(a.min,c-j),b=Ea(d))}this.min=b;this.max=c},setAxisTranslation:function(a){var b=this,c=b.max-b.min,d=b.axisPointRange||0,e,f=0,g=0,h=b.linkedParent,i=!!b.categories,k=b.transA,j=b.isXAxis;if(j||i||d)if(h?(f=h.minPointOffset,g=h.pointRangePadding):(o(b.series,
	function(a){var b=a.closestPointRange;!a.noSharedTooltip&&q(b)&&(e=q(e)?F(e,b):b)}),o(b.series,function(a){var c=i?1:j?p(a.options.pointRange,e,0):b.axisPointRange||0,a=a.options.pointPlacement;d=t(d,c);b.single||(f=t(f,xa(a)?0:c/2),g=t(g,a==="on"?0:c))})),h=b.ordinalSlope&&e?b.ordinalSlope/e:1,b.minPointOffset=f*=h,b.pointRangePadding=g*=h,b.pointRange=F(d,c),j)b.closestPointRange=e;if(a)b.oldTransA=k;b.translationSlope=b.transA=k=b.len/(c+g||1);b.transB=b.horiz?b.left:b.bottom;b.minPixelPadding=
	k*f},minFromRange:function(){return this.max-this.range},setTickInterval:function(a){var b=this,c=b.chart,d=b.options,e=b.isLog,f=b.isDatetimeAxis,g=b.isXAxis,h=b.isLinked,i=d.maxPadding,k=d.minPadding,j=d.tickInterval,l=d.tickPixelInterval,m=b.categories,n=b.threshold,r=b.softThreshold,s,R,v,x;!f&&!m&&!h&&this.getTickAmount();v=p(b.userMin,d.min);x=p(b.userMax,d.max);h?(b.linkedParent=c[b.coll][d.linkedTo],c=b.linkedParent.getExtremes(),b.min=p(c.min,c.dataMin),b.max=p(c.max,c.dataMax),d.type!==
	b.linkedParent.options.type&&X(11,1)):(!r&&q(n)&&(b.dataMin>=n?(s=n,k=0):b.dataMax<=n&&(R=n,i=0)),b.min=p(v,s,b.dataMin),b.max=p(x,R,b.dataMax));if(e)!a&&F(b.min,p(b.dataMin,b.min))<=0&&X(10,1),b.min=fa(Da(b.min),15),b.max=fa(Da(b.max),15);if(b.range&&q(b.max))b.userMin=b.min=v=t(b.min,b.minFromRange()),b.userMax=x=b.max,b.range=null;b.beforePadding&&b.beforePadding();b.adjustForMinRange();if(!m&&!b.axisPointRange&&!b.usePercentage&&!h&&q(b.min)&&q(b.max)&&(c=b.max-b.min))!q(v)&&k&&(b.min-=c*k),!q(x)&&
	i&&(b.max+=c*i);if(ma(d.floor))b.min=t(b.min,d.floor);if(ma(d.ceiling))b.max=F(b.max,d.ceiling);if(r&&q(b.dataMin))if(n=n||0,!q(v)&&b.min<n&&b.dataMin>=n)b.min=n;else if(!q(x)&&b.max>n&&b.dataMax<=n)b.max=n;b.tickInterval=b.min===b.max||b.min===void 0||b.max===void 0?1:h&&!j&&l===b.linkedParent.options.tickPixelInterval?j=b.linkedParent.tickInterval:p(j,this.tickAmount?(b.max-b.min)/t(this.tickAmount-1,1):void 0,m?1:(b.max-b.min)*l/t(b.len,l));g&&!a&&o(b.series,function(a){a.processData(b.min!==b.oldMin||
	b.max!==b.oldMax)});b.setAxisTranslation(!0);b.beforeSetTickPositions&&b.beforeSetTickPositions();if(b.postProcessTickInterval)b.tickInterval=b.postProcessTickInterval(b.tickInterval);if(b.pointRange&&!j)b.tickInterval=t(b.pointRange,b.tickInterval);a=p(d.minTickInterval,b.isDatetimeAxis&&b.closestPointRange);if(!j&&b.tickInterval<a)b.tickInterval=a;if(!f&&!e&&!j)b.tickInterval=sb(b.tickInterval,null,rb(b.tickInterval),p(d.allowDecimals,!(b.tickInterval>0.5&&b.tickInterval<5&&b.max>1E3&&b.max<9999)),
	!!this.tickAmount);if(!this.tickAmount&&this.len)b.tickInterval=b.unsquish();this.setTickPositions()},setTickPositions:function(){var a=this.options,b,c=a.tickPositions,d=a.tickPositioner,e=a.startOnTick,f=a.endOnTick,g;this.tickmarkOffset=this.categories&&a.tickmarkPlacement==="between"&&this.tickInterval===1?0.5:0;this.minorTickInterval=a.minorTickInterval==="auto"&&this.tickInterval?this.tickInterval/5:a.minorTickInterval;this.tickPositions=b=c&&c.slice();if(!b&&(b=this.isDatetimeAxis?this.getTimeTicks(this.normalizeTimeTickInterval(this.tickInterval,
	a.units),this.min,this.max,a.startOfWeek,this.ordinalPositions,this.closestPointRange,!0):this.isLog?this.getLogTickPositions(this.tickInterval,this.min,this.max):this.getLinearTickPositions(this.tickInterval,this.min,this.max),b.length>this.len&&(b=[b[0],b.pop()]),this.tickPositions=b,d&&(d=d.apply(this,[this.min,this.max]))))this.tickPositions=b=d;if(!this.isLinked)this.trimTicks(b,e,f),this.min===this.max&&q(this.min)&&!this.tickAmount&&(g=!0,this.min-=0.5,this.max+=0.5),this.single=g,!c&&!d&&
	this.adjustTickAmount()},trimTicks:function(a,b,c){var d=a[0],e=a[a.length-1],f=this.minPointOffset||0;if(b)this.min=d;else for(;this.min-f>a[0];)a.shift();if(c)this.max=e;else for(;this.max+f<a[a.length-1];)a.pop();a.length===0&&q(d)&&a.push((e+d)/2)},alignToOthers:function(){var a={},b,c=this.options;this.chart.options.chart.alignTicks!==!1&&c.alignTicks!==!1&&o(this.chart[this.coll],function(c){var e=c.options,e=[c.horiz?e.left:e.top,e.width,e.height,e.pane].join(",");c.series.length&&(a[e]?b=
	!0:a[e]=1)});return b},getTickAmount:function(){var a=this.options,b=a.tickAmount,c=a.tickPixelInterval;!q(a.tickInterval)&&this.len<c&&!this.isRadial&&!this.isLog&&a.startOnTick&&a.endOnTick&&(b=2);!b&&this.alignToOthers()&&(b=ua(this.len/c)+1);if(b<4)this.finalTickAmt=b,b=5;this.tickAmount=b},adjustTickAmount:function(){var a=this.tickInterval,b=this.tickPositions,c=this.tickAmount,d=this.finalTickAmt,e=b&&b.length;if(e<c){for(;b.length<c;)b.push(fa(b[b.length-1]+a));this.transA*=(e-1)/(c-1);this.max=
	b[b.length-1]}else e>c&&(this.tickInterval*=2,this.setTickPositions());if(q(d)){for(a=c=b.length;a--;)(d===3&&a%2===1||d<=2&&a>0&&a<c-1)&&b.splice(a,1);this.finalTickAmt=z}},setScale:function(){var a,b;this.oldMin=this.min;this.oldMax=this.max;this.oldAxisLength=this.len;this.setAxisSize();b=this.len!==this.oldAxisLength;o(this.series,function(b){if(b.isDirtyData||b.isDirty||b.xAxis.isDirty)a=!0});if(b||a||this.isLinked||this.forceRedraw||this.userMin!==this.oldUserMin||this.userMax!==this.oldUserMax||
	this.alignToOthers()){if(this.resetStacks&&this.resetStacks(),this.forceRedraw=!1,this.getSeriesExtremes(),this.setTickInterval(),this.oldUserMin=this.userMin,this.oldUserMax=this.userMax,!this.isDirty)this.isDirty=b||this.min!==this.oldMin||this.max!==this.oldMax}else this.cleanStacks&&this.cleanStacks()},setExtremes:function(a,b,c,d,e){var f=this,g=f.chart,c=p(c,!0);o(f.series,function(a){delete a.kdTree});e=u(e,{min:a,max:b});H(f,"setExtremes",e,function(){f.userMin=a;f.userMax=b;f.eventArgs=e;
	c&&g.redraw(d)})},zoom:function(a,b){var c=this.dataMin,d=this.dataMax,e=this.options,f=F(c,p(e.min,c)),e=t(d,p(e.max,d));this.allowZoomOutside||(q(c)&&a<=f&&(a=f),q(d)&&b>=e&&(b=e));this.displayBtn=a!==z||b!==z;this.setExtremes(a,b,!1,z,{trigger:"zoom"});return!0},setAxisSize:function(){var a=this.chart,b=this.options,c=b.offsetLeft||0,d=this.horiz,e=p(b.width,a.plotWidth-c+(b.offsetRight||0)),f=p(b.height,a.plotHeight),g=p(b.top,a.plotTop),b=p(b.left,a.plotLeft+c),c=/%$/;c.test(f)&&(f=Math.round(parseFloat(f)/
	100*a.plotHeight));c.test(g)&&(g=Math.round(parseFloat(g)/100*a.plotHeight+a.plotTop));this.left=b;this.top=g;this.width=e;this.height=f;this.bottom=a.chartHeight-f-g;this.right=a.chartWidth-e-b;this.len=t(d?e:f,0);this.pos=d?b:g},getExtremes:function(){var a=this.isLog;return{min:a?fa(na(this.min)):this.min,max:a?fa(na(this.max)):this.max,dataMin:this.dataMin,dataMax:this.dataMax,userMin:this.userMin,userMax:this.userMax}},getThreshold:function(a){var b=this.isLog,c=b?na(this.min):this.min,b=b?na(this.max):
	this.max;a===null?a=b<0?b:c:c>a?a=c:b<a&&(a=b);return this.translate(a,0,1,0,1)},autoLabelAlign:function(a){a=(p(a,0)-this.side*90+720)%360;return a>15&&a<165?"right":a>195&&a<345?"left":"center"},unsquish:function(){var a=this.ticks,b=this.options.labels,c=this.horiz,d=this.tickInterval,e=d,f=this.len/(((this.categories?1:0)+this.max-this.min)/d),g,h=b.rotation,i=this.chart.renderer.fontMetrics(b.style.fontSize,a[0]&&a[0].label),k,j=Number.MAX_VALUE,l,m=function(a){a/=f||1;a=a>1?ua(a):1;return a*
	d};c?(l=!b.staggerLines&&!b.step&&(q(h)?[h]:f<p(b.autoRotationLimit,80)&&b.autoRotation))&&o(l,function(a){var b;if(a===h||a&&a>=-90&&a<=90)k=m(P(i.h/$(ga*a))),b=k+P(a/360),b<j&&(j=b,g=a,e=k)}):b.step||(e=m(i.h));this.autoRotation=l;this.labelRotation=p(g,h);return e},renderUnsquish:function(){var a=this.chart,b=a.renderer,c=this.tickPositions,d=this.ticks,e=this.options.labels,f=this.horiz,g=a.margin,h=this.categories?c.length:c.length-1,g=this.slotWidth=f&&(e.step||0)<2&&!e.rotation&&(this.staggerLines||
	1)*a.plotWidth/h||!f&&(g[3]&&g[3]-a.spacing[3]||a.chartWidth*0.33),i=t(1,A(g-2*(e.padding||5))),k={},h=b.fontMetrics(e.style.fontSize,d[0]&&d[0].label),j=e.style.textOverflow,l,m=0,n,r;if(!xa(e.rotation))k.rotation=e.rotation||0;if(this.autoRotation)o(c,function(a){if((a=d[a])&&a.labelLength>m)m=a.labelLength}),m>i&&m>h.h?k.rotation=this.labelRotation:this.labelRotation=0;else if(g&&(l={width:i+"px"},!j)){l.textOverflow="clip";for(n=c.length;!f&&n--;)if(r=c[n],i=d[r].label)if(i.styles.textOverflow===
	"ellipsis"&&i.css({textOverflow:"clip"}),i.getBBox().height>this.len/c.length-(h.h-h.f)||d[r].labelLength>g)i.specCss={textOverflow:"ellipsis"}}if(k.rotation&&(l={width:(m>a.chartHeight*0.5?a.chartHeight*0.33:a.chartHeight)+"px"},!j))l.textOverflow="ellipsis";if(this.labelAlign=e.align||this.autoLabelAlign(this.labelRotation))k.align=this.labelAlign;o(c,function(a){var b=(a=d[a])&&a.label;if(b)b.attr(k),l&&b.css(D(l,b.specCss)),delete b.specCss,a.rotation=k.rotation});this.tickRotCorr=b.rotCorr(h.b,
	this.labelRotation||0,this.side!==0)},hasData:function(){return this.hasVisibleSeries||q(this.min)&&q(this.max)&&!!this.tickPositions},getOffset:function(){var a=this,b=a.chart,c=b.renderer,d=a.options,e=a.tickPositions,f=a.ticks,g=a.horiz,h=a.side,i=b.inverted?[1,0,3,2][h]:h,k,j,l=0,m,n=0,r=d.title,s=d.labels,R=0,v=a.opposite,x=b.axisOffset,b=b.clipOffset,w=[-1,1,1,-1][h],u,ba=a.axisParent;k=a.hasData();a.showAxis=j=k||p(d.showEmpty,!0);a.staggerLines=a.horiz&&s.staggerLines;if(!a.axisGroup)a.gridGroup=
	c.g("grid").attr({zIndex:d.gridZIndex||1}).add(ba),a.axisGroup=c.g("axis").attr({zIndex:d.zIndex||2}).add(ba),a.labelGroup=c.g("axis-labels").attr({zIndex:s.zIndex||7}).addClass("highcharts-"+a.coll.toLowerCase()+"-labels").add(ba);if(k||a.isLinked){if(o(e,function(b){f[b]?f[b].addLabel():f[b]=new Va(a,b)}),a.renderUnsquish(),s.reserveSpace!==!1&&(h===0||h===2||{1:"left",3:"right"}[h]===a.labelAlign||a.labelAlign==="center")&&o(e,function(a){R=t(f[a].getLabelSize(),R)}),a.staggerLines)R*=a.staggerLines,
	a.labelOffset=R*(a.opposite?-1:1)}else for(u in f)f[u].destroy(),delete f[u];if(r&&r.text&&r.enabled!==!1){if(!a.axisTitle)a.axisTitle=c.text(r.text,0,0,r.useHTML).attr({zIndex:7,rotation:r.rotation||0,align:r.textAlign||{low:v?"right":"left",middle:"center",high:v?"left":"right"}[r.align]}).addClass("highcharts-"+this.coll.toLowerCase()+"-title").css(r.style).add(a.axisGroup),a.axisTitle.isNew=!0;if(j)l=a.axisTitle.getBBox()[g?"height":"width"],m=r.offset,n=q(m)?0:p(r.margin,g?5:10);a.axisTitle[j?
	"show":"hide"](!0)}a.offset=w*p(d.offset,x[h]);a.tickRotCorr=a.tickRotCorr||{x:0,y:0};c=h===2?a.tickRotCorr.y:0;g=Math.abs(R)+n+(R&&w*(g?p(s.y,a.tickRotCorr.y+8):s.x)-c);a.axisTitleMargin=p(m,g);x[h]=t(x[h],a.axisTitleMargin+l+w*a.offset,g);d=d.offset?0:T(d.lineWidth/2)*2;b[i]=t(b[i],d)},getLinePath:function(a){var b=this.chart,c=this.opposite,d=this.offset,e=this.horiz,f=this.left+(c?this.width:0)+d,d=b.chartHeight-this.bottom-(c?this.height:0)+d;c&&(a*=-1);return b.renderer.crispLine(["M",e?this.left:
	f,e?d:this.top,"L",e?b.chartWidth-this.right:f,e?d:b.chartHeight-this.bottom],a)},getTitlePosition:function(){var a=this.horiz,b=this.left,c=this.top,d=this.len,e=this.options.title,f=a?b:c,g=this.opposite,h=this.offset,i=e.x||0,k=e.y||0,j=C(e.style.fontSize||12),d={low:f+(a?0:d),middle:f+d/2,high:f+(a?d:0)}[e.align],b=(a?c+this.height:b)+(a?1:-1)*(g?-1:1)*this.axisTitleMargin+(this.side===2?j:0);return{x:a?d+i:b+(g?this.width:0)+h+i,y:a?b+k-(g?this.height:0)+h:d+k}},render:function(){var a=this,
	b=a.chart,c=b.renderer,d=a.options,e=a.isLog,f=a.isLinked,g=a.tickPositions,h=a.axisTitle,i=a.ticks,k=a.minorTicks,j=a.alternateBands,l=d.stackLabels,m=d.alternateGridColor,n=a.tickmarkOffset,r=d.lineWidth,s,p=b.hasRendered&&q(a.oldMin)&&!isNaN(a.oldMin),v=a.showAxis,x=c.globalAnimation,w,t;a.labelEdge.length=0;a.overlap=!1;o([i,k,j],function(a){for(var b in a)a[b].isActive=!1});if(a.hasData()||f){a.minorTickInterval&&!a.categories&&o(a.getMinorTickPositions(),function(b){k[b]||(k[b]=new Va(a,b,"minor"));
	p&&k[b].isNew&&k[b].render(null,!0);k[b].render(null,!1,1)});if(g.length&&(o(g,function(b,c){if(!f||b>=a.min&&b<=a.max)i[b]||(i[b]=new Va(a,b)),p&&i[b].isNew&&i[b].render(c,!0,0.1),i[b].render(c)}),n&&(a.min===0||a.single)))i[-1]||(i[-1]=new Va(a,-1,null,!0)),i[-1].render(-1);m&&o(g,function(c,d){t=g[d+1]!==z?g[d+1]+n:a.max-n;if(d%2===0&&c<a.max&&t<=a.max+(b.polar?-n:n))j[c]||(j[c]=new B.PlotLineOrBand(a)),w=c+n,j[c].options={from:e?na(w):w,to:e?na(t):t,color:m},j[c].render(),j[c].isActive=!0});if(!a._addedPlotLB)o((d.plotLines||
	[]).concat(d.plotBands||[]),function(b){a.addPlotBandOrLine(b)}),a._addedPlotLB=!0}o([i,k,j],function(a){var c,d,e=[],f=x?x.duration||500:0;for(c in a)if(!a[c].isActive)a[c].render(c,!1,0),a[c].isActive=!1,e.push(c);Pa(function(){for(d=e.length;d--;)a[e[d]]&&!a[e[d]].isActive&&(a[e[d]].destroy(),delete a[e[d]])},a===j||!b.hasRendered||!f?0:f)});if(r)s=a.getLinePath(r),a.axisLine?a.axisLine.animate({d:s}):a.axisLine=c.path(s).attr({stroke:d.lineColor,"stroke-width":r,zIndex:7}).add(a.axisGroup),a.axisLine[v?
	"show":"hide"](!0);if(h&&v)h[h.isNew?"attr":"animate"](a.getTitlePosition()),h.isNew=!1;l&&l.enabled&&a.renderStackTotals();a.isDirty=!1},redraw:function(){this.visible&&(this.render(),o(this.plotLinesAndBands,function(a){a.render()}));o(this.series,function(a){a.isDirty=!0})},destroy:function(a){var b=this,c=b.stacks,d,e=b.plotLinesAndBands;a||V(b);for(d in c)Sa(c[d]),c[d]=null;o([b.ticks,b.minorTicks,b.alternateBands],function(a){Sa(a)});for(a=e.length;a--;)e[a].destroy();o("stackTotalGroup,axisLine,axisTitle,axisGroup,cross,gridGroup,labelGroup".split(","),
	function(a){b[a]&&(b[a]=b[a].destroy())});this.cross&&this.cross.destroy()},drawCrosshair:function(a,b){var c,d=this.crosshair,e,f;if(!this.crosshair||(q(b)||!p(d.snap,!0))===!1)this.hideCrosshair();else if(p(d.snap,!0)?q(b)&&(c=this.isXAxis?b.plotX:this.len-b.plotY):c=this.horiz?a.chartX-this.pos:this.len-a.chartY+this.pos,c=this.isRadial?this.getPlotLinePath(this.isXAxis?b.x:p(b.stackY,b.y))||null:this.getPlotLinePath(null,null,null,null,c)||null,c===null)this.hideCrosshair();else if(e=this.categories&&
	!this.isRadial,f=p(d.width,e?this.transA:1),this.cross)this.cross.attr({d:c,visibility:"visible","stroke-width":f});else{e={"stroke-width":f,stroke:d.color||(e?"rgba(155,200,255,0.2)":"#C0C0C0"),zIndex:p(d.zIndex,2)};if(d.dashStyle)e.dashstyle=d.dashStyle;this.cross=this.chart.renderer.path(c).attr(e).add()}},hideCrosshair:function(){this.cross&&this.cross.hide()}};u(ka.prototype,{getPlotBandPath:function(a,b){var c=this.getPlotLinePath(b,null,null,!0),d=this.getPlotLinePath(a,null,null,!0);d&&c?
	(d.flat=d.toString()===c.toString(),d.push(c[4],c[5],c[1],c[2])):d=null;return d},addPlotBand:function(a){return this.addPlotBandOrLine(a,"plotBands")},addPlotLine:function(a){return this.addPlotBandOrLine(a,"plotLines")},addPlotBandOrLine:function(a,b){var c=(new B.PlotLineOrBand(this,a)).render(),d=this.userOptions;c&&(b&&(d[b]=d[b]||[],d[b].push(a)),this.plotLinesAndBands.push(c));return c},removePlotBandOrLine:function(a){for(var b=this.plotLinesAndBands,c=this.options,d=this.userOptions,e=b.length;e--;)b[e].id===
	a&&b[e].destroy();o([c.plotLines||[],d.plotLines||[],c.plotBands||[],d.plotBands||[]],function(b){for(e=b.length;e--;)b[e].id===a&&oa(b,b[e])})}});ka.prototype.getTimeTicks=function(a,b,c,d){var e=[],f={},g=N.global.useUTC,h,i=new qa(b-Ya(b)),k=a.unitRange,j=a.count;if(q(b)){i[Gb](k>=G.second?0:j*T(i.getMilliseconds()/j));if(k>=G.second)i[Hb](k>=G.minute?0:j*T(i.getSeconds()/j));if(k>=G.minute)i[Ib](k>=G.hour?0:j*T(i[tb]()/j));if(k>=G.hour)i[Jb](k>=G.day?0:j*T(i[ub]()/j));if(k>=G.day)i[wb](k>=G.month?
	1:j*T(i[$a]()/j));k>=G.month&&(i[xb](k>=G.year?0:j*T(i[ab]()/j)),h=i[bb]());k>=G.year&&(h-=h%j,i[yb](h));if(k===G.week)i[wb](i[$a]()-i[vb]()+p(d,1));b=1;if(qb||Za)i=i.getTime(),i=new qa(i+Ya(i));h=i[bb]();for(var d=i.getTime(),l=i[ab](),m=i[$a](),n=!g||!!Za,r=(G.day+(g?Ya(i):i.getTimezoneOffset()*6E4))%G.day;d<c;)e.push(d),k===G.year?d=kb(h+b*j,0):k===G.month?d=kb(h,l+b*j):n&&(k===G.day||k===G.week)?d=kb(h,l,m+b*j*(k===G.day?1:7)):d+=k*j,b++;e.push(d);o(Na(e,function(a){return k<=G.hour&&a%G.day===
	r}),function(a){f[a]="day"})}e.info=u(a,{higherRanks:f,totalRange:k*j});return e};ka.prototype.normalizeTimeTickInterval=function(a,b){var c=b||[["millisecond",[1,2,5,10,20,25,50,100,200,500]],["second",[1,2,5,10,15,30]],["minute",[1,2,5,10,15,30]],["hour",[1,2,3,4,6,8,12]],["day",[1,2]],["week",[1,2]],["month",[1,2,3,4,6]],["year",null]],d=c[c.length-1],e=G[d[0]],f=d[1],g;for(g=0;g<c.length;g++)if(d=c[g],e=G[d[0]],f=d[1],c[g+1]&&a<=(e*f[f.length-1]+G[c[g+1][0]])/2)break;e===G.year&&a<5*e&&(f=[1,
	2,5]);c=sb(a/e,f,d[0]==="year"?t(rb(a/e),1):1);return{unitRange:e,count:c,unitName:d[0]}};ka.prototype.getLogTickPositions=function(a,b,c,d){var e=this.options,f=this.len,g=[];if(!d)this._minorAutoInterval=null;if(a>=0.5)a=A(a),g=this.getLinearTickPositions(a,b,c);else if(a>=0.08)for(var f=T(b),h,i,k,j,l,e=a>0.3?[1,2,4]:a>0.15?[1,2,4,6,8]:[1,2,3,4,5,6,7,8,9];f<c+1&&!l;f++){i=e.length;for(h=0;h<i&&!l;h++)k=Da(na(f)*e[h]),k>b&&(!d||j<=c)&&j!==z&&g.push(j),j>c&&(l=!0),j=k}else if(b=na(b),c=na(c),a=e[d?
	"minorTickInterval":"tickInterval"],a=p(a==="auto"?null:a,this._minorAutoInterval,(c-b)*(e.tickPixelInterval/(d?5:1))/((d?f/this.tickPositions.length:f)||1)),a=sb(a,null,rb(a)),g=Ba(this.getLinearTickPositions(a,b,c),Da),!d)this._minorAutoInterval=a/5;if(!d)this.tickInterval=a;return g};var Pb=B.Tooltip=function(){this.init.apply(this,arguments)};Pb.prototype={init:function(a,b){var c=b.borderWidth,d=b.style,e=C(d.padding);this.chart=a;this.options=b;this.crosshairs=[];this.now={x:0,y:0};this.isHidden=
	!0;this.label=a.renderer.label("",0,0,b.shape||"callout",null,null,b.useHTML,null,"tooltip").attr({padding:e,fill:b.backgroundColor,"stroke-width":c,r:b.borderRadius,zIndex:8}).css(d).css({padding:0}).add().attr({y:-9999});ha||this.label.shadow(b.shadow);this.shared=b.shared},destroy:function(){if(this.label)this.label=this.label.destroy();clearTimeout(this.hideTimer);clearTimeout(this.tooltipTimeout)},move:function(a,b,c,d){var e=this,f=e.now,g=e.options.animation!==!1&&!e.isHidden&&(P(a-f.x)>1||
	P(b-f.y)>1),h=e.followPointer||e.len>1;u(f,{x:g?(2*f.x+a)/3:a,y:g?(f.y+b)/2:b,anchorX:h?z:g?(2*f.anchorX+c)/3:c,anchorY:h?z:g?(f.anchorY+d)/2:d});e.label.attr(f);if(g)clearTimeout(this.tooltipTimeout),this.tooltipTimeout=setTimeout(function(){e&&e.move(a,b,c,d)},32)},hide:function(a){var b=this;clearTimeout(this.hideTimer);a=p(a,this.options.hideDelay,500);if(!this.isHidden)this.hideTimer=Pa(function(){b.label[a?"fadeOut":"hide"]();b.isHidden=!0},a)},getAnchor:function(a,b){var c,d=this.chart,e=d.inverted,
	f=d.plotTop,g=d.plotLeft,h=0,i=0,k,j,a=ta(a);c=a[0].tooltipPos;this.followPointer&&b&&(b.chartX===z&&(b=d.pointer.normalize(b)),c=[b.chartX-d.plotLeft,b.chartY-f]);c||(o(a,function(a){k=a.series.yAxis;j=a.series.xAxis;h+=a.plotX+(!e&&j?j.left-g:0);i+=(a.plotLow?(a.plotLow+a.plotHigh)/2:a.plotY)+(!e&&k?k.top-f:0)}),h/=a.length,i/=a.length,c=[e?d.plotWidth-i:h,this.shared&&!e&&a.length>1&&b?b.chartY-f:e?d.plotHeight-h:i]);return Ba(c,A)},getPosition:function(a,b,c){var d=this.chart,e=this.distance,
	f={},g=c.h||0,h,i=["y",d.chartHeight,b,c.plotY+d.plotTop,d.plotTop,d.plotTop+d.plotHeight],k=["x",d.chartWidth,a,c.plotX+d.plotLeft,d.plotLeft,d.plotLeft+d.plotWidth],j=p(c.ttBelow,d.inverted&&!c.negative||!d.inverted&&c.negative),l=function(a,b,c,d,h,i){var k=c<d-e,l=d+e+c<b,m=d-e-c;d+=e;if(j&&l)f[a]=d;else if(!j&&k)f[a]=m;else if(k)f[a]=F(i-c,m-g<0?m:m-g);else if(l)f[a]=t(h,d+g+c>b?d:d+g);else return!1},m=function(a,b,c,d){var g;d<e||d>b-e?g=!1:f[a]=d<c/2?1:d>b-c/2?b-c-2:d-c/2;return g},n=function(a){var b=
	i;i=k;k=b;h=a},r=function(){l.apply(0,i)!==!1?m.apply(0,k)===!1&&!h&&(n(!0),r()):h?f.x=f.y=0:(n(!0),r())};(d.inverted||this.len>1)&&n();r();return f},defaultFormatter:function(a){var b=this.points||ta(this),c;c=[a.tooltipFooterHeaderFormatter(b[0])];c=c.concat(a.bodyFormatter(b));c.push(a.tooltipFooterHeaderFormatter(b[0],!0));return c.join("")},refresh:function(a,b){var c=this.chart,d=this.label,e=this.options,f,g,h,i={},k,j=[];k=e.formatter||this.defaultFormatter;var i=c.hoverPoints,l,m=this.shared;
	clearTimeout(this.hideTimer);this.followPointer=ta(a)[0].series.tooltipOptions.followPointer;h=this.getAnchor(a,b);f=h[0];g=h[1];m&&(!a.series||!a.series.noSharedTooltip)?(c.hoverPoints=a,i&&o(i,function(a){a.setState()}),o(a,function(a){a.setState("hover");j.push(a.getLabelConfig())}),i={x:a[0].category,y:a[0].y},i.points=j,this.len=j.length,a=a[0]):i=a.getLabelConfig();k=k.call(i,this);i=a.series;this.distance=p(i.tooltipOptions.distance,16);k===!1?this.hide():(this.isHidden&&(Oa(d),d.attr("opacity",
	1).show()),d.attr({text:k}),l=e.borderColor||a.color||i.color||"#606060",d.attr({stroke:l}),this.updatePosition({plotX:f,plotY:g,negative:a.negative,ttBelow:a.ttBelow,h:h[2]||0}),this.isHidden=!1);H(c,"tooltipRefresh",{text:k,x:f+c.plotLeft,y:g+c.plotTop,borderColor:l})},updatePosition:function(a){var b=this.chart,c=this.label,c=(this.options.positioner||this.getPosition).call(this,c.width,c.height,a);this.move(A(c.x),A(c.y||0),a.plotX+b.plotLeft,a.plotY+b.plotTop)},getXDateFormat:function(a,b,c){var d,
	b=b.dateTimeLabelFormats,e=c&&c.closestPointRange,f,g={millisecond:15,second:12,minute:9,hour:6,day:3},h,i="millisecond";if(e){h=Qa("%m-%d %H:%M:%S.%L",a.x);for(f in G){if(e===G.week&&+Qa("%w",a.x)===c.options.startOfWeek&&h.substr(6)==="00:00:00.000"){f="week";break}if(G[f]>e){f=i;break}if(g[f]&&h.substr(g[f])!=="01-01 00:00:00.000".substr(g[f]))break;f!=="week"&&(i=f)}f&&(d=b[f])}else d=b.day;return d||b.year},tooltipFooterHeaderFormatter:function(a,b){var c=b?"footer":"header",d=a.series,e=d.tooltipOptions,
	f=e.xDateFormat,g=d.xAxis,h=g&&g.options.type==="datetime"&&ma(a.key),c=e[c+"Format"];h&&!f&&(f=this.getXDateFormat(a,e,g));h&&f&&(c=c.replace("{point.key}","{point.key:"+f+"}"));return Ka(c,{point:a,series:d})},bodyFormatter:function(a){return Ba(a,function(a){var c=a.series.tooltipOptions;return(c.pointFormatter||a.point.tooltipFormatter).call(a.point,c.pointFormat)})}};var ea;db=y&&y.documentElement.ontouchstart!==z;var Xa=B.Pointer=function(a,b){this.init(a,b)};Xa.prototype={init:function(a,b){var c=
	b.chart,d=c.events,e=ha?"":c.zoomType,c=a.inverted,f;this.options=b;this.chart=a;this.zoomX=f=/x/.test(e);this.zoomY=e=/y/.test(e);this.zoomHor=f&&!c||e&&c;this.zoomVert=e&&!c||f&&c;this.hasZoom=f||e;this.runChartClick=d&&!!d.click;this.pinchDown=[];this.lastValidTouch={};if(B.Tooltip&&b.tooltip.enabled)a.tooltip=new Pb(a,b.tooltip),this.followTouchMove=p(b.tooltip.followTouchMove,!0);this.setDOMEvents()},normalize:function(a,b){var c,d,a=a||E.event;if(!a.target)a.target=a.srcElement;d=a.touches?
	a.touches.length?a.touches.item(0):a.changedTouches[0]:a;if(!b)this.chartPosition=b=Ab(this.chart.container);d.pageX===z?(c=t(a.x,a.clientX-b.left),d=a.y):(c=d.pageX-b.left,d=d.pageY-b.top);return u(a,{chartX:A(c),chartY:A(d)})},getCoordinates:function(a){var b={xAxis:[],yAxis:[]};o(this.chart.axes,function(c){b[c.isXAxis?"xAxis":"yAxis"].push({axis:c,value:c.toValue(a[c.horiz?"chartX":"chartY"])})});return b},runPointActions:function(a){var b=this.chart,c=b.series,d=b.tooltip,e=d?d.shared:!1,f=b.hoverPoint,
	g=b.hoverSeries,h=[Number.MAX_VALUE,Number.MAX_VALUE],i,k,j=[],l=[],m;if(!e&&!g)for(b=0;b<c.length;b++)if(c[b].directTouch||!c[b].options.stickyTracking)c=[];g&&(e?g.noSharedTooltip:g.directTouch)&&f?l=[f]:(o(c,function(b){i=b.noSharedTooltip&&e;k=!e&&b.directTouch;b.visible&&!i&&!k&&p(b.options.enableMouseTracking,!0)&&(m=b.searchPoint(a,!i&&b.kdDimensions===1))&&j.push(m)}),o(j,function(a){a&&o(["dist","distX"],function(b,c){typeof a[b]==="number"&&a[b]<h[c]&&(h[c]=a[b],l[c]=a)})}));if(e)for(b=
	j.length;b--;)(j[b].clientX!==l[1].clientX||j[b].series.noSharedTooltip)&&j.splice(b,1);if(l[0]&&(l[0]!==this.prevKDPoint||d&&d.isHidden))if(e&&!l[0].series.noSharedTooltip)j.length&&d&&d.refresh(j,a),o(j,function(b){b.onMouseOver(a,b!==(g&&g.directTouch&&f||l[0]))}),this.prevKDPoint=l[1];else{d&&d.refresh(l[0],a);if(!g||!g.directTouch)l[0].onMouseOver(a);this.prevKDPoint=l[0]}else c=g&&g.tooltipOptions.followPointer,d&&c&&!d.isHidden&&(c=d.getAnchor([{}],a),d.updatePosition({plotX:c[0],plotY:c[1]}));
	if(!this._onDocumentMouseMove)this._onDocumentMouseMove=function(a){if(S[ea])S[ea].pointer.onDocumentMouseMove(a)},M(y,"mousemove",this._onDocumentMouseMove);o(e?j:[p(l[1],f)],function(b){var c=b&&b.series;c&&o(["xAxis","yAxis","colorAxis"],function(d){c[d]&&c[d].drawCrosshair(a,b)})})},reset:function(a,b){var c=this.chart,d=c.hoverSeries,e=c.hoverPoint,f=c.hoverPoints,g=c.tooltip,h=g&&g.shared?f:e;(a=a&&g&&h)&&o(ta(h),function(b){b.plotX===void 0&&(a=!1)});if(a)g.refresh(h),e&&(e.setState(e.state,
	!0),o(c.axes,function(a){p(a.options.crosshair&&a.options.crosshair.snap,!0)?a.drawCrosshair(null,e):a.hideCrosshair()}));else{if(e)e.onMouseOut();f&&o(f,function(a){a.setState()});if(d)d.onMouseOut();g&&g.hide(b);if(this._onDocumentMouseMove)V(y,"mousemove",this._onDocumentMouseMove),this._onDocumentMouseMove=null;o(c.axes,function(a){a.hideCrosshair()});this.hoverX=c.hoverPoints=c.hoverPoint=null}},scaleGroups:function(a,b){var c=this.chart,d;o(c.series,function(e){d=a||e.getPlotBox();e.xAxis&&
	e.xAxis.zoomEnabled&&(e.group.attr(d),e.markerGroup&&(e.markerGroup.attr(d),e.markerGroup.clip(b?c.clipRect:null)),e.dataLabelsGroup&&e.dataLabelsGroup.attr(d))});c.clipRect.attr(b||c.clipBox)},dragStart:function(a){var b=this.chart;b.mouseIsDown=a.type;b.cancelClick=!1;b.mouseDownX=this.mouseDownX=a.chartX;b.mouseDownY=this.mouseDownY=a.chartY},drag:function(a){var b=this.chart,c=b.options.chart,d=a.chartX,e=a.chartY,f=this.zoomHor,g=this.zoomVert,h=b.plotLeft,i=b.plotTop,k=b.plotWidth,j=b.plotHeight,
	l,m=this.selectionMarker,n=this.mouseDownX,r=this.mouseDownY,s=c.panKey&&a[c.panKey+"Key"];if(!m||!m.touch)if(d<h?d=h:d>h+k&&(d=h+k),e<i?e=i:e>i+j&&(e=i+j),this.hasDragged=Math.sqrt(Math.pow(n-d,2)+Math.pow(r-e,2)),this.hasDragged>10){l=b.isInsidePlot(n-h,r-i);if(b.hasCartesianSeries&&(this.zoomX||this.zoomY)&&l&&!s&&!m)this.selectionMarker=m=b.renderer.rect(h,i,f?1:k,g?1:j,0).attr({fill:c.selectionMarkerFill||"rgba(69,114,167,0.25)",zIndex:7}).add();m&&f&&(d-=n,m.attr({width:P(d),x:(d>0?0:d)+n}));
	m&&g&&(d=e-r,m.attr({height:P(d),y:(d>0?0:d)+r}));l&&!m&&c.panning&&b.pan(a,c.panning)}},drop:function(a){var b=this,c=this.chart,d=this.hasPinched;if(this.selectionMarker){var e={originalEvent:a,xAxis:[],yAxis:[]},f=this.selectionMarker,g=f.attr?f.attr("x"):f.x,h=f.attr?f.attr("y"):f.y,i=f.attr?f.attr("width"):f.width,k=f.attr?f.attr("height"):f.height,j;if(this.hasDragged||d)o(c.axes,function(c){if(c.zoomEnabled&&q(c.min)&&(d||b[{xAxis:"zoomX",yAxis:"zoomY"}[c.coll]])){var f=c.horiz,n=a.type===
	"touchend"?c.minPixelPadding:0,r=c.toValue((f?g:h)+n),f=c.toValue((f?g+i:h+k)-n);e[c.coll].push({axis:c,min:F(r,f),max:t(r,f)});j=!0}}),j&&H(c,"selection",e,function(a){c.zoom(u(a,d?{animation:!1}:null))});this.selectionMarker=this.selectionMarker.destroy();d&&this.scaleGroups()}if(c)L(c.container,{cursor:c._cursor}),c.cancelClick=this.hasDragged>10,c.mouseIsDown=this.hasDragged=this.hasPinched=!1,this.pinchDown=[]},onContainerMouseDown:function(a){a=this.normalize(a);a.preventDefault&&a.preventDefault();
	this.dragStart(a)},onDocumentMouseUp:function(a){S[ea]&&S[ea].pointer.drop(a)},onDocumentMouseMove:function(a){var b=this.chart,c=this.chartPosition,a=this.normalize(a,c);c&&!this.inClass(a.target,"highcharts-tracker")&&!b.isInsidePlot(a.chartX-b.plotLeft,a.chartY-b.plotTop)&&this.reset()},onContainerMouseLeave:function(a){var b=S[ea];if(b&&(a.relatedTarget||a.toElement))b.pointer.reset(),b.pointer.chartPosition=null},onContainerMouseMove:function(a){var b=this.chart;if(!q(ea)||!S[ea]||!S[ea].mouseIsDown)ea=
	b.index;a=this.normalize(a);a.returnValue=!1;b.mouseIsDown==="mousedown"&&this.drag(a);(this.inClass(a.target,"highcharts-tracker")||b.isInsidePlot(a.chartX-b.plotLeft,a.chartY-b.plotTop))&&!b.openMenu&&this.runPointActions(a)},inClass:function(a,b){for(var c;a;){if(c=K(a,"class")){if(c.indexOf(b)!==-1)return!0;if(c.indexOf("highcharts-container")!==-1)return!1}a=a.parentNode}},onTrackerMouseOut:function(a){var b=this.chart.hoverSeries,a=a.relatedTarget||a.toElement;if(b&&a&&!b.options.stickyTracking&&
	!this.inClass(a,"highcharts-tooltip")&&!this.inClass(a,"highcharts-series-"+b.index))b.onMouseOut()},onContainerClick:function(a){var b=this.chart,c=b.hoverPoint,d=b.plotLeft,e=b.plotTop,a=this.normalize(a);b.cancelClick||(c&&this.inClass(a.target,"highcharts-tracker")?(H(c.series,"click",u(a,{point:c})),b.hoverPoint&&c.firePointEvent("click",a)):(u(a,this.getCoordinates(a)),b.isInsidePlot(a.chartX-d,a.chartY-e)&&H(b,"click",a)))},setDOMEvents:function(){var a=this,b=a.chart.container;b.onmousedown=
	function(b){a.onContainerMouseDown(b)};b.onmousemove=function(b){a.onContainerMouseMove(b)};b.onclick=function(b){a.onContainerClick(b)};M(b,"mouseleave",a.onContainerMouseLeave);eb===1&&M(y,"mouseup",a.onDocumentMouseUp);if(db)b.ontouchstart=function(b){a.onContainerTouchStart(b)},b.ontouchmove=function(b){a.onContainerTouchMove(b)},eb===1&&M(y,"touchend",a.onDocumentTouchEnd)},destroy:function(){var a;V(this.chart.container,"mouseleave",this.onContainerMouseLeave);eb||(V(y,"mouseup",this.onDocumentMouseUp),
	V(y,"touchend",this.onDocumentTouchEnd));clearInterval(this.tooltipTimeout);for(a in this)this[a]=null}};u(B.Pointer.prototype,{pinchTranslate:function(a,b,c,d,e,f){(this.zoomHor||this.pinchHor)&&this.pinchTranslateDirection(!0,a,b,c,d,e,f);(this.zoomVert||this.pinchVert)&&this.pinchTranslateDirection(!1,a,b,c,d,e,f)},pinchTranslateDirection:function(a,b,c,d,e,f,g,h){var i=this.chart,k=a?"x":"y",j=a?"X":"Y",l="chart"+j,m=a?"width":"height",n=i["plot"+(a?"Left":"Top")],r,s,p=h||1,o=i.inverted,x=i.bounds[a?
	"h":"v"],w=b.length===1,q=b[0][l],t=c[0][l],u=!w&&b[1][l],A=!w&&c[1][l],B,c=function(){!w&&P(q-u)>20&&(p=h||P(t-A)/P(q-u));s=(n-t)/p+q;r=i["plot"+(a?"Width":"Height")]/p};c();b=s;b<x.min?(b=x.min,B=!0):b+r>x.max&&(b=x.max-r,B=!0);B?(t-=0.8*(t-g[k][0]),w||(A-=0.8*(A-g[k][1])),c()):g[k]=[t,A];o||(f[k]=s-n,f[m]=r);f=o?1/p:p;e[m]=r;e[k]=b;d[o?a?"scaleY":"scaleX":"scale"+j]=p;d["translate"+j]=f*n+(t-f*q)},pinch:function(a){var b=this,c=b.chart,d=b.pinchDown,e=a.touches,f=e.length,g=b.lastValidTouch,h=
	b.hasZoom,i=b.selectionMarker,k={},j=f===1&&(b.inClass(a.target,"highcharts-tracker")&&c.runTrackerClick||b.runChartClick),l={};if(f>1)b.initiated=!0;h&&b.initiated&&!j&&a.preventDefault();Ba(e,function(a){return b.normalize(a)});if(a.type==="touchstart")o(e,function(a,b){d[b]={chartX:a.chartX,chartY:a.chartY}}),g.x=[d[0].chartX,d[1]&&d[1].chartX],g.y=[d[0].chartY,d[1]&&d[1].chartY],o(c.axes,function(a){if(a.zoomEnabled){var b=c.bounds[a.horiz?"h":"v"],d=a.minPixelPadding,e=a.toPixels(p(a.options.min,
	a.dataMin)),f=a.toPixels(p(a.options.max,a.dataMax)),g=F(e,f),e=t(e,f);b.min=F(a.pos,g-d);b.max=t(a.pos+a.len,e+d)}}),b.res=!0;else if(d.length){if(!i)b.selectionMarker=i=u({destroy:Aa,touch:!0},c.plotBox);b.pinchTranslate(d,e,k,i,l,g);b.hasPinched=h;b.scaleGroups(k,l);if(!h&&b.followTouchMove&&f===1)this.runPointActions(b.normalize(a));else if(b.res)b.res=!1,this.reset(!1,0)}},touch:function(a,b){var c=this.chart;ea=c.index;a.touches.length===1?(a=this.normalize(a),c.isInsidePlot(a.chartX-c.plotLeft,
	a.chartY-c.plotTop)&&!c.openMenu?(b&&this.runPointActions(a),this.pinch(a)):b&&this.reset()):a.touches.length===2&&this.pinch(a)},onContainerTouchStart:function(a){this.touch(a,!0)},onContainerTouchMove:function(a){this.touch(a)},onDocumentTouchEnd:function(a){S[ea]&&S[ea].pointer.drop(a)}});if(E.PointerEvent||E.MSPointerEvent){var va={},Db=!!E.PointerEvent,Sb=function(){var a,b=[];b.item=function(a){return this[a]};for(a in va)va.hasOwnProperty(a)&&b.push({pageX:va[a].pageX,pageY:va[a].pageY,target:va[a].target});
	return b},Eb=function(a,b,c,d){if((a.pointerType==="touch"||a.pointerType===a.MSPOINTER_TYPE_TOUCH)&&S[ea])d(a),d=S[ea].pointer,d[b]({type:c,target:a.currentTarget,preventDefault:Aa,touches:Sb()})};u(Xa.prototype,{onContainerPointerDown:function(a){Eb(a,"onContainerTouchStart","touchstart",function(a){va[a.pointerId]={pageX:a.pageX,pageY:a.pageY,target:a.currentTarget}})},onContainerPointerMove:function(a){Eb(a,"onContainerTouchMove","touchmove",function(a){va[a.pointerId]={pageX:a.pageX,pageY:a.pageY};
	if(!va[a.pointerId].target)va[a.pointerId].target=a.currentTarget})},onDocumentPointerUp:function(a){Eb(a,"onDocumentTouchEnd","touchend",function(a){delete va[a.pointerId]})},batchMSEvents:function(a){a(this.chart.container,Db?"pointerdown":"MSPointerDown",this.onContainerPointerDown);a(this.chart.container,Db?"pointermove":"MSPointerMove",this.onContainerPointerMove);a(y,Db?"pointerup":"MSPointerUp",this.onDocumentPointerUp)}});fb(Xa.prototype,"init",function(a,b,c){a.call(this,b,c);this.hasZoom&&
	L(b.container,{"-ms-touch-action":"none","touch-action":"none"})});fb(Xa.prototype,"setDOMEvents",function(a){a.apply(this);(this.hasZoom||this.followTouchMove)&&this.batchMSEvents(M)});fb(Xa.prototype,"destroy",function(a){this.batchMSEvents(V);a.call(this)})}var ob=B.Legend=function(a,b){this.init(a,b)};ob.prototype={init:function(a,b){var c=this,d=b.itemStyle,e=b.itemMarginTop||0;this.options=b;if(b.enabled)c.itemStyle=d,c.itemHiddenStyle=D(d,b.itemHiddenStyle),c.itemMarginTop=e,c.padding=d=p(b.padding,
	8),c.initialItemX=d,c.initialItemY=d-5,c.maxItemWidth=0,c.chart=a,c.itemHeight=0,c.symbolWidth=p(b.symbolWidth,16),c.pages=[],c.render(),M(c.chart,"endResize",function(){c.positionCheckboxes()})},colorizeItem:function(a,b){var c=this.options,d=a.legendItem,e=a.legendLine,f=a.legendSymbol,g=this.itemHiddenStyle.color,c=b?c.itemStyle.color:g,h=b?a.legendColor||a.color||"#CCC":g,g=a.options&&a.options.marker,i={fill:h},k;d&&d.css({fill:c,color:c});e&&e.attr({stroke:h});if(f){if(g&&f.isMarker)for(k in i.stroke=
	h,g=a.convertAttribs(g),g)d=g[k],d!==z&&(i[k]=d);f.attr(i)}},positionItem:function(a){var b=this.options,c=b.symbolPadding,b=!b.rtl,d=a._legendItemPos,e=d[0],d=d[1],f=a.checkbox;(a=a.legendGroup)&&a.element&&a.translate(b?e:this.legendWidth-e-2*c-4,d);if(f)f.x=e,f.y=d},destroyItem:function(a){var b=a.checkbox;o(["legendItem","legendLine","legendSymbol","legendGroup"],function(b){a[b]&&(a[b]=a[b].destroy())});b&&Ta(a.checkbox)},destroy:function(){var a=this.group,b=this.box;if(b)this.box=b.destroy();
	if(a)this.group=a.destroy()},positionCheckboxes:function(a){var b=this.group.alignAttr,c,d=this.clipHeight||this.legendHeight,e=this.titleHeight;if(b)c=b.translateY,o(this.allItems,function(f){var g=f.checkbox,h;g&&(h=c+e+g.y+(a||0)+3,L(g,{left:b.translateX+f.checkboxOffset+g.x-20+"px",top:h+"px",display:h>c-6&&h<c+d-6?"":"none"}))})},renderTitle:function(){var a=this.padding,b=this.options.title,c=0;if(b.text){if(!this.title)this.title=this.chart.renderer.label(b.text,a-3,a-4,null,null,null,null,
	null,"legend-title").attr({zIndex:1}).css(b.style).add(this.group);a=this.title.getBBox();c=a.height;this.offsetWidth=a.width;this.contentGroup.attr({translateY:c})}this.titleHeight=c},setText:function(a){var b=this.options;a.legendItem.attr({text:b.labelFormat?Ka(b.labelFormat,a):b.labelFormatter.call(a)})},renderItem:function(a){var b=this.chart,c=b.renderer,d=this.options,e=d.layout==="horizontal",f=this.symbolWidth,g=d.symbolPadding,h=this.itemStyle,i=this.itemHiddenStyle,k=this.padding,j=e?p(d.itemDistance,
	20):0,l=!d.rtl,m=d.width,n=d.itemMarginBottom||0,r=this.itemMarginTop,s=this.initialItemX,o=a.legendItem,v=a.series&&a.series.drawLegendSymbol?a.series:a,x=v.options,x=this.createCheckboxForItem&&x&&x.showCheckbox,w=d.useHTML;if(!o){a.legendGroup=c.g("legend-item").attr({zIndex:1}).add(this.scrollGroup);a.legendItem=o=c.text("",l?f+g:-g,this.baseline||0,w).css(D(a.visible?h:i)).attr({align:l?"left":"right",zIndex:2}).add(a.legendGroup);if(!this.baseline)this.fontMetrics=c.fontMetrics(h.fontSize,o),
	this.baseline=this.fontMetrics.f+3+r,o.attr("y",this.baseline);v.drawLegendSymbol(this,a);this.setItemEvents&&this.setItemEvents(a,o,w,h,i);x&&this.createCheckboxForItem(a)}this.colorizeItem(a,a.visible);this.setText(a);c=o.getBBox();f=a.checkboxOffset=d.itemWidth||a.legendItemWidth||f+g+c.width+j+(x?20:0);this.itemHeight=g=A(a.legendItemHeight||c.height);if(e&&this.itemX-s+f>(m||b.chartWidth-2*k-s-d.x))this.itemX=s,this.itemY+=r+this.lastLineHeight+n,this.lastLineHeight=0;this.maxItemWidth=t(this.maxItemWidth,
	f);this.lastItemY=r+this.itemY+n;this.lastLineHeight=t(g,this.lastLineHeight);a._legendItemPos=[this.itemX,this.itemY];e?this.itemX+=f:(this.itemY+=r+g+n,this.lastLineHeight=g);this.offsetWidth=m||t((e?this.itemX-s-j:f)+k,this.offsetWidth)},getAllItems:function(){var a=[];o(this.chart.series,function(b){var c=b.options;if(p(c.showInLegend,!q(c.linkedTo)?z:!1,!0))a=a.concat(b.legendItems||(c.legendType==="point"?b.data:b))});return a},adjustMargins:function(a,b){var c=this.chart,d=this.options,e=d.align.charAt(0)+
	d.verticalAlign.charAt(0)+d.layout.charAt(0);this.display&&!d.floating&&o([/(lth|ct|rth)/,/(rtv|rm|rbv)/,/(rbh|cb|lbh)/,/(lbv|lm|ltv)/],function(f,g){f.test(e)&&!q(a[g])&&(c[nb[g]]=t(c[nb[g]],c.legend[(g+1)%2?"legendHeight":"legendWidth"]+[1,-1,-1,1][g]*d[g%2?"x":"y"]+p(d.margin,12)+b[g]))})},render:function(){var a=this,b=a.chart,c=b.renderer,d=a.group,e,f,g,h,i=a.box,k=a.options,j=a.padding,l=k.borderWidth,m=k.backgroundColor;a.itemX=a.initialItemX;a.itemY=a.initialItemY;a.offsetWidth=0;a.lastItemY=
	0;if(!d)a.group=d=c.g("legend").attr({zIndex:7}).add(),a.contentGroup=c.g().attr({zIndex:1}).add(d),a.scrollGroup=c.g().add(a.contentGroup);a.renderTitle();e=a.getAllItems();ib(e,function(a,b){return(a.options&&a.options.legendIndex||0)-(b.options&&b.options.legendIndex||0)});k.reversed&&e.reverse();a.allItems=e;a.display=f=!!e.length;a.lastLineHeight=0;o(e,function(b){a.renderItem(b)});g=(k.width||a.offsetWidth)+j;h=a.lastItemY+a.lastLineHeight+a.titleHeight;h=a.handleOverflow(h);h+=j;if(l||m){if(i){if(g>
	0&&h>0)i[i.isNew?"attr":"animate"](i.crisp({width:g,height:h})),i.isNew=!1}else a.box=i=c.rect(0,0,g,h,k.borderRadius,l||0).attr({stroke:k.borderColor,"stroke-width":l||0,fill:m||"none"}).add(d).shadow(k.shadow),i.isNew=!0;i[f?"show":"hide"]()}a.legendWidth=g;a.legendHeight=h;o(e,function(b){a.positionItem(b)});f&&d.align(u({width:g,height:h},k),!0,"spacingBox");b.isResizing||this.positionCheckboxes()},handleOverflow:function(a){var b=this,c=this.chart,d=c.renderer,e=this.options,f=e.y,f=c.spacingBox.height+
	(e.verticalAlign==="top"?-f:f)-this.padding,g=e.maxHeight,h,i=this.clipRect,k=e.navigation,j=p(k.animation,!0),l=k.arrowSize||12,m=this.nav,n=this.pages,r=this.padding,s,R=this.allItems,v=function(a){i.attr({height:a});if(b.contentGroup.div)b.contentGroup.div.style.clip="rect("+r+"px,9999px,"+(r+a)+"px,0)"};e.layout==="horizontal"&&(f/=2);g&&(f=F(f,g));n.length=0;if(a>f){this.clipHeight=h=t(f-20-this.titleHeight-r,0);this.currentPage=p(this.currentPage,1);this.fullHeight=a;o(R,function(a,b){var c=
	a._legendItemPos[1],d=A(a.legendItem.getBBox().height),e=n.length;if(!e||c-n[e-1]>h&&(s||c)!==n[e-1])n.push(s||c),e++;b===R.length-1&&c+d-n[e-1]>h&&n.push(c);c!==s&&(s=c)});if(!i)i=b.clipRect=d.clipRect(0,r,9999,0),b.contentGroup.clip(i);v(h);if(!m)this.nav=m=d.g().attr({zIndex:1}).add(this.group),this.up=d.symbol("triangle",0,0,l,l).on("click",function(){b.scroll(-1,j)}).add(m),this.pager=d.text("",15,10).css(k.style).add(m),this.down=d.symbol("triangle-down",0,0,l,l).on("click",function(){b.scroll(1,
	j)}).add(m);b.scroll(0);a=f}else if(m)v(c.chartHeight),m.hide(),this.scrollGroup.attr({translateY:1}),this.clipHeight=0;return a},scroll:function(a,b){var c=this.pages,d=c.length,e=this.currentPage+a,f=this.clipHeight,g=this.options.navigation,h=g.activeColor,g=g.inactiveColor,i=this.pager,k=this.padding;e>d&&(e=d);if(e>0)b!==z&&Ua(b,this.chart),this.nav.attr({translateX:k,translateY:f+this.padding+7+this.titleHeight,visibility:"visible"}),this.up.attr({fill:e===1?g:h}).css({cursor:e===1?"default":
	"pointer"}),i.attr({text:e+"/"+d}),this.down.attr({x:18+this.pager.getBBox().width,fill:e===d?g:h}).css({cursor:e===d?"default":"pointer"}),c=-c[e-1]+this.initialItemY,this.scrollGroup.animate({translateY:c}),this.currentPage=e,this.positionCheckboxes(c)}};J=B.LegendSymbolMixin={drawRectangle:function(a,b){var c=a.options.symbolHeight||a.fontMetrics.f;b.legendSymbol=this.chart.renderer.rect(0,a.baseline-c+1,a.symbolWidth,c,a.options.symbolRadius||0).attr({zIndex:3}).add(b.legendGroup)},drawLineMarker:function(a){var b=
	this.options,c=b.marker,d=a.symbolWidth,e=this.chart.renderer,f=this.legendGroup,a=a.baseline-A(a.fontMetrics.b*0.3),g;if(b.lineWidth){g={"stroke-width":b.lineWidth};if(b.dashStyle)g.dashstyle=b.dashStyle;this.legendLine=e.path(["M",0,a,"L",d,a]).attr(g).add(f)}if(c&&c.enabled!==!1)b=c.radius,this.legendSymbol=c=e.symbol(this.symbol,d/2-b,a-b,2*b,2*b,c).add(f),c.isMarker=!0}};(/Trident\/7\.0/.test(za)||Ma)&&fb(ob.prototype,"positionItem",function(a,b){var c=this,d=function(){b._legendItemPos&&a.call(c,
	b)};d();setTimeout(d)});var hb=B.Chart=function(){this.getArgs.apply(this,arguments)};B.chart=function(a,b,c){return new hb(a,b,c)};hb.prototype={callbacks:[],getArgs:function(){var a=[].slice.call(arguments);if(xa(a[0])||a[0].nodeName)this.renderTo=a.shift();this.init(a[0],a[1])},init:function(a,b){var c,d=a.series;a.series=null;c=D(N,a);c.series=a.series=d;this.userOptions=a;d=c.chart;this.margin=this.splashArray("margin",d);this.spacing=this.splashArray("spacing",d);var e=d.events;this.bounds=
	{h:{},v:{}};this.callback=b;this.isResizing=0;this.options=c;this.axes=[];this.series=[];this.hasCartesianSeries=d.showAxes;var f=this,g;f.index=S.length;S.push(f);eb++;d.reflow!==!1&&M(f,"load",function(){f.initReflow()});if(e)for(g in e)M(f,g,e[g]);f.xAxis=[];f.yAxis=[];f.animation=ha?!1:p(d.animation,!0);f.pointCount=f.colorCounter=f.symbolCounter=0;f.firstRender()},initSeries:function(a){var b=this.options.chart;(b=I[a.type||b.type||b.defaultSeriesType])||X(17,!0);b=new b;b.init(this,a);return b},
	isInsidePlot:function(a,b,c){var d=c?b:a,a=c?a:b;return d>=0&&d<=this.plotWidth&&a>=0&&a<=this.plotHeight},redraw:function(a){var b=this.axes,c=this.series,d=this.pointer,e=this.legend,f=this.isDirtyLegend,g,h,i=this.hasCartesianSeries,k=this.isDirtyBox,j=c.length,l=j,m=this.renderer,n=m.isHidden(),r=[];Ua(a,this);n&&this.cloneRenderTo();for(this.layOutTitles();l--;)if(a=c[l],a.options.stacking&&(g=!0,a.isDirty)){h=!0;break}if(h)for(l=j;l--;)if(a=c[l],a.options.stacking)a.isDirty=!0;o(c,function(a){a.isDirty&&
	a.options.legendType==="point"&&(a.updateTotals&&a.updateTotals(),f=!0)});if(f&&e.options.enabled)e.render(),this.isDirtyLegend=!1;g&&this.getStacks();if(i&&!this.isResizing)this.maxTicks=null,o(b,function(a){a.setScale()});this.getMargins();i&&(o(b,function(a){a.isDirty&&(k=!0)}),o(b,function(a){var b=a.min+","+a.max;if(a.extKey!==b)a.extKey=b,r.push(function(){H(a,"afterSetExtremes",u(a.eventArgs,a.getExtremes()));delete a.eventArgs});(k||g)&&a.redraw()}));k&&this.drawChartBox();o(c,function(a){a.isDirty&&
	a.visible&&(!a.isCartesian||a.xAxis)&&a.redraw()});d&&d.reset(!0);m.draw();H(this,"redraw");n&&this.cloneRenderTo(!0);o(r,function(a){a.call()})},get:function(a){var b=this.axes,c=this.series,d,e;for(d=0;d<b.length;d++)if(b[d].options.id===a)return b[d];for(d=0;d<c.length;d++)if(c[d].options.id===a)return c[d];for(d=0;d<c.length;d++){e=c[d].points||[];for(b=0;b<e.length;b++)if(e[b].id===a)return e[b]}return null},getAxes:function(){var a=this,b=this.options,c=b.xAxis=ta(b.xAxis||{}),b=b.yAxis=ta(b.yAxis||
	{});o(c,function(a,b){a.index=b;a.isX=!0});o(b,function(a,b){a.index=b});c=c.concat(b);o(c,function(b){new ka(a,b)})},getSelectedPoints:function(){var a=[];o(this.series,function(b){a=a.concat(Na(b.points||[],function(a){return a.selected}))});return a},getSelectedSeries:function(){return Na(this.series,function(a){return a.selected})},setTitle:function(a,b,c){var g;var d=this,e=d.options,f;f=e.title=D(e.title,a);g=e.subtitle=D(e.subtitle,b),e=g;o([["title",a,f],["subtitle",b,e]],function(a){var b=
	a[0],c=d[b],e=a[1],a=a[2];c&&e&&(d[b]=c=c.destroy());a&&a.text&&!c&&(d[b]=d.renderer.text(a.text,0,0,a.useHTML).attr({align:a.align,"class":"highcharts-"+b,zIndex:a.zIndex||4}).css(a.style).add())});d.layOutTitles(c)},layOutTitles:function(a){var b=0,c=this.title,d=this.subtitle,e=this.options,f=e.title,e=e.subtitle,g=this.renderer,h=this.spacingBox.width-44;if(c&&(c.css({width:(f.width||h)+"px"}).align(u({y:g.fontMetrics(f.style.fontSize,c).b-3},f),!1,"spacingBox"),!f.floating&&!f.verticalAlign))b=
	c.getBBox().height;d&&(d.css({width:(e.width||h)+"px"}).align(u({y:b+(f.margin-13)+g.fontMetrics(e.style.fontSize,c).b},e),!1,"spacingBox"),!e.floating&&!e.verticalAlign&&(b=ua(b+d.getBBox().height)));c=this.titleOffset!==b;this.titleOffset=b;if(!this.isDirtyBox&&c)this.isDirtyBox=c,this.hasRendered&&p(a,!0)&&this.isDirtyBox&&this.redraw()},getChartSize:function(){var a=this.options.chart,b=a.width,a=a.height,c=this.renderToClone||this.renderTo;if(!q(b))this.containerWidth=ja(c,"width");if(!q(a))this.containerHeight=
	ja(c,"height");this.chartWidth=t(0,b||this.containerWidth||600);this.chartHeight=t(0,p(a,this.containerHeight>19?this.containerHeight:400))},cloneRenderTo:function(a){var b=this.renderToClone,c=this.container;a?b&&(this.renderTo.appendChild(c),Ta(b),delete this.renderToClone):(c&&c.parentNode===this.renderTo&&this.renderTo.removeChild(c),this.renderToClone=b=this.renderTo.cloneNode(0),L(b,{position:"absolute",top:"-9999px",display:"block"}),b.style.setProperty&&b.style.setProperty("display","block",
	"important"),y.body.appendChild(b),c&&b.appendChild(c))},getContainer:function(){var a,b=this.options,c=b.chart,d,e;a=this.renderTo;var f="highcharts-"+zb++;if(!a)this.renderTo=a=c.renderTo;if(xa(a))this.renderTo=a=y.getElementById(a);a||X(13,!0);d=C(K(a,"data-highcharts-chart"));!isNaN(d)&&S[d]&&S[d].hasRendered&&S[d].destroy();K(a,"data-highcharts-chart",this.index);a.innerHTML="";!c.skipClone&&!a.offsetWidth&&this.cloneRenderTo();this.getChartSize();d=this.chartWidth;e=this.chartHeight;this.container=
	a=Z(La,{className:"highcharts-container"+(c.className?" "+c.className:""),id:f},u({position:"relative",overflow:"hidden",width:d+"px",height:e+"px",textAlign:"left",lineHeight:"normal",zIndex:0,"-webkit-tap-highlight-color":"rgba(0,0,0,0)"},c.style),this.renderToClone||a);this._cursor=a.style.cursor;this.renderer=new (B[c.renderer]||cb)(a,d,e,c.style,c.forExport,b.exporting&&b.exporting.allowHTML);ha&&this.renderer.create(this,a,d,e);this.renderer.chartIndex=this.index},getMargins:function(a){var b=
	this.spacing,c=this.margin,d=this.titleOffset;this.resetMargins();if(d&&!q(c[0]))this.plotTop=t(this.plotTop,d+this.options.title.margin+b[0]);this.legend.adjustMargins(c,b);this.extraBottomMargin&&(this.marginBottom+=this.extraBottomMargin);this.extraTopMargin&&(this.plotTop+=this.extraTopMargin);a||this.getAxisMargins()},getAxisMargins:function(){var a=this,b=a.axisOffset=[0,0,0,0],c=a.margin;a.hasCartesianSeries&&o(a.axes,function(a){a.visible&&a.getOffset()});o(nb,function(d,e){q(c[e])||(a[d]+=
	b[e])});a.setChartSize()},reflow:function(a){var b=this,c=b.options.chart,d=b.renderTo,e=c.width||ja(d,"width"),f=c.height||ja(d,"height"),c=a?a.target:E;if(!b.hasUserSize&&!b.isPrinting&&e&&f&&(c===E||c===y)){if(e!==b.containerWidth||f!==b.containerHeight)clearTimeout(b.reflowTimeout),b.reflowTimeout=Pa(function(){if(b.container)b.setSize(e,f,!1),b.hasUserSize=null},a?100:0);b.containerWidth=e;b.containerHeight=f}},initReflow:function(){var a=this,b=function(b){a.reflow(b)};M(E,"resize",b);M(a,"destroy",
	function(){V(E,"resize",b)})},setSize:function(a,b,c){var d=this,e,f,g=d.renderer;d.isResizing+=1;Ua(c,d);d.oldChartHeight=d.chartHeight;d.oldChartWidth=d.chartWidth;if(q(a))d.chartWidth=e=t(0,A(a)),d.hasUserSize=!!e;if(q(b))d.chartHeight=f=t(0,A(b));a=g.globalAnimation;(a?Wa:L)(d.container,{width:e+"px",height:f+"px"},a);d.setChartSize(!0);g.setSize(e,f,c);d.maxTicks=null;o(d.axes,function(a){a.isDirty=!0;a.setScale()});o(d.series,function(a){a.isDirty=!0});d.isDirtyLegend=!0;d.isDirtyBox=!0;d.layOutTitles();
	d.getMargins();d.redraw(c);d.oldChartHeight=null;H(d,"resize");a=g.globalAnimation;Pa(function(){d&&H(d,"endResize",null,function(){d.isResizing-=1})},a===!1?0:a&&a.duration||500)},setChartSize:function(a){var b=this.inverted,c=this.renderer,d=this.chartWidth,e=this.chartHeight,f=this.options.chart,g=this.spacing,h=this.clipOffset,i,k,j,l;this.plotLeft=i=A(this.plotLeft);this.plotTop=k=A(this.plotTop);this.plotWidth=j=t(0,A(d-i-this.marginRight));this.plotHeight=l=t(0,A(e-k-this.marginBottom));this.plotSizeX=
	b?l:j;this.plotSizeY=b?j:l;this.plotBorderWidth=f.plotBorderWidth||0;this.spacingBox=c.spacingBox={x:g[3],y:g[0],width:d-g[3]-g[1],height:e-g[0]-g[2]};this.plotBox=c.plotBox={x:i,y:k,width:j,height:l};d=2*T(this.plotBorderWidth/2);b=ua(t(d,h[3])/2);c=ua(t(d,h[0])/2);this.clipBox={x:b,y:c,width:T(this.plotSizeX-t(d,h[1])/2-b),height:t(0,T(this.plotSizeY-t(d,h[2])/2-c))};a||o(this.axes,function(a){a.setAxisSize();a.setAxisTranslation()})},resetMargins:function(){var a=this;o(nb,function(b,c){a[b]=p(a.margin[c],
	a.spacing[c])});a.axisOffset=[0,0,0,0];a.clipOffset=[0,0,0,0]},drawChartBox:function(){var a=this.options.chart,b=this.renderer,c=this.chartWidth,d=this.chartHeight,e=this.chartBackground,f=this.plotBackground,g=this.plotBorder,h=this.plotBGImage,i=a.borderWidth||0,k=a.backgroundColor,j=a.plotBackgroundColor,l=a.plotBackgroundImage,m=a.plotBorderWidth||0,n,r=this.plotLeft,p=this.plotTop,o=this.plotWidth,v=this.plotHeight,x=this.plotBox,w=this.clipRect,t=this.clipBox;n=i+(a.shadow?8:0);if(i||k)if(e)e.animate(e.crisp({width:c-
	n,height:d-n}));else{e={fill:k||"none"};if(i)e.stroke=a.borderColor,e["stroke-width"]=i;this.chartBackground=b.rect(n/2,n/2,c-n,d-n,a.borderRadius,i).attr(e).addClass("highcharts-background").add().shadow(a.shadow)}if(j)f?f.animate(x):this.plotBackground=b.rect(r,p,o,v,0).attr({fill:j}).add().shadow(a.plotShadow);if(l)h?h.animate(x):this.plotBGImage=b.image(l,r,p,o,v).add();w?w.animate({width:t.width,height:t.height}):this.clipRect=b.clipRect(t);if(m)g?(g.strokeWidth=-m,g.animate(g.crisp({x:r,y:p,
	width:o,height:v}))):this.plotBorder=b.rect(r,p,o,v,0,-m).attr({stroke:a.plotBorderColor,"stroke-width":m,fill:"none",zIndex:1}).add();this.isDirtyBox=!1},propFromSeries:function(){var a=this,b=a.options.chart,c,d=a.options.series,e,f;o(["inverted","angular","polar"],function(g){c=I[b.type||b.defaultSeriesType];f=a[g]||b[g]||c&&c.prototype[g];for(e=d&&d.length;!f&&e--;)(c=I[d[e].type])&&c.prototype[g]&&(f=!0);a[g]=f})},linkSeries:function(){var a=this,b=a.series;o(b,function(a){a.linkedSeries.length=
	0});o(b,function(b){var d=b.options.linkedTo;if(xa(d)&&(d=d===":previous"?a.series[b.index-1]:a.get(d)))d.linkedSeries.push(b),b.linkedParent=d,b.visible=p(b.options.visible,d.options.visible,b.visible)})},renderSeries:function(){o(this.series,function(a){a.translate();a.render()})},renderLabels:function(){var a=this,b=a.options.labels;b.items&&o(b.items,function(c){var d=u(b.style,c.style),e=C(d.left)+a.plotLeft,f=C(d.top)+a.plotTop+12;delete d.left;delete d.top;a.renderer.text(c.html,e,f).attr({zIndex:2}).css(d).add()})},
	render:function(){var a=this.axes,b=this.renderer,c=this.options,d,e,f,g;this.setTitle();this.legend=new ob(this,c.legend);this.getStacks&&this.getStacks();this.getMargins(!0);this.setChartSize();d=this.plotWidth;e=this.plotHeight-=21;o(a,function(a){a.setScale()});this.getAxisMargins();f=d/this.plotWidth>1.1;g=e/this.plotHeight>1.05;if(f||g)this.maxTicks=null,o(a,function(a){(a.horiz&&f||!a.horiz&&g)&&a.setTickInterval(!0)}),this.getMargins();this.drawChartBox();this.hasCartesianSeries&&o(a,function(a){a.visible&&
	a.render()});if(!this.seriesGroup)this.seriesGroup=b.g("series-group").attr({zIndex:3}).add();this.renderSeries();this.renderLabels();this.showCredits(c.credits);this.hasRendered=!0},showCredits:function(a){if(a.enabled&&!this.credits)this.credits=this.renderer.text(a.text,0,0).on("click",function(){if(a.href)E.location.href=a.href}).attr({align:a.position.align,zIndex:8}).css(a.style).add().align(a.position)},destroy:function(){var a=this,b=a.axes,c=a.series,d=a.container,e,f=d&&d.parentNode;H(a,
	"destroy");S[a.index]=z;eb--;a.renderTo.removeAttribute("data-highcharts-chart");V(a);for(e=b.length;e--;)b[e]=b[e].destroy();for(e=c.length;e--;)c[e]=c[e].destroy();o("title,subtitle,chartBackground,plotBackground,plotBGImage,plotBorder,seriesGroup,clipRect,credits,pointer,scroller,rangeSelector,legend,resetZoomButton,tooltip,renderer".split(","),function(b){var c=a[b];c&&c.destroy&&(a[b]=c.destroy())});if(d)d.innerHTML="",V(d),f&&Ta(d);for(e in a)delete a[e]},isReadyToRender:function(){var a=this;
	return!ca&&E==E.top&&y.readyState!=="complete"||ha&&!E.canvg?(ha?Ob.push(function(){a.firstRender()},a.options.global.canvasToolsURL):y.attachEvent("onreadystatechange",function(){y.detachEvent("onreadystatechange",a.firstRender);y.readyState==="complete"&&a.firstRender()}),!1):!0},firstRender:function(){var a=this,b=a.options;if(a.isReadyToRender()){a.getContainer();H(a,"init");a.resetMargins();a.setChartSize();a.propFromSeries();a.getAxes();o(b.series||[],function(b){a.initSeries(b)});a.linkSeries();
	H(a,"beforeRender");if(B.Pointer)a.pointer=new Xa(a,b);a.render();a.renderer.draw();if(!a.renderer.imgCount)a.onload();a.cloneRenderTo(!0)}},onload:function(){var a=this;o([this.callback].concat(this.callbacks),function(b){b&&a.index!==void 0&&b.apply(a,[a])});a.renderer.imgCount||H(a,"load")},splashArray:function(a,b){var c=b[a],c=Y(c)?c:[c,c,c,c];return[p(b[a+"Top"],c[0]),p(b[a+"Right"],c[1]),p(b[a+"Bottom"],c[2]),p(b[a+"Left"],c[3])]}};var Cb=B.CenteredSeriesMixin={getCenter:function(){var a=this.options,
	b=this.chart,c=2*(a.slicedOffset||0),d=b.plotWidth-2*c,b=b.plotHeight-2*c,e=a.center,e=[p(e[0],"50%"),p(e[1],"50%"),a.size||"100%",a.innerSize||0],f=F(d,b),g,h;for(g=0;g<4;++g)h=e[g],a=g<2||g===2&&/%$/.test(h),e[g]=(/%$/.test(h)?[d,b,f,e[2]][g]*parseFloat(h)/100:parseFloat(h))+(a?c:0);e[3]>e[2]&&(e[3]=e[2]);return e}},Ha=function(){};Ha.prototype={init:function(a,b,c){this.series=a;this.color=a.color;this.applyOptions(b,c);this.pointAttr={};if(a.options.colorByPoint&&(b=a.options.colors||a.chart.options.colors,
	this.color=this.color||b[a.colorCounter++],a.colorCounter===b.length))a.colorCounter=0;a.chart.pointCount++;return this},applyOptions:function(a,b){var c=this.series,d=c.options.pointValKey||c.pointValKey,a=Ha.prototype.optionsToObject.call(this,a);u(this,a);this.options=this.options?u(this.options,a):a;if(d)this.y=this[d];this.isNull=this.y===null;if(typeof this.x!=="number"&&c)this.x=b===void 0?c.autoIncrement():b;return this},optionsToObject:function(a){var b={},c=this.series,d=c.options.keys,
	e=d||c.pointArrayMap||["y"],f=e.length,g=0,h=0;if(typeof a==="number"||a===null)b[e[0]]=a;else if(Ia(a)){if(!d&&a.length>f){c=typeof a[0];if(c==="string")b.name=a[0];else if(c==="number")b.x=a[0];g++}for(;h<f;){if(!d||a[g]!==void 0)b[e[h]]=a[g];g++;h++}}else if(typeof a==="object"){b=a;if(a.dataLabels)c._hasPointLabels=!0;if(a.marker)c._hasPointMarkers=!0}return b},destroy:function(){var a=this.series.chart,b=a.hoverPoints,c;a.pointCount--;if(b&&(this.setState(),oa(b,this),!b.length))a.hoverPoints=
	null;if(this===a.hoverPoint)this.onMouseOut();if(this.graphic||this.dataLabel)V(this),this.destroyElements();this.legendItem&&a.legend.destroyItem(this);for(c in this)this[c]=null},destroyElements:function(){for(var a=["graphic","dataLabel","dataLabelUpper","connector","shadowGroup"],b,c=6;c--;)b=a[c],this[b]&&(this[b]=this[b].destroy())},getLabelConfig:function(){return{x:this.category,y:this.y,color:this.color,key:this.name||this.category,series:this.series,point:this,percentage:this.percentage,
	total:this.total||this.stackTotal}},tooltipFormatter:function(a){var b=this.series,c=b.tooltipOptions,d=p(c.valueDecimals,""),e=c.valuePrefix||"",f=c.valueSuffix||"";o(b.pointArrayMap||["y"],function(b){b="{point."+b;if(e||f)a=a.replace(b+"}",e+b+"}"+f);a=a.replace(b+"}",b+":,."+d+"f}")});return Ka(a,{point:this,series:this.series})},firePointEvent:function(a,b,c){var d=this,e=this.series.options;(e.point.events[a]||d.options&&d.options.events&&d.options.events[a])&&this.importEvents();a==="click"&&
	e.allowPointSelect&&(c=function(a){d.select&&d.select(null,a.ctrlKey||a.metaKey||a.shiftKey)});H(this,a,b,c)},visible:!0};var Q=B.Series=function(){};Q.prototype={isCartesian:!0,type:"line",pointClass:Ha,sorted:!0,requireSorting:!0,pointAttrToOptions:{stroke:"lineColor","stroke-width":"lineWidth",fill:"fillColor",r:"radius"},directTouch:!1,axisTypes:["xAxis","yAxis"],colorCounter:0,parallelArrays:["x","y"],init:function(a,b){var c=this,d,e,f=a.series,g=function(a,b){return p(a.options.index,a._i)-
	p(b.options.index,b._i)};c.chart=a;c.options=b=c.setOptions(b);c.linkedSeries=[];c.bindAxes();u(c,{name:b.name,state:"",pointAttr:{},visible:b.visible!==!1,selected:b.selected===!0});if(ha)b.animation=!1;e=b.events;for(d in e)M(c,d,e[d]);if(e&&e.click||b.point&&b.point.events&&b.point.events.click||b.allowPointSelect)a.runTrackerClick=!0;c.getColor();c.getSymbol();o(c.parallelArrays,function(a){c[a+"Data"]=[]});c.setData(b.data,!1);if(c.isCartesian)a.hasCartesianSeries=!0;f.push(c);c._i=f.length-
	1;ib(f,g);this.yAxis&&ib(this.yAxis.series,g);o(f,function(a,b){a.index=b;a.name=a.name||"Series "+(b+1)})},bindAxes:function(){var a=this,b=a.options,c=a.chart,d;o(a.axisTypes||[],function(e){o(c[e],function(c){d=c.options;if(b[e]===d.index||b[e]!==z&&b[e]===d.id||b[e]===z&&d.index===0)c.series.push(a),a[e]=c,c.isDirty=!0});!a[e]&&a.optionalAxis!==e&&X(18,!0)})},updateParallelArrays:function(a,b){var c=a.series,d=arguments;o(c.parallelArrays,typeof b==="number"?function(d){var f=d==="y"&&c.toYData?
	c.toYData(a):a[d];c[d+"Data"][b]=f}:function(a){Array.prototype[b].apply(c[a+"Data"],Array.prototype.slice.call(d,2))})},autoIncrement:function(){var a=this.options,b=this.xIncrement,c,d=a.pointIntervalUnit,b=p(b,a.pointStart,0);this.pointInterval=c=p(this.pointInterval,a.pointInterval,1);if(d==="month"||d==="year")a=new qa(b),a=d==="month"?+a[xb](a[ab]()+c):+a[yb](a[bb]()+c),c=a-b;this.xIncrement=b+c;return b},setOptions:function(a){var b=this.chart,c=b.options.plotOptions,b=b.userOptions||{},d=
	b.plotOptions||{},e=c[this.type];this.userOptions=a;c=D(e,c.series,a);this.tooltipOptions=D(N.tooltip,N.plotOptions[this.type].tooltip,b.tooltip,d.series&&d.series.tooltip,d[this.type]&&d[this.type].tooltip,a.tooltip);e.marker===null&&delete c.marker;this.zoneAxis=c.zoneAxis;a=this.zones=(c.zones||[]).slice();if((c.negativeColor||c.negativeFillColor)&&!c.zones)a.push({value:c[this.zoneAxis+"Threshold"]||c.threshold||0,color:c.negativeColor,fillColor:c.negativeFillColor});a.length&&q(a[a.length-1].value)&&
	a.push({color:this.color,fillColor:this.fillColor});return c},getCyclic:function(a,b,c){var d=this.userOptions,e="_"+a+"Index",f=a+"Counter";b||(q(d[e])?b=d[e]:(d[e]=b=this.chart[f]%c.length,this.chart[f]+=1),b=c[b]);this[a]=b},getColor:function(){this.options.colorByPoint?this.options.color=null:this.getCyclic("color",this.options.color||aa[this.type].color,this.chart.options.colors)},getSymbol:function(){var a=this.options.marker;this.getCyclic("symbol",a.symbol,this.chart.options.symbols);if(/^url/.test(this.symbol))a.radius=
	0},drawLegendSymbol:J.drawLineMarker,setData:function(a,b,c,d){var e=this,f=e.points,g=f&&f.length||0,h,i=e.options,k=e.chart,j=null,l=e.xAxis,m=l&&!!l.categories,n=i.turboThreshold,r=this.xData,s=this.yData,t=(h=e.pointArrayMap)&&h.length,a=a||[];h=a.length;b=p(b,!0);if(d!==!1&&h&&g===h&&!e.cropped&&!e.hasGroupedData&&e.visible)o(a,function(a,b){f[b].update&&a!==i.data[b]&&f[b].update(a,!1,null,!1)});else{e.xIncrement=null;e.colorCounter=0;o(this.parallelArrays,function(a){e[a+"Data"].length=0});
	if(n&&h>n){for(c=0;j===null&&c<h;)j=a[c],c++;if(ma(j)){m=p(i.pointStart,0);j=p(i.pointInterval,1);for(c=0;c<h;c++)r[c]=m,s[c]=a[c],m+=j;e.xIncrement=m}else if(Ia(j))if(t)for(c=0;c<h;c++)j=a[c],r[c]=j[0],s[c]=j.slice(1,t+1);else for(c=0;c<h;c++)j=a[c],r[c]=j[0],s[c]=j[1];else X(12)}else for(c=0;c<h;c++)if(a[c]!==z&&(j={series:e},e.pointClass.prototype.applyOptions.apply(j,[a[c]]),e.updateParallelArrays(j,c),m&&q(j.name)))l.names[j.x]=j.name;xa(s[0])&&X(14,!0);e.data=[];e.options.data=e.userOptions.data=
	a;for(c=g;c--;)f[c]&&f[c].destroy&&f[c].destroy();if(l)l.minRange=l.userMinRange;e.isDirty=e.isDirtyData=k.isDirtyBox=!0;c=!1}i.legendType==="point"&&(this.processData(),this.generatePoints());b&&k.redraw(c)},processData:function(a){var b=this.xData,c=this.yData,d=b.length,e;e=0;var f,g,h=this.xAxis,i,k=this.options;i=k.cropThreshold;var j=this.getExtremesFromAll||k.getExtremesFromAll,l=this.isCartesian,k=h&&h.val2lin,m=h&&h.isLog,n,p;if(l&&!this.isDirty&&!h.isDirty&&!this.yAxis.isDirty&&!a)return!1;
	if(h)a=h.getExtremes(),n=a.min,p=a.max;if(l&&this.sorted&&!j&&(!i||d>i||this.forceCrop))if(b[d-1]<n||b[0]>p)b=[],c=[];else if(b[0]<n||b[d-1]>p)e=this.cropData(this.xData,this.yData,n,p),b=e.xData,c=e.yData,e=e.start,f=!0;for(i=b.length||1;--i;)d=m?k(b[i])-k(b[i-1]):b[i]-b[i-1],d>0&&(g===z||d<g)?g=d:d<0&&this.requireSorting&&X(15);this.cropped=f;this.cropStart=e;this.processedXData=b;this.processedYData=c;this.closestPointRange=g},cropData:function(a,b,c,d){var e=a.length,f=0,g=e,h=p(this.cropShoulder,
	1),i;for(i=0;i<e;i++)if(a[i]>=c){f=t(0,i-h);break}for(c=i;c<e;c++)if(a[c]>d){g=c+h;break}return{xData:a.slice(f,g),yData:b.slice(f,g),start:f,end:g}},generatePoints:function(){var a=this.options.data,b=this.data,c,d=this.processedXData,e=this.processedYData,f=this.pointClass,g=d.length,h=this.cropStart||0,i,k=this.hasGroupedData,j,l=[],m;if(!b&&!k)b=[],b.length=a.length,b=this.data=b;for(m=0;m<g;m++)i=h+m,k?l[m]=(new f).init(this,[d[m]].concat(ta(e[m]))):(b[i]?j=b[i]:a[i]!==z&&(b[i]=j=(new f).init(this,
	a[i],d[m])),l[m]=j),l[m].index=i;if(b&&(g!==(c=b.length)||k))for(m=0;m<c;m++)if(m===h&&!k&&(m+=g),b[m])b[m].destroyElements(),b[m].plotX=z;this.data=b;this.points=l},getExtremes:function(a){var b=this.yAxis,c=this.processedXData,d,e=[],f=0;d=this.xAxis.getExtremes();var g=d.min,h=d.max,i,k,j,l,a=a||this.stackedYData||this.processedYData;d=a.length;for(l=0;l<d;l++)if(k=c[l],j=a[l],i=j!==null&&j!==z&&(!b.isLog||j.length||j>0),k=this.getExtremesFromAll||this.options.getExtremesFromAll||this.cropped||
	(c[l+1]||k)>=g&&(c[l-1]||k)<=h,i&&k)if(i=j.length)for(;i--;)j[i]!==null&&(e[f++]=j[i]);else e[f++]=j;this.dataMin=Ra(e);this.dataMax=Ea(e)},translate:function(){this.processedXData||this.processData();this.generatePoints();for(var a=this.options,b=a.stacking,c=this.xAxis,d=c.categories,e=this.yAxis,f=this.points,g=f.length,h=!!this.modifyValue,i=a.pointPlacement,k=i==="between"||ma(i),j=a.threshold,l=a.startFromThreshold?j:0,m,n,r,o,R=Number.MAX_VALUE,a=0;a<g;a++){var v=f[a],x=v.x,w=v.y;n=v.low;var u=
	b&&e.stacks[(this.negStacks&&w<(l?0:j)?"-":"")+this.stackKey];if(e.isLog&&w!==null&&w<=0)v.y=w=null,X(10);v.plotX=m=F(t(-1E5,c.translate(x,0,0,0,1,i,this.type==="flags")),1E5);if(b&&this.visible&&!v.isNull&&u&&u[x])o=this.getStackIndicator(o,x,this.index),u=u[x],w=u.points[o.key],n=w[0],w=w[1],n===l&&(n=p(j,e.min)),e.isLog&&n<=0&&(n=null),v.total=v.stackTotal=u.total,v.percentage=u.total&&v.y/u.total*100,v.stackY=w,u.setOffset(this.pointXOffset||0,this.barW||0);v.yBottom=q(n)?e.translate(n,0,1,0,
	1):null;h&&(w=this.modifyValue(w,v));v.plotY=n=typeof w==="number"&&w!==Infinity?F(t(-1E5,e.translate(w,0,1,0,1)),1E5):z;v.isInside=n!==z&&n>=0&&n<=e.len&&m>=0&&m<=c.len;v.clientX=k?c.translate(x,0,0,0,1):m;v.negative=v.y<(j||0);v.category=d&&d[v.x]!==z?d[v.x]:v.x;a&&(R=F(R,P(m-r)));r=m}this.closestPointRangePx=R},getValidPoints:function(a){return Na(a||this.points,function(a){return!a.isNull})},setClip:function(a){var b=this.chart,c=this.options,d=b.renderer,e=b.inverted,f=this.clipBox,g=f||b.clipBox,
	h=this.sharedClipKey||["_sharedClip",a&&a.duration,a&&a.easing,g.height,c.xAxis,c.yAxis].join(","),i=b[h],k=b[h+"m"];if(!i){if(a)g.width=0,b[h+"m"]=k=d.clipRect(-99,e?-b.plotLeft:-b.plotTop,99,e?b.chartWidth:b.chartHeight);b[h]=i=d.clipRect(g)}a&&(i.count+=1);if(c.clip!==!1)this.group.clip(a||f?i:b.clipRect),this.markerGroup.clip(k),this.sharedClipKey=h;a||(i.count-=1,i.count<=0&&h&&b[h]&&(f||(b[h]=b[h].destroy()),b[h+"m"]&&(b[h+"m"]=b[h+"m"].destroy())))},animate:function(a){var b=this.chart,c=this.options.animation,
	d;if(c&&!Y(c))c=aa[this.type].animation;a?this.setClip(c):(d=this.sharedClipKey,(a=b[d])&&a.animate({width:b.plotSizeX},c),b[d+"m"]&&b[d+"m"].animate({width:b.plotSizeX+99},c),this.animate=null)},afterAnimate:function(){this.setClip();H(this,"afterAnimate")},drawPoints:function(){var a,b=this.points,c=this.chart,d,e,f,g,h,i,k,j,l=this.options.marker,m=this.pointAttr[""],n,r,o,t=this.markerGroup,v=p(l.enabled,this.xAxis.isRadial,this.closestPointRangePx>2*l.radius);if(l.enabled!==!1||this._hasPointMarkers)for(f=
	b.length;f--;)if(g=b[f],d=T(g.plotX),e=g.plotY,j=g.graphic,n=g.marker||{},r=!!g.marker,a=v&&n.enabled===z||n.enabled,o=g.isInside,a&&e!==z&&!isNaN(e)&&g.y!==null)if(a=g.pointAttr[g.selected?"select":""]||m,h=a.r,i=p(n.symbol,this.symbol),k=i.indexOf("url")===0,j)j[o?"show":"hide"](!0).attr(a).animate(u({x:d-h,y:e-h},j.symbolName?{width:2*h,height:2*h}:{}));else{if(o&&(h>0||k))g.graphic=c.renderer.symbol(i,d-h,e-h,2*h,2*h,r?n:l).attr(a).add(t)}else if(j)g.graphic=j.destroy()},convertAttribs:function(a,
	b,c,d){var e=this.pointAttrToOptions,f,g,h={},a=a||{},b=b||{},c=c||{},d=d||{};for(f in e)g=e[f],h[f]=p(a[g],b[f],c[f],d[f]);return h},getAttribs:function(){var a=this,b=a.options,c=aa[a.type].marker?b.marker:b,d=c.states,e=d.hover,f,g=a.color,h=a.options.negativeColor;f={stroke:g,fill:g};var i=a.points||[],k,j,l=[],m=a.pointAttrToOptions;k=a.hasPointSpecificOptions;var n=c.lineColor,r=c.fillColor;j=b.turboThreshold;var s=a.zones,t=a.zoneAxis||"y",v;b.marker?(e.radius=e.radius||c.radius+e.radiusPlus,
	e.lineWidth=e.lineWidth||c.lineWidth+e.lineWidthPlus):(e.color=e.color||ia(e.color||g).brighten(e.brightness).get(),e.negativeColor=e.negativeColor||ia(e.negativeColor||h).brighten(e.brightness).get());l[""]=a.convertAttribs(c,f);o(["hover","select"],function(b){l[b]=a.convertAttribs(d[b],l[""])});a.pointAttr=l;g=i.length;if(!j||g<j||k)for(;g--;){j=i[g];if((c=j.options&&j.options.marker||j.options)&&c.enabled===!1)c.radius=0;if(s.length){k=0;for(f=s[k];j[t]>=f.value;)f=s[++k];j.color=j.fillColor=
	p(f.color,a.color)}k=b.colorByPoint||j.color;if(j.options)for(v in m)q(c[m[v]])&&(k=!0);if(k){c=c||{};k=[];d=c.states||{};f=d.hover=d.hover||{};if(!b.marker||j.negative&&!f.fillColor&&!e.fillColor)f[a.pointAttrToOptions.fill]=f.color||!j.options.color&&e[j.negative&&h?"negativeColor":"color"]||ia(j.color).brighten(f.brightness||e.brightness).get();f={color:j.color};if(!r)f.fillColor=j.color;if(!n)f.lineColor=j.color;c.hasOwnProperty("color")&&!c.color&&delete c.color;k[""]=a.convertAttribs(u(f,c),
	l[""]);k.hover=a.convertAttribs(d.hover,l.hover,k[""]);k.select=a.convertAttribs(d.select,l.select,k[""])}else k=l;j.pointAttr=k}},destroy:function(){var a=this,b=a.chart,c=/AppleWebKit\/533/.test(za),d,e=a.data||[],f,g,h;H(a,"destroy");V(a);o(a.axisTypes||[],function(b){if(h=a[b])oa(h.series,a),h.isDirty=h.forceRedraw=!0});a.legendItem&&a.chart.legend.destroyItem(a);for(d=e.length;d--;)(f=e[d])&&f.destroy&&f.destroy();a.points=null;clearTimeout(a.animationTimeout);for(g in a)a[g]instanceof O&&!a[g].survive&&
	(d=c&&g==="group"?"hide":"destroy",a[g][d]());if(b.hoverSeries===a)b.hoverSeries=null;oa(b.series,a);for(g in a)delete a[g]},getGraphPath:function(a,b,c){var d=this,e=d.options,f=e.step,g,h=[],i,a=a||d.points;(g=a.reversed)&&a.reverse();(f={right:1,center:2}[f]||f&&3)&&g&&(f=4-f);e.connectNulls&&!b&&!c&&(a=this.getValidPoints(a));o(a,function(g,j){var l=g.plotX,m=g.plotY,n=a[j-1];if((g.leftCliff||n&&n.rightCliff)&&!c)i=!0;g.isNull&&!q(b)&&j>0?i=!e.connectNulls:g.isNull&&!b?i=!0:(j===0||i?n=["M",g.plotX,
	g.plotY]:d.getPointSpline?n=d.getPointSpline(a,g,j):f?(n=f===1?["L",n.plotX,m]:f===2?["L",(n.plotX+l)/2,n.plotY,"L",(n.plotX+l)/2,m]:["L",l,n.plotY],n.push("L",l,m)):n=["L",l,m],h.push.apply(h,n),i=!1)});return d.graphPath=h},drawGraph:function(){var a=this,b=this.options,c=[["graph",b.lineColor||this.color,b.dashStyle]],d=b.lineWidth,e=b.linecap!=="square",f=(this.gappedPath||this.getGraphPath).call(this),g=this.fillGraph&&this.color||"none";o(this.zones,function(d,e){c.push(["zoneGraph"+e,d.color||
	a.color,d.dashStyle||b.dashStyle])});o(c,function(c,i){var k=c[0],j=a[k];if(j)j.animate({d:f});else if((d||g)&&f.length)j={stroke:c[1],"stroke-width":d,fill:g,zIndex:1},c[2]?j.dashstyle=c[2]:e&&(j["stroke-linecap"]=j["stroke-linejoin"]="round"),a[k]=a.chart.renderer.path(f).attr(j).add(a.group).shadow(i<2&&b.shadow)})},applyZones:function(){var a=this,b=this.chart,c=b.renderer,d=this.zones,e,f,g=this.clips||[],h,i=this.graph,k=this.area,j=t(b.chartWidth,b.chartHeight),l=this[(this.zoneAxis||"y")+
	"Axis"],m,n=l.reversed,r=b.inverted,s=l.horiz,q,v,x,w=!1;if(d.length&&(i||k)&&l.min!==z)i&&i.hide(),k&&k.hide(),m=l.getExtremes(),o(d,function(d,o){e=n?s?b.plotWidth:0:s?0:l.toPixels(m.min);e=F(t(p(f,e),0),j);f=F(t(A(l.toPixels(p(d.value,m.max),!0)),0),j);w&&(e=f=l.toPixels(m.max));q=Math.abs(e-f);v=F(e,f);x=t(e,f);if(l.isXAxis){if(h={x:r?x:v,y:0,width:q,height:j},!s)h.x=b.plotHeight-h.x}else if(h={x:0,y:r?x:v,width:j,height:q},s)h.y=b.plotWidth-h.y;b.inverted&&c.isVML&&(h=l.isXAxis?{x:0,y:n?v:x,
	height:h.width,width:b.chartWidth}:{x:h.y-b.plotLeft-b.spacingBox.x,y:0,width:h.height,height:b.chartHeight});g[o]?g[o].animate(h):(g[o]=c.clipRect(h),i&&a["zoneGraph"+o].clip(g[o]),k&&a["zoneArea"+o].clip(g[o]));w=d.value>m.max}),this.clips=g},invertGroups:function(){function a(){var a={width:b.yAxis.len,height:b.xAxis.len};o(["group","markerGroup"],function(c){b[c]&&b[c].attr(a).invert()})}var b=this,c=b.chart;if(b.xAxis)M(c,"resize",a),M(b,"destroy",function(){V(c,"resize",a)}),a(),b.invertGroups=
	a},plotGroup:function(a,b,c,d,e){var f=this[a],g=!f;g&&(this[a]=f=this.chart.renderer.g(b).attr({zIndex:d||0.1}).add(e),f.addClass("highcharts-series-"+this.index));f.attr({visibility:c})[g?"attr":"animate"](this.getPlotBox());return f},getPlotBox:function(){var a=this.chart,b=this.xAxis,c=this.yAxis;if(a.inverted)b=c,c=this.xAxis;return{translateX:b?b.left:a.plotLeft,translateY:c?c.top:a.plotTop,scaleX:1,scaleY:1}},render:function(){var a=this,b=a.chart,c,d=a.options,e=(c=d.animation)&&!!a.animate&&
	b.renderer.isSVG&&p(c.duration,500)||0,f=a.visible?"inherit":"hidden",g=d.zIndex,h=a.hasRendered,i=b.seriesGroup;c=a.plotGroup("group","series",f,g,i);a.markerGroup=a.plotGroup("markerGroup","markers",f,g,i);e&&a.animate(!0);a.getAttribs();c.inverted=a.isCartesian?b.inverted:!1;a.drawGraph&&(a.drawGraph(),a.applyZones());o(a.points,function(a){a.redraw&&a.redraw()});a.drawDataLabels&&a.drawDataLabels();a.visible&&a.drawPoints();a.drawTracker&&a.options.enableMouseTracking!==!1&&a.drawTracker();b.inverted&&
	a.invertGroups();d.clip!==!1&&!a.sharedClipKey&&!h&&c.clip(b.clipRect);e&&a.animate();if(!h)a.animationTimeout=Pa(function(){a.afterAnimate()},e);a.isDirty=a.isDirtyData=!1;a.hasRendered=!0},redraw:function(){var a=this.chart,b=this.isDirtyData,c=this.isDirty,d=this.group,e=this.xAxis,f=this.yAxis;d&&(a.inverted&&d.attr({width:a.plotWidth,height:a.plotHeight}),d.animate({translateX:p(e&&e.left,a.plotLeft),translateY:p(f&&f.top,a.plotTop)}));this.translate();this.render();b&&H(this,"updatedData");
	(c||b)&&delete this.kdTree},kdDimensions:1,kdAxisArray:["clientX","plotY"],searchPoint:function(a,b){var c=this.xAxis,d=this.yAxis,e=this.chart.inverted;return this.searchKDTree({clientX:e?c.len-a.chartY+c.pos:a.chartX-c.pos,plotY:e?d.len-a.chartX+d.pos:a.chartY-d.pos},b)},buildKDTree:function(){function a(c,e,f){var g,h;if(h=c&&c.length)return g=b.kdAxisArray[e%f],c.sort(function(a,b){return a[g]-b[g]}),h=Math.floor(h/2),{point:c[h],left:a(c.slice(0,h),e+1,f),right:a(c.slice(h+1),e+1,f)}}var b=this,
	c=b.kdDimensions;delete b.kdTree;Pa(function(){b.kdTree=a(b.getValidPoints(),c,c)},b.options.kdNow?0:1)},searchKDTree:function(a,b){function c(a,b,k,j){var l=b.point,m=d.kdAxisArray[k%j],n,p,o=l;p=q(a[e])&&q(l[e])?Math.pow(a[e]-l[e],2):null;n=q(a[f])&&q(l[f])?Math.pow(a[f]-l[f],2):null;n=(p||0)+(n||0);l.dist=q(n)?Math.sqrt(n):Number.MAX_VALUE;l.distX=q(p)?Math.sqrt(p):Number.MAX_VALUE;m=a[m]-l[m];n=m<0?"left":"right";p=m<0?"right":"left";b[n]&&(n=c(a,b[n],k+1,j),o=n[g]<o[g]?n:l);b[p]&&Math.sqrt(m*
	m)<o[g]&&(a=c(a,b[p],k+1,j),o=a[g]<o[g]?a:o);return o}var d=this,e=this.kdAxisArray[0],f=this.kdAxisArray[1],g=b?"distX":"dist";this.kdTree||this.buildKDTree();if(this.kdTree)return c(a,this.kdTree,this.kdDimensions,this.kdDimensions)}};Kb.prototype={destroy:function(){Sa(this,this.axis)},render:function(a){var b=this.options,c=b.format,c=c?Ka(c,this):b.formatter.call(this);this.label?this.label.attr({text:c,visibility:"hidden"}):this.label=this.axis.chart.renderer.text(c,null,null,b.useHTML).css(b.style).attr({align:this.textAlign,
	rotation:b.rotation,visibility:"hidden"}).add(a)},setOffset:function(a,b){var c=this.axis,d=c.chart,e=d.inverted,f=c.reversed,f=this.isNegative&&!f||!this.isNegative&&f,g=c.translate(c.usePercentage?100:this.total,0,0,0,1),c=c.translate(0),c=P(g-c),h=d.xAxis[0].translate(this.x)+a,i=d.plotHeight,f={x:e?f?g:g-c:h,y:e?i-h-b:f?i-g-c:i-g,width:e?c:b,height:e?b:c};if(e=this.label)e.align(this.alignOptions,null,f),f=e.alignAttr,e[this.options.crop===!1||d.isInsidePlot(f.x,f.y)?"show":"hide"](!0)}};hb.prototype.getStacks=
	function(){var a=this;o(a.yAxis,function(a){if(a.stacks&&a.hasVisibleSeries)a.oldStacks=a.stacks});o(a.series,function(b){if(b.options.stacking&&(b.visible===!0||a.options.chart.ignoreHiddenSeries===!1))b.stackKey=b.type+p(b.options.stack,"")})};ka.prototype.buildStacks=function(){var a=this.series,b,c=p(this.options.reversedStacks,!0),d=a.length,e;if(!this.isXAxis){this.usePercentage=!1;for(e=d;e--;)a[c?e:d-e-1].setStackedPoints();for(e=d;e--;)b=a[c?e:d-e-1],b.setStackCliffs&&b.setStackCliffs();
	if(this.usePercentage)for(e=0;e<d;e++)a[e].setPercentStacks()}};ka.prototype.renderStackTotals=function(){var a=this.chart,b=a.renderer,c=this.stacks,d,e,f=this.stackTotalGroup;if(!f)this.stackTotalGroup=f=b.g("stack-labels").attr({visibility:"visible",zIndex:6}).add();f.translate(a.plotLeft,a.plotTop);for(d in c)for(e in a=c[d],a)a[e].render(f)};ka.prototype.resetStacks=function(){var a=this.stacks,b,c;if(!this.isXAxis)for(b in a)for(c in a[b])a[b][c].touched<this.stacksTouched?(a[b][c].destroy(),
	delete a[b][c]):(a[b][c].total=null,a[b][c].cum=0)};ka.prototype.cleanStacks=function(){var a,b,c;if(!this.isXAxis){if(this.oldStacks)a=this.stacks=this.oldStacks;for(b in a)for(c in a[b])a[b][c].cum=a[b][c].total}};Q.prototype.setStackedPoints=function(){if(this.options.stacking&&!(this.visible!==!0&&this.chart.options.chart.ignoreHiddenSeries!==!1)){var a=this.processedXData,b=this.processedYData,c=[],d=b.length,e=this.options,f=e.threshold,g=e.startFromThreshold?f:0,h=e.stack,e=e.stacking,i=this.stackKey,
	k="-"+i,j=this.negStacks,l=this.yAxis,m=l.stacks,n=l.oldStacks,o,s,q,v,x,w,u;l.stacksTouched+=1;for(x=0;x<d;x++){w=a[x];u=b[x];o=this.getStackIndicator(o,w,this.index);v=o.key;q=(s=j&&u<(g?0:f))?k:i;m[q]||(m[q]={});if(!m[q][w])n[q]&&n[q][w]?(m[q][w]=n[q][w],m[q][w].total=null):m[q][w]=new Kb(l,l.options.stackLabels,s,w,h);q=m[q][w];if(u!==null)q.points[v]=q.points[this.index]=[p(q.cum,g)],q.touched=l.stacksTouched,o.index>0&&this.singleStacks===!1&&(q.points[v][0]=q.points[this.index+","+w+",0"][0]);
	e==="percent"?(s=s?i:k,j&&m[s]&&m[s][w]?(s=m[s][w],q.total=s.total=t(s.total,q.total)+P(u)||0):q.total=fa(q.total+(P(u)||0))):q.total=fa(q.total+(u||0));q.cum=p(q.cum,g)+(u||0);u!==null&&q.points[v].push(q.cum);c[x]=q.cum}if(e==="percent")l.usePercentage=!0;this.stackedYData=c;l.oldStacks={}}};Q.prototype.setPercentStacks=function(){var a=this,b=a.stackKey,c=a.yAxis.stacks,d=a.processedXData,e;o([b,"-"+b],function(b){var f;for(var g=d.length,h,i;g--;)if(h=d[g],e=a.getStackIndicator(e,h,a.index),f=
	(i=c[b]&&c[b][h])&&i.points[e.key],h=f)i=i.total?100/i.total:0,h[0]=fa(h[0]*i),h[1]=fa(h[1]*i),a.stackedYData[g]=h[1]})};Q.prototype.getStackIndicator=function(a,b,c){!q(a)||a.x!==b?a={x:b,index:0}:a.index++;a.key=[c,b,a.index].join(",");return a};u(hb.prototype,{addSeries:function(a,b,c){var d,e=this;a&&(b=p(b,!0),H(e,"addSeries",{options:a},function(){d=e.initSeries(a);e.isDirtyLegend=!0;e.linkSeries();b&&e.redraw(c)}));return d},addAxis:function(a,b,c,d){var e=b?"xAxis":"yAxis",f=this.options;
	new ka(this,D(a,{index:this[e].length,isX:b}));f[e]=ta(f[e]||{});f[e].push(a);p(c,!0)&&this.redraw(d)},showLoading:function(a){var b=this,c=b.options,d=b.loadingDiv,e=c.loading,f=function(){d&&L(d,{left:b.plotLeft+"px",top:b.plotTop+"px",width:b.plotWidth+"px",height:b.plotHeight+"px"})};if(!d)b.loadingDiv=d=Z(La,{className:"highcharts-loading"},u(e.style,{zIndex:10,display:"none"}),b.container),b.loadingSpan=Z("span",null,e.labelStyle,d),M(b,"redraw",f);b.loadingSpan.innerHTML=a||c.lang.loading;
	if(!b.loadingShown)L(d,{opacity:0,display:""}),Wa(d,{opacity:e.style.opacity},{duration:e.showDuration||0}),b.loadingShown=!0;f()},hideLoading:function(){var a=this.options,b=this.loadingDiv;b&&Wa(b,{opacity:0},{duration:a.loading.hideDuration||100,complete:function(){L(b,{display:"none"})}});this.loadingShown=!1}});u(Ha.prototype,{update:function(a,b,c,d){function e(){f.applyOptions(a);if(f.y===null&&h)f.graphic=h.destroy();if(Y(a)&&!Ia(a))f.redraw=function(){if(h&&h.element&&a&&a.marker&&a.marker.symbol)f.graphic=
	h.destroy();if(a&&a.dataLabels&&f.dataLabel)f.dataLabel=f.dataLabel.destroy();f.redraw=null};i=f.index;g.updateParallelArrays(f,i);if(l&&f.name)l[f.x]=f.name;j.data[i]=Y(j.data[i])?f.options:a;g.isDirty=g.isDirtyData=!0;if(!g.fixedBox&&g.hasCartesianSeries)k.isDirtyBox=!0;if(j.legendType==="point")k.isDirtyLegend=!0;b&&k.redraw(c)}var f=this,g=f.series,h=f.graphic,i,k=g.chart,j=g.options,l=g.xAxis&&g.xAxis.names,b=p(b,!0);d===!1?e():f.firePointEvent("update",{options:a},e)},remove:function(a,b){this.series.removePoint(sa(this,
	this.series.data),a,b)}});u(Q.prototype,{addPoint:function(a,b,c,d){var e=this,f=e.options,g=e.data,h=e.graph,i=e.area,k=e.chart,j=e.xAxis&&e.xAxis.names,l=h&&h.shift||0,m=["graph","area"],h=f.data,n,r=e.xData;Ua(d,k);if(c){for(d=e.zones.length;d--;)m.push("zoneGraph"+d,"zoneArea"+d);o(m,function(a){if(e[a])e[a].shift=l+(f.step?2:1)})}if(i)i.isArea=!0;b=p(b,!0);i={series:e};e.pointClass.prototype.applyOptions.apply(i,[a]);m=i.x;d=r.length;if(e.requireSorting&&m<r[d-1])for(n=!0;d&&r[d-1]>m;)d--;e.updateParallelArrays(i,
	"splice",d,0,0);e.updateParallelArrays(i,d);if(j&&i.name)j[m]=i.name;h.splice(d,0,a);n&&(e.data.splice(d,0,null),e.processData());f.legendType==="point"&&e.generatePoints();c&&(g[0]&&g[0].remove?g[0].remove(!1):(g.shift(),e.updateParallelArrays(i,"shift"),h.shift()));e.isDirty=!0;e.isDirtyData=!0;b&&(e.getAttribs(),k.redraw())},removePoint:function(a,b,c){var d=this,e=d.data,f=e[a],g=d.points,h=d.chart,i=function(){g&&g.length===e.length&&g.splice(a,1);e.splice(a,1);d.options.data.splice(a,1);d.updateParallelArrays(f||
	{series:d},"splice",a,1);f&&f.destroy();d.isDirty=!0;d.isDirtyData=!0;b&&h.redraw()};Ua(c,h);b=p(b,!0);f?f.firePointEvent("remove",null,i):i()},remove:function(a,b){var c=this,d=c.chart;H(c,"remove",null,function(){c.destroy();d.isDirtyLegend=d.isDirtyBox=!0;d.linkSeries();p(a,!0)&&d.redraw(b)})},update:function(a,b){var c=this,d=this.chart,e=this.userOptions,f=this.type,g=I[f].prototype,h=["group","markerGroup","dataLabelsGroup"],i;if(a.type&&a.type!==f||a.zIndex!==void 0)h.length=0;o(h,function(a){h[a]=
	c[a];delete c[a]});a=D(e,{animation:!1,index:this.index,pointStart:this.xData[0]},{data:this.options.data},a);this.remove(!1);for(i in g)this[i]=z;u(this,I[a.type||f].prototype);o(h,function(a){c[a]=h[a]});this.init(d,a);d.linkSeries();p(b,!0)&&d.redraw(!1)}});u(ka.prototype,{update:function(a,b){var c=this.chart,a=c.options[this.coll][this.options.index]=D(this.userOptions,a);this.destroy(!0);this._addedPlotLB=this.chart._labelPanes=z;this.init(c,u(a,{events:z}));c.isDirtyBox=!0;p(b,!0)&&c.redraw()},
	remove:function(a){for(var b=this.chart,c=this.coll,d=this.series,e=d.length;e--;)d[e]&&d[e].remove(!1);oa(b.axes,this);oa(b[c],this);b.options[c].splice(this.options.index,1);o(b[c],function(a,b){a.options.index=b});this.destroy();b.isDirtyBox=!0;p(a,!0)&&b.redraw()},setTitle:function(a,b){this.update({title:a},b)},setCategories:function(a,b){this.update({categories:a},b)}});var wa=pa(Q);I.line=wa;aa.area=D(da,{softThreshold:!1,threshold:0});var la=pa(Q,{type:"area",singleStacks:!1,getStackPoints:function(){var a=
	[],b=[],c=this.xAxis,d=this.yAxis,e=d.stacks[this.stackKey],f={},g=this.points,h=this.index,i=d.series,k=i.length,j,l=p(d.options.reversedStacks,!0)?1:-1,m,n;if(this.options.stacking){for(m=0;m<g.length;m++)f[g[m].x]=g[m];for(n in e)e[n].total!==null&&b.push(+n);b.sort(function(a,b){return a-b});j=Ba(i,function(){return this.visible});o(b,function(g,i){var n=0,p,q;if(f[g]&&!f[g].isNull)a.push(f[g]),o([-1,1],function(a){var c=a===1?"rightNull":"leftNull",d=0,n=e[b[i+a]];if(n)for(m=h;m>=0&&m<k;)p=n.points[m],
	p||(m===h?f[g][c]=!0:j[m]&&(q=e[g].points[m])&&(d-=q[1]-q[0])),m+=l;f[g][a===1?"rightCliff":"leftCliff"]=d});else{for(m=h;m>=0&&m<k;){if(p=e[g].points[m]){n=p[1];break}m+=l}n=d.toPixels(n,!0);a.push({isNull:!0,plotX:c.toPixels(g,!0),plotY:n,yBottom:n})}})}return a},getGraphPath:function(a){var b=Q.prototype.getGraphPath,c=this.options,d=c.stacking,e=this.yAxis,f,g,h=[],i=[],k=this.index,j,l=e.stacks[this.stackKey],m=c.threshold,n=e.getThreshold(c.threshold),o,c=c.connectNulls||d==="percent",s=function(b,
	c,f){var g=a[b],b=d&&l[g.x].points[k],p=g[f+"Null"]||0,f=g[f+"Cliff"]||0,o,r,g=!0;f||p?(o=(p?b[0]:b[1])+f,r=b[0]+f,g=!!p):!d&&a[c]&&a[c].isNull&&(o=r=m);o!==void 0&&(i.push({plotX:j,plotY:o===null?n:e.toPixels(o,!0),isNull:g}),h.push({plotX:j,plotY:r===null?n:e.toPixels(r,!0)}))},a=a||this.points;d&&(a=this.getStackPoints());for(f=0;f<a.length;f++)if(g=a[f].isNull,j=p(a[f].rectPlotX,a[f].plotX),o=p(a[f].yBottom,n),!g||c){c||s(f,f-1,"left");if(!g||d||!c)i.push(a[f]),h.push({x:f,plotX:j,plotY:o});c||
	s(f,f+1,"right")}f=b.call(this,i,!0,!0);h.reversed=!0;g=b.call(this,h,!0,!0);g.length&&(g[0]="L");f=f.concat(g);b=b.call(this,i,!1,c);this.areaPath=f;return b},drawGraph:function(){this.areaPath=[];Q.prototype.drawGraph.apply(this);var a=this,b=this.areaPath,c=this.options,d=[["area",this.color,c.fillColor]];o(this.zones,function(b,f){d.push(["zoneArea"+f,b.color||a.color,b.fillColor||c.fillColor])});o(d,function(d){var f=d[0],g=a[f];g?g.animate({d:b}):(g={fill:d[2]||d[1],zIndex:0},d[2]||(g["fill-opacity"]=
	p(c.fillOpacity,0.75)),a[f]=a.chart.renderer.path(b).attr(g).add(a.group))})},drawLegendSymbol:J.drawRectangle});I.area=la;aa.spline=D(da);wa=pa(Q,{type:"spline",getPointSpline:function(a,b,c){var d=b.plotX,e=b.plotY,f=a[c-1],c=a[c+1],g,h,i,k;if(f&&!f.isNull&&c&&!c.isNull){a=f.plotY;i=c.plotX;var c=c.plotY,j=0;g=(1.5*d+f.plotX)/2.5;h=(1.5*e+a)/2.5;i=(1.5*d+i)/2.5;k=(1.5*e+c)/2.5;i!==g&&(j=(k-h)*(i-d)/(i-g)+e-k);h+=j;k+=j;h>a&&h>e?(h=t(a,e),k=2*e-h):h<a&&h<e&&(h=F(a,e),k=2*e-h);k>c&&k>e?(k=t(c,e),
	h=2*e-k):k<c&&k<e&&(k=F(c,e),h=2*e-k);b.rightContX=i;b.rightContY=k}b=["C",p(f.rightContX,f.plotX),p(f.rightContY,f.plotY),p(g,d),p(h,e),d,e];f.rightContX=f.rightContY=null;return b}});I.spline=wa;aa.areaspline=D(aa.area);la=la.prototype;wa=pa(wa,{type:"areaspline",getStackPoints:la.getStackPoints,getGraphPath:la.getGraphPath,setStackCliffs:la.setStackCliffs,drawGraph:la.drawGraph,drawLegendSymbol:J.drawRectangle});I.areaspline=wa;aa.column=D(da,{borderColor:"#FFFFFF",borderRadius:0,groupPadding:0.2,
	marker:null,pointPadding:0.1,minPointLength:0,cropThreshold:50,pointRange:null,states:{hover:{brightness:0.1,shadow:!1,halo:!1},select:{color:"#C0C0C0",borderColor:"#000000",shadow:!1}},dataLabels:{align:null,verticalAlign:null,y:null},softThreshold:!1,startFromThreshold:!0,stickyTracking:!1,tooltip:{distance:6},threshold:0});wa=pa(Q,{type:"column",pointAttrToOptions:{stroke:"borderColor",fill:"color",r:"borderRadius"},cropShoulder:0,directTouch:!0,trackerGroups:["group","dataLabelsGroup"],negStacks:!0,
	init:function(){Q.prototype.init.apply(this,arguments);var a=this,b=a.chart;b.hasRendered&&o(b.series,function(b){if(b.type===a.type)b.isDirty=!0})},getColumnMetrics:function(){var a=this,b=a.options,c=a.xAxis,d=a.yAxis,e=c.reversed,f,g={},h=0;b.grouping===!1?h=1:o(a.chart.series,function(b){var c=b.options,e=b.yAxis,i;if(b.type===a.type&&b.visible&&d.len===e.len&&d.pos===e.pos)c.stacking?(f=b.stackKey,g[f]===z&&(g[f]=h++),i=g[f]):c.grouping!==!1&&(i=h++),b.columnIndex=i});var i=F(P(c.transA)*(c.ordinalSlope||
	b.pointRange||c.closestPointRange||c.tickInterval||1),c.len),k=i*b.groupPadding,j=(i-2*k)/h,b=F(b.maxPointWidth||c.len,p(b.pointWidth,j*(1-2*b.pointPadding)));a.columnMetrics={width:b,offset:(j-b)/2+(k+((a.columnIndex||0)+(e?1:0))*j-i/2)*(e?-1:1)};return a.columnMetrics},crispCol:function(a,b,c,d){var e=this.chart,f=this.borderWidth,g=-(f%2?0.5:0),f=f%2?0.5:1;e.inverted&&e.renderer.isVML&&(f+=1);c=Math.round(a+c)+g;a=Math.round(a)+g;c-=a;d=Math.round(b+d)+f;g=P(b)<=0.5&&d>0.5;b=Math.round(b)+f;d-=
	b;g&&(b-=1,d+=1);return{x:a,y:b,width:c,height:d}},translate:function(){var a=this,b=a.chart,c=a.options,d=a.borderWidth=p(c.borderWidth,a.closestPointRange*a.xAxis.transA<2?0:1),e=a.yAxis,f=a.translatedThreshold=e.getThreshold(c.threshold),g=p(c.minPointLength,5),h=a.getColumnMetrics(),i=h.width,k=a.barW=t(i,1+2*d),j=a.pointXOffset=h.offset;b.inverted&&(f-=0.5);c.pointPadding&&(k=ua(k));Q.prototype.translate.apply(a);o(a.points,function(c){var d=F(p(c.yBottom,f),9E4),h=999+P(d),h=F(t(-h,c.plotY),
	e.len+h),o=c.plotX+j,s=k,q=F(h,d),v,u=t(h,d)-q;P(u)<g&&g&&(u=g,v=!e.reversed&&!c.negative||e.reversed&&c.negative,q=P(q-f)>g?d-g:f-(v?g:0));c.barX=o;c.pointWidth=i;c.tooltipPos=b.inverted?[e.len+e.pos-b.plotLeft-h,a.xAxis.len-o-s/2,u]:[o+s/2,h+e.pos-b.plotTop,u];c.shapeType="rect";c.shapeArgs=a.crispCol(o,q,s,u)})},getSymbol:Aa,drawLegendSymbol:J.drawRectangle,drawGraph:Aa,drawPoints:function(){var a=this,b=this.chart,c=a.options,d=b.renderer,e=c.animationLimit||250,f,g;o(a.points,function(h){var i=
	h.plotY,k=h.graphic;if(i!==z&&!isNaN(i)&&h.y!==null)f=h.shapeArgs,i=q(a.borderWidth)?{"stroke-width":a.borderWidth}:{},g=h.pointAttr[h.selected?"select":""]||a.pointAttr[""],k?(Oa(k),k.attr(i).attr(g)[b.pointCount<e?"animate":"attr"](D(f))):h.graphic=d[h.shapeType](f).attr(i).attr(g).add(h.group||a.group).shadow(c.shadow,null,c.stacking&&!c.borderRadius);else if(k)h.graphic=k.destroy()})},animate:function(a){var b=this.yAxis,c=this.options,d=this.chart.inverted,e={};if(ca)a?(e.scaleY=0.001,a=F(b.pos+
	b.len,t(b.pos,b.toPixels(c.threshold))),d?e.translateX=a-b.len:e.translateY=a,this.group.attr(e)):(e.scaleY=1,e[d?"translateX":"translateY"]=b.pos,this.group.animate(e,this.options.animation),this.animate=null)},remove:function(){var a=this,b=a.chart;b.hasRendered&&o(b.series,function(b){if(b.type===a.type)b.isDirty=!0});Q.prototype.remove.apply(a,arguments)}});I.column=wa;aa.bar=D(aa.column);la=pa(wa,{type:"bar",inverted:!0});I.bar=la;aa.scatter=D(da,{lineWidth:0,marker:{enabled:!0},tooltip:{headerFormat:'<span style="color:{point.color}">\u25cf</span> <span style="font-size: 10px;"> {series.name}</span><br/>',
	pointFormat:"x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>"}});la=pa(Q,{type:"scatter",sorted:!1,requireSorting:!1,noSharedTooltip:!0,trackerGroups:["group","markerGroup","dataLabelsGroup"],takeOrdinalPosition:!1,kdDimensions:2,drawGraph:function(){this.options.lineWidth&&Q.prototype.drawGraph.call(this)}});I.scatter=la;aa.pie=D(da,{borderColor:"#FFFFFF",borderWidth:1,center:[null,null],clip:!1,colorByPoint:!0,dataLabels:{distance:30,enabled:!0,formatter:function(){return this.y===null?void 0:
	this.point.name},x:0},ignoreHiddenPoint:!0,legendType:"point",marker:null,size:null,showInLegend:!1,slicedOffset:10,states:{hover:{brightness:0.1,shadow:!1}},stickyTracking:!1,tooltip:{followPointer:!0}});da={type:"pie",isCartesian:!1,pointClass:pa(Ha,{init:function(){Ha.prototype.init.apply(this,arguments);var a=this,b;a.name=p(a.name,"Slice");b=function(b){a.slice(b.type==="select")};M(a,"select",b);M(a,"unselect",b);return a},setVisible:function(a,b){var c=this,d=c.series,e=d.chart,f=d.options.ignoreHiddenPoint,
	b=p(b,f);if(a!==c.visible){c.visible=c.options.visible=a=a===z?!c.visible:a;d.options.data[sa(c,d.data)]=c.options;o(["graphic","dataLabel","connector","shadowGroup"],function(b){if(c[b])c[b][a?"show":"hide"](!0)});c.legendItem&&e.legend.colorizeItem(c,a);!a&&c.state==="hover"&&c.setState("");if(f)d.isDirty=!0;b&&e.redraw()}},slice:function(a,b,c){var d=this.series;Ua(c,d.chart);p(b,!0);this.sliced=this.options.sliced=a=q(a)?a:!this.sliced;d.options.data[sa(this,d.data)]=this.options;a=a?this.slicedTranslation:
	{translateX:0,translateY:0};this.graphic.animate(a);this.shadowGroup&&this.shadowGroup.animate(a)},haloPath:function(a){var b=this.shapeArgs,c=this.series.chart;return this.sliced||!this.visible?[]:this.series.chart.renderer.symbols.arc(c.plotLeft+b.x,c.plotTop+b.y,b.r+a,b.r+a,{innerR:this.shapeArgs.r,start:b.start,end:b.end})}}),requireSorting:!1,directTouch:!0,noSharedTooltip:!0,trackerGroups:["group","dataLabelsGroup"],axisTypes:[],pointAttrToOptions:{stroke:"borderColor","stroke-width":"borderWidth",
	fill:"color"},animate:function(a){var b=this,c=b.points,d=b.startAngleRad;if(!a)o(c,function(a){var c=a.graphic,g=a.shapeArgs;c&&(c.attr({r:a.startR||b.center[3]/2,start:d,end:d}),c.animate({r:g.r,start:g.start,end:g.end},b.options.animation))}),b.animate=null},updateTotals:function(){var a,b=0,c=this.points,d=c.length,e,f=this.options.ignoreHiddenPoint;for(a=0;a<d;a++)e=c[a],b+=f&&!e.visible?0:e.y;this.total=b;for(a=0;a<d;a++)e=c[a],e.percentage=b>0&&(e.visible||!f)?e.y/b*100:0,e.total=b},generatePoints:function(){Q.prototype.generatePoints.call(this);
	this.updateTotals()},translate:function(a){this.generatePoints();var b=0,c=this.options,d=c.slicedOffset,e=d+c.borderWidth,f,g,h,i=c.startAngle||0,k=this.startAngleRad=ra/180*(i-90),i=(this.endAngleRad=ra/180*(p(c.endAngle,i+360)-90))-k,j=this.points,l=c.dataLabels.distance,c=c.ignoreHiddenPoint,m,n=j.length,o;if(!a)this.center=a=this.getCenter();this.getX=function(b,c){h=W.asin(F((b-a[1])/(a[2]/2+l),1));return a[0]+(c?-1:1)*U(h)*(a[2]/2+l)};for(m=0;m<n;m++){o=j[m];f=k+b*i;if(!c||o.visible)b+=o.percentage/
	100;g=k+b*i;o.shapeType="arc";o.shapeArgs={x:a[0],y:a[1],r:a[2]/2,innerR:a[3]/2,start:A(f*1E3)/1E3,end:A(g*1E3)/1E3};h=(g+f)/2;h>1.5*ra?h-=2*ra:h<-ra/2&&(h+=2*ra);o.slicedTranslation={translateX:A(U(h)*d),translateY:A($(h)*d)};f=U(h)*a[2]/2;g=$(h)*a[2]/2;o.tooltipPos=[a[0]+f*0.7,a[1]+g*0.7];o.half=h<-ra/2||h>ra/2?1:0;o.angle=h;e=F(e,l/2);o.labelPos=[a[0]+f+U(h)*l,a[1]+g+$(h)*l,a[0]+f+U(h)*e,a[1]+g+$(h)*e,a[0]+f,a[1]+g,l<0?"center":o.half?"right":"left",h]}},drawGraph:null,drawPoints:function(){var a=
	this,b=a.chart.renderer,c,d,e=a.options.shadow,f,g,h,i;if(e&&!a.shadowGroup)a.shadowGroup=b.g("shadow").add(a.group);o(a.points,function(k){if(k.y!==null){d=k.graphic;h=k.shapeArgs;f=k.shadowGroup;g=k.pointAttr[k.selected?"select":""];if(!g.stroke)g.stroke=g.fill;if(e&&!f)f=k.shadowGroup=b.g("shadow").add(a.shadowGroup);c=k.sliced?k.slicedTranslation:{translateX:0,translateY:0};f&&f.attr(c);if(d)d.setRadialReference(a.center).attr(g).animate(u(h,c));else{i={"stroke-linejoin":"round"};if(!k.visible)i.visibility=
	"hidden";k.graphic=d=b[k.shapeType](h).setRadialReference(a.center).attr(g).attr(i).attr(c).add(a.group).shadow(e,f)}}})},searchPoint:Aa,sortByAngle:function(a,b){a.sort(function(a,d){return a.angle!==void 0&&(d.angle-a.angle)*b})},drawLegendSymbol:J.drawRectangle,getCenter:Cb.getCenter,getSymbol:Aa};da=pa(Q,da);I.pie=da;Q.prototype.drawDataLabels=function(){var a=this,b=a.options,c=b.cursor,d=b.dataLabels,e=a.points,f,g,h=a.hasRendered||0,i,k,j=a.chart.renderer;if(d.enabled||a._hasPointLabels)a.dlProcessOptions&&
	a.dlProcessOptions(d),k=a.plotGroup("dataLabelsGroup","data-labels",d.defer?"hidden":"visible",d.zIndex||6),p(d.defer,!0)&&(k.attr({opacity:+h}),h||M(a,"afterAnimate",function(){a.visible&&k.show();k[b.animation?"animate":"attr"]({opacity:1},{duration:200})})),g=d,o(e,function(e){var h,n=e.dataLabel,o,s,t=e.connector,v=!0,x,w={};f=e.dlOptions||e.options&&e.options.dataLabels;h=p(f&&f.enabled,g.enabled)&&e.y!==null;if(n&&!h)e.dataLabel=n.destroy();else if(h){d=D(g,f);x=d.style;h=d.rotation;o=e.getLabelConfig();
	i=d.format?Ka(d.format,o):d.formatter.call(o,d);x.color=p(d.color,x.color,a.color,"black");if(n)if(q(i))n.attr({text:i}),v=!1;else{if(e.dataLabel=n=n.destroy(),t)e.connector=t.destroy()}else if(q(i)){n={fill:d.backgroundColor,stroke:d.borderColor,"stroke-width":d.borderWidth,r:d.borderRadius||0,rotation:h,padding:d.padding,zIndex:1};if(x.color==="contrast")w.color=d.inside||d.distance<0||b.stacking?j.getContrast(e.color||a.color):"#000000";if(c)w.cursor=c;for(s in n)n[s]===z&&delete n[s];n=e.dataLabel=
	j[h?"text":"label"](i,0,-9999,d.shape,null,null,d.useHTML).attr(n).css(u(x,w)).add(k).shadow(d.shadow)}n&&a.alignDataLabel(e,n,d,null,v)}})};Q.prototype.alignDataLabel=function(a,b,c,d,e){var f=this.chart,g=f.inverted,h=p(a.plotX,-9999),i=p(a.plotY,-9999),k=b.getBBox(),j=f.renderer.fontMetrics(c.style.fontSize).b,l=c.rotation,m=c.align,n=this.visible&&(a.series.forceDL||f.isInsidePlot(h,A(i),g)||d&&f.isInsidePlot(h,g?d.x+1:d.y+d.height-1,g)),o=p(c.overflow,"justify")==="justify";if(n)d=u({x:g?f.plotWidth-
	i:h,y:A(g?f.plotHeight-h:i),width:0,height:0},d),u(c,{width:k.width,height:k.height}),l?(o=!1,g=f.renderer.rotCorr(j,l),g={x:d.x+c.x+d.width/2+g.x,y:d.y+c.y+d.height/2},b[e?"attr":"animate"](g).attr({align:c.align}),h=(l+720)%360,h=h>180&&h<360,m==="left"?g.y-=h?k.height:0:m==="center"?(g.x-=k.width/2,g.y-=k.height/2):m==="right"&&(g.x-=k.width,g.y-=h?0:k.height)):(b.align(c,null,d),g=b.alignAttr),o?this.justifyDataLabel(b,c,g,k,d,e):p(c.crop,!0)&&(n=f.isInsidePlot(g.x,g.y)&&f.isInsidePlot(g.x+k.width,
	g.y+k.height)),c.shape&&!l&&b.attr({anchorX:a.plotX,anchorY:a.plotY});if(!n)Oa(b),b.attr({y:-9999}),b.placed=!1};Q.prototype.justifyDataLabel=function(a,b,c,d,e,f){var g=this.chart,h=b.align,i=b.verticalAlign,k,j,l=a.box?0:a.padding||0;k=c.x+l;if(k<0)h==="right"?b.align="left":b.x=-k,j=!0;k=c.x+d.width-l;if(k>g.plotWidth)h==="left"?b.align="right":b.x=g.plotWidth-k,j=!0;k=c.y+l;if(k<0)i==="bottom"?b.verticalAlign="top":b.y=-k,j=!0;k=c.y+d.height-l;if(k>g.plotHeight)i==="top"?b.verticalAlign="bottom":
	b.y=g.plotHeight-k,j=!0;if(j)a.placed=!f,a.align(b,null,e)};if(I.pie)I.pie.prototype.drawDataLabels=function(){var a=this,b=a.data,c,d=a.chart,e=a.options.dataLabels,f=p(e.connectorPadding,10),g=p(e.connectorWidth,1),h=d.plotWidth,i=d.plotHeight,k,j,l=p(e.softConnector,!0),m=e.distance,n=a.center,r=n[2]/2,q=n[1],u=m>0,v,x,w,B=[[],[]],z,y,E,D,C,G=[0,0,0,0],L=function(a,b){return b.y-a.y};if(a.visible&&(e.enabled||a._hasPointLabels)){Q.prototype.drawDataLabels.apply(a);o(b,function(a){if(a.dataLabel&&
	a.visible)B[a.half].push(a),a.dataLabel._pos=null});for(D=2;D--;){var H=[],M=[],I=B[D],K=I.length,J;if(K){a.sortByAngle(I,D-0.5);for(C=b=0;!b&&I[C];)b=I[C]&&I[C].dataLabel&&(I[C].dataLabel.getBBox().height||21),C++;if(m>0){x=F(q+r+m,d.plotHeight);for(C=t(0,q-r-m);C<=x;C+=b)H.push(C);x=H.length;if(K>x){c=[].concat(I);c.sort(L);for(C=K;C--;)c[C].rank=C;for(C=K;C--;)I[C].rank>=x&&I.splice(C,1);K=I.length}for(C=0;C<K;C++){c=I[C];w=c.labelPos;c=9999;var O,N;for(N=0;N<x;N++)O=P(H[N]-w[1]),O<c&&(c=O,J=N);
	if(J<C&&H[C]!==null)J=C;else for(x<K-C+J&&H[C]!==null&&(J=x-K+C);H[J]===null;)J++;M.push({i:J,y:H[J]});H[J]=null}M.sort(L)}for(C=0;C<K;C++){c=I[C];w=c.labelPos;v=c.dataLabel;E=c.visible===!1?"hidden":"inherit";c=w[1];if(m>0){if(x=M.pop(),J=x.i,y=x.y,c>y&&H[J+1]!==null||c<y&&H[J-1]!==null)y=F(t(0,c),d.plotHeight)}else y=c;z=e.justify?n[0]+(D?-1:1)*(r+m):a.getX(y===q-r-m||y===q+r+m?c:y,D);v._attr={visibility:E,align:w[6]};v._pos={x:z+e.x+({left:f,right:-f}[w[6]]||0),y:y+e.y-10};v.connX=z;v.connY=y;
	if(this.options.size===null)x=v.width,z-x<f?G[3]=t(A(x-z+f),G[3]):z+x>h-f&&(G[1]=t(A(z+x-h+f),G[1])),y-b/2<0?G[0]=t(A(-y+b/2),G[0]):y+b/2>i&&(G[2]=t(A(y+b/2-i),G[2]))}}}if(Ea(G)===0||this.verifyDataLabelOverflow(G))this.placeDataLabels(),u&&g&&o(this.points,function(b){k=b.connector;w=b.labelPos;if((v=b.dataLabel)&&v._pos&&b.visible)E=v._attr.visibility,z=v.connX,y=v.connY,j=l?["M",z+(w[6]==="left"?5:-5),y,"C",z,y,2*w[2]-w[4],2*w[3]-w[5],w[2],w[3],"L",w[4],w[5]]:["M",z+(w[6]==="left"?5:-5),y,"L",
	w[2],w[3],"L",w[4],w[5]],k?(k.animate({d:j}),k.attr("visibility",E)):b.connector=k=a.chart.renderer.path(j).attr({"stroke-width":g,stroke:e.connectorColor||b.color||"#606060",visibility:E}).add(a.dataLabelsGroup);else if(k)b.connector=k.destroy()})}},I.pie.prototype.placeDataLabels=function(){o(this.points,function(a){var b=a.dataLabel;if(b&&a.visible)(a=b._pos)?(b.attr(b._attr),b[b.moved?"animate":"attr"](a),b.moved=!0):b&&b.attr({y:-9999})})},I.pie.prototype.alignDataLabel=Aa,I.pie.prototype.verifyDataLabelOverflow=
	function(a){var b=this.center,c=this.options,d=c.center,e=c.minSize||80,f=e,g;d[0]!==null?f=t(b[2]-t(a[1],a[3]),e):(f=t(b[2]-a[1]-a[3],e),b[0]+=(a[3]-a[1])/2);d[1]!==null?f=t(F(f,b[2]-t(a[0],a[2])),e):(f=t(F(f,b[2]-a[0]-a[2]),e),b[1]+=(a[0]-a[2])/2);f<b[2]?(b[2]=f,b[3]=Math.min(/%$/.test(c.innerSize||0)?f*parseFloat(c.innerSize||0)/100:parseFloat(c.innerSize||0),f),this.translate(b),this.drawDataLabels&&this.drawDataLabels()):g=!0;return g};if(I.column)I.column.prototype.alignDataLabel=function(a,
	b,c,d,e){var f=this.chart.inverted,g=a.series,h=a.dlBox||a.shapeArgs,i=p(a.below,a.plotY>p(this.translatedThreshold,g.yAxis.len)),k=p(c.inside,!!this.options.stacking);if(h){d=D(h);if(d.y<0)d.height+=d.y,d.y=0;h=d.y+d.height-g.yAxis.len;h>0&&(d.height-=h);f&&(d={x:g.yAxis.len-d.y-d.height,y:g.xAxis.len-d.x-d.width,width:d.height,height:d.width});if(!k)f?(d.x+=i?0:d.width,d.width=0):(d.y+=i?d.height:0,d.height=0)}c.align=p(c.align,!f||k?"center":i?"right":"left");c.verticalAlign=p(c.verticalAlign,
	f||k?"middle":i?"top":"bottom");Q.prototype.alignDataLabel.call(this,a,b,c,d,e)};(function(a){var b=a.Chart,c=a.each,d=a.pick,e=a.addEvent;b.prototype.callbacks.push(function(a){function b(){var e=[];c(a.series,function(a){var b=a.options.dataLabels,f=a.dataLabelCollections||["dataLabel"];(b.enabled||a._hasPointLabels)&&!b.allowOverlap&&a.visible&&c(f,function(b){c(a.points,function(a){if(a[b])a[b].labelrank=d(a.labelrank,a.shapeArgs&&a.shapeArgs.height),e.push(a[b])})})});a.hideOverlappingLabels(e)}
	b();e(a,"redraw",b)});b.prototype.hideOverlappingLabels=function(a){var b=a.length,d,e,k,j,l,m,n,o,p;for(e=0;e<b;e++)if(d=a[e])d.oldOpacity=d.opacity,d.newOpacity=1;a.sort(function(a,b){return(b.labelrank||0)-(a.labelrank||0)});for(e=0;e<b;e++){k=a[e];for(d=e+1;d<b;++d)if(j=a[d],k&&j&&k.placed&&j.placed&&k.newOpacity!==0&&j.newOpacity!==0&&(l=k.alignAttr,m=j.alignAttr,n=k.parentGroup,o=j.parentGroup,p=2*(k.box?0:k.padding),l=!(m.x+o.translateX>l.x+n.translateX+(k.width-p)||m.x+o.translateX+(j.width-
	p)<l.x+n.translateX||m.y+o.translateY>l.y+n.translateY+(k.height-p)||m.y+o.translateY+(j.height-p)<l.y+n.translateY)))(k.labelrank<j.labelrank?k:j).newOpacity=0}c(a,function(a){var b,c;if(a){c=a.newOpacity;if(a.oldOpacity!==c&&a.placed)c?a.show(!0):b=function(){a.hide()},a.alignAttr.opacity=c,a[a.isOld?"animate":"attr"](a.alignAttr,null,b);a.isOld=!0}})}})(B);da=B.TrackerMixin={drawTrackerPoint:function(){var a=this,b=a.chart,c=b.pointer,d=a.options.cursor,e=d&&{cursor:d},f=function(a){for(var c=
	a.target,d;c&&!d;)d=c.point,c=c.parentNode;if(d!==z&&d!==b.hoverPoint)d.onMouseOver(a)};o(a.points,function(a){if(a.graphic)a.graphic.element.point=a;if(a.dataLabel)a.dataLabel.element.point=a});if(!a._hasTracking)o(a.trackerGroups,function(b){if(a[b]&&(a[b].addClass("highcharts-tracker").on("mouseover",f).on("mouseout",function(a){c.onTrackerMouseOut(a)}).css(e),db))a[b].on("touchstart",f)}),a._hasTracking=!0},drawTrackerGraph:function(){var a=this,b=a.options,c=b.trackByArea,d=[].concat(c?a.areaPath:
	a.graphPath),e=d.length,f=a.chart,g=f.pointer,h=f.renderer,i=f.options.tooltip.snap,k=a.tracker,j=b.cursor,l=j&&{cursor:j},m=function(){if(f.hoverSeries!==a)a.onMouseOver()},n="rgba(192,192,192,"+(ca?1.0E-4:0.002)+")";if(e&&!c)for(j=e+1;j--;)d[j]==="M"&&d.splice(j+1,0,d[j+1]-i,d[j+2],"L"),(j&&d[j]==="M"||j===e)&&d.splice(j,0,"L",d[j-2]+i,d[j-1]);k?k.attr({d:d}):(a.tracker=h.path(d).attr({"stroke-linejoin":"round",visibility:a.visible?"visible":"hidden",stroke:n,fill:c?n:"none","stroke-width":b.lineWidth+
	(c?0:2*i),zIndex:2}).add(a.group),o([a.tracker,a.markerGroup],function(a){a.addClass("highcharts-tracker").on("mouseover",m).on("mouseout",function(a){g.onTrackerMouseOut(a)}).css(l);if(db)a.on("touchstart",m)}))}};if(I.column)wa.prototype.drawTracker=da.drawTrackerPoint;if(I.pie)I.pie.prototype.drawTracker=da.drawTrackerPoint;if(I.scatter)la.prototype.drawTracker=da.drawTrackerPoint;u(ob.prototype,{setItemEvents:function(a,b,c,d,e){var f=this;(c?b:a.legendGroup).on("mouseover",function(){a.setState("hover");
	b.css(f.options.itemHoverStyle)}).on("mouseout",function(){b.css(a.visible?d:e);a.setState()}).on("click",function(b){var c=function(){a.setVisible&&a.setVisible()},b={browserEvent:b};a.firePointEvent?a.firePointEvent("legendItemClick",b,c):H(a,"legendItemClick",b,c)})},createCheckboxForItem:function(a){a.checkbox=Z("input",{type:"checkbox",checked:a.selected,defaultChecked:a.selected},this.options.itemCheckboxStyle,this.chart.container);M(a.checkbox,"click",function(b){H(a.series||a,"checkboxClick",
	{checked:b.target.checked,item:a},function(){a.select()})})}});N.legend.itemStyle.cursor="pointer";u(hb.prototype,{showResetZoom:function(){var a=this,b=N.lang,c=a.options.chart.resetZoomButton,d=c.theme,e=d.states,f=c.relativeTo==="chart"?null:"plotBox";this.resetZoomButton=a.renderer.button(b.resetZoom,null,null,function(){a.zoomOut()},d,e&&e.hover).attr({align:c.position.align,title:b.resetZoomTitle}).add().align(c.position,!1,f)},zoomOut:function(){var a=this;H(a,"selection",{resetSelection:!0},
	function(){a.zoom()})},zoom:function(a){var b,c=this.pointer,d=!1,e;!a||a.resetSelection?o(this.axes,function(a){b=a.zoom()}):o(a.xAxis.concat(a.yAxis),function(a){var e=a.axis,h=e.isXAxis;if(c[h?"zoomX":"zoomY"]||c[h?"pinchX":"pinchY"])b=e.zoom(a.min,a.max),e.displayBtn&&(d=!0)});e=this.resetZoomButton;if(d&&!e)this.showResetZoom();else if(!d&&Y(e))this.resetZoomButton=e.destroy();b&&this.redraw(p(this.options.chart.animation,a&&a.animation,this.pointCount<100))},pan:function(a,b){var c=this,d=c.hoverPoints,
	e;d&&o(d,function(a){a.setState()});o(b==="xy"?[1,0]:[1],function(b){var b=c[b?"xAxis":"yAxis"][0],d=b.horiz,h=a[d?"chartX":"chartY"],d=d?"mouseDownX":"mouseDownY",i=c[d],k=(b.pointRange||0)/2,j=b.getExtremes(),l=b.toValue(i-h,!0)+k,k=b.toValue(i+b.len-h,!0)-k,i=i>h;if(b.series.length&&(i||l>F(j.dataMin,j.min))&&(!i||k<t(j.dataMax,j.max)))b.setExtremes(l,k,!1,!1,{trigger:"pan"}),e=!0;c[d]=h});e&&c.redraw(!1);L(c.container,{cursor:"move"})}});u(Ha.prototype,{select:function(a,b){var c=this,d=c.series,
	e=d.chart,a=p(a,!c.selected);c.firePointEvent(a?"select":"unselect",{accumulate:b},function(){c.selected=c.options.selected=a;d.options.data[sa(c,d.data)]=c.options;c.setState(a&&"select");b||o(e.getSelectedPoints(),function(a){if(a.selected&&a!==c)a.selected=a.options.selected=!1,d.options.data[sa(a,d.data)]=a.options,a.setState(""),a.firePointEvent("unselect")})})},onMouseOver:function(a,b){var c=this.series,d=c.chart,e=d.tooltip,f=d.hoverPoint;if(d.hoverSeries!==c)c.onMouseOver();if(f&&f!==this)f.onMouseOut();
	if(this.series&&(this.firePointEvent("mouseOver"),e&&(!e.shared||c.noSharedTooltip)&&e.refresh(this,a),this.setState("hover"),!b))d.hoverPoint=this},onMouseOut:function(){var a=this.series.chart,b=a.hoverPoints;this.firePointEvent("mouseOut");if(!b||sa(this,b)===-1)this.setState(),a.hoverPoint=null},importEvents:function(){if(!this.hasImportedEvents){var a=D(this.series.options.point,this.options).events,b;this.events=a;for(b in a)M(this,b,a[b]);this.hasImportedEvents=!0}},setState:function(a,b){var c=
	T(this.plotX),d=this.plotY,e=this.series,f=e.options.states,g=aa[e.type].marker&&e.options.marker,h=g&&!g.enabled,i=g&&g.states[a],k=i&&i.enabled===!1,j=e.stateMarkerGraphic,l=this.marker||{},m=e.chart,n=e.halo,o,a=a||"";o=this.pointAttr[a]||e.pointAttr[a];if(!(a===this.state&&!b||this.selected&&a!=="select"||f[a]&&f[a].enabled===!1||a&&(k||h&&i.enabled===!1)||a&&l.states&&l.states[a]&&l.states[a].enabled===!1)){if(this.graphic)g=g&&this.graphic.symbolName&&o.r,this.graphic.attr(D(o,g?{x:c-g,y:d-
	g,width:2*g,height:2*g}:{})),j&&j.hide();else{if(a&&i)if(g=i.radius,l=l.symbol||e.symbol,j&&j.currentSymbol!==l&&(j=j.destroy()),j)j[b?"animate":"attr"]({x:c-g,y:d-g});else if(l)e.stateMarkerGraphic=j=m.renderer.symbol(l,c-g,d-g,2*g,2*g).attr(o).add(e.markerGroup),j.currentSymbol=l;if(j)j[a&&m.isInsidePlot(c,d,m.inverted)?"show":"hide"](),j.element.point=this}if((c=f[a]&&f[a].halo)&&c.size){if(!n)e.halo=n=m.renderer.path().add(m.seriesGroup);n.attr(u({fill:this.color||e.color,"fill-opacity":c.opacity,
	zIndex:-1},c.attributes))[b?"animate":"attr"]({d:this.haloPath(c.size)})}else n&&n.attr({d:[]});this.state=a}},haloPath:function(a){var b=this.series,c=b.chart,d=b.getPlotBox(),e=c.inverted,f=Math.floor(this.plotX);return c.renderer.symbols.circle(d.translateX+(e?b.yAxis.len-this.plotY:f)-a,d.translateY+(e?b.xAxis.len-f:this.plotY)-a,a*2,a*2)}});u(Q.prototype,{onMouseOver:function(){var a=this.chart,b=a.hoverSeries;if(b&&b!==this)b.onMouseOut();this.options.events.mouseOver&&H(this,"mouseOver");this.setState("hover");
	a.hoverSeries=this},onMouseOut:function(){var a=this.options,b=this.chart,c=b.tooltip,d=b.hoverPoint;b.hoverSeries=null;if(d)d.onMouseOut();this&&a.events.mouseOut&&H(this,"mouseOut");c&&!a.stickyTracking&&(!c.shared||this.noSharedTooltip)&&c.hide();this.setState()},setState:function(a){var b=this.options,c=this.graph,d=b.states,e=b.lineWidth,b=0,a=a||"";if(this.state!==a&&(this.state=a,!(d[a]&&d[a].enabled===!1)&&(a&&(e=d[a].lineWidth||e+(d[a].lineWidthPlus||0)),c&&!c.dashstyle))){a={"stroke-width":e};
	for(c.attr(a);this["zoneGraph"+b];)this["zoneGraph"+b].attr(a),b+=1}},setVisible:function(a,b){var c=this,d=c.chart,e=c.legendItem,f,g=d.options.chart.ignoreHiddenSeries,h=c.visible;f=(c.visible=a=c.userOptions.visible=a===z?!h:a)?"show":"hide";o(["group","dataLabelsGroup","markerGroup","tracker"],function(a){if(c[a])c[a][f]()});if(d.hoverSeries===c||(d.hoverPoint&&d.hoverPoint.series)===c)c.onMouseOut();e&&d.legend.colorizeItem(c,a);c.isDirty=!0;c.options.stacking&&o(d.series,function(a){if(a.options.stacking&&
	a.visible)a.isDirty=!0});o(c.linkedSeries,function(b){b.setVisible(a,!1)});if(g)d.isDirtyBox=!0;b!==!1&&d.redraw();H(c,f)},show:function(){this.setVisible(!0)},hide:function(){this.setVisible(!1)},select:function(a){this.selected=a=a===z?!this.selected:a;if(this.checkbox)this.checkbox.checked=a;H(this,a?"select":"unselect")},drawTracker:da.drawTrackerGraph});u(B,{Color:ia,Point:Ha,Tick:Va,Renderer:cb,SVGElement:O,SVGRenderer:Ca,arrayMin:Ra,arrayMax:Ea,charts:S,dateFormat:Qa,error:X,format:Ka,pathAnim:void 0,
	getOptions:function(){return N},hasBidiBug:Qb,isTouchDevice:Mb,setOptions:function(a){N=D(!0,N,a);Fb();return N},addEvent:M,removeEvent:V,createElement:Z,discardElement:Ta,css:L,each:o,map:Ba,merge:D,splat:ta,stableSort:ib,extendClass:pa,pInt:C,svg:ca,canvas:ha,vml:!ca&&!ha,product:"Highcharts",version:"4.2.3"});return B});


/***/ },
/* 983 */
/*!************************************************************!*\
  !*** ./expression-atlas-heatmap/~/highcharts-more/more.js ***!
  \************************************************************/
528,
/* 984 */
/*!****************************************************!*\
  !*** ./expression-atlas-heatmap/~/legend/index.js ***!
  \****************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	exports.LegendDifferential = __webpack_require__(/*! ./src/LegendDifferential.jsx */ 985);
	exports.LegendBaseline = __webpack_require__(/*! ./src/LegendBaseline.jsx */ 996);

/***/ },
/* 985 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/legend/src/LegendDifferential.jsx ***!
  \**********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 531);
	var ReactDOM = __webpack_require__(/*! react-dom */ 687);
	
	//*------------------------------------------------------------------*
	
	var LegendRow = __webpack_require__(/*! ./LegendRow.jsx */ 986);
	var HelpTooltips = __webpack_require__(/*! help-tooltips */ 989);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./gxaLegend.css */ 994);
	
	//*------------------------------------------------------------------*
	
	var LegendDifferential = React.createClass({
	    displayName: 'LegendDifferential',
	
	
	    propTypes: {
	        atlasBaseURL: React.PropTypes.string.isRequired,
	        minDownLevel: React.PropTypes.string.isRequired,
	        maxDownLevel: React.PropTypes.string.isRequired,
	        minUpLevel: React.PropTypes.string.isRequired,
	        maxUpLevel: React.PropTypes.string.isRequired
	    },
	
	    render: function () {
	        return React.createElement(
	            'div',
	            { className: 'gxaLegend' },
	            React.createElement(
	                'div',
	                { style: { display: "inline-table" } },
	                isNaN(this.props.minDownLevel) && isNaN(this.props.maxDownLevel) ? null : React.createElement(LegendRow, { lowExpressionLevel: this.props.minDownLevel,
	                    highExpressionLevel: this.props.maxDownLevel,
	                    lowValueColour: '#C0C0C0',
	                    highValueColour: '#0000FF' }),
	                isNaN(this.props.minUpLevel) && isNaN(this.props.maxUpLevel) ? null : React.createElement(LegendRow, { lowExpressionLevel: this.props.minUpLevel,
	                    highExpressionLevel: this.props.maxUpLevel,
	                    lowValueColour: '#FFAFAF',
	                    highValueColour: '#FF0000' })
	            ),
	            React.createElement('div', { ref: 'legendHelp', 'data-help-loc': '#gradient-differential', className: 'gxaLegendHelp' })
	        );
	    },
	
	    componentDidMount: function () {
	        HelpTooltips(this.props.atlasBaseURL, "experiment", ReactDOM.findDOMNode(this.refs.legendHelp));
	    }
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = LegendDifferential;

/***/ },
/* 986 */
/*!*************************************************************!*\
  !*** ./expression-atlas-heatmap/~/legend/src/LegendRow.jsx ***!
  \*************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 531);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./gxaGradient.css */ 987);
	
	//*------------------------------------------------------------------*
	
	var LegendRow = React.createClass({
	    displayName: 'LegendRow',
	
	
	    propTypes: {
	        lowValueColour: React.PropTypes.string.isRequired,
	        highValueColour: React.PropTypes.string.isRequired,
	        lowExpressionLevel: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.element]).isRequired, // Baseline legend rows can be a React <span> element returned by NumberFormat
	        highExpressionLevel: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.element]).isRequired
	    },
	
	    render: function () {
	        var BACKGROUND_IMAGE_TEMPLATE = "-webkit-gradient(linear, left top, right top,color-stop(0, ${lowValueColour}), color-stop(1, ${highValueColour}));background-image: -moz-linear-gradient(left, ${lowValueColour}, ${highValueColour});background-image: -ms-linear-gradient(left, ${lowValueColour}, ${highValueColour}); background-image: -o-linear-gradient(left, ${lowValueColour}, ${highValueColour})";
	        var backgroundImage = BACKGROUND_IMAGE_TEMPLATE.replace(/\${lowValueColour}/g, this.props.lowValueColour).replace(/\${highValueColour}/g, this.props.highValueColour);
	
	        // for IE9
	        var LT_IE10_FILTER_TEMPLATE = "progid:DXImageTransform.Microsoft.Gradient(GradientType =1,startColorstr=${lowValueColour},endColorstr=${highValueColour})";
	        var lt_ie10_filter = LT_IE10_FILTER_TEMPLATE.replace(/\${lowValueColour}/, this.props.lowValueColour).replace(/\${highValueColour}/, this.props.highValueColour);
	
	        return React.createElement(
	            'div',
	            { style: { display: "table-row" } },
	            React.createElement(
	                'div',
	                { className: 'gxaGradientLevel gxaGradientLevelMin' },
	                this.props.lowExpressionLevel
	            ),
	            React.createElement(
	                'div',
	                { style: { display: "table-cell" } },
	                React.createElement('span', { className: 'gxaGradientColour', style: { backgroundImage: backgroundImage, filter: lt_ie10_filter } })
	            ),
	            React.createElement(
	                'div',
	                { className: 'gxaGradientLevel gxaGradientLevelMax' },
	                this.props.highExpressionLevel
	            )
	        );
	    }
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = LegendRow;

/***/ },
/* 987 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/legend/src/gxaGradient.css ***!
  \***************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../../css-loader!./gxaGradient.css */ 988);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../../style-loader/addStyles.js */ 769)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../css-loader/index.js!./gxaGradient.css", function() {
				var newContent = require("!!./../../css-loader/index.js!./gxaGradient.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 988 */
/*!*******************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/~/legend/src/gxaGradient.css ***!
  \*******************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../../css-loader/lib/css-base.js */ 768)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaGradientColour {\n    overflow: auto;\n    vertical-align: middle;\n    width: 200px;\n    height: 15px;\n    margin: 2px 6px 2px 6px;\n    display: inline-block;\n}\n\n.gxaGradientLevel {\n    white-space: nowrap;\n    font-size: 10px;\n    vertical-align: middle;\n    display: table-cell;\n}\n\n.gxaGradientLevelMin {\n    text-align: right;\n}\n\n.gxaGradientLevelMax {\n    text-align: left;\n}", ""]);
	
	// exports


/***/ },
/* 989 */
/*!***********************************************************!*\
  !*** ./expression-atlas-heatmap/~/help-tooltips/index.js ***!
  \***********************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/helpTooltipsModule.js */ 990);


/***/ },
/* 990 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/help-tooltips/src/helpTooltipsModule.js ***!
  \****************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var $ = __webpack_require__(/*! jquery */ 689);
	__webpack_require__(/*! jquery-ui-bundle */ 694);
	__webpack_require__(/*! jQuery-ajaxTransport-XDomainRequest */ 991);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./gxaHelpTooltip.css */ 992);
	
	//*------------------------------------------------------------------*
	
	function buildHelpAnchor() {
	    return $("<a/>", {
	        class: "help-icon",
	        href: "#",
	        title: "",
	        text: "?"
	    });
	}
	
	function getHelpFileName(pageName){
	    return "help-tooltips." + pageName + "-page.html";
	}
	
	function initTooltips(atlasBaseURL, pageName, parentElementId) {
	
	    var anchor = buildHelpAnchor();
	
	    var helpSelector = (typeof parentElementId === "object") ? parentElementId : (parentElementId == "") ? "[data-help-loc]" : "#" + parentElementId + " [data-help-loc]";
	
	    $(helpSelector)
	        .append(anchor)
	        .click(function (e) {
	            e.preventDefault();
	        })
	        .tooltip(
	        {
	            tooltipClass: "gxaHelpTooltip",
	            content: function (callback) {
	                var tooltipHelpHtmlId = $(this).parent().attr("data-help-loc");
	
	                $.get(atlasBaseURL + "/resources/html/" + getHelpFileName(pageName),
	                    function (response, status, xhr) {
	                        var tooltipContent;
	
	                        if (status === "error") {
	                            tooltipContent = "Sorry but there was an error: " + xhr.status + " " + xhr.statusText;
	                            callback(tooltipContent);
	                            return;
	                        }
	
	                        tooltipContent = $(response).filter(tooltipHelpHtmlId).text();
	                        if (!tooltipContent) {
	                            tooltipContent = "Missing help section for id = " + tooltipHelpHtmlId + " in html file " + getHelpFileName(pageName);
	                        }
	
	                        callback(tooltipContent);
	                    }
	                );
	            }
	        }
	    );
	
	}
	
	//*------------------------------------------------------------------*
	
	module.exports = function (atlasBaseURL, pageName, parentElementId) {
	    initTooltips(atlasBaseURL, pageName, parentElementId);
	};

/***/ },
/* 991 */
/*!*********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/help-tooltips/~/jQuery-ajaxTransport-XDomainRequest/jquery.xdomainrequest.min.js ***!
  \*********************************************************************************************************************/
[2179, 689],
/* 992 */
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/help-tooltips/src/gxaHelpTooltip.css ***!
  \*************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../../css-loader!./gxaHelpTooltip.css */ 993);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../../style-loader/addStyles.js */ 769)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../css-loader/index.js!./gxaHelpTooltip.css", function() {
				var newContent = require("!!./../../css-loader/index.js!./gxaHelpTooltip.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 993 */
/*!*****************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/~/help-tooltips/src/gxaHelpTooltip.css ***!
  \*****************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../../css-loader/lib/css-base.js */ 768)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaHelpTooltip {\n    background: white;\n    border-width: 1px !important;\n    border: solid cornflowerblue;\n    padding: 4px;\n    color: cornflowerblue;\n    font: 10px Verdana, Helvetica, Arial, sans-serif;\n}\n\na.help-icon {\n    color: darkorange;\n    vertical-align: top;\n    font: 10px Verdana, Helvetica, Arial, sans-serif;\n    font-weight: bold;\n}\n", ""]);
	
	// exports


/***/ },
/* 994 */
/*!*************************************************************!*\
  !*** ./expression-atlas-heatmap/~/legend/src/gxaLegend.css ***!
  \*************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../../css-loader!./gxaLegend.css */ 995);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../../style-loader/addStyles.js */ 769)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../css-loader/index.js!./gxaLegend.css", function() {
				var newContent = require("!!./../../css-loader/index.js!./gxaLegend.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 995 */
/*!*****************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/~/legend/src/gxaLegend.css ***!
  \*****************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../../css-loader/lib/css-base.js */ 768)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaLegendHelp {\n    display: inline-block;\n    vertical-align: top;\n    padding-left: 2px;\n}\n\n.gxaLegend {\n    display: inline-block;\n    padding-left: 20px;\n}\n", ""]);
	
	// exports


/***/ },
/* 996 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/legend/src/LegendBaseline.jsx ***!
  \******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 531);
	var ReactDOM = __webpack_require__(/*! react-dom */ 687);
	
	//*------------------------------------------------------------------*
	
	var LegendRow = __webpack_require__(/*! ./LegendRow.jsx */ 986);
	var NumberFormat = __webpack_require__(/*! number-format */ 997);
	var HelpTooltips = __webpack_require__(/*! help-tooltips */ 989);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./gxaLegend.css */ 994);
	
	//*------------------------------------------------------------------*
	
	var LegendBaseline = React.createClass({
	    displayName: 'LegendBaseline',
	
	
	    propTypes: {
	        atlasBaseURL: React.PropTypes.string.isRequired,
	        minExpressionLevel: React.PropTypes.string.isRequired,
	        maxExpressionLevel: React.PropTypes.string.isRequired,
	        isMultiExperiment: React.PropTypes.bool.isRequired
	    },
	
	    render: function () {
	        var dataHelpLoc = this.props.isMultiExperiment ? "#gradient-base-crossexp" : "#gradient-base";
	
	        // The class gxaHeatmapLegendGradient is used for Selenium tests but isn’t styled
	        return React.createElement(
	            'div',
	            { className: 'gxaHeatmapLegendGradient' },
	            React.createElement(
	                'div',
	                { style: { display: "inline-table" } },
	                React.createElement(LegendRow, { lowExpressionLevel: NumberFormat.baselineExpression(this.props.minExpressionLevel),
	                    highExpressionLevel: NumberFormat.baselineExpression(this.props.maxExpressionLevel),
	                    lowValueColour: '#C0C0C0',
	                    highValueColour: '#0000FF' })
	            ),
	            React.createElement('div', { ref: 'legendHelp', 'data-help-loc': dataHelpLoc, className: 'gxaLegendHelp' })
	        );
	    },
	
	    componentDidMount: function () {
	        HelpTooltips(this.props.atlasBaseURL, "experiment", ReactDOM.findDOMNode(this.refs.legendHelp));
	    }
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = LegendBaseline;

/***/ },
/* 997 */
/*!***********************************************************!*\
  !*** ./expression-atlas-heatmap/~/number-format/index.js ***!
  \***********************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/NumberFormat.jsx */ 998);


/***/ },
/* 998 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/number-format/src/NumberFormat.jsx ***!
  \***********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var React = __webpack_require__(/*! react */ 531); // React is called in the transpiled JS files in the return statements
	
	//*------------------------------------------------------------------*
	
	function formatBaselineExpression(expressionLevel) {
	    var numberExpressionLevel = +expressionLevel;
	    return numberExpressionLevel >= 100000 || numberExpressionLevel < 0.1 ? formatScientificNotation(numberExpressionLevel.toExponential(1).replace('+', '')) : '' + numberExpressionLevel;
	}
	
	// expects number in the format #E# and displays exponent in superscript
	function formatScientificNotation(scientificNotationString) {
	
	    var formatParts = scientificNotationString.split(/[Ee]/);
	
	    if (formatParts.length == 1) {
	        return React.createElement(
	            'span',
	            null,
	            scientificNotationString
	        );
	    }
	
	    var mantissa = formatParts[0];
	    var exponent = formatParts[1];
	
	    return React.createElement(
	        'span',
	        null,
	        mantissa !== "1" ? mantissa + " \u00D7 " : '',
	        '10',
	        React.createElement(
	            'span',
	            { style: { 'verticalAlign': 'super' } },
	            exponent
	        )
	    );
	}
	
	//*------------------------------------------------------------------*
	
	exports.baselineExpression = formatBaselineExpression;
	exports.scientificNotation = formatScientificNotation;

/***/ },
/* 999 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/cell-differential/index.js ***!
  \***************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/CellDifferential.jsx */ 1000);


/***/ },
/* 1000 */
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/cell-differential/src/CellDifferential.jsx ***!
  \*******************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 531);
	var ReactDOM = __webpack_require__(/*! react-dom */ 687);
	var ReactDOMServer = __webpack_require__(/*! react-dom/server */ 771);
	var $ = __webpack_require__(/*! jquery */ 689);
	__webpack_require__(/*! jquery-ui-bundle */ 694);
	
	//*------------------------------------------------------------------*
	
	var NumberFormat = __webpack_require__(/*! number-format */ 997);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./gxaShowHideCell.css */ 1001);
	__webpack_require__(/*! ./gxaDifferentialCellTooltip.css */ 1003);
	
	//*------------------------------------------------------------------*
	
	var CellDifferential = React.createClass({
	    displayName: 'CellDifferential',
	
	
	    propTypes: {
	        fontSize: React.PropTypes.number,
	        colour: React.PropTypes.string,
	        foldChange: React.PropTypes.string,
	        pValue: React.PropTypes.string,
	        tStat: React.PropTypes.string,
	        displayLevels: React.PropTypes.bool.isRequired
	    },
	
	    _hasValue: function () {
	        return this.props.foldChange !== undefined;
	    },
	
	    _getStyle: function () {
	        var style = {};
	        if (this.props.fontSize) {
	            style.fontSize = this.props.fontSize + "px";
	        }
	
	        return style;
	    },
	
	    render: function () {
	        if (!this._hasValue()) {
	            return React.createElement('td', null);
	        }
	
	        return React.createElement(
	            'td',
	            { style: { backgroundColor: this.props.colour, verticalAlign: "middle" } },
	            React.createElement(
	                'div',
	                { style: this._getStyle(), className: this.props.displayLevels ? "gxaShowCell" : "gxaHideCell" },
	                this.props.foldChange
	            )
	        );
	    },
	
	    componentDidMount: function () {
	        if (this._hasValue()) {
	            this._initTooltip(ReactDOM.findDOMNode(this));
	        }
	    },
	
	    _initTooltip: function (element) {
	
	        //TODO - build this from a React component, like we do for FactorTooltip
	        function buildHeatmapCellTooltip(pValue, tStatistic, foldChange) {
	
	            return "<table>" + "<thead>" + (pValue !== undefined ? "<th>Adjusted <em>p</em>-value</th>" : "") + (tStatistic !== undefined ? "<th><em>t</em>-statistic</th>" : "") + "<th class='gxaHeaderCell'>Log<sub>2</sub>-fold change</th>" + "</thead>" + "<tbody>" + "<tr>" + (pValue !== undefined ? "<td>" + ReactDOMServer.renderToStaticMarkup(NumberFormat.scientificNotation(pValue)) + "</td>" : "") + (tStatistic !== undefined ? "<td>" + tStatistic + "</td>" : "") + "<td>" + foldChange + "</td>" + "</tr>" + "</tbody>" + "</table>";
	        }
	
	        // Don’t use bind, tooltip uses this internally
	        var thisProps = this.props;
	
	        $(element).attr("title", "").tooltip({
	            open: function (event, ui) {
	                ui.tooltip.css("background", thisProps.colour);
	            },
	
	            tooltipClass: "gxaDifferentialCellTooltip",
	
	            content: function () {
	                return buildHeatmapCellTooltip(thisProps.pValue, thisProps.tStat, thisProps.foldChange);
	            }
	        });
	    }
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = CellDifferential;

/***/ },
/* 1001 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/cell-differential/src/gxaShowHideCell.css ***!
  \******************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../../css-loader!./gxaShowHideCell.css */ 1002);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../../style-loader/addStyles.js */ 769)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../css-loader/index.js!./gxaShowHideCell.css", function() {
				var newContent = require("!!./../../css-loader/index.js!./gxaShowHideCell.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 1002 */
/*!**********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/~/cell-differential/src/gxaShowHideCell.css ***!
  \**********************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../../css-loader/lib/css-base.js */ 768)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaShowCell {\n    background-color: white;\n    white-space: nowrap;\n    text-align: center;\n    margin: 4px;\n    padding: 2px;\n}\n\n.gxaHideCell {\n    display: none;\n    visibility: hidden;\n}\n", ""]);
	
	// exports


/***/ },
/* 1003 */
/*!*****************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/cell-differential/src/gxaDifferentialCellTooltip.css ***!
  \*****************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../../css-loader!./gxaDifferentialCellTooltip.css */ 1004);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../../style-loader/addStyles.js */ 769)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../css-loader/index.js!./gxaDifferentialCellTooltip.css", function() {
				var newContent = require("!!./../../css-loader/index.js!./gxaDifferentialCellTooltip.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 1004 */
/*!*********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/~/cell-differential/src/gxaDifferentialCellTooltip.css ***!
  \*********************************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../../css-loader/lib/css-base.js */ 768)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaDifferentialCellTooltip {\n    border: solid transparent;\n    color: darkslategray;\n    padding: 2px;\n    font: 10px Verdana, Helvetica, Arial, sans-serif;\n}\n\n.gxaDifferentialCellTooltip table {\n    margin: 0; /* overrides ebi-visual.css:134 */\n    background-color: white;\n    border: 1px solid lightgrey;\n    border-collapse: collapse;\n}\n\n.gxaDifferentialCellTooltip th {\n    border-bottom: 1px solid lightgrey;\n    background-color: floralwhite;\n}\n\n.gxaDifferentialCellTooltip td, .gxaDifferentialCellTooltip th {\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: middle;\n    padding: 8px;\n    width: 25px;\n}\n", ""]);
	
	// exports


/***/ },
/* 1005 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/display-levels-button/index.js ***!
  \*******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/DisplayLevelsButton.jsx */ 1006);


/***/ },
/* 1006 */
/*!**************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/display-levels-button/src/DisplayLevelsButton.jsx ***!
  \**************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 531);
	var ReactDOM = __webpack_require__(/*! react-dom */ 687);
	
	var $ = __webpack_require__(/*! jquery */ 689);
	__webpack_require__(/*! jquery-ui-bundle */ 694);
	
	//*------------------------------------------------------------------*
	
	//*------------------------------------------------------------------*
	
	var DisplayLevelsButton = React.createClass({
	    displayName: 'DisplayLevelsButton',
	
	
	    propTypes: {
	        hideText: React.PropTypes.string.isRequired,
	        showText: React.PropTypes.string.isRequired,
	        onClickCallback: React.PropTypes.func.isRequired,
	        displayLevels: React.PropTypes.bool.isRequired,
	        width: React.PropTypes.string,
	        fontSize: React.PropTypes.string
	    },
	
	    _buttonText: function () {
	        return this.props.displayLevels ? this.props.hideText : this.props.showText;
	    },
	
	    _updateButtonText: function () {
	        $(ReactDOM.findDOMNode(this)).button({ label: this._buttonText() });
	    },
	
	    render: function () {
	        var style = {};
	        if (this.props.width) {
	            style.width = this.props.width;
	        }
	        if (this.props.fontSize) {
	            style.fontSize = this.props.fontSize;
	        }
	
	        return React.createElement('button', { style: style, onClick: this.props.onClickCallback });
	    },
	
	    componentDidMount: function () {
	        this._updateButtonText();
	    },
	
	    componentDidUpdate: function () {
	        this._updateButtonText();
	    }
	
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = DisplayLevelsButton;

/***/ },
/* 1007 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/contrast-tooltips/index.js ***!
  \***************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/contrastTooltipModule.js */ 1008);


/***/ },
/* 1008 */
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/contrast-tooltips/src/contrastTooltipModule.js ***!
  \***********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 531);
	var ReactDOMServer = __webpack_require__(/*! react-dom/server */ 771);
	
	var $ = __webpack_require__(/*! jquery */ 689);
	__webpack_require__(/*! jquery-ui-bundle */ 694);
	__webpack_require__(/*! jQuery-ajaxTransport-XDomainRequest */ 1009);
	
	//*------------------------------------------------------------------*
	
	var ContrastTooltip = __webpack_require__(/*! ./ContrastTooltip.jsx */ 1010);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./gxaContrastTooltip.css */ 1011);
	
	//*------------------------------------------------------------------*
	
	function initTooltip(contextRoot, accessKey, element, experimentAccession, contrastId) {
	
	    $(element).attr("title", "").tooltip({
	
	        hide: false,
	
	        show: false,
	
	        tooltipClass: "gxaContrastTooltip",
	
	        close: function() {
	            $(".gxaContrastTooltip").remove();
	        },
	
	        content: function (callback) {
	            $.ajax({
	                url:contextRoot + "/rest/contrast-summary",
	                data:{
	                    experimentAccession: experimentAccession,
	                    contrastId: contrastId,
	                    accessKey: accessKey
	                },
	                type:"GET",
	                success:function (data) {
	                    var html =
	                        ReactDOMServer.renderToString(
	                            React.createElement(
	                                ContrastTooltip,
	                                {
	                                    experimentDescription: data.experimentDescription,
	                                    contrastDescription: data.contrastDescription,
	                                    testReplicates: data.testReplicates,
	                                    referenceReplicates: data.referenceReplicates,
	                                    properties: data.properties
	                                }
	                            )
	                        );
	                    callback(html);
	                }
	            }).fail(function (data) {
	                console.log("ERROR:  " + data);
	                callback("ERROR: " + data);
	            });
	        }
	
	    });
	
	}
	
	//*------------------------------------------------------------------*
	
	module.exports = function (contextRoot, accessKey, element, experimentAccession, contrastId) {
	    initTooltip(contextRoot, accessKey, element, experimentAccession, contrastId);
	};
	


/***/ },
/* 1009 */
/*!*************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/contrast-tooltips/~/jQuery-ajaxTransport-XDomainRequest/jquery.xdomainrequest.min.js ***!
  \*************************************************************************************************************************/
[2179, 689],
/* 1010 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/contrast-tooltips/src/ContrastTooltip.jsx ***!
  \******************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 531);
	
	//*------------------------------------------------------------------*
	
	var ContrastTooltip = React.createClass({
	    displayName: "ContrastTooltip",
	
	    propTypes: {
	        experimentDescription: React.PropTypes.string.isRequired,
	        contrastDescription: React.PropTypes.string.isRequired,
	        testReplicates: React.PropTypes.number.isRequired,
	        referenceReplicates: React.PropTypes.number.isRequired,
	        properties: React.PropTypes.arrayOf(React.PropTypes.shape({
	            contrastPropertyType: React.PropTypes.string,
	            propertyName: React.PropTypes.string.isRequired,
	            referenceValue: React.PropTypes.string.isRequired,
	            testValue: React.PropTypes.string.isRequired
	        }))
	    },
	
	    propertyRow: function (property) {
	        if (!property.testValue && !property.referenceValue) {
	            return null;
	        }
	
	        function isFactor(property) {
	            return property.contrastPropertyType === "FACTOR";
	        }
	
	        var style = { whiteSpace: "normal" };
	
	        if (isFactor(property)) {
	            style.fontWeight = "bold";
	        } else {
	            style.color = "gray";
	        }
	
	        return React.createElement(
	            "tr",
	            { key: property.contrastPropertyType + "-" + property.propertyName },
	            React.createElement(
	                "td",
	                { style: style },
	                property.propertyName
	            ),
	            React.createElement(
	                "td",
	                { style: style },
	                property.testValue
	            ),
	            React.createElement(
	                "td",
	                { style: style },
	                property.referenceValue
	            )
	        );
	    },
	
	    render: function () {
	        return React.createElement(
	            "div",
	            null,
	            React.createElement(
	                "div",
	                { id: "contrastExperimentDescription", style: { fontWeight: "bold", color: "blue", textAlign: "center" } },
	                this.props.experimentDescription
	            ),
	            React.createElement(
	                "div",
	                { id: "contrastDescription", style: { textAlign: "center" } },
	                this.props.contrastDescription
	            ),
	            React.createElement(
	                "table",
	                { style: { padding: "0px", margin: "0px", width: "100%" } },
	                React.createElement(
	                    "thead",
	                    null,
	                    React.createElement(
	                        "tr",
	                        null,
	                        React.createElement(
	                            "th",
	                            null,
	                            "Property"
	                        ),
	                        React.createElement(
	                            "th",
	                            null,
	                            "Test value (N=",
	                            this.props.testReplicates,
	                            ")"
	                        ),
	                        React.createElement(
	                            "th",
	                            null,
	                            "Reference value (N=",
	                            this.props.referenceReplicates,
	                            ")"
	                        )
	                    )
	                ),
	                React.createElement(
	                    "tbody",
	                    null,
	                    this.props.properties.map(this.propertyRow)
	                )
	            )
	        );
	    }
	
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = ContrastTooltip;

/***/ },
/* 1011 */
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/contrast-tooltips/src/gxaContrastTooltip.css ***!
  \*********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../../css-loader!./gxaContrastTooltip.css */ 1012);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../../style-loader/addStyles.js */ 769)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../css-loader/index.js!./gxaContrastTooltip.css", function() {
				var newContent = require("!!./../../css-loader/index.js!./gxaContrastTooltip.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 1012 */
/*!*************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/~/contrast-tooltips/src/gxaContrastTooltip.css ***!
  \*************************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../../css-loader/lib/css-base.js */ 768)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaContrastTooltip {\n    border: solid transparent;\n    color: darkslategray;\n    padding: 2px;\n    font: 10px Verdana, Helvetica, Arial, sans-serif;\n    max-width: 500px;\n}\n\n.gxaContrastTooltip table {\n    margin: 0; /* overrides ebi-visual.css:134 */\n    background-color: white;\n    border: 1px solid lightgrey;\n    border-collapse: collapse;\n}\n\n.gxaContrastTooltip th {\n    border-bottom: 1px solid lightgrey;\n    background-color: floralwhite;\n}\n\n.gxaContrastTooltip td {\n    border: 1px solid lightgrey;\n}\n\n.gxaContrastTooltip td, .gxaContrastTooltip th {\n    vertical-align: middle;\n    padding: 8px;\n}\n", ""]);
	
	// exports


/***/ },
/* 1013 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/src/genePropertiesTooltipModule.js ***!
  \*********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var $ = __webpack_require__(/*! jquery */ 689);
	__webpack_require__(/*! jquery-ui-bundle */ 694);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./genePropertiesTooltipModule.css */ 1014);
	
	//*------------------------------------------------------------------*
	
	/**
	 * @param {Object} options
	 * @param {string} options.contextRoot
	 * @param {string} options.geneName
	 * @param {string} options.identifier
	 * @param {Object} options.element
	 */
	function initTooltip(options){
	
	    $(options.element).attr("title", "").tooltip({
	
	        hide: false,
	
	        show: false,
	
	        tooltipClass: "gxaGeneNameTooltip",
	
	        close: function() {
	            $(".gxaGeneNameTooltip").remove();
	        },
	
	        position: { my: "left+10 top", at: "right"},
	
	        content: function (callback) {
	            if (options.identifier)  {
	                $.ajax({
	                    url: options.contextRoot + "/rest/genename-tooltip",
	                    data: {
	                        geneName: options.geneName,
	                        identifier: options.identifier
	                    },
	                    type:"GET",
	                    success: function (response) {
	                        if (!response) {
	                            callback("Missing properties for id = " + options.identifier + " in Solr.");
	                        }
	
	                        callback(response);
	                    }
	                }).fail(function (data) {
	                    console.log("ERROR:  " + data);
	                    callback("ERROR: " + data);
	                });
	            }
	        }
	
	    });
	
	}
	
	//*------------------------------------------------------------------*
	
	exports.init = function(contextRoot, element, identifier, geneName) {
	    initTooltip({contextRoot: contextRoot, element: element, identifier: identifier, geneName: geneName});
	};


/***/ },
/* 1014 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/src/genePropertiesTooltipModule.css ***!
  \**********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../~/css-loader!./genePropertiesTooltipModule.css */ 1015);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../~/style-loader/addStyles.js */ 769)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../node_modules/css-loader/index.js!./genePropertiesTooltipModule.css", function() {
				var newContent = require("!!./../node_modules/css-loader/index.js!./genePropertiesTooltipModule.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 1015 */
/*!**************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/src/genePropertiesTooltipModule.css ***!
  \**************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../~/css-loader/lib/css-base.js */ 768)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaGeneNameTooltip {\n    border: solid transparent;\n    color: darkslategray;\n    padding: 2px;\n    font: 10px Verdana, Helvetica, Arial, sans-serif;\n    background: floralwhite;\n}\n\nspan.gxaGenePropertyLabel {\n    color: brown;\n    font-weight: bold;\n    display: inline-block;\n    text-align: left;\n}\n\n.gxaPropertyValueMarkup {\n    text-align: center;\n    background-color: rgb(223, 213, 213);\n\n}\n\n.gxaGeneNameTooltip {\n    text-align: justify;\n}", ""]);
	
	// exports


/***/ },
/* 1016 */
/*!*************************************************************!*\
  !*** ./expression-atlas-heatmap/src/factorTooltipModule.js ***!
  \*************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 531);
	var ReactDOMServer = __webpack_require__(/*! react-dom/server */ 771);
	
	var $ = __webpack_require__(/*! jquery */ 689);
	__webpack_require__(/*! jquery-ui-bundle */ 694);
	
	//*------------------------------------------------------------------*
	
	var FactorTooltip = __webpack_require__(/*! ./FactorTooltip.jsx */ 1017);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./factorTooltipModule.css */ 1018);
	
	//*------------------------------------------------------------------*
	
	/**
	 * @param {Object} options
	 * @param {string} options.contextRoot
	 * @param {string} options.accessKey
	 * @param {string} options.experimentAccession
	 * @param {string} options.assayGroupId
	 * @param {Object} options.element
	 */
	function initTooltip(options) {
	
	    $(options.element).attr("title", "").tooltip({
	
	        hide:false,
	
	        show:false,
	
	        tooltipClass: "gxaFactorTooltip",
	
	        close: function() {
	            $(".gxaFactorTooltip").remove();
	        },
	
	        content: function (callback) {
	            $.ajax({
	                url: options.contextRoot + "/rest/assayGroup-summary",
	                data:{
	                    experimentAccession: options.experimentAccession,
	                    assayGroupId: options.assayGroupId,
	                    accessKey: options.accessKey
	                },
	                type:"GET",
	                success:function (data) {
	                    var html =
	                        ReactDOMServer.renderToString(
	                            React.createElement(
	                                FactorTooltip,
	                                {
	                                    properties: data.properties,
	                                    replicates: data.replicates
	                                }
	                            )
	                        );
	                    callback(html);
	                }
	            }).fail(function (data) {
	                    console.log("ERROR:  " + data);
	                    callback("ERROR: " + data);
	            });
	        }
	    });
	}
	
	//*------------------------------------------------------------------*
	
	exports.init = function (contextRoot, accessKey, element, experimentAccession, assayGroupId) {
	    initTooltip({contextRoot: contextRoot, accessKey: accessKey, element: element, experimentAccession: experimentAccession, assayGroupId: assayGroupId});
	};


/***/ },
/* 1017 */
/*!********************************************************!*\
  !*** ./expression-atlas-heatmap/src/FactorTooltip.jsx ***!
  \********************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 531);
	
	//*------------------------------------------------------------------*
	
	var FactorTooltip = React.createClass({
	    displayName: 'FactorTooltip',
	
	
	    propertyRow: function (property) {
	        if (!property.testValue) {
	            return null;
	        }
	
	        function isFactor(property) {
	            return property.contrastPropertyType === 'FACTOR';
	        }
	
	        var style = { 'whiteSpace': 'normal' };
	
	        if (isFactor(property)) {
	            style['fontWeight'] = 'bold';
	        } else {
	            style['color'] = 'gray';
	        }
	
	        return React.createElement(
	            'tr',
	            { key: property.propertyName },
	            React.createElement(
	                'td',
	                { style: style },
	                property.propertyName
	            ),
	            React.createElement(
	                'td',
	                { style: style },
	                property.testValue
	            )
	        );
	    },
	
	    render: function () {
	        return React.createElement(
	            'div',
	            null,
	            React.createElement(
	                'table',
	                null,
	                React.createElement(
	                    'thead',
	                    null,
	                    React.createElement(
	                        'tr',
	                        null,
	                        React.createElement(
	                            'th',
	                            null,
	                            'Property'
	                        ),
	                        React.createElement(
	                            'th',
	                            null,
	                            'Value (N=',
	                            this.props.replicates,
	                            ')'
	                        )
	                    )
	                ),
	                React.createElement(
	                    'tbody',
	                    null,
	                    this.props.properties.map(this.propertyRow)
	                )
	            )
	        );
	    }
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = FactorTooltip;

/***/ },
/* 1018 */
/*!**************************************************************!*\
  !*** ./expression-atlas-heatmap/src/factorTooltipModule.css ***!
  \**************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../~/css-loader!./factorTooltipModule.css */ 1019);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../~/style-loader/addStyles.js */ 769)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../node_modules/css-loader/index.js!./factorTooltipModule.css", function() {
				var newContent = require("!!./../node_modules/css-loader/index.js!./factorTooltipModule.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 1019 */
/*!******************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/src/factorTooltipModule.css ***!
  \******************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../~/css-loader/lib/css-base.js */ 768)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaFactorTooltip {\n    border: solid transparent;\n    color: darkslategray;\n    padding: 2px;\n    font: 10px Verdana, Helvetica, Arial, sans-serif;\n    max-width: 600px;\n}\n\n.gxaFactorTooltip table {\n    margin: 0; /* overrides ebi-visual.css:134 */\n    background-color: white;\n    border: 1px solid lightgrey;\n    border-collapse: collapse;\n}\n\n.gxaFactorTooltip th {\n    border-bottom: 1px solid lightgrey;\n    background-color: floralwhite;\n}\n\n.gxaFactorTooltip td {\n    border: 1px solid lightgrey;\n    white-space: nowrap;\n}\n\n.gxaFactorTooltip td, .gxaFactorTooltip th {\n    vertical-align: middle;\n    padding: 8px;\n}\n", ""]);
	
	// exports


/***/ },
/* 1020 */
/*!************************************************************!*\
  !*** ./expression-atlas-heatmap/src/stickyHeaderModule.js ***!
  \************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var $ = __webpack_require__(/*! jquery */ 689);
	
	//*------------------------------------------------------------------*
	
	function StickyHeaderModule(table, stickyIntersect, stickyColumn, stickyHeadRow, stickyWrap, tableHeader) {
	    var $t	             = $(table),
	        $stickyIntersect = $(stickyIntersect),
	        $stickyColumn    = $(stickyColumn),
	        $stickyHeadRow   = $(stickyHeadRow),
	        $stickyWrap      = $(stickyWrap),
	        $tableHeader     = $(tableHeader);
	
	    var calculateAllowance = createStickyAllowanceCallback($t, $stickyHeadRow);
	    var stickyReposition = createStickyRepositionCallback($t, $stickyIntersect, $stickyColumn, $stickyHeadRow, $stickyWrap, $tableHeader, calculateAllowance);
	    var setWidthAndHeight = createSetStickyWidthHeight($t, $stickyIntersect, $stickyColumn, $stickyHeadRow, $stickyWrap);
	    var setWidthsAndReposition = createSetStickyWidthHeightAndRepositionCallback(setWidthAndHeight, stickyReposition);
	
	    return {
	        calculateAllowance: calculateAllowance,
	        stickyReposition: stickyReposition,
	        setWidthAndHeight: setWidthAndHeight,
	        setWidthsAndReposition: setWidthsAndReposition
	    };
	
	    function createSetStickyWidthHeight($t, $stickyIntersect, $stickyColumn, $stickyHeadRow, $stickyWrap) {
	        return function () {
	            $t.find("thead th").each(
	                function (i) {
	                    $stickyHeadRow.find("th").eq(i).width($(this).width());
	                }
	            ).end().find("tr").each(
	                function (i) {
	                    $stickyColumn.find("tr").eq(i).height($(this).height());
	                    $stickyIntersect.find("tr").eq(i).height($(this).height());
	                }
	            );
	
	            // Set width of sticky header table and intersect. WebKit does it wrong...
	            if ($.browser.webkit) {
	                $stickyHeadRow
	                    .width($stickyWrap.width())
	                    .find("table")
	                    .width($t.outerWidth());
	                $stickyIntersect.find("table").width($t.find("thead th").eq(0).outerWidth() + 1);
	                $stickyColumn.find("table").width($t.find("thead th").eq(0).outerWidth() + 1);
	            } else {
	                $stickyHeadRow
	                    .width($stickyWrap.width())
	                    .find("table")
	                    .width($t.width());
	                $stickyIntersect.find("table").width($t.find("thead th").eq(0).outerWidth());
	                $stickyColumn.find("table").width($t.find("thead th").eq(0).outerWidth());
	            }
	
	            // Set width of sticky table col
	            $stickyIntersect.find("tr:nth-child(2) th").each(function (i) {
	                $(this).width($t.find("tr:nth-child(2) th").eq(i).width());
	            });
	        }
	    }
	
	    function createStickyRepositionCallback($t, $stickyIntersect, $stickyColumn, $stickyHeadRow, $stickyWrap, $tableHeader, stickyAllowanceCallback) {
	        return function() {
	            var $w = $(window);
	
	            // Set position sticky col
	            $stickyHeadRow.add($stickyIntersect).add($stickyColumn).css({
	                left: $stickyWrap.offset().left,
	                top: $stickyWrap.offset().top
	            });
	
	            var allowance = stickyAllowanceCallback();
	
	            $stickyHeadRow.find("table").css({
	                left: -$stickyWrap.scrollLeft()
	            });
	            $stickyColumn.css({
	                top: $stickyWrap.offset().top - $w.scrollTop(),
	                left: $stickyWrap.offset().left
	            });
	
	            // 1. Position sticky header based on viewport scrollTop
	            if ($w.scrollTop() + $tableHeader.outerHeight() > $t.offset().top &&
	                $w.scrollTop() + $tableHeader.outerHeight() < $t.offset().top + $t.outerHeight() - allowance) {
	                // When top of viewport is in the table itself
	                $stickyHeadRow.add($stickyIntersect).css({
	                    visibility: "visible",
	                    top: $tableHeader.outerHeight()
	                });
	            } else if ($w.scrollTop() + $tableHeader.outerHeight() > $t.offset().top + $t.outerHeight() - allowance) {
	                $stickyHeadRow.add($stickyIntersect).css({
	                    visibility: "visible",
	                    top: $t.offset().top + $t.outerHeight() - allowance - $w.scrollTop()
	                });
	            } else {
	                // When top of viewport is above or below table
	                $stickyHeadRow.add($stickyIntersect).css({
	                    visibility: "hidden",
	                    top: $stickyWrap.offset().top - $w.scrollTop()
	                });
	            }
	
	            // 2. Now deal with positioning of sticky column
	            if($stickyWrap.scrollLeft() > 0) {
	                // When left of wrapping parent is out of view
	                $stickyColumn.css({
	                    visibility: "visible",
	                    "z-index": 40
	                });
	            } else {
	                $stickyColumn.css({
	                    visibility: "hidden",
	                    "z-index": -5
	                });
	            }
	        }
	    }
	
	    function createSetStickyWidthHeightAndRepositionCallback(setWidthAndHeightCallback, stickyRepositionCallback) {
	        return function () {
	            setWidthAndHeightCallback();
	            stickyRepositionCallback();
	        }
	    }
	
	    function createStickyAllowanceCallback($t, $stickyHeadRow) {
	        return function() {
	            var rowHeight = 0;
	            // Calculate allowance
	            $t.find("tbody tr:lt(1)").each(function () {
	                rowHeight += $(this).height();
	            });
	            return rowHeight + $stickyHeadRow.height();
	        }
	    }
	}
	
	//*------------------------------------------------------------------*
	
	module.exports = StickyHeaderModule;


/***/ },
/* 1021 */
/*!*************************************************************!*\
  !*** ./expression-atlas-heatmap/src/stickyHeaderModule.css ***!
  \*************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../~/css-loader!./stickyHeaderModule.css */ 1022);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../~/style-loader/addStyles.js */ 769)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../node_modules/css-loader/index.js!./stickyHeaderModule.css", function() {
				var newContent = require("!!./../node_modules/css-loader/index.js!./stickyHeaderModule.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 1022 */
/*!*****************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/src/stickyHeaderModule.css ***!
  \*****************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../~/css-loader/lib/css-base.js */ 768)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaStickyTableWrap {\n    overflow-x: auto;\n    overflow-y: hidden;\n    position: relative;\n    width: 100%;\n}\n\n.gxaStickyTableWrap div[class^='gxaSticky'] {\n    overflow: hidden;\n}\n.gxaStickyTableWrap tfoot {\n    display: none;\n}\n.gxaStickyTableWrap div table {\n    margin: 0;\n    position: relative;\n    width: auto; /* Prevent table from stretching to full size */\n    border-collapse: collapse;\n}\n.gxaStickyTableWrap .gxaStickyTableHeader,\n.gxaStickyTableWrap .gxaStickyTableColumn,\n.gxaStickyTableWrap .gxaStickyTableIntersect {\n    visibility: hidden;\n    position: fixed;\n    z-index: 40;\n}\n.gxaStickyTableWrap .gxaStickyTableHeader {\n    z-index: 50;\n    width: 100%; /* Force stretch */\n}\n.gxaStickyTableWrap .gxaStickyTableIntersect {\n    z-index: 60;\n}\n.gxaStickyTableWrap td,\n.gxaStickyTableWrap th {\n    box-sizing: border-box;\n}\n.gxaStickyTableWrap thead th {\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n}\n.gxaStickyEnabled {\n    margin: 0;\n    width: auto;\n}\n\n.wrapper-sticky {\n    z-index: 45;\n}\n\n/* To hide sticky column and intersect when screen gets too narrow */\n@media only screen and (max-width: 768px) {\n    .gxaStickyTableColumn, .gxaStickyTableIntersect {\n        display: none;\n    }\n}\n", ""]);
	
	// exports


/***/ },
/* 1023 */
/*!**************************************************!*\
  !*** ./expression-atlas-heatmap/src/Heatmap.css ***!
  \**************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../~/css-loader!./Heatmap.css */ 1024);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../~/style-loader/addStyles.js */ 769)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../node_modules/css-loader/index.js!./Heatmap.css", function() {
				var newContent = require("!!./../node_modules/css-loader/index.js!./Heatmap.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 1024 */
/*!******************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/src/Heatmap.css ***!
  \******************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../~/css-loader/lib/css-base.js */ 768)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaHeatmapMatrixTopLeftCorner {\n    position: relative;\n    display: table;\n    height: 110px;\n    width: 100%;\n    min-width: 160px;\n}\n\n.gxaTableGrid {\n    color: #404040;\n    background-color: white;\n    border: 1px solid #cdcdcd !important;\n    border-spacing: 0;\n    empty-cells: show;\n    height: 100%;\n    text-align: left;\n    width: auto;\n    border-collapse: collapse;\n}\n\n.gxaTableGrid>tbody>tr>td, .gxaTableGrid>thead>tr>td {\n    color: #3D3D3D;\n    vertical-align: middle;\n    border: 1px solid #cdcdcd !important;\n    height: 25px;\n    width: 25px;\n    white-space: nowrap;\n}\n\nth.gxaVerticalHeaderCell, .gxaHorizontalHeaderCell {\n    font-weight: normal;\n    background-color: rgb(237, 246, 246) !important;\n}\n\nth.gxaHoverableHeader:hover, th.gxaHeaderHover {\n    background-color: #deebeb !important;\n}\n\nth.gxaSelectableHeader:hover {\n    cursor: pointer;\n}\n\nth.gxaVerticalHeaderCell-selected, th.gxaVerticalHeaderCell-selected:hover, th.gxaHorizontalHeaderCell-selected, th.gxaHorizontalHeaderCell-selected:hover {\n    background-color: rgb(181, 234, 234) !important;\n    border: 1px solid #cdcdcd;\n    padding:5px;\n}\n\nth.gxaHorizontalHeaderCell {\n    border: 1px solid #cdcdcd;\n    white-space: nowrap;\n    padding:5px;\n    text-align: left !important;\n}\n\ntr.gxaProteomicsExperiment td.gxaHorizontalHeaderCell {\n    background-color: rgb(210, 233, 233) !important;\n}\n\ntr.gxaProteomicsExperiment td.gxaHorizontalHeaderCell-selected, tr.gxaProteomicsExperiment td.gxaHorizontalHeaderCell:hover {\n    background-color: rgb(200, 220, 220) !important;\n}\n\n.gxaHeatmapCell {\n    font-size: 9px;\n    background-color: white;\n    margin: 4px;\n    padding: 2px;\n    white-space: nowrap;\n    text-align: center;\n}\n\nth.gxaHeatmapTableDesignElement {\n    font-weight: normal;\n    text-align: left;\n    border: 1px solid #CDCDCD;\n}\n\n.gxaHeatmapCountAndLegend {\n    background: white;\n}\n\n.csstransforms .rotated_cell {\n    height: 130px;\n    border: 1px solid #cdcdcd;\n    vertical-align: bottom;\n    padding-bottom: 10px\n}\n\n.csstransforms .rotate_text {\n    position: relative;\n    top: 27px;\n    width: 25px;\n    padding-top: 5px;\n    white-space: nowrap;\n    -moz-transform: rotate(-90deg);\n    -moz-transform-origin: top left;\n    -ms-transform: rotate(-90deg);\n    -ms-transform-origin: top left;\n    -webkit-transform: rotate(-90deg);\n    -webkit-transform-origin: top left;\n    -o-transform: rotate(-90deg);\n    -o-transform-origin: top left;\n}\n\n.csstransforms .rotate_tick {\n    -moz-transform: rotate(-270deg);\n    -webkit-transform: rotate(-270deg);\n    -ms-transform: rotate(-270deg);\n    -o-transform: rotate(-270deg);\n}\n\n.gxaNoTextButton {\n    border: 1px solid #ccc !important; /* overrides ebi-visual.css */\n}\n\n.gxaNoTextButton .ui-button-text {\n    padding: 2px;\n}\n\n.gxaFeedbackBoxWrapper {\n  margin-top: 15px;\n}\n\n.gxaDisplayCoexpressionOffer {\n  margin-top: 30px;\n}\n\n.gxaDisplayCoexpressionOffer .gxaSlider {\n  width: 250px;\n  margin: 15px;\n  padding-bottom: 20px;\n}\n\n.gxaDisplayCoexpressionOffer p {\n  font-size: 93%;\n}\n", ""]);
	
	// exports


/***/ },
/* 1025 */,
/* 1026 */,
/* 1027 */,
/* 1028 */,
/* 1029 */
/*!*********************************************************!*\
  !*** ./expression-atlas-heatmap/src/experimentTypes.js ***!
  \*********************************************************/
/***/ function(module, exports) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = {
	    BASELINE: { isBaseline: true, heatmapTooltip: "#heatMapTableCellInfo-baseline" },
	    PROTEOMICS_BASELINE: { isBaseline: true, isProteomics: true, heatmapTooltip: "#heatMapTableCellInfo-proteomics" },
	    DIFFERENTIAL: { isDifferential: true, heatmapTooltip: "#heatMapTableCellInfo-differential" },
	    MULTIEXPERIMENT: { isMultiExperiment: true, heatmapTooltip: "#heatMapTableCellInfo-multiexperiment" }
	};


/***/ },
/* 1030 */,
/* 1031 */,
/* 1032 */,
/* 1033 */,
/* 1034 */,
/* 1035 */,
/* 1036 */,
/* 1037 */,
/* 1038 */,
/* 1039 */,
/* 1040 */,
/* 1041 */,
/* 1042 */,
/* 1043 */,
/* 1044 */,
/* 1045 */,
/* 1046 */,
/* 1047 */,
/* 1048 */,
/* 1049 */,
/* 1050 */,
/* 1051 */,
/* 1052 */,
/* 1053 */,
/* 1054 */,
/* 1055 */,
/* 1056 */,
/* 1057 */,
/* 1058 */,
/* 1059 */,
/* 1060 */,
/* 1061 */,
/* 1062 */,
/* 1063 */,
/* 1064 */,
/* 1065 */,
/* 1066 */,
/* 1067 */,
/* 1068 */,
/* 1069 */,
/* 1070 */,
/* 1071 */,
/* 1072 */,
/* 1073 */,
/* 1074 */,
/* 1075 */,
/* 1076 */,
/* 1077 */,
/* 1078 */,
/* 1079 */,
/* 1080 */,
/* 1081 */,
/* 1082 */,
/* 1083 */,
/* 1084 */,
/* 1085 */,
/* 1086 */,
/* 1087 */,
/* 1088 */,
/* 1089 */,
/* 1090 */,
/* 1091 */,
/* 1092 */,
/* 1093 */,
/* 1094 */,
/* 1095 */,
/* 1096 */,
/* 1097 */,
/* 1098 */,
/* 1099 */,
/* 1100 */,
/* 1101 */,
/* 1102 */,
/* 1103 */,
/* 1104 */,
/* 1105 */,
/* 1106 */,
/* 1107 */,
/* 1108 */,
/* 1109 */,
/* 1110 */,
/* 1111 */,
/* 1112 */,
/* 1113 */,
/* 1114 */,
/* 1115 */,
/* 1116 */,
/* 1117 */,
/* 1118 */,
/* 1119 */,
/* 1120 */,
/* 1121 */,
/* 1122 */,
/* 1123 */,
/* 1124 */,
/* 1125 */,
/* 1126 */,
/* 1127 */,
/* 1128 */,
/* 1129 */,
/* 1130 */,
/* 1131 */,
/* 1132 */,
/* 1133 */,
/* 1134 */,
/* 1135 */,
/* 1136 */,
/* 1137 */,
/* 1138 */,
/* 1139 */,
/* 1140 */,
/* 1141 */,
/* 1142 */,
/* 1143 */,
/* 1144 */,
/* 1145 */,
/* 1146 */,
/* 1147 */,
/* 1148 */,
/* 1149 */,
/* 1150 */,
/* 1151 */,
/* 1152 */,
/* 1153 */,
/* 1154 */,
/* 1155 */,
/* 1156 */,
/* 1157 */,
/* 1158 */,
/* 1159 */,
/* 1160 */,
/* 1161 */,
/* 1162 */,
/* 1163 */,
/* 1164 */,
/* 1165 */,
/* 1166 */,
/* 1167 */,
/* 1168 */,
/* 1169 */,
/* 1170 */,
/* 1171 */,
/* 1172 */,
/* 1173 */,
/* 1174 */,
/* 1175 */,
/* 1176 */,
/* 1177 */,
/* 1178 */,
/* 1179 */,
/* 1180 */,
/* 1181 */,
/* 1182 */,
/* 1183 */,
/* 1184 */,
/* 1185 */,
/* 1186 */,
/* 1187 */,
/* 1188 */,
/* 1189 */,
/* 1190 */,
/* 1191 */,
/* 1192 */,
/* 1193 */,
/* 1194 */,
/* 1195 */,
/* 1196 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/src/heatmapAnatomogramRenderer.js ***!
  \********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var React = __webpack_require__(/*! react */ 531);
	var ReactDOM = __webpack_require__(/*! react-dom */ 687);
	
	//*------------------------------------------------------------------*
	
	var EventEmitter = __webpack_require__(/*! events */ 526);
	
	var HeatmapAnatomogramContainer = __webpack_require__(/*! ./HeatmapAnatomogramContainer.jsx */ 1197);
	
	var ExperimentTypes = __webpack_require__(/*! ./experimentTypes.js */ 1029);
	
	//*------------------------------------------------------------------*
	
	/**
	 * @param {Object}      options
	 * @param {string}          options.proxyPrefix - Proxy URL with protocol: required by CTTV
	 * @param {boolean=}        options.disableGoogleAnalytics - Disable Google Analytics: required by CTTV
	 * @param {string=}         options.atlasHost - Atlas host with port (note: don’t include port)
	 * @param {string}          options.params
	 * @param {boolean}         options.analyticsSearch
	 * @param {boolean=}        options.isMultiExperiment
	 * @param {boolean=}        options.showAnatomogram
	 * @param {boolean=}        options.isWidget
	 * @param {string | Object} options.target - a <div> id or a DOM element, as returned by ReactDOM.findDOMNode()
	 * @param {function}        options.fail - Callback to run if the AJAX request to the server fails. (jqXHR, textStatus)
	 * @param {function}        options.eventEmitter
	 */
	exports.render = function(options) {
	
	    var protocol = window.location.protocol + "//",
	        atlasHost = options.atlasHost === undefined ? "www.ebi.ac.uk" : options.atlasHost,
	        atlasPath = "/gxa";
	
	    var linksAtlasBaseURL =
	        (atlasHost.indexOf("http://") === 0 || atlasHost.indexOf("https://") === 0) ? atlasHost + atlasPath :
	        protocol + atlasHost + atlasPath;
	
	    var atlasBaseURL = options.proxyPrefix ? options.proxyPrefix + "/" + atlasHost + atlasPath : linksAtlasBaseURL;
	
	    var endpointPath =
	        options.analyticsSearch ? "/widgets/heatmap/baselineAnalytics" :
	            options.isMultiExperiment ? "/widgets/heatmap/multiExperiment" : "/widgets/heatmap/referenceExperiment";
	
	    var sourceURL = atlasBaseURL + endpointPath + "?" + options.params;
	
	    var ensemblEventEmitter = new EventEmitter();
	    ensemblEventEmitter.setMaxListeners(0);
	    var anatomogramEventEmitter = new EventEmitter();
	    anatomogramEventEmitter.setMaxListeners(0);
	
	    ReactDOM.render(
	        React.createElement(
	            HeatmapAnatomogramContainer,
	            {   key: JSON.stringify(options.params),
	                sourceURL: sourceURL,
	                atlasBaseURL: atlasBaseURL,
	                linksAtlasBaseURL: linksAtlasBaseURL,
	                type: options.isMultiExperiment ? ExperimentTypes.MULTIEXPERIMENT : ExperimentTypes.BASELINE,
	                showAnatomogram: options.showAnatomogram === undefined ? true : options.showAnatomogram,
	                isWidget: options.isWidget === undefined ? true : options.isWidget,
	                disableGoogleAnalytics: options.disableGoogleAnalytics === undefined ? false : options.disableGoogleAnalytics,
	                fail: options.fail,
	                ensemblEventEmitter: ensemblEventEmitter,
	                anatomogramEventEmitter: anatomogramEventEmitter,
	                eventEmitter: options.eventEmitter
	            }
	        ),
	        (typeof options.target === "string") ? document.getElementById(options.target) : options.target
	    );
	};


/***/ },
/* 1197 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/src/HeatmapAnatomogramContainer.jsx ***!
  \**********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 531);
	var ReactDOM = __webpack_require__(/*! react-dom */ 687);
	
	var $ = __webpack_require__(/*! jquery */ 689);
	__webpack_require__(/*! jQuery-ajaxTransport-XDomainRequest */ 1198);
	__webpack_require__(/*! jquery-hc-sticky */ 690);
	
	var URI = __webpack_require__(/*! urijs */ 1199);
	
	//*------------------------------------------------------------------*
	
	var Anatomogram = __webpack_require__(/*! anatomogram */ 691);
	var Heatmap = __webpack_require__(/*! ./Heatmap.jsx */ 770);
	var ExperimentsList = __webpack_require__(/*! ./ExperimentsList.jsx */ 1203);
	var ExperimentTypes = __webpack_require__(/*! ./experimentTypes.js */ 1029);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./HeatmapAnatomogramContainer.css */ 1204);
	
	//*------------------------------------------------------------------*
	
	var ExperimentDescription = React.createClass({
	    displayName: 'ExperimentDescription',
	
	    propTypes: {
	        linksAtlasBaseURL: React.PropTypes.string.isRequired,
	        experiment: React.PropTypes.shape({
	            URL: React.PropTypes.string.isRequired,
	            description: React.PropTypes.string.isRequired,
	            allSpecies: React.PropTypes.string.isRequired
	        }).isRequired
	    },
	
	    render: function () {
	
	        var experimentURL = this.props.linksAtlasBaseURL + this.props.experiment.URL;
	
	        return React.createElement(
	            'div',
	            { style: { width: "100%", paddingBottom: "20px" } },
	            React.createElement(
	                'div',
	                { id: 'experimentDescription' },
	                React.createElement(
	                    'a',
	                    { id: 'goto-experiment', className: 'gxaThickLink', title: 'Experiment Page', href: experimentURL },
	                    this.props.experiment.description
	                )
	            ),
	            React.createElement(
	                'div',
	                { id: 'experimentOrganisms' },
	                'Organism(s): ',
	                React.createElement(
	                    'span',
	                    { style: { "fontStyle": "italic" } },
	                    this.props.experiment.allSpecies
	                )
	            )
	        );
	    }
	
	});
	
	var HeatmapAnatomogramContainer = React.createClass({
	    displayName: 'HeatmapAnatomogramContainer',
	
	    propTypes: {
	        sourceURL: React.PropTypes.string.isRequired,
	        atlasBaseURL: React.PropTypes.string.isRequired,
	        linksAtlasBaseURL: React.PropTypes.string.isRequired,
	        type: React.PropTypes.oneOf([ExperimentTypes.BASELINE, ExperimentTypes.MULTIEXPERIMENT, ExperimentTypes.DIFFERENTIAL, ExperimentTypes.PROTEOMICS_BASELINE]).isRequired,
	        showAnatomogram: React.PropTypes.bool.isRequired,
	        isWidget: React.PropTypes.bool.isRequired,
	        disableGoogleAnalytics: React.PropTypes.bool.isRequired,
	        fail: React.PropTypes.func,
	        googleAnalyticsCallback: React.PropTypes.func,
	        ensemblEventEmitter: React.PropTypes.object.isRequired,
	        anatomogramEventEmitter: React.PropTypes.object.isRequired,
	        eventEmitter: React.PropTypes.object.isRequired
	    },
	
	    render: function () {
	
	        var anatomogramExpressedTissueColour = this.props.type.isMultiExperiment ? "red" : "gray";
	        var anatomogramHoveredTissueColour = this.props.type.isMultiExperiment ? "indigo" : "red";
	
	        var geneURL = this.props.linksAtlasBaseURL + "/query" + "?geneQuery=" + this.state.heatmapConfig.geneQuery + "&exactMatch=" + this.state.heatmapConfig.isExactMatch + "&organism=" + this.state.heatmapConfig.species;
	
	        var display;
	        var marginLeft;
	
	        if (this.state.anatomogramData) {
	            display = this.props.showAnatomogram ? "block" : "none";
	            marginLeft = this.props.showAnatomogram ? "270px" : "0";
	        } else {
	            display = "none";
	            marginLeft = "0";
	        }
	
	        var homoSapiensCellLine = this.state.heatmapConfig.species === "homo sapiens" && new URI(this.props.sourceURL).search(true).source === "CELL_LINE";
	
	        return React.createElement(
	            'div',
	            { ref: 'this' },
	            this.state.experimentData ? React.createElement(ExperimentDescription, { experiment: this.state.experimentData, linksAtlasBaseURL: this.props.linksAtlasBaseURL }) : null,
	            this.state.heatmapConfig ? React.createElement(
	                'div',
	                { id: 'heatmap-anatomogram', className: 'gxaHeatmapAnatomogramRow' },
	                React.createElement(
	                    'div',
	                    { ref: 'anatomogramEnsembl', className: 'gxaAside', style: { display: display } },
	                    this.state.anatomogramData ? React.createElement(Anatomogram, { anatomogramData: this.state.anatomogramData,
	                        expressedTissueColour: anatomogramExpressedTissueColour, hoveredTissueColour: anatomogramHoveredTissueColour,
	                        profileRows: this.state.profiles.rows, eventEmitter: this.props.anatomogramEventEmitter, atlasBaseURL: this.props.atlasBaseURL }) : null
	                ),
	                !homoSapiensCellLine ? React.createElement(
	                    'div',
	                    { id: 'heatmap-react', className: 'gxaInnerHeatmap', style: { marginLeft: marginLeft } },
	                    React.createElement(Heatmap, { type: this.props.type,
	                        heatmapConfig: this.state.heatmapConfig,
	                        columnHeaders: this.state.columnHeaders,
	                        nonExpressedColumnHeaders: this.state.nonExpressedColumnHeaders,
	                        profiles: this.state.profiles,
	                        geneSetProfiles: this.state.geneSetProfiles,
	                        ensemblEventEmitter: this.props.ensemblEventEmitter,
	                        anatomogramEventEmitter: this.props.anatomogramEventEmitter,
	                        atlasBaseURL: this.props.atlasBaseURL,
	                        linksAtlasBaseURL: this.props.linksAtlasBaseURL,
	                        googleAnalyticsCallback: this.state.googleAnalyticsCallback })
	                ) : React.createElement(
	                    'div',
	                    { style: { marginLeft: marginLeft } },
	                    React.createElement(ExperimentsList, { profiles: this.state.profiles,
	                        atlasBaseURL: this.props.atlasBaseURL,
	                        linksAtlasBaseURL: this.props.linksAtlasBaseURL,
	                        geneQuery: this.state.heatmapConfig.geneQuery })
	                )
	            ) : React.createElement(
	                'div',
	                { ref: 'loadingImagePlaceholder' },
	                React.createElement('img', { src: this.props.atlasBaseURL + "/resources/images/loading.gif" })
	            ),
	            this.props.isWidget ? React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    'p',
	                    null,
	                    React.createElement(
	                        'a',
	                        { href: geneURL },
	                        'See more expression data at Expression Atlas.'
	                    ),
	                    React.createElement('br', null),
	                    'This expression view is provided by ',
	                    React.createElement(
	                        'a',
	                        { href: this.props.linksAtlasBaseURL },
	                        'Expression Atlas'
	                    ),
	                    '.',
	                    React.createElement('br', null),
	                    'Please direct any queries or feedback to ',
	                    React.createElement(
	                        'a',
	                        { href: 'mailto:arrayexpress-atlas@ebi.ac.uk' },
	                        'arrayexpress-atlas@ebi.ac.uk'
	                    )
	                )
	            ) : null
	        );
	    },
	
	    getInitialState: function () {
	        return {
	            heatmapConfig: '',
	            columnHeaders: [],
	            nonExpressedColumnHeaders: [],
	            profiles: {
	                rows: [],
	                minExpressionLevel: 0,
	                maxExpressionLevel: 0
	            },
	            jsonCoexpressions: [],
	            geneSetProfiles: {},
	            anatomogramData: {},
	            experimentData: '',
	            googleAnalyticsCallback: function () {}
	        };
	    },
	
	    _updateStateAsynchronously: function (data) {
	        this.setState({
	            heatmapConfig: data.config,
	            columnHeaders: data.columnHeaders,
	            nonExpressedColumnHeaders: data.nonExpressedColumnHeaders,
	            profiles: data.profiles,
	            jsonCoexpressions: data.jsonCoexpressions,
	            geneSetProfiles: data.geneSetProfiles,
	            anatomogramData: data.anatomogram,
	            experimentData: data.experiment
	        });
	
	        if (this.state.anatomogramData) {
	            this.props.eventEmitter.emit('existAnatomogramData', true);
	        } else {
	            this.props.eventEmitter.emit('existAnatomogramData', false);
	        }
	    },
	
	    componentDidMount: function () {
	        var httpRequest = {
	            url: this.props.sourceURL,
	            dataType: "json",
	            method: "GET"
	        };
	
	        this.serverRequest = $.ajax(httpRequest).done(this._updateStateAsynchronously).fail(function (jqXHR, textStatus, errorThrown) {
	            if (this.props.fail) {
	                this.props.fail(jqXHR, textStatus, errorThrown);
	            } else if (textStatus === "parsererror") {
	                $(ReactDOM.findDOMNode(this.refs.this)).html("<div class='gxaError'>Could not parse JSON response</div>");
	            } else {
	                $(ReactDOM.findDOMNode(this.refs.this)).html(jqXHR.responseText);
	            }
	        }.bind(this));
	
	        if (!this.props.disableGoogleAnalytics) {
	            (function (i, s, o, g, r, a, m) {
	                i['GoogleAnalyticsObject'] = r;i[r] = i[r] || function () {
	                    (i[r].q = i[r].q || []).push(arguments);
	                }, i[r].l = 1 * new Date();a = s.createElement(o), m = s.getElementsByTagName(o)[0];a.async = 1;a.src = g;m.parentNode.insertBefore(a, m);
	            })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');
	
	            ga('create', 'UA-37676851-1', 'auto');
	            ga('send', 'pageview');
	            this.setState({ googleAnalyticsCallback: ga });
	        }
	    },
	
	    componentDidUpdate: function () {
	        // This mounted component is only going to be updated when changing this.props.showAnatomogram, so we only take
	        // care of the anatomogram, the legend and the sticky header (the last two through an event)
	        var $anatomogram = $(ReactDOM.findDOMNode(this.refs.anatomogramEnsembl));
	
	        if (this.props.showAnatomogram) {
	            $anatomogram.hcSticky({ responsive: true });
	        }
	
	        $(window).trigger("gxaResizeHeatmapAnatomogramHeader");
	
	        if (this.state.anatomogramData) {
	            this.props.eventEmitter.emit('existAnatomogramData', true);
	        } else {
	            this.props.eventEmitter.emit('existAnatomogramData', false);
	        }
	    },
	    componentWillUnmount: function () {
	        this.serverRequest.abort();
	    }
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = HeatmapAnatomogramContainer;

/***/ },
/* 1198 */
/*!*****************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/jQuery-ajaxTransport-XDomainRequest/jquery.xdomainrequest.min.js ***!
  \*****************************************************************************************************/
[2179, 689],
/* 1199 */
/*!*****************************************************!*\
  !*** ./expression-atlas-heatmap/~/urijs/src/URI.js ***!
  \*****************************************************/
[2182, 1200, 1201, 1202],
/* 1200 */
/*!**********************************************************!*\
  !*** ./expression-atlas-heatmap/~/urijs/src/punycode.js ***!
  \**********************************************************/
519,
/* 1201 */
/*!******************************************************!*\
  !*** ./expression-atlas-heatmap/~/urijs/src/IPv6.js ***!
  \******************************************************/
521,
/* 1202 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/urijs/src/SecondLevelDomains.js ***!
  \********************************************************************/
522,
/* 1203 */
/*!**********************************************************!*\
  !*** ./expression-atlas-heatmap/src/ExperimentsList.jsx ***!
  \**********************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 531);
	var BootstrapButton = __webpack_require__(/*! react-bootstrap/lib/Button */ 948);
	
	//*------------------------------------------------------------------*
	
	var ExperimentsList = React.createClass({
	    displayName: 'ExperimentsList',
	
	    propTypes: {
	        profiles: React.PropTypes.shape({
	            rows: React.PropTypes.array.isRequired
	        }).isRequired,
	        atlasBaseURL: React.PropTypes.string.isRequired,
	        linksAtlasBaseURL: React.PropTypes.string.isRequired,
	        geneQuery: React.PropTypes.string.isRequired
	    },
	
	    getInitialState: function () {
	        return { "displayAll": this.props.profiles.rows.length < 10 };
	    },
	
	    _getRowsToDisplay: function () {
	        var rows = this.props.profiles.rows.sort(this._lexicalSort);
	        return this.state.displayAll ? rows : rows.slice(0, 10);
	    },
	
	    _displayAll: function () {
	        this.setState({ "displayAll": true });
	    },
	
	    _lexicalSort: function (thisProfile, thatProfile) {
	        if (thisProfile.name > thatProfile.name) {
	            return 1;
	        }
	        if (thisProfile.name < thatProfile.name) {
	            return -1;
	        }
	        return 0;
	    },
	
	    _renderListItem: function (profile) {
	        var experimentURL = this.props.linksAtlasBaseURL + "/experiments/" + profile.id + "?geneQuery=" + this.props.geneQuery + (profile.serializedFilterFactors ? "&serializedFilterFactors=" + encodeURIComponent(profile.serializedFilterFactors) : "");
	
	        return React.createElement(
	            'li',
	            { key: profile.name },
	            React.createElement(
	                'a',
	                { target: '_blank', href: experimentURL },
	                profile.name
	            )
	        );
	    },
	
	    _renderListItems: function (options) {
	        return this._getRowsToDisplay().map(this._renderListItem);
	    },
	
	    render: function () {
	        return React.createElement(
	            'ul',
	            { style: { listStyleType: "none", paddingLeft: "0" } },
	            this._renderListItems(),
	            this.state.displayAll ? React.createElement('a', null) : React.createElement(
	                BootstrapButton,
	                { bsStyle: 'default', bsSize: 'xsmall', onClick: this._displayAll },
	                'More'
	            )
	        );
	    }
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = ExperimentsList;

/***/ },
/* 1204 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/src/HeatmapAnatomogramContainer.css ***!
  \**********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../~/css-loader!./HeatmapAnatomogramContainer.css */ 1205);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../~/style-loader/addStyles.js */ 769)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../node_modules/css-loader/index.js!./HeatmapAnatomogramContainer.css", function() {
				var newContent = require("!!./../node_modules/css-loader/index.js!./HeatmapAnatomogramContainer.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 1205 */
/*!**************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/src/HeatmapAnatomogramContainer.css ***!
  \**************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../~/css-loader/lib/css-base.js */ 768)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaHeatmapAnatomogramRow {\n    position: relative;\n}\n\n.gxaHeatmapAnatomogramRow:after {\n    clear: both;\n    content: \".\";\n    display: block;\n    visibility: hidden;\n}\n\n.gxaInnerHeatmap {\n    position: relative;\n    overflow: hidden;\n}\n\n.gxaAside {\n    float: left;\n}", ""]);
	
	// exports


/***/ }
]);
//# sourceMappingURL=expressionAtlasHeatmap.bundle.js.map