var expressionAtlasHeatmap =
webpackJsonp_name_([3],[
/* 0 */
/*!*******************************************!*\
  !*** ./expression-atlas-heatmap/index.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/heatmapAnatomogramRenderer.js */ 1175);


/***/ },
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */,
/* 18 */,
/* 19 */,
/* 20 */,
/* 21 */,
/* 22 */,
/* 23 */,
/* 24 */,
/* 25 */,
/* 26 */,
/* 27 */,
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */,
/* 34 */,
/* 35 */,
/* 36 */,
/* 37 */,
/* 38 */,
/* 39 */,
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */,
/* 48 */,
/* 49 */,
/* 50 */,
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */,
/* 56 */,
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */,
/* 61 */,
/* 62 */,
/* 63 */,
/* 64 */,
/* 65 */,
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */,
/* 71 */,
/* 72 */,
/* 73 */,
/* 74 */,
/* 75 */,
/* 76 */,
/* 77 */,
/* 78 */,
/* 79 */,
/* 80 */,
/* 81 */,
/* 82 */,
/* 83 */,
/* 84 */,
/* 85 */,
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */,
/* 90 */,
/* 91 */,
/* 92 */,
/* 93 */,
/* 94 */,
/* 95 */,
/* 96 */,
/* 97 */,
/* 98 */,
/* 99 */,
/* 100 */,
/* 101 */,
/* 102 */,
/* 103 */,
/* 104 */,
/* 105 */,
/* 106 */,
/* 107 */,
/* 108 */,
/* 109 */,
/* 110 */,
/* 111 */,
/* 112 */,
/* 113 */,
/* 114 */,
/* 115 */,
/* 116 */,
/* 117 */,
/* 118 */,
/* 119 */,
/* 120 */,
/* 121 */,
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */,
/* 131 */,
/* 132 */,
/* 133 */,
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */,
/* 140 */,
/* 141 */,
/* 142 */,
/* 143 */,
/* 144 */,
/* 145 */,
/* 146 */,
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */,
/* 151 */,
/* 152 */,
/* 153 */,
/* 154 */,
/* 155 */,
/* 156 */,
/* 157 */,
/* 158 */,
/* 159 */,
/* 160 */,
/* 161 */,
/* 162 */,
/* 163 */,
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */,
/* 168 */,
/* 169 */,
/* 170 */,
/* 171 */,
/* 172 */,
/* 173 */,
/* 174 */,
/* 175 */,
/* 176 */,
/* 177 */,
/* 178 */,
/* 179 */,
/* 180 */,
/* 181 */,
/* 182 */,
/* 183 */,
/* 184 */,
/* 185 */,
/* 186 */,
/* 187 */,
/* 188 */,
/* 189 */,
/* 190 */,
/* 191 */,
/* 192 */,
/* 193 */,
/* 194 */,
/* 195 */,
/* 196 */,
/* 197 */,
/* 198 */,
/* 199 */,
/* 200 */,
/* 201 */,
/* 202 */,
/* 203 */,
/* 204 */,
/* 205 */,
/* 206 */,
/* 207 */,
/* 208 */,
/* 209 */,
/* 210 */,
/* 211 */,
/* 212 */,
/* 213 */,
/* 214 */,
/* 215 */,
/* 216 */,
/* 217 */,
/* 218 */,
/* 219 */,
/* 220 */,
/* 221 */,
/* 222 */,
/* 223 */,
/* 224 */,
/* 225 */,
/* 226 */,
/* 227 */,
/* 228 */,
/* 229 */,
/* 230 */,
/* 231 */,
/* 232 */,
/* 233 */,
/* 234 */,
/* 235 */,
/* 236 */,
/* 237 */,
/* 238 */,
/* 239 */,
/* 240 */,
/* 241 */,
/* 242 */,
/* 243 */,
/* 244 */,
/* 245 */,
/* 246 */,
/* 247 */,
/* 248 */,
/* 249 */,
/* 250 */,
/* 251 */,
/* 252 */,
/* 253 */,
/* 254 */,
/* 255 */,
/* 256 */,
/* 257 */,
/* 258 */,
/* 259 */,
/* 260 */,
/* 261 */,
/* 262 */,
/* 263 */,
/* 264 */,
/* 265 */,
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */,
/* 283 */,
/* 284 */,
/* 285 */,
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */,
/* 290 */,
/* 291 */,
/* 292 */,
/* 293 */,
/* 294 */,
/* 295 */,
/* 296 */,
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */,
/* 301 */,
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */,
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */,
/* 310 */,
/* 311 */,
/* 312 */,
/* 313 */,
/* 314 */,
/* 315 */,
/* 316 */,
/* 317 */,
/* 318 */,
/* 319 */,
/* 320 */,
/* 321 */,
/* 322 */,
/* 323 */,
/* 324 */,
/* 325 */,
/* 326 */,
/* 327 */,
/* 328 */,
/* 329 */,
/* 330 */,
/* 331 */,
/* 332 */,
/* 333 */,
/* 334 */,
/* 335 */,
/* 336 */,
/* 337 */,
/* 338 */,
/* 339 */,
/* 340 */,
/* 341 */,
/* 342 */,
/* 343 */,
/* 344 */,
/* 345 */,
/* 346 */,
/* 347 */,
/* 348 */,
/* 349 */,
/* 350 */,
/* 351 */,
/* 352 */,
/* 353 */,
/* 354 */,
/* 355 */,
/* 356 */,
/* 357 */,
/* 358 */,
/* 359 */,
/* 360 */,
/* 361 */,
/* 362 */,
/* 363 */,
/* 364 */,
/* 365 */,
/* 366 */,
/* 367 */,
/* 368 */,
/* 369 */,
/* 370 */,
/* 371 */,
/* 372 */,
/* 373 */,
/* 374 */,
/* 375 */,
/* 376 */,
/* 377 */,
/* 378 */,
/* 379 */,
/* 380 */,
/* 381 */,
/* 382 */,
/* 383 */,
/* 384 */,
/* 385 */,
/* 386 */,
/* 387 */,
/* 388 */,
/* 389 */,
/* 390 */,
/* 391 */,
/* 392 */,
/* 393 */,
/* 394 */,
/* 395 */,
/* 396 */,
/* 397 */,
/* 398 */,
/* 399 */,
/* 400 */,
/* 401 */,
/* 402 */,
/* 403 */,
/* 404 */,
/* 405 */,
/* 406 */,
/* 407 */,
/* 408 */,
/* 409 */,
/* 410 */,
/* 411 */,
/* 412 */,
/* 413 */,
/* 414 */,
/* 415 */,
/* 416 */,
/* 417 */,
/* 418 */,
/* 419 */,
/* 420 */,
/* 421 */,
/* 422 */,
/* 423 */,
/* 424 */,
/* 425 */,
/* 426 */,
/* 427 */,
/* 428 */,
/* 429 */,
/* 430 */,
/* 431 */,
/* 432 */,
/* 433 */,
/* 434 */,
/* 435 */,
/* 436 */,
/* 437 */,
/* 438 */,
/* 439 */,
/* 440 */,
/* 441 */,
/* 442 */,
/* 443 */,
/* 444 */,
/* 445 */,
/* 446 */,
/* 447 */,
/* 448 */,
/* 449 */,
/* 450 */,
/* 451 */,
/* 452 */,
/* 453 */,
/* 454 */,
/* 455 */,
/* 456 */,
/* 457 */,
/* 458 */,
/* 459 */,
/* 460 */,
/* 461 */,
/* 462 */,
/* 463 */,
/* 464 */,
/* 465 */,
/* 466 */,
/* 467 */,
/* 468 */,
/* 469 */,
/* 470 */,
/* 471 */,
/* 472 */,
/* 473 */,
/* 474 */,
/* 475 */,
/* 476 */,
/* 477 */,
/* 478 */,
/* 479 */,
/* 480 */,
/* 481 */,
/* 482 */,
/* 483 */,
/* 484 */,
/* 485 */,
/* 486 */,
/* 487 */,
/* 488 */,
/* 489 */,
/* 490 */,
/* 491 */,
/* 492 */,
/* 493 */,
/* 494 */,
/* 495 */,
/* 496 */,
/* 497 */,
/* 498 */,
/* 499 */,
/* 500 */,
/* 501 */,
/* 502 */,
/* 503 */,
/* 504 */,
/* 505 */,
/* 506 */,
/* 507 */,
/* 508 */,
/* 509 */,
/* 510 */,
/* 511 */,
/* 512 */,
/* 513 */,
/* 514 */,
/* 515 */,
/* 516 */,
/* 517 */,
/* 518 */,
/* 519 */,
/* 520 */,
/* 521 */,
/* 522 */,
/* 523 */
/*!***************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/react.js ***!
  \***************************************************/
[1943, 524],
/* 524 */
/*!*******************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/React.js ***!
  \*******************************************************/
[1944, 525, 669, 673, 560, 678],
/* 525 */
/*!**********************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOM.js ***!
  \**********************************************************/
[1945, 526, 527, 592, 566, 549, 539, 571, 575, 667, 612, 668, 546, 530],
/* 526 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactCurrentOwner.js ***!
  \*******************************************************************/
5,
/* 527 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMTextComponent.js ***!
  \***********************************************************************/
[1946, 528, 543, 547, 549, 560, 542, 541, 591],
/* 528 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/DOMChildrenOperations.js ***!
  \***********************************************************************/
[1947, 529, 537, 539, 540, 541, 534],
/* 529 */
/*!********************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/Danger.js ***!
  \********************************************************/
[1948, 530, 531, 536, 535, 534],
/* 530 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/ExecutionEnvironment.js ***!
  \*****************************************************************************/
9,
/* 531 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/createNodesFromMarkup.js ***!
  \******************************************************************************/
[1949, 530, 532, 535, 534],
/* 532 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/createArrayFromMixed.js ***!
  \*****************************************************************************/
[1950, 533],
/* 533 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/toArray.js ***!
  \****************************************************************/
[1951, 534],
/* 534 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/invariant.js ***!
  \******************************************************************/
13,
/* 535 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/getMarkupWrap.js ***!
  \**********************************************************************/
[1952, 530, 534],
/* 536 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/emptyFunction.js ***!
  \**********************************************************************/
15,
/* 537 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactMultiChildUpdateTypes.js ***!
  \****************************************************************************/
[1953, 538],
/* 538 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/keyMirror.js ***!
  \******************************************************************/
[1954, 534],
/* 539 */
/*!***********************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactPerf.js ***!
  \***********************************************************/
18,
/* 540 */
/*!**************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/setInnerHTML.js ***!
  \**************************************************************/
[1955, 530],
/* 541 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/setTextContent.js ***!
  \****************************************************************/
[1956, 530, 542, 540],
/* 542 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/escapeTextContentForBrowser.js ***!
  \*****************************************************************************/
21,
/* 543 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/DOMPropertyOperations.js ***!
  \***********************************************************************/
[1957, 544, 539, 545, 546],
/* 544 */
/*!*************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/DOMProperty.js ***!
  \*************************************************************/
[1958, 534],
/* 545 */
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/quoteAttributeValueForBrowser.js ***!
  \*******************************************************************************/
[1959, 542],
/* 546 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/warning.js ***!
  \****************************************************************/
[1960, 536],
/* 547 */
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactComponentBrowserEnvironment.js ***!
  \**********************************************************************************/
[1961, 548, 549],
/* 548 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMIDOperations.js ***!
  \**********************************************************************/
[1962, 528, 543, 549, 539, 534],
/* 549 */
/*!************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactMount.js ***!
  \************************************************************/
[1963, 544, 550, 526, 562, 563, 565, 566, 568, 569, 539, 571, 574, 575, 560, 579, 580, 583, 534, 540, 588, 591, 546],
/* 550 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactBrowserEventEmitter.js ***!
  \**************************************************************************/
[1964, 551, 552, 553, 558, 539, 559, 560, 561],
/* 551 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/EventConstants.js ***!
  \****************************************************************/
[1965, 538],
/* 552 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/EventPluginHub.js ***!
  \****************************************************************/
[1966, 553, 554, 555, 556, 557, 534, 546],
/* 553 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/EventPluginRegistry.js ***!
  \*********************************************************************/
[1967, 534],
/* 554 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/EventPluginUtils.js ***!
  \******************************************************************/
[1968, 551, 555, 534, 546],
/* 555 */
/*!*****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactErrorUtils.js ***!
  \*****************************************************************/
34,
/* 556 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/accumulateInto.js ***!
  \****************************************************************/
[1969, 534],
/* 557 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/forEachAccumulated.js ***!
  \********************************************************************/
36,
/* 558 */
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactEventEmitterMixin.js ***!
  \************************************************************************/
[1970, 552],
/* 559 */
/*!*****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ViewportMetrics.js ***!
  \*****************************************************************/
38,
/* 560 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/Object.assign.js ***!
  \***************************************************************/
39,
/* 561 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/isEventSupported.js ***!
  \******************************************************************/
[1971, 530],
/* 562 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMFeatureFlags.js ***!
  \**********************************************************************/
41,
/* 563 */
/*!**************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactElement.js ***!
  \**************************************************************/
[1972, 526, 560, 564],
/* 564 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/canDefineProperty.js ***!
  \*******************************************************************/
43,
/* 565 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactEmptyComponentRegistry.js ***!
  \*****************************************************************************/
44,
/* 566 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactInstanceHandles.js ***!
  \**********************************************************************/
[1973, 567, 534],
/* 567 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactRootIndex.js ***!
  \****************************************************************/
46,
/* 568 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactInstanceMap.js ***!
  \******************************************************************/
47,
/* 569 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactMarkupChecksum.js ***!
  \*********************************************************************/
[1974, 570],
/* 570 */
/*!*********************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/adler32.js ***!
  \*********************************************************/
49,
/* 571 */
/*!*****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactReconciler.js ***!
  \*****************************************************************/
[1975, 572],
/* 572 */
/*!**********************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactRef.js ***!
  \**********************************************************/
[1976, 573],
/* 573 */
/*!************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactOwner.js ***!
  \************************************************************/
[1977, 534],
/* 574 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactUpdateQueue.js ***!
  \******************************************************************/
[1978, 526, 563, 568, 575, 560, 534, 546],
/* 575 */
/*!**************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactUpdates.js ***!
  \**************************************************************/
[1979, 576, 577, 539, 571, 578, 560, 534],
/* 576 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/CallbackQueue.js ***!
  \***************************************************************/
[1980, 577, 560, 534],
/* 577 */
/*!*************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/PooledClass.js ***!
  \*************************************************************/
[1981, 534],
/* 578 */
/*!*************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/Transaction.js ***!
  \*************************************************************/
[1982, 534],
/* 579 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/emptyObject.js ***!
  \********************************************************************/
58,
/* 580 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/containsNode.js ***!
  \*********************************************************************/
[1983, 581],
/* 581 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/isTextNode.js ***!
  \*******************************************************************/
[1984, 582],
/* 582 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/isNode.js ***!
  \***************************************************************/
61,
/* 583 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/instantiateReactComponent.js ***!
  \***************************************************************************/
[1985, 584, 589, 590, 560, 534, 546],
/* 584 */
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactCompositeComponent.js ***!
  \*************************************************************************/
[1986, 585, 526, 563, 568, 539, 586, 587, 571, 574, 560, 579, 534, 588, 546],
/* 585 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactComponentEnvironment.js ***!
  \***************************************************************************/
[1987, 534],
/* 586 */
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactPropTypeLocations.js ***!
  \************************************************************************/
[1988, 538],
/* 587 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactPropTypeLocationNames.js ***!
  \****************************************************************************/
66,
/* 588 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/shouldUpdateReactComponent.js ***!
  \****************************************************************************/
67,
/* 589 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactEmptyComponent.js ***!
  \*********************************************************************/
[1989, 563, 565, 571, 560],
/* 590 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactNativeComponent.js ***!
  \**********************************************************************/
[1990, 560, 534],
/* 591 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/validateDOMNesting.js ***!
  \********************************************************************/
[1991, 560, 536, 546],
/* 592 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDefaultInjection.js ***!
  \***********************************************************************/
[1992, 593, 601, 604, 605, 606, 530, 610, 611, 547, 613, 614, 527, 639, 642, 566, 549, 646, 651, 652, 653, 662, 663],
/* 593 */
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/BeforeInputEventPlugin.js ***!
  \************************************************************************/
[1993, 551, 594, 530, 595, 597, 599, 600],
/* 594 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/EventPropagators.js ***!
  \******************************************************************/
[1994, 551, 552, 546, 556, 557],
/* 595 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/FallbackCompositionState.js ***!
  \**************************************************************************/
[1995, 577, 560, 596],
/* 596 */
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/getTextContentAccessor.js ***!
  \************************************************************************/
[1996, 530],
/* 597 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticCompositionEvent.js ***!
  \***************************************************************************/
[1997, 598],
/* 598 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticEvent.js ***!
  \****************************************************************/
[1998, 577, 560, 536, 546],
/* 599 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticInputEvent.js ***!
  \*********************************************************************/
[1999, 598],
/* 600 */
/*!**************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/keyOf.js ***!
  \**************************************************************/
79,
/* 601 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ChangeEventPlugin.js ***!
  \*******************************************************************/
[2000, 551, 552, 594, 530, 575, 598, 602, 561, 603, 600],
/* 602 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/getEventTarget.js ***!
  \****************************************************************/
81,
/* 603 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/isTextInputElement.js ***!
  \********************************************************************/
82,
/* 604 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ClientReactRootIndex.js ***!
  \**********************************************************************/
83,
/* 605 */
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/DefaultEventPluginOrder.js ***!
  \*************************************************************************/
[2001, 600],
/* 606 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/EnterLeaveEventPlugin.js ***!
  \***********************************************************************/
[2002, 551, 594, 607, 549, 600],
/* 607 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticMouseEvent.js ***!
  \*********************************************************************/
[2003, 608, 559, 609],
/* 608 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticUIEvent.js ***!
  \******************************************************************/
[2004, 598, 602],
/* 609 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/getEventModifierState.js ***!
  \***********************************************************************/
88,
/* 610 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/HTMLDOMPropertyConfig.js ***!
  \***********************************************************************/
[2005, 544, 530],
/* 611 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactBrowserComponentMixin.js ***!
  \****************************************************************************/
[2006, 568, 612, 546],
/* 612 */
/*!*************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/findDOMNode.js ***!
  \*************************************************************/
[2007, 526, 568, 549, 534, 546],
/* 613 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDefaultBatchingStrategy.js ***!
  \******************************************************************************/
[2008, 575, 578, 560, 536],
/* 614 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMComponent.js ***!
  \*******************************************************************/
[2009, 615, 617, 544, 543, 551, 550, 547, 625, 626, 630, 633, 634, 549, 635, 539, 574, 560, 564, 542, 534, 561, 600, 540, 541, 638, 591, 546],
/* 615 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/AutoFocusUtils.js ***!
  \****************************************************************/
[2010, 549, 612, 616],
/* 616 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/focusNode.js ***!
  \******************************************************************/
95,
/* 617 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/CSSPropertyOperations.js ***!
  \***********************************************************************/
[2011, 618, 530, 539, 619, 621, 622, 624, 546],
/* 618 */
/*!*************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/CSSProperty.js ***!
  \*************************************************************/
97,
/* 619 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/camelizeStyleName.js ***!
  \**************************************************************************/
[2012, 620],
/* 620 */
/*!*****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/camelize.js ***!
  \*****************************************************************/
99,
/* 621 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/dangerousStyleValue.js ***!
  \*********************************************************************/
[2013, 618],
/* 622 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/hyphenateStyleName.js ***!
  \***************************************************************************/
[2014, 623],
/* 623 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/hyphenate.js ***!
  \******************************************************************/
102,
/* 624 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/memoizeStringOnly.js ***!
  \**************************************************************************/
103,
/* 625 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMButton.js ***!
  \****************************************************************/
104,
/* 626 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMInput.js ***!
  \***************************************************************/
[2015, 548, 627, 549, 575, 560, 534],
/* 627 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/LinkedValueUtils.js ***!
  \******************************************************************/
[2016, 628, 586, 534, 546],
/* 628 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactPropTypes.js ***!
  \****************************************************************/
[2017, 563, 587, 536, 629],
/* 629 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/getIteratorFn.js ***!
  \***************************************************************/
108,
/* 630 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMOption.js ***!
  \****************************************************************/
[2018, 631, 633, 560, 546],
/* 631 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactChildren.js ***!
  \***************************************************************/
[2019, 577, 563, 536, 632],
/* 632 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/traverseAllChildren.js ***!
  \*********************************************************************/
[2020, 526, 563, 566, 629, 534, 546],
/* 633 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMSelect.js ***!
  \****************************************************************/
[2021, 627, 549, 575, 560, 546],
/* 634 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMTextarea.js ***!
  \******************************************************************/
[2022, 627, 548, 575, 560, 534, 546],
/* 635 */
/*!*****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactMultiChild.js ***!
  \*****************************************************************/
[2023, 585, 537, 526, 571, 636, 637],
/* 636 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactChildReconciler.js ***!
  \**********************************************************************/
[2024, 571, 583, 588, 632, 546],
/* 637 */
/*!*****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/flattenChildren.js ***!
  \*****************************************************************/
[2025, 632, 546],
/* 638 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/shallowEqual.js ***!
  \*********************************************************************/
117,
/* 639 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactEventListener.js ***!
  \********************************************************************/
[2026, 640, 530, 577, 566, 549, 575, 560, 602, 641],
/* 640 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/EventListener.js ***!
  \**********************************************************************/
[2027, 536],
/* 641 */
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/getUnboundedScrollPosition.js ***!
  \***********************************************************************************/
120,
/* 642 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactInjection.js ***!
  \****************************************************************/
[2028, 544, 552, 585, 643, 589, 550, 590, 539, 567, 575],
/* 643 */
/*!************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactClass.js ***!
  \************************************************************/
[2029, 644, 563, 586, 587, 645, 560, 579, 534, 538, 600, 546],
/* 644 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactComponent.js ***!
  \****************************************************************/
[2030, 645, 564, 579, 534, 546],
/* 645 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactNoopUpdateQueue.js ***!
  \**********************************************************************/
[2031, 546],
/* 646 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactReconcileTransaction.js ***!
  \***************************************************************************/
[2032, 576, 577, 550, 562, 647, 578, 560],
/* 647 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactInputSelection.js ***!
  \*********************************************************************/
[2033, 648, 580, 616, 650],
/* 648 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMSelection.js ***!
  \*******************************************************************/
[2034, 530, 649, 596],
/* 649 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/getNodeForCharacterOffset.js ***!
  \***************************************************************************/
128,
/* 650 */
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/getActiveElement.js ***!
  \*************************************************************************/
129,
/* 651 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SelectEventPlugin.js ***!
  \*******************************************************************/
[2035, 551, 594, 530, 647, 598, 650, 603, 600, 638],
/* 652 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ServerReactRootIndex.js ***!
  \**********************************************************************/
131,
/* 653 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SimpleEventPlugin.js ***!
  \*******************************************************************/
[2036, 551, 640, 594, 549, 654, 598, 655, 656, 607, 659, 660, 608, 661, 536, 657, 534, 600],
/* 654 */
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticClipboardEvent.js ***!
  \*************************************************************************/
[2037, 598],
/* 655 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticFocusEvent.js ***!
  \*********************************************************************/
[2038, 608],
/* 656 */
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticKeyboardEvent.js ***!
  \************************************************************************/
[2039, 608, 657, 658, 609],
/* 657 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/getEventCharCode.js ***!
  \******************************************************************/
136,
/* 658 */
/*!*************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/getEventKey.js ***!
  \*************************************************************/
[2040, 657],
/* 659 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticDragEvent.js ***!
  \********************************************************************/
[2041, 607],
/* 660 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticTouchEvent.js ***!
  \*********************************************************************/
[2042, 608, 609],
/* 661 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SyntheticWheelEvent.js ***!
  \*********************************************************************/
[2043, 607],
/* 662 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/SVGDOMPropertyConfig.js ***!
  \**********************************************************************/
[2044, 544],
/* 663 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDefaultPerf.js ***!
  \******************************************************************/
[2045, 544, 664, 549, 539, 665],
/* 664 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDefaultPerfAnalysis.js ***!
  \**************************************************************************/
[2046, 560],
/* 665 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/performanceNow.js ***!
  \***********************************************************************/
[2047, 666],
/* 666 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/performance.js ***!
  \********************************************************************/
[2048, 530],
/* 667 */
/*!**************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactVersion.js ***!
  \**************************************************************/
146,
/* 668 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/renderSubtreeIntoContainer.js ***!
  \****************************************************************************/
[2049, 549],
/* 669 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMServer.js ***!
  \****************************************************************/
[2050, 592, 670, 667],
/* 670 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactServerRendering.js ***!
  \**********************************************************************/
[2051, 613, 563, 566, 569, 671, 672, 575, 579, 583, 534],
/* 671 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactServerBatchingStrategy.js ***!
  \*****************************************************************************/
150,
/* 672 */
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactServerRenderingTransaction.js ***!
  \*********************************************************************************/
[2052, 577, 576, 578, 560, 536],
/* 673 */
/*!*****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactIsomorphic.js ***!
  \*****************************************************************/
[2053, 631, 644, 643, 674, 563, 675, 628, 667, 560, 677],
/* 674 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactDOMFactories.js ***!
  \*******************************************************************/
[2054, 563, 675, 676],
/* 675 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/ReactElementValidator.js ***!
  \***********************************************************************/
[2055, 563, 586, 587, 526, 564, 629, 534, 546],
/* 676 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/~/fbjs/lib/mapObject.js ***!
  \******************************************************************/
155,
/* 677 */
/*!***********************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/onlyChild.js ***!
  \***********************************************************/
[2056, 563, 534],
/* 678 */
/*!************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react/lib/deprecated.js ***!
  \************************************************************/
[2057, 560, 546],
/* 679 */
/*!*******************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-dom/index.js ***!
  \*******************************************************/
[2058, 525],
/* 680 */,
/* 681 */
/*!**********************************************************!*\
  !*** ./expression-atlas-heatmap/~/jquery/dist/jquery.js ***!
  \**********************************************************/
468,
/* 682 */,
/* 683 */
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/jquery-hc-sticky/jquery.hc-sticky.js ***!
  \*************************************************************************/
[2187, 681],
/* 684 */
/*!*********************************************************!*\
  !*** ./expression-atlas-heatmap/~/anatomogram/index.js ***!
  \*********************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/Anatomogram.jsx */ 685);

/***/ },
/* 685 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/anatomogram/src/Anatomogram.jsx ***!
  \********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 523);
	var ReactDOM = __webpack_require__(/*! react-dom */ 679);
	
	var $ = __webpack_require__(/*! jquery */ 681);
	__webpack_require__(/*! jquery-hc-sticky */ 686);
	__webpack_require__(/*! jquery-ui-bundle */ 687);
	
	var Snap = __webpack_require__(/*! imports-loader?this=>window,fix=>module.exports=0!snapsvg/dist/snap.svg.js */ 688);
	
	var EventEmitter = __webpack_require__(/*! events */ 483);
	
	//*------------------------------------------------------------------*
	
	var AnatomogramSelectImageButton = React.createClass({
	  displayName: 'AnatomogramSelectImageButton',
	
	  propTypes: {
	    anatomogramId: React.PropTypes.string.isRequired,
	    selected: React.PropTypes.bool.isRequired,
	    toggleSrcTemplate: React.PropTypes.string.isRequired,
	    onClick: React.PropTypes.func.isRequired
	  },
	
	  render: function () {
	    var selectedToggleSrc = this.props.toggleSrcTemplate + "_selected.png",
	        unselectedToggleSrc = this.props.toggleSrcTemplate + "_unselected.png";
	
	    return React.createElement(
	      'div',
	      null,
	      React.createElement('img', { ref: 'toggleButton', onClick: this._onClick, src: this.props.selected ? selectedToggleSrc : unselectedToggleSrc,
	        style: { width: "24px", height: "24px", padding: "2px" } })
	    );
	  },
	
	  componentDidMount: function () {
	    $(ReactDOM.findDOMNode(this.refs.toggleButton)).button();
	  },
	
	  _onClick: function () {
	    this.props.onClick(this.props.anatomogramId);
	  }
	});
	
	var AnatomogramImageParts = React.createClass({
	  displayName: 'AnatomogramImageParts',
	
	  propTypes: {
	    idsExpressedInExperiment: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	    idsHeatmapWantsHighlighted: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	    idsMousedOver: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	    idsNotHighlighted: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	    expressedTissueColour: React.PropTypes.string.isRequired,
	    hoveredTissueColour: React.PropTypes.string.isRequired
	  },
	
	  getInitialState: function () {
	    return { toDraw: [].concat(AnatomogramImageParts.idsThatShouldBeStronglyHighlighted(this.props).map(this._highlightStrongly), this.props.idsExpressedInExperiment.map(this._highlightSlightly), this.props.idsNotHighlighted.map(this._highlightAsBackground)) };
	  },
	
	  render: function () {
	    return React.createElement('span', null);
	  },
	
	  _highlightStrongly: function (svgPathId) {
	    return { id: svgPathId, colour: this.props.hoveredTissueColour, opacity: 0.7 };
	  },
	
	  _highlightSlightly: function (svgPathId) {
	    return { id: svgPathId, colour: this.props.expressedTissueColour, opacity: 0.7 };
	  },
	
	  _highlightAsBackground: function (svgPathId) {
	    return { id: svgPathId, colour: "gray", opacity: 0.5 };
	  },
	
	  componentWillReceiveProps: function (nextProps) {
	    var oldStrong = AnatomogramImageParts.idsThatShouldBeStronglyHighlighted(this.props);
	    var newStrong = AnatomogramImageParts.idsThatShouldBeStronglyHighlighted(nextProps);
	    var oldWeak = this.props.idsExpressedInExperiment;
	    var newWeak = nextProps.idsExpressedInExperiment;
	
	    var toDraw = [].concat(
	    //ids that heatmap wants highlighted are the most highlighted
	    newStrong.filter(function (id) {
	      return oldStrong.indexOf(id) < 0;
	    }).map(this._highlightStrongly),
	    //ids that are expressed in the experiment are highlighted with a weaker colour, often the same as background
	    newWeak.filter(function (id) {
	      return newStrong.indexOf(id) < 0;
	    }).filter(function (id) {
	      return oldWeak.indexOf(id) < 0;
	    }.bind(this)).map(this._highlightSlightly), nextProps.idsNotHighlighted.filter(function (id) {
	      return this.props.idsNotHighlighted.indexOf(id) < 0;
	    }.bind(this)).map(this._highlightAsBackground));
	
	    this.setState({ toDraw: toDraw });
	  },
	
	  statics: {
	    idsThatShouldBeStronglyHighlighted: function (properties) {
	      return properties.idsHeatmapWantsHighlighted.concat(properties.idsMousedOver);
	    }
	  }
	});
	
	var AnatomogramImage = React.createClass({
	  displayName: 'AnatomogramImage',
	
	  propTypes: {
	    file: React.PropTypes.string.isRequired,
	    height: React.PropTypes.string.isRequired,
	    expressedFactorsPerRow: React.PropTypes.object.isRequired,
	    allSvgPathIds: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	    expressedTissueColour: React.PropTypes.string.isRequired,
	    hoveredTissueColour: React.PropTypes.string.isRequired
	  },
	
	  getInitialState: function () {
	    return {
	      hoveredPathId: null,
	      hoveredRowId: null,
	      mousedOverSvgIds: []
	    };
	  },
	  _expressedFactors: function () {
	    var o = this.props.expressedFactorsPerRow;
	    var vs = Object.keys(o).map(function (e) {
	      return o[e];
	    });
	    return [].concat.apply({}, vs).filter(function uniq(e, ix, self) {
	      return self.indexOf(e) === ix;
	    });
	  },
	
	  componentWillReceiveProps: function (nextProps) {
	    if (nextProps.file !== this.props.file) {
	      this._loadAnatomogram(nextProps.file);
	    }
	  },
	
	  componentDidMount: function () {
	    this._loadAnatomogram(this.props.file);
	    this._draw();
	  },
	
	  componentDidUpdate: function () {
	    this._draw();
	  },
	
	  _draw: function () {
	    var svg = Snap(ReactDOM.findDOMNode(this.refs.anatomogram)).select("g");
	    if (svg !== null) {
	      this._drawOnSvg(svg, this.refs.imageParts.state.toDraw);
	      this.refs.imageParts.setState({ toDraw: [] });
	    }
	  },
	  _drawInitialLayout: function (svg) {
	    this._drawOnSvg(svg, this.refs.imageParts.getInitialState().toDraw);
	    this.refs.imageParts.setState({ toDraw: [] });
	  },
	
	  _drawOnSvg: function (svg, instructions) {
	    instructions.forEach(function (instruction) {
	      this._highlightOrganismParts(svg, instruction.id, instruction.colour, instruction.opacity);
	    }.bind(this));
	  },
	
	  render: function () {
	    var idsExpressedInExperiment = [],
	        idsHoveredOver = [],
	        idsHeatmapWantsHighlighted = [],
	        idsNotHighlighted = [],
	        expressedFactors = this._expressedFactors();
	
	    for (var i = 0; i < this.props.allSvgPathIds.length; i++) {
	      var id = this.props.allSvgPathIds[i];
	      if (this.state.mousedOverSvgIds.indexOf(id) > -1) {
	        idsHoveredOver.push(id);
	      } else if (this._hoveredRowContainsPathId(id) || this.state.hoveredPathId === id) {
	        idsHeatmapWantsHighlighted.push(id);
	      } else if (expressedFactors.indexOf(id) > -1) {
	        idsExpressedInExperiment.push(id);
	      } else {
	        idsNotHighlighted.push(id);
	      }
	    }
	
	    return React.createElement(
	      'span',
	      null,
	      React.createElement('svg', { ref: 'anatomogram', style: { display: "table-cell", width: "230px", height: this.props.height + "px" } }),
	      React.createElement(AnatomogramImageParts, { ref: 'imageParts', key: this.props.file,
	        idsExpressedInExperiment: idsExpressedInExperiment,
	        idsHeatmapWantsHighlighted: idsHeatmapWantsHighlighted,
	        idsMousedOver: idsHoveredOver,
	        idsNotHighlighted: idsNotHighlighted,
	        expressedTissueColour: this.props.expressedTissueColour,
	        hoveredTissueColour: this.props.hoveredTissueColour })
	    );
	  },
	
	  _highlightPath: function (svgPathId) {
	    this.setState({ hoveredPathId: svgPathId });
	  },
	
	  _highlightRow: function (rowId) {
	    this.setState({ hoveredRowId: rowId });
	  },
	
	  _loadAnatomogram: function (svgFile) {
	
	    var svgCanvas = Snap(ReactDOM.findDOMNode(this.refs.anatomogram)),
	        $svgCanvas = $(ReactDOM.findDOMNode(this.refs.anatomogram)),
	        allElements = svgCanvas.selectAll("*");
	
	    if (allElements) {
	      allElements.remove();
	    }
	
	    var displayAllOrganismPartsCallback = this._drawInitialLayout;
	    var registerHoverEventsCallback = this._registerHoverEvents;
	    Snap.load(svgFile, function (fragment) {
	      var g = fragment.select("g");
	      g.transform("S1.6,0,0");
	      displayAllOrganismPartsCallback(g);
	      registerHoverEventsCallback(g);
	      svgCanvas.append(g);
	      var img = fragment.select("#ccLogo");
	      var heightTranslate = $svgCanvas.height() - 15;
	      var widthTranslate = $svgCanvas.width() / 2 - 40;
	      img.transform("t" + widthTranslate + "," + heightTranslate);
	      svgCanvas.append(img);
	    });
	  },
	
	  _hoveredRowContainsPathId: function (svgPathId) {
	    return this.state.hoveredRowId && this.props.expressedFactorsPerRow.hasOwnProperty(this.state.hoveredRowId) && this.props.expressedFactorsPerRow[this.state.hoveredRowId].indexOf(svgPathId) > -1;
	  },
	
	  _registerHoverEvents: function (svg) {
	    if (svg) {
	      // Sometimes svg is null... why?
	      var mouseoverCallback = function (svgPathId) {
	        this.props.eventEmitter.emit('gxaAnatomogramTissueMouseEnter', svgPathId);
	        this.setState(function (previousState, currentProps) {
	          var a = [].concat(previousState.mousedOverSvgIds);
	          a.push(svgPathId);
	          while (a.length > 5) {
	            a.shift();
	          }
	          return { mousedOverSvgIds: a };
	        });
	      }.bind(this);
	      var mouseoutCallback = function (svgPathId) {
	        this.props.eventEmitter.emit('gxaAnatomogramTissueMouseLeave', svgPathId);
	        this.setState(function (previousState, currentProps) {
	          var a = previousState.mousedOverSvgIds.map(function (el) {
	            return el === svgPathId ? "" : el;
	          });
	          return { mousedOverSvgIds: a };
	        });
	      }.bind(this);
	
	      var attachCallbacks = function (svgElement, svgPathId) {
	        if (svgElement) {
	          svgElement.mouseover(function () {
	            mouseoverCallback(svgPathId);
	          });
	          svgElement.mouseout(function () {
	            mouseoutCallback(svgPathId);
	          });
	        }
	      };
	
	      this.props.allSvgPathIds.forEach(function (svgPathId) {
	        var svgElement = svg.select("#" + svgPathId);
	        attachCallbacks(svgElement, svgPathId);
	        if (svgElement && svgElement.type === "use") {
	          attachCallbacks(svg.select(svgElement.node.getAttribute("xlink:href")), svgPathId);
	        }
	      }, this);
	    }
	  },
	
	  _highlightOrganismParts: function (svg, svgPathId, colour, opacity) {
	    var el = svg.select("#" + svgPathId);
	    if (el && el.type === "use") {
	      AnatomogramImage._recursivelyChangeProperties(svg.select(el.node.getAttribute("xlink:href")), colour, opacity);
	    }
	    AnatomogramImage._recursivelyChangeProperties(el, colour, opacity);
	  },
	
	  statics: {
	    _recursivelyChangeProperties: function (svgElement, colour, opacity) {
	      if (svgElement) {
	        svgElement.selectAll("*").forEach(function (innerElement) {
	          AnatomogramImage._recursivelyChangeProperties(innerElement);
	        });
	        svgElement.attr({ "fill": colour, "fill-opacity": opacity });
	      }
	    }
	  }
	});
	
	var Anatomogram = React.createClass({
	  displayName: 'Anatomogram',
	
	
	  propTypes: {
	    anatomogramData: React.PropTypes.object.isRequired,
	    expressedTissueColour: React.PropTypes.string.isRequired,
	    hoveredTissueColour: React.PropTypes.string.isRequired,
	    profileRows: React.PropTypes.arrayOf(React.PropTypes.shape({
	      id: React.PropTypes.string,
	      name: React.PropTypes.string.isRequired,
	      expressions: React.PropTypes.arrayOf(React.PropTypes.shape({
	        factorName: React.PropTypes.string,
	        color: React.PropTypes.string,
	        value: React.PropTypes.number, // missing represents "NA"/"NT"
	        svgPathId: React.PropTypes.string
	      })).isRequired
	    })).isRequired,
	    eventEmitter: React.PropTypes.instanceOf(EventEmitter),
	    atlasBaseURL: React.PropTypes.string.isRequired
	  },
	
	  _availableAnatomograms: function () {
	    return [].concat(this.props.anatomogramData.maleAnatomogramFile ? [{
	      id: "male",
	      anatomogramFile: this.props.atlasBaseURL + "/resources/svg/" + this.props.anatomogramData.maleAnatomogramFile,
	      toggleSrcTemplate: this.props.atlasBaseURL + this.props.anatomogramData.toggleButtonMaleImageTemplate
	    }] : [], this.props.anatomogramData.femaleAnatomogramFile ? [{
	      id: "female",
	      anatomogramFile: this.props.atlasBaseURL + "/resources/svg/" + this.props.anatomogramData.femaleAnatomogramFile,
	      toggleSrcTemplate: this.props.atlasBaseURL + this.props.anatomogramData.toggleButtonFemaleImageTemplate
	    }] : [], this.props.anatomogramData.brainAnatomogramFile ? [{
	      id: "brain",
	      anatomogramFile: this.props.atlasBaseURL + "/resources/svg/" + this.props.anatomogramData.brainAnatomogramFile,
	      toggleSrcTemplate: this.props.atlasBaseURL + this.props.anatomogramData.toggleButtonBrainImageTemplate }] : []);
	  },
	
	  getInitialState: function () {
	    return {
	      selectedId: this._availableAnatomograms()[0].id
	    };
	  },
	
	  render: function () {
	    function containsHuman(str) {
	      return str.indexOf("human") > -1;
	    }
	
	    return React.createElement(
	      'div',
	      { className: 'gxaAnatomogram', style: { display: "table", paddingTop: "4px" } },
	      React.createElement(
	        'div',
	        { style: { display: "table-row" } },
	        React.createElement(
	          'div',
	          { style: { display: "table-cell", verticalAlign: "top" } },
	          this._anatomogramSelectImageButtons()
	        ),
	        React.createElement(AnatomogramImage, {
	          key: this.state.selectedId,
	          ref: 'currentImage',
	          file: this._getAnatomogramSVGFile(this.state.selectedId),
	          height: containsHuman(this.props.anatomogramData.maleAnatomogramFile) ? "375" : "265",
	          expressedFactorsPerRow: this.props.profileRows.reduce(function (result, row) {
	            result[row.name] = row.expressions.filter(function (expression) {
	              return expression.value;
	            }).map(function (expression) {
	              return expression.svgPathId;
	            });
	            return result;
	          }, {}),
	          allSvgPathIds: this.props.anatomogramData.allSvgPathIds,
	          eventEmitter: this.props.eventEmitter,
	          expressedTissueColour: this.props.expressedTissueColour,
	          hoveredTissueColour: this.props.hoveredTissueColour })
	      )
	    );
	  },
	
	  _anatomogramSelectImageButtons: function () {
	    return this._availableAnatomograms().map(function (availableAnatomogram) {
	      return React.createElement(AnatomogramSelectImageButton, {
	        key: availableAnatomogram.id + "_toggle",
	        anatomogramId: availableAnatomogram.id,
	        selected: this.state.selectedId === availableAnatomogram.id,
	        toggleSrcTemplate: availableAnatomogram.toggleSrcTemplate,
	        onClick: this._afterUserSelectedAnatomogram });
	    }.bind(this));
	  },
	
	  _registerListenerIfNecessary: function (name, fn) {
	    if (this.props.eventEmitter && this.props.eventEmitter._events && !this.props.eventEmitter._events.hasOwnProperty(name)) {
	      this.props.eventEmitter.addListener(name, fn);
	    }
	  },
	
	  componentDidMount: function () {
	    this._registerListenerIfNecessary("gxaHeatmapColumnHoverChange", this._highlightPath);
	    this._registerListenerIfNecessary("gxaHeatmapRowHoverChange", this._highlightRow);
	  },
	
	  componentDidUpdate: function () {
	    this._registerListenerIfNecessary("gxaHeatmapColumnHoverChange", this._highlightPath);
	    this._registerListenerIfNecessary("gxaHeatmapRowHoverChange", this._highlightRow);
	  },
	
	  _afterUserSelectedAnatomogram: function (newSelectedId) {
	    if (newSelectedId !== this.state.selectedId) {
	      this.setState({ selectedId: newSelectedId });
	    }
	  },
	
	  _highlightPath: function (svgPathId) {
	    this.refs.currentImage._highlightPath(svgPathId);
	  },
	
	  _highlightRow: function (rowId) {
	    this.refs.currentImage._highlightRow(rowId);
	  },
	
	  _getAnatomogramSVGFile: function (id) {
	    return this._availableAnatomograms().filter(function (e, ix) {
	      return e.id === id;
	    }).map(function (e) {
	      return e.anatomogramFile;
	    }).concat([""])[0];
	  }
	
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = Anatomogram;

/***/ },
/* 686 */
/*!***************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/anatomogram/~/jquery-hc-sticky/jquery.hc-sticky.js ***!
  \***************************************************************************************/
[2187, 681],
/* 687 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/jquery-ui-bundle/jquery-ui.js ***!
  \******************************************************************/
[2184, 681],
/* 688 */
/*!********************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/imports-loader?this=>window,fix=>module.exports=0!./expression-atlas-heatmap/~/snapsvg/dist/snap.svg.js ***!
  \********************************************************************************************************************************************/
484,
/* 689 */,
/* 690 */,
/* 691 */,
/* 692 */,
/* 693 */,
/* 694 */,
/* 695 */,
/* 696 */,
/* 697 */,
/* 698 */,
/* 699 */,
/* 700 */,
/* 701 */,
/* 702 */,
/* 703 */,
/* 704 */,
/* 705 */,
/* 706 */,
/* 707 */,
/* 708 */,
/* 709 */,
/* 710 */,
/* 711 */,
/* 712 */,
/* 713 */,
/* 714 */,
/* 715 */,
/* 716 */,
/* 717 */,
/* 718 */,
/* 719 */,
/* 720 */,
/* 721 */,
/* 722 */,
/* 723 */,
/* 724 */,
/* 725 */,
/* 726 */,
/* 727 */,
/* 728 */,
/* 729 */,
/* 730 */,
/* 731 */,
/* 732 */,
/* 733 */,
/* 734 */,
/* 735 */,
/* 736 */,
/* 737 */,
/* 738 */,
/* 739 */,
/* 740 */,
/* 741 */,
/* 742 */,
/* 743 */,
/* 744 */,
/* 745 */,
/* 746 */,
/* 747 */,
/* 748 */,
/* 749 */,
/* 750 */,
/* 751 */,
/* 752 */,
/* 753 */,
/* 754 */,
/* 755 */,
/* 756 */,
/* 757 */,
/* 758 */,
/* 759 */,
/* 760 */,
/* 761 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader/lib/css-base.js ***!
  \***************************************************************/
511,
/* 762 */
/*!**************************************************************!*\
  !*** ./expression-atlas-heatmap/~/style-loader/addStyles.js ***!
  \**************************************************************/
512,
/* 763 */
/*!**************************************************!*\
  !*** ./expression-atlas-heatmap/src/Heatmap.jsx ***!
  \**************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 523);
	var ReactDOM = __webpack_require__(/*! react-dom */ 679);
	var ReactDOMServer = __webpack_require__(/*! react-dom/server */ 764);
	var RadioGroup = __webpack_require__(/*! react-radio-group */ 765);
	var Slider = __webpack_require__(/*! rc-slider */ 766);
	__webpack_require__(/*! rc-slider/assets/index.css */ 810);
	
	var DownloadProfilesButton = __webpack_require__(/*! download-profiles-button */ 812);
	
	var $ = __webpack_require__(/*! jquery */ 681);
	
	__webpack_require__(/*! jquery-ui-bundle */ 687);
	__webpack_require__(/*! jquery-hc-sticky */ 683);
	__webpack_require__(/*! atlas-modernizr */ 945); // Leaks Modernizr to the global window namespace
	
	__webpack_require__(/*! fancybox */ 946)($);
	__webpack_require__(/*! fancybox/dist/css/jquery.fancybox.css */ 947);
	
	__webpack_require__(/*! jquery-toolbar */ 955);
	__webpack_require__(/*! jquery-toolbar/jquery.toolbar.css */ 956);
	
	//*------------------------------------------------------------------*
	
	var HeatmapBaselineCellVariance = __webpack_require__(/*! heatmap-baseline-cell-variance */ 958);
	var Legend = __webpack_require__(/*! legend */ 963);
	var LegendBaseline = Legend.LegendBaseline;
	var LegendDifferential = Legend.LegendDifferential;
	var CellDifferential = __webpack_require__(/*! cell-differential */ 978);
	var DisplayLevelsButton = __webpack_require__(/*! display-levels-button */ 984);
	var NumberFormat = __webpack_require__(/*! number-format */ 976);
	var HelpTooltips = __webpack_require__(/*! help-tooltips */ 968);
	var ContrastTooltips = __webpack_require__(/*! contrast-tooltips */ 986);
	
	var GenePropertiesTooltipModule = __webpack_require__(/*! ./genePropertiesTooltipModule.js */ 992);
	var FactorTooltipModule = __webpack_require__(/*! ./factorTooltipModule.js */ 995);
	
	var StickyHeaderModule = __webpack_require__(/*! ./stickyHeaderModule.js */ 999);
	__webpack_require__(/*! ./stickyHeaderModule.css */ 1000);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./Heatmap.css */ 1002);
	
	//*------------------------------------------------------------------*
	
	var Heatmap = React.createClass({
	    displayName: 'Heatmap',
	
	
	    propTypes: {
	        type: React.PropTypes.shape({
	            isBaseline: React.PropTypes.bool,
	            isProteomics: React.PropTypes.bool,
	            isDifferential: React.PropTypes.bool,
	            isMultiExperiment: React.PropTypes.bool,
	            heatmapTooltip: React.PropTypes.string.isRequired
	        }),
	        heatmapConfig: React.PropTypes.object.isRequired,
	        columnHeaders: React.PropTypes.oneOfType([React.PropTypes.arrayOf(React.PropTypes.shape({
	            assayGroupId: React.PropTypes.string.isRequired,
	            factorValue: React.PropTypes.string.isRequired,
	            factorValueOntologyTermId: React.PropTypes.string
	        })), React.PropTypes.arrayOf(React.PropTypes.shape({
	            id: React.PropTypes.string.isRequired,
	            referenceAssayGroup: React.PropTypes.shape({
	                id: React.PropTypes.string.isRequired,
	                assayAccessions: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	                replicates: React.PropTypes.number.isRequired
	            }).isRequired,
	            testAssayGroup: React.PropTypes.shape({
	                id: React.PropTypes.string.isRequired,
	                assayAccessions: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	                replicates: React.PropTypes.number.isRequired
	            }).isRequired,
	            displayName: React.PropTypes.string.isRequired
	        }))]).isRequired,
	        profiles: React.PropTypes.object.isRequired,
	        jsonCoexpressions: React.PropTypes.arrayOf(React.PropTypes.shape({
	            geneName: React.PropTypes.string.isRequired,
	            jsonProfiles: React.PropTypes.object.isRequired
	        })),
	        geneSetProfiles: React.PropTypes.object,
	        prefFormDisplayLevels: React.PropTypes.object,
	        ensemblEventEmitter: React.PropTypes.object,
	        anatomogramEventEmitter: React.PropTypes.object,
	        googleAnalytics: React.PropTypes.bool,
	        atlasBaseURL: React.PropTypes.string.isRequired,
	        linksAtlasBaseURL: React.PropTypes.string.isRequired,
	        googleAnalyticsCallback: React.PropTypes.func.isRequired
	    },
	
	    getInitialState: function () {
	        var displayLevels = this.props.prefFormDisplayLevels ? this.props.prefFormDisplayLevels.val() === "true" : false;
	        var coexpressionsDisplayed = {};
	        if (this.props.jsonCoexpressions) {
	            for (var i = 0; i < this.props.jsonCoexpressions.length; i++) {
	                coexpressionsDisplayed[this.props.jsonCoexpressions[i].geneId] = 0;
	            }
	        }
	        return {
	            showGeneSetProfiles: false,
	            displayLevels: displayLevels,
	            selectedColumnId: null,
	            selectedGeneId: null,
	            hoveredColumnId: null,
	            hoveredGeneId: null,
	            selectedRadioButton: "gradients",
	            coexpressionsDisplayed: coexpressionsDisplayed,
	            userInteractedWithTheHeatmap: false
	        };
	    },
	
	    _coexpressionsCurrentlyShown: function () {
	        var ans = 0;
	        for (var k in this.state.coexpressionsDisplayed) {
	            ans += this.state.coexpressionsDisplayed[k];
	        }
	        return ans;
	    },
	
	    _getProfiles: function () {
	        if (this.state.showGeneSetProfiles) {
	            return this.props.geneSetProfiles;
	        } else if (!this.props.jsonCoexpressions) {
	            return this.props.profiles;
	        } else {
	            var newRows = [];
	            for (var i = 0; i < this.props.profiles.rows.length; i++) {
	                var thisRow = this.props.profiles.rows[i];
	                newRows.push(thisRow);
	                var coexpressionsForThisRow = this.props.jsonCoexpressions.filter(function (o) {
	                    return o.geneId === thisRow.id && this.state.coexpressionsDisplayed[o.geneId];
	                }.bind(this));
	                for (var j = 0; j < coexpressionsForThisRow.length; j++) {
	                    [].push.apply(newRows, coexpressionsForThisRow[j].jsonProfiles.rows.slice(0, this.state.coexpressionsDisplayed[coexpressionsForThisRow[j].geneId]));
	                }
	            }
	            return Object.create(this.props.profiles, { rows: { value: newRows } });
	        }
	    },
	
	    _hoverColumn: function (columnId) {
	        this.setState({ hoveredColumnId: columnId }, function () {
	            this.props.anatomogramEventEmitter.emit('gxaHeatmapColumnHoverChange', columnId);
	        });
	    },
	
	    _hoverRow: function (rowId) {
	        this.setState({ hoveredRowId: rowId }, function () {
	            this.props.anatomogramEventEmitter.emit('gxaHeatmapRowHoverChange', rowId);
	        });
	    },
	
	    selectColumn: function (columnId) {
	        if (this.props.ensemblEventEmitter) {
	            var selectedColumnId = columnId === this.state.selectedColumnId ? null : columnId;
	            this.setState({ selectedColumnId: selectedColumnId }, function () {
	                this.props.ensemblEventEmitter.emit('onColumnSelectionChange', selectedColumnId);
	            });
	        }
	    },
	
	    selectGene: function (geneId) {
	        if (this.props.ensemblEventEmitter) {
	            var selectedGeneId = geneId === this.state.selectedGeneId ? null : geneId;
	            this.setState({ selectedGeneId: selectedGeneId }, function () {
	                this.props.ensemblEventEmitter.emit('onGeneSelectionChange', selectedGeneId);
	            });
	        }
	    },
	
	    toggleGeneSets: function () {
	        this.setState({ showGeneSetProfiles: !this.state.showGeneSetProfiles });
	    },
	
	    toggleDisplayLevels: function () {
	        var newDisplayLevels = !this.state.displayLevels;
	        this.setState({ displayLevels: newDisplayLevels });
	        if (this.props.prefFormDisplayLevels) {
	            this.props.prefFormDisplayLevels.val(newDisplayLevels);
	        }
	        $(window).resize();
	    },
	
	    toggleRadioButton: function (newSelected) {
	        this.setState({ selectedRadioButton: newSelected });
	        this.setState({ displayLevels: newSelected === "levels" }); //update the LegendType
	    },
	
	    isMicroarray: function () {
	        return this.props.profiles.rows[0].hasOwnProperty("designElement") && this.props.profiles.rows[0].designElement;
	    },
	
	    hasQuartiles: function () {
	        var hasQuartiles = false;
	        for (var i = 0; i < this.props.profiles.rows[0].expressions.length; i++) {
	            if (this.props.profiles.rows[0].expressions[i].quartiles != undefined) {
	                hasQuartiles = true;
	                break;
	            }
	        }
	        return hasQuartiles;
	    },
	
	    isSingleGeneResult: function () {
	        return this.props.profiles.rows.length == 1;
	    },
	
	    _stateChangeRepresentsInteraction: function (s1, s2) {
	        var ks = ["displayLevels", "showGeneSetProfiles", "selectedColumnId", "selectedGeneId", "hoveredColumnId", "hoveredGeneId", "hoveredRowId"];
	        for (var i = 0; i < ks.length; i++) {
	            var k = ks[i];
	            if (s1[k] !== s2[k]) {
	                return k || true;
	            }
	        }
	        return false;
	    },
	
	    componentWillUpdate: function (nextProps, nextState) {
	        if (!this.state.userInteractedWithTheHeatmap) {
	            if (this._stateChangeRepresentsInteraction(this.state, nextState)) {
	                this.props.googleAnalyticsCallback('send', 'event', 'HeatmapReact', 'interact');
	                this.setState({ userInteractedWithTheHeatmap: true });
	            }
	        }
	    },
	
	    componentDidMount: function () {
	        var table = ReactDOM.findDOMNode(this.refs.heatmapTable),
	            stickyIntersect = ReactDOM.findDOMNode(this.refs.stickyIntersect),
	            stickyColumn = ReactDOM.findDOMNode(this.refs.stickyColumn),
	            stickyHeadRow = ReactDOM.findDOMNode(this.refs.stickyHeader),
	            stickyWrap = ReactDOM.findDOMNode(this.refs.stickyWrap),
	            countAndLegend = ReactDOM.findDOMNode(this.refs.countAndLegend);
	
	        var stickyHeader = StickyHeaderModule(table, stickyIntersect, stickyColumn, stickyHeadRow, stickyWrap, countAndLegend);
	
	        stickyHeader.setWidthsAndReposition();
	        $(countAndLegend).hcSticky({ bottomEnd: stickyHeader.calculateAllowance() });
	
	        $(stickyWrap).scroll(stickyHeader.stickyReposition);
	        $(window).resize(stickyHeader.setWidthsAndReposition).scroll(stickyHeader.stickyReposition).on("gxaResizeHeatmapAnatomogramHeader", function () {
	            stickyHeader.setWidthAndHeight();
	            $(countAndLegend).hcSticky("resize");
	        });
	    },
	
	    _getMaxExpressionLevel: function () {
	        var maxExpressionLevel = -Infinity;
	        var profileRows = this._getProfiles().rows;
	        for (var i = 0; i < profileRows.length; i++) {
	            for (var j = 0; j < (profileRows[i].expressions || []).length; j++) {
	                var value = profileRows[i].expressions[j].value;
	                if (!isNaN(value) && value > maxExpressionLevel) {
	                    maxExpressionLevel = value;
	                }
	            }
	        }
	        return maxExpressionLevel;
	    },
	
	    _getMinExpressionLevel: function () {
	        var minExpressionLevel = Infinity;
	        var profileRows = this._getProfiles().rows;
	        for (var i = 0; i < profileRows.length; i++) {
	            for (var j = 0; j < (profileRows[i].expressions || []).length; j++) {
	                var value = profileRows[i].expressions[j].value;
	                if (!isNaN(value) && value < minExpressionLevel) {
	                    minExpressionLevel = value;
	                }
	            }
	        }
	        return minExpressionLevel;
	    },
	
	    legendType: function () {
	        if (this.props.type.isBaseline || this.props.type.isMultiExperiment) {
	            return React.createElement(LegendBaseline, {
	                atlasBaseURL: this.props.atlasBaseURL,
	                minExpressionLevel: this._getMinExpressionLevel().toString(),
	                maxExpressionLevel: this._getMaxExpressionLevel().toString(),
	                isMultiExperiment: this.props.type.isMultiExperiment ? true : false });
	        } else {
	            var ps = this._getProfiles();
	            return React.createElement(LegendDifferential, {
	                atlasBaseURL: this.props.atlasBaseURL,
	                minDownLevel: "minDownLevel" in ps ? ps.minDownLevel.toString() : "NaN",
	                maxDownLevel: "maxDownLevel" in ps ? ps.maxDownLevel.toString() : "NaN",
	                minUpLevel: "minUpLevel" in ps ? ps.minUpLevel.toString() : "NaN",
	                maxUpLevel: "maxUpLevel" in ps ? ps.maxUpLevel.toString() : "NaN" });
	        }
	    },
	
	    _getCoexpressionsAvailable: function () {
	        return !this.props.jsonCoexpressions ? [] : this.props.jsonCoexpressions.map(function (value) {
	            return { name: value.geneName, id: value.geneId, amount: value.jsonProfiles.rows.length };
	        });
	    },
	
	    _showCoexpressionsFor: function (geneId, amount) {
	        this.setState(function (previousState) {
	            if (previousState.coexpressionsDisplayed.hasOwnProperty(geneId)) {
	                previousState.coexpressionsDisplayed[geneId] = amount;
	            }
	            return { coexpressionsDisplayed: previousState.coexpressionsDisplayed };
	        });
	    },
	
	    _showGeneCount: function () {
	        var shownRows, totalRows;
	        if (this.props.type.isMultiExperiment || !this.state.showGeneSetProfiles || !this.props.geneSetProfiles) {
	            shownRows = this.props.profiles.rows.length;
	            totalRows = this.props.profiles.searchResultTotal;
	        } else {
	            shownRows = this.props.geneSetProfiles.rows.length;
	            totalRows = this.props.geneSetProfiles.searchResultTotal;
	        }
	
	        return React.createElement(
	            'div',
	            { style: { display: "inline-block", 'verticalAlign': "top" } },
	            this.props.type.isMultiExperiment ? React.createElement(
	                'span',
	                { id: 'geneCount' },
	                'Showing ',
	                shownRows,
	                ' of ',
	                totalRows,
	                ' experiments found: '
	            ) : React.createElement(
	                'span',
	                { id: 'geneCount' },
	                'Showing ',
	                shownRows,
	                ' of ',
	                totalRows,
	                ' ',
	                this.state.showGeneSetProfiles ? 'gene sets' : 'genes',
	                ' found',
	                !this.props.jsonCoexpressions || !this.props.jsonCoexpressions.length ? ":" : " and " + (this._getProfiles().rows.length - shownRows) + " similarly expressed genes:"
	            ),
	            this.props.geneSetProfiles && !this.props.type.isMultiExperiment ? React.createElement(
	                'a',
	                { href: 'javascript:void(0)', onClick: this.toggleGeneSets },
	                this.state.showGeneSetProfiles ? '(show individual genes)' : '(show by gene set)'
	            ) : ''
	        );
	    },
	
	    _constructDownloadProfilesURL: function () {
	        return this.props.heatmapConfig.downloadProfilesURL.match(/.*\?.+/) && Object.keys(this.state.coexpressionsDisplayed).length > 0 ? this.props.heatmapConfig.downloadProfilesURL + "&coexpressions=" + JSON.stringify(this.state.coexpressionsDisplayed) : this.props.heatmapConfig.downloadProfilesURL;
	    },
	
	    render: function () {
	        var paddingMargin = "15px";
	
	        return React.createElement(
	            'div',
	            null,
	            React.createElement(
	                'div',
	                { ref: 'countAndLegend', className: 'gxaHeatmapCountAndLegend', style: { "paddingBottom": paddingMargin, "position": "sticky" } },
	                this._showGeneCount(),
	                React.createElement(
	                    'div',
	                    { style: { display: "inline-block", "paddingLeft": "10px", "verticalAlign": "top" } },
	                    React.createElement(DownloadProfilesButton, { ref: 'downloadProfilesButton',
	                        downloadProfilesURL: this._constructDownloadProfilesURL(),
	                        atlasBaseURL: this.props.atlasBaseURL,
	                        isFortLauderdale: this.props.heatmapConfig.isFortLauderdale,
	                        onDownloadCallbackForAnalytics: function () {
	                            this.props.googleAnalyticsCallback('send', 'event', 'HeatmapReact', 'downloadData');
	                        }.bind(this) })
	                ),
	                React.createElement(
	                    'div',
	                    { style: { display: "inline-block", "paddingLeft": "20px" } },
	                    this.legendType()
	                )
	            ),
	            React.createElement(
	                'div',
	                { ref: 'stickyWrap', className: 'gxaStickyTableWrap', style: { "marginTop": paddingMargin } },
	                React.createElement(
	                    'table',
	                    { ref: 'heatmapTable', className: 'gxaTableGrid gxaStickyEnabled', id: 'heatmap-table' },
	                    React.createElement(HeatmapTableHeader, { ref: 'heatmapTableHeader',
	                        radioId: 'table',
	                        isMicroarray: this.isMicroarray(),
	                        hasQuartiles: this.hasQuartiles(),
	                        isSingleGeneResult: this.isSingleGeneResult(),
	                        currentlyShowingCoexpressions: !!this._coexpressionsCurrentlyShown(),
	                        type: this.props.type,
	                        columnHeaders: this.props.columnHeaders,
	                        multipleColumnHeaders: this.props.multipleColumnHeaders,
	                        selectedColumnId: this.state.selectedColumnId,
	                        selectColumn: this.selectColumn,
	                        hoverColumnCallback: this._hoverColumn,
	                        heatmapConfig: this.props.heatmapConfig,
	                        atlasBaseURL: this.props.atlasBaseURL,
	                        displayLevels: this.state.displayLevels,
	                        toggleDisplayLevels: this.toggleDisplayLevels,
	                        showGeneSetProfiles: this.state.showGeneSetProfiles,
	                        selectedRadioButton: this.state.selectedRadioButton,
	                        toggleRadioButton: this.toggleRadioButton,
	                        renderContrastFactorHeaders: true,
	                        anatomogramEventEmitter: this.props.anatomogramEventEmitter }),
	                    React.createElement(HeatmapTableRows, { profiles: this._getProfiles().rows,
	                        selectedGeneId: this.state.selectedGeneId,
	                        selectGene: this.selectGene,
	                        type: this.props.type,
	                        heatmapConfig: this.props.heatmapConfig,
	                        atlasBaseURL: this.props.atlasBaseURL,
	                        linksAtlasBaseURL: this.props.linksAtlasBaseURL,
	                        displayLevels: this.state.displayLevels,
	                        showGeneSetProfiles: this.state.showGeneSetProfiles,
	                        selectedRadioButton: this.state.selectedRadioButton,
	                        hoverColumnCallback: this._hoverColumn,
	                        hoverRowCallback: this._hoverRow,
	                        hasQuartiles: this.hasQuartiles(),
	                        isSingleGeneResult: this.isSingleGeneResult(),
	                        renderExpressionCells: true })
	                ),
	                React.createElement(
	                    'div',
	                    { ref: 'stickyIntersect', className: 'gxaStickyTableIntersect' },
	                    React.createElement(
	                        'table',
	                        { className: 'gxaTableGrid' },
	                        React.createElement(HeatmapTableHeader, { isMicroarray: this.isMicroarray(),
	                            radioId: 'intersect',
	                            hasQuartiles: this.hasQuartiles(),
	                            isSingleGeneResult: this.isSingleGeneResult(),
	                            currentlyShowingCoexpressions: !!this._coexpressionsCurrentlyShown(),
	                            type: this.props.type,
	                            columnHeaders: this.props.columnHeaders,
	                            multipleColumnHeaders: this.props.multipleColumnHeaders,
	                            selectedColumnId: this.state.selectedColumnId,
	                            selectColumn: this.selectColumn,
	                            heatmapConfig: this.props.heatmapConfig,
	                            atlasBaseURL: this.props.atlasBaseURL,
	                            linksAtlasBaseURL: this.props.linksAtlasBaseURL,
	                            displayLevels: this.state.displayLevels,
	                            toggleDisplayLevels: this.toggleDisplayLevels,
	                            showGeneSetProfiles: this.state.showGeneSetProfiles,
	                            selectedRadioButton: this.state.selectedRadioButton,
	                            toggleRadioButton: this.toggleRadioButton,
	                            renderContrastFactorHeaders: false })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { ref: 'stickyColumn', className: 'gxaStickyTableColumn' },
	                    React.createElement(
	                        'table',
	                        { className: 'gxaTableGrid' },
	                        React.createElement(HeatmapTableHeader, { isMicroarray: this.isMicroarray(),
	                            radioId: 'column',
	                            hasQuartiles: this.hasQuartiles(),
	                            isSingleGeneResult: this.isSingleGeneResult(),
	                            currentlyShowingCoexpressions: !!this._coexpressionsCurrentlyShown(),
	                            columnHeaders: this.props.columnHeaders,
	                            type: this.props.type,
	                            multipleColumnHeaders: this.props.multipleColumnHeaders,
	                            selectedColumnId: this.state.selectedColumnId,
	                            selectColumn: this.selectColumn,
	                            heatmapConfig: this.props.heatmapConfig,
	                            atlasBaseURL: this.props.atlasBaseURL,
	                            displayLevels: this.state.displayLevels,
	                            toggleDisplayLevels: this.toggleDisplayLevels,
	                            showGeneSetProfiles: this.state.showGeneSetProfiles,
	                            selectedRadioButton: this.state.selectedRadioButton,
	                            toggleRadioButton: this.toggleRadioButton,
	                            renderContrastFactorHeaders: false }),
	                        React.createElement(HeatmapTableRows, { profiles: this._getProfiles().rows,
	                            selectedGeneId: this.state.selectedGeneId,
	                            selectGene: this.selectGene,
	                            type: this.props.type,
	                            heatmapConfig: this.props.heatmapConfig,
	                            atlasBaseURL: this.props.atlasBaseURL,
	                            linksAtlasBaseURL: this.props.linksAtlasBaseURL,
	                            displayLevels: this.state.displayLevels,
	                            showGeneSetProfiles: this.state.showGeneSetProfiles,
	                            selectedRadioButton: this.state.selectedRadioButton,
	                            hoverRowCallback: this._hoverRow,
	                            hasQuartiles: this.hasQuartiles(),
	                            isSingleGeneResult: this.isSingleGeneResult(),
	                            renderExpressionCells: false })
	                    )
	                ),
	                React.createElement(
	                    'div',
	                    { ref: 'stickyHeader', className: 'gxaStickyTableHeader' },
	                    React.createElement(
	                        'table',
	                        { className: 'gxaTableGrid' },
	                        React.createElement(HeatmapTableHeader, { isMicroarray: this.isMicroarray(),
	                            radioId: 'header',
	                            hasQuartiles: this.hasQuartiles(),
	                            isSingleGeneResult: this.isSingleGeneResult(),
	                            currentlyShowingCoexpressions: !!this._coexpressionsCurrentlyShown(),
	                            hoverColumnCallback: this._hoverColumn,
	                            type: this.props.type,
	                            columnHeaders: this.props.columnHeaders,
	                            multipleColumnHeaders: this.props.multipleColumnHeaders,
	                            selectedColumnId: this.state.selectedColumnId,
	                            selectColumn: this.selectColumn,
	                            heatmapConfig: this.props.heatmapConfig,
	                            atlasBaseURL: this.props.atlasBaseURL,
	                            linksAtlasBaseURL: this.props.linksAtlasBaseURL,
	                            displayLevels: this.state.displayLevels,
	                            toggleDisplayLevels: this.toggleDisplayLevels,
	                            showGeneSetProfiles: this.state.showGeneSetProfiles,
	                            selectedRadioButton: this.state.selectedRadioButton,
	                            toggleRadioButton: this.toggleRadioButton,
	                            renderContrastFactorHeaders: true,
	                            anatomogramEventEmitter: this.props.anatomogramEventEmitter })
	                    )
	                ),
	                React.createElement(HeatmapBottomOptions, { coexpressionsAvailable: this._getCoexpressionsAvailable(),
	                    showCoexpressionsFor: this._showCoexpressionsFor,
	                    googleAnalyticsCallback: this.props.googleAnalyticsCallback })
	            )
	        );
	    }
	
	});
	
	var HeatmapTableHeader = React.createClass({
	    displayName: 'HeatmapTableHeader',
	
	    propTypes: {
	        currentlyShowingCoexpressions: React.PropTypes.bool.isRequired
	    },
	
	    renderContrastFactorHeaders: function () {
	        var heatmapConfig = this.props.heatmapConfig;
	        if (this.props.type.isBaseline) {
	            return renderFactorHeaders(heatmapConfig, this.props.atlasBaseURL, this.props.mainHeaderNames, this.props.type, this.props.columnHeaders, heatmapConfig.experimentAccession, this.props.selectColumn, this.props.selectedColumnId, this.props.hoverColumnCallback, this.props.anatomogramEventEmitter);
	        } else if (this.props.type.isDifferential) {
	            return React.createElement(ContrastHeaders, { heatmapConfig: heatmapConfig,
	                atlasBaseURL: this.props.atlasBaseURL,
	                contrasts: this.props.columnHeaders,
	                selectedColumnId: this.props.selectedColumnId,
	                selectColumn: this.props.selectColumn,
	                experimentAccession: heatmapConfig.experimentAccession,
	                showMaPlotButton: heatmapConfig.showMaPlotButton,
	                gseaPlots: heatmapConfig.gseaPlots });
	        } else if (this.props.type.isMultiExperiment) {
	            return renderFactorHeaders(heatmapConfig, this.props.atlasBaseURL, null, this.props.type, this.props.columnHeaders, "", this.props.selectColumn, this.props.selectedColumnId, this.props.hoverColumnCallback, this.props.anatomogramEventEmitter);
	        }
	    },
	
	    render: function () {
	        var showGeneProfile = this.props.showGeneSetProfiles ? "Gene set" : "Gene";
	        var showExperimentProfile = this.props.type.isMultiExperiment ? "Experiment" : showGeneProfile;
	
	        return React.createElement(
	            'thead',
	            null,
	            React.createElement(
	                'tr',
	                null,
	                React.createElement(
	                    'th',
	                    { className: 'gxaHorizontalHeaderCell gxaHeatmapTableIntersect', colSpan: this.props.isMicroarray ? 2 : undefined },
	                    React.createElement(TopLeftCorner, { type: this.props.type,
	                        hasQuartiles: this.props.hasQuartiles,
	                        radioId: this.props.radioId,
	                        isSingleGeneResult: this.props.isSingleGeneResult,
	                        currentlyShowingCoexpressions: this.props.currentlyShowingCoexpressions,
	                        heatmapConfig: this.props.heatmapConfig,
	                        displayLevels: this.props.displayLevels,
	                        toggleDisplayLevels: this.props.toggleDisplayLevels,
	                        selectedRadioButton: this.props.selectedRadioButton,
	                        toggleRadioButton: this.props.toggleRadioButton,
	                        atlasBaseURL: this.props.atlasBaseURL })
	                ),
	                this.props.renderContrastFactorHeaders ? this.renderContrastFactorHeaders() : null
	            ),
	            React.createElement(
	                'tr',
	                null,
	                React.createElement(
	                    'th',
	                    { className: 'gxaHorizontalHeaderCell gxaHeatmapTableIntersect', style: this.props.isMicroarray ? { width: "166px" } : {} },
	                    React.createElement(
	                        'div',
	                        null,
	                        showExperimentProfile
	                    )
	                ),
	                this.props.isMicroarray ? React.createElement(
	                    'th',
	                    { className: 'gxaHorizontalHeaderCell gxaHeatmapTableIntersect' },
	                    React.createElement(
	                        'div',
	                        null,
	                        'Design Element'
	                    )
	                ) : null
	            )
	        );
	    }
	});
	
	function restrictLabelSize(label, maxSize) {
	    var result = label;
	    if (result.length > maxSize + 1) {
	        // +1 to account for the extra ellipsis character appended
	        result = result.substring(0, maxSize);
	        if (result.lastIndexOf(" ") > maxSize - 5) {
	            result = result.substring(0, result.lastIndexOf(" "));
	        }
	        result = result + "…";
	    }
	    return result;
	}
	
	function renderFactorHeaders(heatmapConfig, atlasBaseURL, mainHeaderNames, type, assayGroupFactors, experimentAccession, selectColumn, selectedColumnId, hoverColumnCallback, anatomogramEventEmitter) {
	
	    return assayGroupFactors.map(function (assayGroupFactor) {
	        return React.createElement(FactorHeader, { key: mainHeaderNames + assayGroupFactor.factorValue,
	            type: type,
	            heatmapConfig: heatmapConfig,
	            factorName: assayGroupFactor.factorValue,
	            svgPathId: assayGroupFactor.factorValueOntologyTermId,
	            assayGroupId: assayGroupFactor.assayGroupId,
	            experimentAccession: experimentAccession,
	            selectColumn: selectColumn,
	            selected: assayGroupFactor.assayGroupId === selectedColumnId,
	            hoverColumnCallback: hoverColumnCallback,
	            anatomogramEventEmitter: anatomogramEventEmitter,
	            atlasBaseURL: atlasBaseURL });
	    });
	}
	
	var FactorHeader = React.createClass({
	    displayName: 'FactorHeader',
	
	
	    getInitialState: function () {
	        return { hover: false, selected: false };
	    },
	
	    onMouseEnter: function () {
	        if (this.props.heatmapConfig.enableEnsemblLauncher) {
	            this.setState({ hover: true });
	        }
	        this.props.hoverColumnCallback(this.props.svgPathId);
	    },
	
	    onMouseLeave: function () {
	        if (this.props.heatmapConfig.enableEnsemblLauncher) {
	            this.setState({ hover: false });
	        }
	        this.props.hoverColumnCallback(null);
	        this._closeTooltip();
	    },
	
	    _closeTooltip: function () {
	        if (!this.props.type.isMultiExperiment) {
	            $(ReactDOM.findDOMNode(this)).tooltip("close");
	        }
	    },
	
	    _anatomogramTissueMouseEnter: function (svgPathId) {
	        if (svgPathId === this.props.svgPathId) {
	            $(ReactDOM.findDOMNode(this.refs.headerCell)).addClass("gxaHeaderHover");
	        }
	    },
	
	    _anatomogramTissueMouseLeave: function (svgPathId) {
	        if (svgPathId === this.props.svgPathId) {
	            $(ReactDOM.findDOMNode(this.refs.headerCell)).removeClass("gxaHeaderHover");
	        }
	    },
	
	    onClick: function () {
	        if (this.props.heatmapConfig.enableEnsemblLauncher) {
	            this.props.selectColumn(this.props.assayGroupId);
	        }
	    },
	
	    componentDidMount: function () {
	        if (!this.props.type.isMultiExperiment) {
	            FactorTooltipModule.init(this.props.atlasBaseURL, this.props.heatmapConfig.accessKey, ReactDOM.findDOMNode(this), this.props.experimentAccession, this.props.assayGroupId);
	        }
	        if (this.props.anatomogramEventEmitter) {
	            this.props.anatomogramEventEmitter.addListener('gxaAnatomogramTissueMouseEnter', this._anatomogramTissueMouseEnter);
	            this.props.anatomogramEventEmitter.addListener('gxaAnatomogramTissueMouseLeave', this._anatomogramTissueMouseLeave);
	        }
	    },
	
	    render: function () {
	        var showSelectTextOnHover = this.state.hover && !this.props.selected ? React.createElement(
	            'span',
	            { style: { position: "absolute", width: "10px", right: "0px", left: "95px", float: "right", color: "green" } },
	            '  select'
	        ) : null;
	        var showTickWhenSelected = this.props.selected ? React.createElement(
	            'span',
	            { className: 'rotate_tick', style: { position: "absolute", width: "5px", right: "0px", left: "125px", float: "right", color: "green" } },
	            ' ✔ '
	        ) : null;
	        var thClass = "rotated_cell gxaHoverableHeader" + (this.props.selected ? " gxaVerticalHeaderCell-selected" : " gxaVerticalHeaderCell") + (this.props.heatmapConfig.enableEnsemblLauncher ? " gxaSelectableHeader" : "");
	        var divClass = "rotate_text factor-header";
	        var factorName = Modernizr.csstransforms ? restrictLabelSize(this.props.factorName, 14) : this.props.factorName;
	
	        return React.createElement(
	            'th',
	            { ref: 'headerCell', className: thClass, onMouseEnter: this.onMouseEnter, onMouseLeave: this.onMouseLeave, onClick: this.onClick, rowSpan: '2' },
	            React.createElement(
	                'div',
	                { 'data-assay-group-id': this.props.assayGroupId, 'data-experiment-accession': this.props.experimentAccession, className: divClass },
	                factorName,
	                showSelectTextOnHover,
	                showTickWhenSelected
	            )
	        );
	    }
	
	});
	
	var ContrastHeaders = React.createClass({
	    displayName: 'ContrastHeaders',
	
	
	    render: function () {
	        var heatmapConfig = this.props.heatmapConfig;
	
	        var contrastHeaders = this.props.contrasts.map(function (contrast) {
	            var gseaPlotsThisContrast = this.props.gseaPlots ? this.props.gseaPlots[contrast.id] : { go: false, interpro: false, reactome: false };
	            return React.createElement(ContrastHeader, { key: contrast.id,
	                heatmapConfig: heatmapConfig,
	                atlasBaseURL: this.props.atlasBaseURL,
	                selectColumn: this.props.selectColumn,
	                selected: contrast.id === this.props.selectedColumnId,
	                contrastName: contrast.displayName, arrayDesignAccession: contrast.arrayDesignAccession,
	                contrastId: contrast.id, experimentAccession: this.props.experimentAccession,
	                showMaPlotButton: this.props.showMaPlotButton,
	                showGseaGoPlot: gseaPlotsThisContrast.go,
	                showGseaInterproPlot: gseaPlotsThisContrast.interpro,
	                showGseaReactomePlot: gseaPlotsThisContrast.reactome });
	        }.bind(this));
	
	        return React.createElement(
	            'div',
	            null,
	            contrastHeaders
	        );
	    }
	
	});
	
	var ContrastHeader = React.createClass({
	    displayName: 'ContrastHeader',
	
	
	    getInitialState: function () {
	        return { hover: false, selected: false };
	    },
	
	    onMouseEnter: function () {
	        this.setState({ hover: true });
	    },
	
	    onMouseLeave: function () {
	        this.setState({ hover: false });
	        this._closeTooltip();
	    },
	
	    _closeTooltip: function () {
	        $(ReactDOM.findDOMNode(this)).tooltip("close");
	    },
	
	    onClick: function () {
	        this.props.selectColumn(this.props.contrastId);
	    },
	
	    componentDidMount: function () {
	        ContrastTooltips(this.props.atlasBaseURL, this.props.heatmapConfig.accessKey, ReactDOM.findDOMNode(this), this.props.experimentAccession, this.props.contrastId);
	
	        if (this.showPlotsButton()) {
	            this.renderToolBarContent(ReactDOM.findDOMNode(this.refs.plotsToolBarContent));
	
	            var $plotsButton = $(ReactDOM.findDOMNode(this.refs.plotsButton));
	            $plotsButton.tooltip({
	                hide: false,
	                show: false,
	                tooltipClass: "gxaHelpTooltip"
	            }).button();
	            $plotsButton.toolbar({
	                content: ReactDOM.findDOMNode(this.refs.plotsToolBarContent),
	                position: "right",
	                style: "white",
	                event: "click",
	                hideOnClick: true
	            });
	            $plotsButton.addClass("gxaNoTextButton");
	        }
	    },
	
	    renderToolBarContent: function (contentNode) {
	
	        var $contentNode = $(contentNode);
	
	        var maPlotURL = this.props.atlasBaseURL + "/external-resources/" + this.props.experimentAccession + '/' + (this.props.arrayDesignAccession ? this.props.arrayDesignAccession + "/" : "") + this.props.contrastId + "/ma-plot.png";
	        var maPlotImgSrcURL = this.props.atlasBaseURL + "/resources/images/maplot-button.png";
	
	        var gseaGoPlotURL = this.props.atlasBaseURL + "/external-resources/" + this.props.experimentAccession + '/' + this.props.contrastId + "/gsea_go.png";
	        var gseaGoPlotImgSrcURL = this.props.atlasBaseURL + "/resources/images/gsea-go-button.png";
	
	        var gseaInterproPlotURL = this.props.atlasBaseURL + "/external-resources/" + this.props.experimentAccession + '/' + this.props.contrastId + "/gsea_interpro.png";
	        var gseaInterproImgSrcURL = this.props.atlasBaseURL + '/resources/images/gsea-interpro-button.png';
	
	        var gseaReactomePlotURL = this.props.atlasBaseURL + "/external-resources/" + this.props.experimentAccession + '/' + this.props.contrastId + "/gsea_reactome.png";
	        var gseaReactomePlotImgSrcURL = this.props.atlasBaseURL + "/resources/images/gsea-reactome-button.png";
	
	        var content = React.createElement(
	            'div',
	            null,
	            this.props.showMaPlotButton ? React.createElement(
	                'a',
	                { href: maPlotURL, id: 'maButtonID', title: 'Click to view MA plot for the contrast across all genes', onClick: this.clickButton },
	                React.createElement('img', { src: maPlotImgSrcURL })
	            ) : null,
	            this.props.showGseaGoPlot ? React.createElement(
	                'a',
	                { href: gseaGoPlotURL, id: 'goButtonID', title: 'Click to view GO terms enrichment analysis plot', onClick: this.clickButton },
	                React.createElement('img', { src: gseaGoPlotImgSrcURL })
	            ) : null,
	            this.props.showGseaInterproPlot ? React.createElement(
	                'a',
	                { href: gseaInterproPlotURL, id: 'interproButtonID', title: 'Click to view Interpro domains enrichment analysis plot', onClick: this.clickButton },
	                React.createElement('img', { src: gseaInterproImgSrcURL })
	            ) : null,
	            this.props.showGseaReactomePlot ? React.createElement(
	                'a',
	                { href: gseaReactomePlotURL, id: 'reactomeButtonID', title: 'Click to view Reactome pathways enrichment analysis plot', onClick: this.clickButton },
	                React.createElement('img', { src: gseaReactomePlotImgSrcURL })
	            ) : null
	        );
	
	        // the tool bar content will be copied around the DOM by the toolbar plugin
	        // so we render using static markup because otherwise when copied, we'll end up with
	        // duplicate data-reactids
	        $contentNode.html(ReactDOMServer.renderToStaticMarkup(content));
	
	        $contentNode.find('a').tooltip({
	            tooltipClass: "gxaHelpTooltip"
	        });
	
	        //need to use each here otherwise we get a fancybox error
	        $contentNode.find('a').each(function (index, button) {
	            $(button).fancybox({
	                padding: 0,
	                openEffect: 'elastic',
	                closeEffect: 'elastic'
	            });
	        });
	    },
	
	    clickButton: function (event) {
	        // prevent contrast from being selected
	        event.stopPropagation();
	    },
	
	    showPlotsButton: function () {
	        return this.props.showMaPlotButton || this.props.showGseaGoPlot || this.props.showGseaInterproPlot || this.props.showGseaReactomePlot;
	    },
	
	    render: function () {
	        var thStyle = this.showPlotsButton() ? { minWidth: "80px" } : {};
	        var textStyle = this.showPlotsButton() ? { top: "57px" } : {};
	
	        var plotsImgSrcURL = this.props.atlasBaseURL + "/resources/images/yellow-chart-icon.png";
	
	        var plotsButton = React.createElement(
	            'div',
	            { style: { textAlign: "right", paddingRight: "3px" } },
	            React.createElement(
	                'a',
	                { href: '#', ref: 'plotsButton', onClick: this.clickButton, title: 'Click to view plots' },
	                React.createElement('img', { src: plotsImgSrcURL })
	            )
	        );
	
	        var showSelectTextOnHover = this.state.hover && !this.props.selected ? React.createElement(
	            'span',
	            { style: { position: "absolute", width: "10px", right: "0px", left: "95px", bottom: "-35px", color: "green" } },
	            '  select'
	        ) : null;
	        var showTickWhenSelected = this.props.selected ? React.createElement(
	            'span',
	            { className: 'rotate_tick', style: { position: "absolute", width: "5px", right: "0px", left: "125px", bottom: "-35px", color: "green" } },
	            ' ✔ '
	        ) : null;
	        var thClass = "rotated_cell gxaHoverableHeader" + (this.props.selected ? " gxaVerticalHeaderCell-selected" : " gxaVerticalHeaderCell") + (this.props.heatmapConfig.enableEnsemblLauncher ? " gxaSelectableHeader " : "");
	        var divClass = "rotate_text factor-header";
	        var contrastName = Modernizr.csstransforms ? restrictLabelSize(this.props.contrastName, 17) : this.props.contrastName;
	
	        return React.createElement(
	            'th',
	            { className: thClass, rowSpan: '2', style: thStyle, onMouseEnter: this.props.heatmapConfig.enableEnsemblLauncher ? this.onMouseEnter : undefined, onMouseLeave: this.props.heatmapConfig.enableEnsemblLauncher ? this.onMouseLeave : this._closeTooltip, onClick: this.props.heatmapConfig.enableEnsemblLauncher ? this.onClick : undefined },
	            React.createElement(
	                'div',
	                { 'data-contrast-id': this.props.contrastId, 'data-experiment-accession': this.props.experimentAccession, className: divClass, style: textStyle },
	                contrastName,
	                showSelectTextOnHover,
	                showTickWhenSelected
	            ),
	            this.showPlotsButton() ? plotsButton : null,
	            this.showPlotsButton() ? React.createElement(
	                'div',
	                { ref: 'plotsToolBarContent', style: { display: "none" } },
	                'placeholder'
	            ) : null
	        );
	    }
	
	});
	
	var TopLeftCorner = React.createClass({
	    displayName: 'TopLeftCorner',
	
	
	    displayLevelsBaseline: function () {
	        if (this.props.hasQuartiles && this.props.isSingleGeneResult) {
	            var LRG = this.props.currentlyShowingCoexpressions ? LevelsRadioGroup("gradients", "levels") : LevelsRadioGroup("gradients", "levels", "variance");
	            return React.createElement(LRG, { radioId: this.props.radioId,
	                selectedRadioButton: this.props.selectedRadioButton,
	                toggleRadioButton: this.props.toggleRadioButton });
	        } else if (this.props.type.isBaseline || this.props.type.isMultiExperiment) {
	            return React.createElement(DisplayLevelsButton, { hideText: 'Hide levels',
	                showText: 'Display levels',
	                onClickCallback: this.props.toggleDisplayLevels,
	                displayLevels: this.props.displayLevels,
	                width: '150px', fontSize: '14px' });
	        } else {
	            return React.createElement(DisplayLevelsButton, { hideText: 'Hide log<sub>2</sub>-fold change',
	                showText: 'Display log<sub>2</sub>-fold change',
	                onClickCallback: this.props.toggleDisplayLevels,
	                displayLevels: this.props.displayLevels,
	                width: '200px', fontSize: '14px' });
	        }
	    },
	
	    render: function () {
	        return React.createElement(
	            'div',
	            { className: 'gxaHeatmapMatrixTopLeftCorner' },
	            React.createElement('span', { 'data-help-loc': this.props.type.heatmapTooltip, ref: 'tooltipSpan' }),
	            React.createElement(
	                'div',
	                { style: { display: "table-cell", verticalAlign: "middle", textAlign: "center" } },
	                this.displayLevelsBaseline()
	            )
	        );
	    },
	
	    componentDidMount: function () {
	        HelpTooltips(this.props.atlasBaseURL, 'experiment', ReactDOM.findDOMNode(this.refs.tooltipSpan));
	    }
	
	});
	
	var LevelsRadioGroup = function (__args__) {
	    var inputElements = [].concat.apply({}, [].slice.call(arguments).map(function (el, ix) {
	        return [React.createElement('input', { key: 3 * ix, type: 'radio', value: el }), React.createElement(
	            'span',
	            { key: 3 * ix + 1 },
	            "Display " + el
	        ), React.createElement('br', { key: 3 * ix + 2 })];
	    })).slice(1, -1);
	    return React.createClass({
	
	        getInitialState: function () {
	            return { value: this.props.selectedRadioButton };
	        },
	
	        render: function () {
	            return React.createElement(
	                RadioGroup,
	                { name: "displayLevelsGroup_" + this.props.radioId, value: this.props.selectedRadioButton, onChange: this.handleChange },
	                React.createElement(
	                    'div',
	                    { style: { "marginLeft": "10px", "marginTop": "8px" } },
	                    inputElements
	                )
	            );
	        },
	
	        handleChange: function (event) {
	            this.props.toggleRadioButton(event.target.value);
	            this.setState({ value: this.props.selectedRadioButton });
	
	            // To resize the sticky column/header in case the row height or column width changes
	            $(window).resize();
	        }
	    });
	};
	
	var HeatmapTableRows = React.createClass({
	    displayName: 'HeatmapTableRows',
	
	    propTypes: {
	        profiles: React.PropTypes.arrayOf(React.PropTypes.object).isRequired
	    },
	
	    profileRowType: function (profile) {
	        var geneProfileKey = this.props.heatmapConfig.species + "-" + (this.props.type.isDifferential ? profile.name + "-" + profile.designElement : profile.name);
	        return this.props.type.isMultiExperiment ? React.createElement(GeneProfileRow, { key: geneProfileKey,
	            id: profile.id,
	            name: profile.name,
	            type: this.props.type,
	            experimentType: profile.experimentType,
	            expressions: profile.expressions,
	            serializedFilterFactors: profile.serializedFilterFactors,
	            heatmapConfig: this.props.heatmapConfig,
	            atlasBaseURL: this.props.atlasBaseURL,
	            linksAtlasBaseURL: this.props.linksAtlasBaseURL,
	            displayLevels: this.props.displayLevels,
	            renderExpressionCells: this.props.renderExpressionCells,
	            hoverColumnCallback: this.props.hoverColumnCallback,
	            hoverRowCallback: this.props.hoverRowCallback }) : React.createElement(GeneProfileRow, { key: geneProfileKey,
	            selected: profile.id === this.props.selectedGeneId,
	            selectGene: this.props.selectGene,
	            designElement: profile.designElement,
	            id: profile.id,
	            name: profile.name,
	            type: this.props.type,
	            expressions: profile.expressions,
	            heatmapConfig: this.props.heatmapConfig,
	            atlasBaseURL: this.props.atlasBaseURL,
	            linksAtlasBaseURL: this.props.linksAtlasBaseURL,
	            displayLevels: this.props.displayLevels,
	            showGeneSetProfiles: this.props.showGeneSetProfiles,
	            selectedRadioButton: this.props.selectedRadioButton,
	            hasQuartiles: this.props.hasQuartiles,
	            isSingleGeneResult: this.props.isSingleGeneResult,
	            renderExpressionCells: this.props.renderExpressionCells,
	            hoverColumnCallback: this.props.hoverColumnCallback,
	            hoverRowCallback: this.props.hoverRowCallback });
	    },
	
	    render: function () {
	        var geneProfilesRows = this.props.profiles.map(function (profile) {
	
	            return this.profileRowType(profile);
	        }.bind(this));
	
	        return React.createElement(
	            'tbody',
	            null,
	            geneProfilesRows
	        );
	    }
	});
	
	var GeneProfileRow = React.createClass({
	    displayName: 'GeneProfileRow',
	
	    propTypes: {
	        atlasBaseURL: React.PropTypes.string.isRequired,
	        linksAtlasBaseURL: React.PropTypes.string.isRequired
	    },
	
	    getInitialState: function () {
	        return { hover: false, selected: false, levels: this.props.displayLevels };
	    },
	
	    onMouseEnter: function () {
	        if (this.props.heatmapConfig.enableEnsemblLauncher) {
	            this.setState({ hover: true });
	        }
	        // We use name instead of id because in multiexperiment the same id can appear under different name (same experiment, different conditions)
	        this.props.hoverRowCallback(this.props.name);
	    },
	
	    onMouseLeave: function () {
	        if (this.props.heatmapConfig.enableEnsemblLauncher) {
	            this.setState({ hover: false });
	        }
	        this._closeTooltip();
	        this.props.hoverRowCallback(null);
	    },
	
	    onClick: function () {
	        if (this.props.heatmapConfig.enableEnsemblLauncher) {
	            this.props.selectGene(this.props.id);
	        }
	    },
	
	    _geneNameLinked: function () {
	        var experimentURL = '/experiments/' + this.props.id + '?geneQuery=' + this.props.heatmapConfig.geneQuery + (this.props.serializedFilterFactors ? "&serializedFilterFactors=" + encodeURIComponent(this.props.serializedFilterFactors) : "");
	        var geneURL = this.props.showGeneSetProfiles ? '/query?geneQuery=' + this.props.name : '/genes/' + this.props.id;
	
	        var titleTooltip = this.props.type.isMultiExperiment ? this.props.experimentType == "PROTEOMICS_BASELINE" ? "Protein Expression" : "RNA Expression" : "";
	
	        var experimentOrGeneURL = this.props.linksAtlasBaseURL + (this.props.type.isMultiExperiment ? experimentURL : geneURL);
	
	        // don't render id for gene sets to prevent tooltips
	        // The vertical align in the <a> element is needed because the kerning in the font used in icon-conceptual is vertically off
	        return React.createElement(
	            'span',
	            { title: titleTooltip, style: { "display": "table-cell" } },
	            React.createElement('span', { className: 'icon icon-conceptual icon-c2', 'data-icon': this.props.type.isMultiExperiment ? this.props.experimentType == "PROTEOMICS_BASELINE" ? 'P' : 'd' : '' }),
	            React.createElement(
	                'a',
	                { ref: 'geneName', id: this.props.showGeneSetProfiles ? '' : this.props.id, href: experimentOrGeneURL, onClick: this.geneNameLinkClicked, style: { "verticalAlign": "15%" } },
	                this.props.name
	            )
	        );
	    },
	
	    geneNameLinkClicked: function (event) {
	        // prevent row from being selected
	        event.stopPropagation();
	    },
	
	    displayLevelsRadio: function () {
	        if (this.props.hasQuartiles && this.props.isSingleGeneResult) {
	            return this.props.selectedRadioButton === "levels";
	        } else return this.props.displayLevels;
	    },
	
	    cellType: function (expression) {
	        if (this.props.type.isBaseline) {
	            if (this.props.selectedRadioButton === "variance" && expression.quartiles) {
	                return React.createElement(HeatmapBaselineCellVariance, { key: this.props.id + expression.factorName,
	                    quartiles: expression.quartiles,
	                    hoverColumnCallback: this.props.hoverColumnCallback });
	            } else {
	                return React.createElement(CellBaseline, { key: this.props.id + expression.factorName,
	                    factorName: expression.factorName,
	                    color: expression.color,
	                    value: expression.value,
	                    heatmapConfig: this.props.heatmapConfig,
	                    displayLevels: this.displayLevelsRadio(),
	                    svgPathId: expression.svgPathId,
	                    geneSetProfiles: this.props.showGeneSetProfiles,
	                    id: this.props.id,
	                    name: this.props.name,
	                    hoverColumnCallback: this.props.hoverColumnCallback });
	            }
	        } else if (this.props.type.isDifferential) {
	            return React.createElement(CellDifferential, { key: this.props.designElement + this.props.name + expression.contrastName,
	                colour: expression.color,
	                foldChange: expression.foldChange,
	                pValue: expression.pValue,
	                tStat: expression.tStat,
	                displayLevels: this.props.displayLevels });
	        } else if (this.props.type.isMultiExperiment) {
	            return React.createElement(CellMultiExperiment, { key: this.props.id + expression.factorName,
	                factorName: expression.factorName,
	                serializedFilterFactors: this.props.serializedFilterFactors,
	                color: expression.color,
	                value: expression.value,
	                displayLevels: this.props.displayLevels,
	                svgPathId: expression.svgPathId,
	                id: this.props.id,
	                name: this.props.name,
	                hoverColumnCallback: this.props.hoverColumnCallback });
	        }
	    },
	
	    cells: function (expressions) {
	
	        return expressions.map(function (expression) {
	            return this.cellType(expression);
	        }.bind(this));
	    },
	
	    render: function () {
	        var showSelectTextOnHover = this.state.hover && !this.props.selected ? React.createElement(
	            'span',
	            { style: { "display": "table-cell", "textAlign": "right", "paddingLeft": "10px", "color": "green", "visibility": "visible" } },
	            'select'
	        ) : React.createElement(
	            'span',
	            { style: { "display": "table-cell", "textAlign": "right", "paddingLeft": "10px", "color": "green", "visibility": "hidden" } },
	            'select'
	        );
	        var showTickWhenSelected = this.props.selected ? React.createElement(
	            'span',
	            { style: { "float": "right", "color": "green" } },
	            ' ✔ '
	        ) : null;
	        var className = (this.props.selected ? "gxaHorizontalHeaderCell-selected gxaHoverableHeader" : "gxaHorizontalHeaderCell gxaHoverableHeader") + (this.props.heatmapConfig.enableEnsemblLauncher ? " gxaSelectableHeader" : "");
	        var rowClassName = this.props.type.isMultiExperiment ? this.props.experimentType == "PROTEOMICS_BASELINE" ? "gxaProteomicsExperiment" : "gxaTranscriptomicsExperiment" : "";
	
	        return React.createElement(
	            'tr',
	            { className: rowClassName },
	            React.createElement(
	                'th',
	                { className: className, onMouseEnter: this.onMouseEnter, onMouseLeave: this.onMouseLeave, onClick: this.onClick },
	                React.createElement(
	                    'div',
	                    { style: { display: "table", width: "100%" } },
	                    React.createElement(
	                        'div',
	                        { style: { display: "table-row" } },
	                        this._geneNameLinked(),
	                        this.props.heatmapConfig.enableEnsemblLauncher ? showSelectTextOnHover : null,
	                        this.props.heatmapConfig.enableEnsemblLauncher ? showTickWhenSelected : null
	                    )
	                )
	            ),
	            this.props.designElement ? React.createElement(
	                'th',
	                { className: 'gxaHeatmapTableDesignElement' },
	                this.props.designElement
	            ) : null,
	            this.props.renderExpressionCells ? this.cells(this.props.expressions) : null
	        );
	    },
	
	    componentDidMount: function () {
	        if (!this.props.type.isMultiExperiment) {
	            GenePropertiesTooltipModule.init(this.props.atlasBaseURL, ReactDOM.findDOMNode(this.refs.geneName), this.props.id, this.props.name);
	        }
	    },
	
	    _closeTooltip: function () {
	        if (!this.props.type.isMultiExperiment) {
	            $(ReactDOM.findDOMNode(this.refs.geneName)).tooltip("close");
	        }
	    }
	
	});
	
	var CellBaseline = React.createClass({
	    displayName: 'CellBaseline',
	
	    render: function () {
	        if (this._noExpression()) {
	            return React.createElement('td', null);
	        }
	
	        var style = { "backgroundColor": this._isUnknownExpression() ? "white" : this.props.color };
	
	        return React.createElement(
	            'td',
	            { style: style, onMouseEnter: this._onMouseEnter, onMouseLeave: this._onMouseLeave },
	            React.createElement(
	                'div',
	                {
	                    className: 'gxaHeatmapCell',
	                    style: { visibility: this._isUnknownExpression() || this.props.displayLevels ? "visible" : "hidden" } },
	                this._isUnknownExpression() ? this._unknownCell() : NumberFormat.baselineExpression(this.props.value)
	            )
	        );
	    },
	
	    componentDidMount: function () {
	        this.addQuestionMarkTooltip();
	    },
	
	    // need this so that we re-add question mark tooltip, if it doesn't exist, when switching between
	    // individual genes and gene sets
	    componentDidUpdate: function () {
	        this.addQuestionMarkTooltip();
	    },
	
	    addQuestionMarkTooltip: function () {
	        function hasQuestionMark(unknownElement) {
	            return unknownElement.children.length;
	        }
	
	        if (this._isUnknownExpression() && !hasQuestionMark(ReactDOM.findDOMNode(this.refs.unknownCell))) {
	            HelpTooltips(this.props.atlasBaseURL, 'experiment', ReactDOM.findDOMNode(this.refs.unknownCell));
	        }
	    },
	
	    _hasKnownExpression: function () {
	        // true if not blank or UNKNOWN, ie: has a expression with a known value
	        return this.props.value && !this._isUnknownExpression();
	    },
	
	    _isUnknownExpression: function () {
	        return this.propsvalue === "UNKNOWN";
	    },
	
	    _noExpression: function () {
	        return !this.props.value;
	    },
	
	    _unknownCell: function () {
	        return React.createElement('span', { ref: 'unknownCell', 'data-help-loc': this.props.geneSetProfiles ? '#heatMapTableGeneSetUnknownCell' : '#heatMapTableUnknownCell' });
	    },
	
	    _onMouseEnter: function () {
	        if (this._hasKnownExpression()) {
	            this.props.hoverColumnCallback(this.props.svgPathId);
	        }
	    },
	
	    _onMouseLeave: function () {
	        if (this._hasKnownExpression()) {
	            this.props.hoverColumnCallback(null);
	        }
	    }
	});
	
	var CellMultiExperiment = React.createClass({
	    displayName: 'CellMultiExperiment',
	
	    _isNAExpression: function () {
	        return this.props.value === "NT";
	    },
	
	    _noExpression: function () {
	        return !this.props.value;
	    },
	
	    _tissueNotStudiedInExperiment: function () {
	        return React.createElement(
	            'span',
	            null,
	            'NA'
	        );
	    },
	
	    _onMouseEnter: function () {
	        if (!this._noExpression() && !this._isNAExpression()) {
	            this.props.hoverColumnCallback(this.props.svgPathId);
	        }
	    },
	
	    _onMouseLeave: function () {
	        if (!this._noExpression() && !this._isNAExpression()) {
	            this.props.hoverColumnCallback(null);
	        }
	    },
	
	    render: function () {
	
	        if (this._noExpression()) {
	            return React.createElement('td', null);
	        }
	
	        var style = { "backgroundColor": this.props.color };
	
	        return React.createElement(
	            'td',
	            { style: style, onMouseEnter: this._onMouseEnter, onMouseLeave: this._onMouseLeave },
	            React.createElement(
	                'div',
	                { className: 'gxaHeatmapCell', style: { visibility: this._isNAExpression() || this.props.displayLevels ? "visible" : "hidden" } },
	                this._isNAExpression(this.props.value) ? this._tissueNotStudiedInExperiment() : NumberFormat.baselineExpression(this.props.value)
	            )
	        );
	    }
	});
	
	var HeatmapBottomOptions = React.createClass({
	    displayName: 'HeatmapBottomOptions',
	
	    propTypes: {
	        coexpressionsAvailable: React.PropTypes.arrayOf(React.PropTypes.shape({
	            name: React.PropTypes.string.isRequired,
	            id: React.PropTypes.string.isRequired,
	            amount: React.PropTypes.number.isRequired
	        })).isRequired,
	        showCoexpressionsFor: React.PropTypes.func.isRequired,
	        googleAnalyticsCallback: React.PropTypes.func.isRequired
	    },
	
	    render: function () {
	        var options = [];
	        for (var i = 0; i < this.props.coexpressionsAvailable.length; i++) {
	            var el = this.props.coexpressionsAvailable[i];
	            options.push(React.createElement(CoexpressionOption, {
	                key: i,
	                geneName: el.name,
	                numCoexpressionsAvailable: el.amount,
	                showCoexpressionsCallback: function (amount) {
	                    this.props.googleAnalyticsCallback('send', 'event', 'HeatmapReact', 'coexpressions-use');
	                    this.props.showCoexpressionsFor(el.id, amount);
	                }.bind(this)
	            }));
	        }
	        ;
	        return React.createElement(
	            'div',
	            null,
	            options
	        );
	    },
	
	    componentDidMount: function () {
	        if (this.props.coexpressionsAvailable.length > 0) {
	            this.props.googleAnalyticsCallback('send', 'event', 'HeatmapReact', 'coexpressions-display');
	        }
	    }
	
	});
	
	var CoexpressionOption = React.createClass({
	    displayName: 'CoexpressionOption',
	
	    propTypes: {
	        geneName: React.PropTypes.string.isRequired,
	        numCoexpressionsAvailable: React.PropTypes.number.isRequired,
	        showCoexpressionsCallback: React.PropTypes.func.isRequired
	    },
	    getInitialState: function () {
	        return { visible: 0 };
	    },
	    _chooseValue: function (amount) {
	        this.setState({ visible: amount });
	        this.props.showCoexpressionsCallback(amount);
	    },
	
	    _turnOnWithDefaultValue: function () {
	        this._chooseValue(10);
	    },
	
	    _showOfferToDisplay: function () {
	        return React.createElement(DisplayLevelsButton, { hideText: '',
	            showText: 'Add similarly expressed genes',
	            onClickCallback: this._turnOnWithDefaultValue,
	            displayLevels: false,
	            width: '250px',
	            fontSize: '14px' });
	    },
	
	    _showSlider: function () {
	        var marks = {
	            0: "off",
	            10: "10"
	        };
	        marks[this.props.numCoexpressionsAvailable] = this.props.numCoexpressionsAvailable;
	        return React.createElement(
	            'div',
	            null,
	            React.createElement(
	                'p',
	                null,
	                "Display genes with similar expressions to " + this.props.geneName + ":"
	            ),
	            React.createElement(
	                'div',
	                { className: 'gxaSlider' },
	                React.createElement(Slider, { min: 0, max: this.props.numCoexpressionsAvailable, onAfterChange: this._chooseValue,
	                    marks: marks, included: false, defaultValue: 10 })
	            )
	        );
	    },
	
	    render: function () {
	        return React.createElement(
	            'div',
	            { className: 'gxaDisplayCoexpressionOffer' },
	            this.state.visible ? this._showSlider() : this._showOfferToDisplay()
	        );
	    },
	
	    componentDidUpdate: function () {
	        $(window).trigger("gxaResizeHeatmapAnatomogramHeader");
	    }
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = Heatmap;

/***/ },
/* 764 */
/*!********************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-dom/server.js ***!
  \********************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(/*! react/lib/ReactDOMServer */ 669);


/***/ },
/* 765 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/react-radio-group/index.js ***!
  \***************************************************************/
[2059, 523],
/* 766 */
/*!***********************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/lib/index.js ***!
  \***********************************************************/
[2154, 767],
/* 767 */
/*!************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/lib/Slider.js ***!
  \************************************************************/
[2155, 523, 768, 773, 774, 775, 807, 809],
/* 768 */
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/lib/Dom/addEventListener.js ***!
  \************************************************************************************/
[2156, 769, 679],
/* 769 */
/*!**********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/~/add-dom-event-listener/lib/index.js ***!
  \**********************************************************************************************/
[2157, 770],
/* 770 */
/*!****************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/~/add-dom-event-listener/lib/EventObject.js ***!
  \****************************************************************************************************/
[2158, 771, 772],
/* 771 */
/*!********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/~/add-dom-event-listener/lib/EventBaseObject.js ***!
  \********************************************************************************************************/
429,
/* 772 */
/*!**********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/~/add-dom-event-listener/~/object-assign/index.js ***!
  \**********************************************************************************************************/
430,
/* 773 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/classnames/index.js ***!
  \********************************************************************/
194,
/* 774 */
/*!***********************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/lib/Track.js ***!
  \***********************************************************/
[2159, 523],
/* 775 */
/*!************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/lib/Handle.js ***!
  \************************************************************/
[2160, 523, 776],
/* 776 */
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/lib/index.js ***!
  \************************************************************************/
[2161, 777],
/* 777 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/lib/Tooltip.js ***!
  \**************************************************************************/
[2162, 523, 778, 779],
/* 778 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/lib/placements.js ***!
  \*****************************************************************************/
436,
/* 779 */
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/lib/index.js ***!
  \*************************************************************************************/
[2163, 780],
/* 780 */
/*!***************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/lib/Trigger.js ***!
  \***************************************************************************************/
[2164, 523, 679, 781, 782, 768, 783, 806],
/* 781 */
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/lib/createChainedFunction.js ***!
  \*************************************************************************************/
439,
/* 782 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-util/lib/Dom/contains.js ***!
  \****************************************************************************/
440,
/* 783 */
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/lib/Popup.js ***!
  \*************************************************************************************/
[2165, 523, 679, 784, 795, 804, 805],
/* 784 */
/*!************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/lib/index.js ***!
  \************************************************************************************************/
[2166, 785],
/* 785 */
/*!************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/lib/Align.js ***!
  \************************************************************************************************/
[2167, 523, 679, 786, 768, 794],
/* 786 */
/*!************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/~/dom-align/lib/index.js ***!
  \************************************************************************************************************/
[2168, 787, 788, 789, 790, 791, 792],
/* 787 */
/*!************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/~/dom-align/lib/utils.js ***!
  \************************************************************************************************************/
445,
/* 788 */
/*!**********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/~/dom-align/lib/getOffsetParent.js ***!
  \**********************************************************************************************************************/
[2169, 787],
/* 789 */
/*!*******************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/~/dom-align/lib/getVisibleRectForElement.js ***!
  \*******************************************************************************************************************************/
[2170, 787, 788],
/* 790 */
/*!************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/~/dom-align/lib/adjustForViewport.js ***!
  \************************************************************************************************************************/
[2171, 787],
/* 791 */
/*!****************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/~/dom-align/lib/getRegion.js ***!
  \****************************************************************************************************************/
[2172, 787],
/* 792 */
/*!*********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/~/dom-align/lib/getElFuturePos.js ***!
  \*********************************************************************************************************************/
[2173, 793],
/* 793 */
/*!*********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/~/dom-align/lib/getAlignOffset.js ***!
  \*********************************************************************************************************************/
451,
/* 794 */
/*!***************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-align/lib/isWindow.js ***!
  \***************************************************************************************************/
452,
/* 795 */
/*!**************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-animate/lib/index.js ***!
  \**************************************************************************************************/
[2174, 796],
/* 796 */
/*!****************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-animate/lib/Animate.js ***!
  \****************************************************************************************************/
[2175, 523, 797, 798, 803],
/* 797 */
/*!**********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-animate/lib/ChildrenUtils.js ***!
  \**********************************************************************************************************/
[2176, 523],
/* 798 */
/*!*********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-animate/lib/AnimateChild.js ***!
  \*********************************************************************************************************/
[2177, 523, 679, 799, 803],
/* 799 */
/*!******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-animate/~/css-animation/lib/index.js ***!
  \******************************************************************************************************************/
[2178, 800, 801],
/* 800 */
/*!******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-animate/~/css-animation/lib/Event.js ***!
  \******************************************************************************************************************/
458,
/* 801 */
/*!**********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-animate/~/css-animation/~/component-classes/index.js ***!
  \**********************************************************************************************************************************/
[2179, 802, 802],
/* 802 */
/*!******************************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-animate/~/css-animation/~/component-classes/~/component-indexof/index.js ***!
  \******************************************************************************************************************************************************/
460,
/* 803 */
/*!*************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/~/rc-animate/lib/util.js ***!
  \*************************************************************************************************/
461,
/* 804 */
/*!******************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/lib/PopupInner.js ***!
  \******************************************************************************************/
[2180, 523, 805],
/* 805 */
/*!*********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/lib/LazyRenderBox.js ***!
  \*********************************************************************************************/
[2181, 523],
/* 806 */
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/rc-tooltip/~/rc-trigger/lib/utils.js ***!
  \*************************************************************************************/
464,
/* 807 */
/*!***********************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/lib/Steps.js ***!
  \***********************************************************/
[2182, 523, 773, 808],
/* 808 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/~/warning/browser.js ***!
  \*******************************************************************/
277,
/* 809 */
/*!***********************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/lib/Marks.js ***!
  \***********************************************************/
[2183, 523, 773],
/* 810 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/rc-slider/assets/index.css ***!
  \***************************************************************/
[2204, 811, 762],
/* 811 */
/*!*******************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/~/rc-slider/assets/index.css ***!
  \*******************************************************************************************************/
[2205, 761],
/* 812 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/index.js ***!
  \**********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/DownloadProfilesButton.jsx */ 813);


/***/ },
/* 813 */
/*!********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/src/DownloadProfilesButton.jsx ***!
  \********************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 523);
	
	var Modal = __webpack_require__(/*! react-bootstrap/lib/Modal */ 814);
	var Button = __webpack_require__(/*! react-bootstrap/lib/Button */ 927);
	var Glyphicon = __webpack_require__(/*! react-bootstrap/lib/Glyphicon */ 929);
	var Tooltip = __webpack_require__(/*! react-bootstrap/lib/Tooltip */ 930);
	var OverlayTrigger = __webpack_require__(/*! react-bootstrap/lib/OverlayTrigger */ 932);
	
	var BlueprintText = __webpack_require__(/*! ./BlueprintText.jsx */ 944);
	
	//*------------------------------------------------------------------*
	
	//*------------------------------------------------------------------*
	var DownloadProfilesButton = React.createClass({
	    displayName: 'DownloadProfilesButton',
	
	    propTypes: {
	        atlasBaseURL: React.PropTypes.string.isRequired,
	        downloadProfilesURL: React.PropTypes.string.isRequired,
	        isFortLauderdale: React.PropTypes.bool.isRequired,
	        onDownloadCallbackForAnalytics: React.PropTypes.func.isRequired
	    },
	    getInitialState: function () {
	        return { showModal: false };
	    },
	
	    _closeModal: function () {
	        this.setState({ showModal: false });
	    },
	
	    _afterDownloadButtonClicked: function () {
	        if (!this.props.isFortLauderdale) {
	            this._commenceDownload();
	        } else {
	            this.setState({ showModal: true });
	        }
	    },
	
	    _commenceDownload: function () {
	        this.props.onDownloadCallbackForAnalytics();
	        window.location.href = this.props.atlasBaseURL + this.props.downloadProfilesURL;
	    },
	
	    _commenceDownloadAndCloseModal: function () {
	        this._commenceDownload();
	        this._closeModal();
	    },
	
	    render: function () {
	
	        return React.createElement(
	            'a',
	            { ref: 'downloadProfilesLink', onClick: this._afterDownloadButtonClicked },
	            React.createElement(
	                Button,
	                { bsSize: 'xsmall' },
	                React.createElement(Glyphicon, { style: { verticalAlign: 'middle', paddingBottom: '2px' }, glyph: 'download-alt' }),
	                React.createElement(
	                    'span',
	                    { style: { verticalAlign: 'middle', paddingTop: '2px' } },
	                    ' Download all results'
	                )
	            ),
	            React.createElement(
	                Modal,
	                { show: this.state.showModal, onHide: this._closeModal, bsSize: 'large' },
	                React.createElement(Modal.Header, { closeButton: true }),
	                React.createElement(
	                    Modal.Body,
	                    { style: { maxHeight: '360px' } },
	                    React.createElement(BlueprintText, null)
	                ),
	                React.createElement(
	                    Modal.Footer,
	                    null,
	                    React.createElement(
	                        Button,
	                        { onClick: this._closeModal },
	                        'Close'
	                    ),
	                    React.createElement(
	                        Button,
	                        { bsStyle: 'primary', onClick: this._commenceDownloadAndCloseModal },
	                        'Continue downloading'
	                    )
	                )
	            )
	        );
	    }
	});
	
	module.exports = DownloadProfilesButton;

/***/ },
/* 814 */
/*!********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/lib/Modal.js ***!
  \********************************************************************************************/
[2126, 815, 831, 832, 836, 837, 838, 845, 840, 846, 847, 523, 679, 876, 897, 903, 880, 905, 908, 910, 921, 922, 923, 925, 926],
/* 815 */
/*!******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/helpers/extends.js ***!
  \******************************************************************************************************************/
[2070, 816],
/* 816 */
/*!************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/core-js/object/assign.js ***!
  \************************************************************************************************************************/
[2071, 817],
/* 817 */
/*!*************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/fn/object/assign.js ***!
  \*************************************************************************************************************************************/
[2072, 818, 821],
/* 818 */
/*!**********************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/es6.object.assign.js ***!
  \**********************************************************************************************************************************************/
[2073, 819, 824],
/* 819 */
/*!*************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.export.js ***!
  \*************************************************************************************************************************************/
[2066, 820, 821, 822],
/* 820 */
/*!*************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.global.js ***!
  \*************************************************************************************************************************************/
169,
/* 821 */
/*!***********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.core.js ***!
  \***********************************************************************************************************************************/
170,
/* 822 */
/*!**********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.ctx.js ***!
  \**********************************************************************************************************************************/
[2067, 823],
/* 823 */
/*!*****************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.a-function.js ***!
  \*****************************************************************************************************************************************/
172,
/* 824 */
/*!********************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.object-assign.js ***!
  \********************************************************************************************************************************************/
[2074, 825, 826, 828, 830],
/* 825 */
/*!******************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.js ***!
  \******************************************************************************************************************************/
164,
/* 826 */
/*!****************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.to-object.js ***!
  \****************************************************************************************************************************************/
[2075, 827],
/* 827 */
/*!**************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.defined.js ***!
  \**************************************************************************************************************************************/
183,
/* 828 */
/*!**************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.iobject.js ***!
  \**************************************************************************************************************************************/
[2076, 829],
/* 829 */
/*!**********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.cof.js ***!
  \**********************************************************************************************************************************/
185,
/* 830 */
/*!************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.fails.js ***!
  \************************************************************************************************************************************/
186,
/* 831 */
/*!************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/helpers/object-without-properties.js ***!
  \************************************************************************************************************************************/
187,
/* 832 */
/*!**********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/core-js/object/keys.js ***!
  \**********************************************************************************************************************/
[2077, 833],
/* 833 */
/*!***********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/fn/object/keys.js ***!
  \***********************************************************************************************************************************/
[2078, 834, 821],
/* 834 */
/*!********************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/es6.object.keys.js ***!
  \********************************************************************************************************************************************/
[2079, 826, 835],
/* 835 */
/*!*****************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.object-sap.js ***!
  \*****************************************************************************************************************************************/
[2080, 819, 821, 830],
/* 836 */
/*!**********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/helpers/interop-require-default.js ***!
  \**********************************************************************************************************************************/
192,
/* 837 */
/*!*****************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/classnames/index.js ***!
  \*****************************************************************************************************/
194,
/* 838 */
/*!*************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/events/index.js ***!
  \*************************************************************************************************************/
[2127, 839, 841, 842],
/* 839 */
/*!**********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/events/on.js ***!
  \**********************************************************************************************************/
[2109, 840],
/* 840 */
/*!***********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/util/inDOM.js ***!
  \***********************************************************************************************************/
199,
/* 841 */
/*!***********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/events/off.js ***!
  \***********************************************************************************************************/
[2110, 840],
/* 842 */
/*!**************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/events/filter.js ***!
  \**************************************************************************************************************/
[2128, 843, 844],
/* 843 */
/*!***************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/query/contains.js ***!
  \***************************************************************************************************************/
[2082, 840],
/* 844 */
/*!***********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/query/querySelectorAll.js ***!
  \***********************************************************************************************************************/
361,
/* 845 */
/*!**************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/ownerDocument.js ***!
  \**************************************************************************************************************/
197,
/* 846 */
/*!*******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/util/scrollbarSize.js ***!
  \*******************************************************************************************************************/
[2129, 840],
/* 847 */
/*!**************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/object/pick.js ***!
  \**************************************************************************************************************/
[2112, 848, 865, 867, 868, 875],
/* 848 */
/*!***********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/baseFlatten.js ***!
  \***********************************************************************************************************************/
[2097, 849, 850, 860, 851, 857],
/* 849 */
/*!*********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/arrayPush.js ***!
  \*********************************************************************************************************************/
264,
/* 850 */
/*!*******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/lang/isArguments.js ***!
  \*******************************************************************************************************************/
[2093, 851, 857],
/* 851 */
/*!***********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/isArrayLike.js ***!
  \***********************************************************************************************************************/
[2090, 852, 859],
/* 852 */
/*!*********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/getLength.js ***!
  \*********************************************************************************************************************/
[2091, 853],
/* 853 */
/*!************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/baseProperty.js ***!
  \************************************************************************************************************************/
[2092, 854],
/* 854 */
/*!********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/toObject.js ***!
  \********************************************************************************************************************/
[2085, 855, 856, 858],
/* 855 */
/*!****************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/lang/isObject.js ***!
  \****************************************************************************************************************/
207,
/* 856 */
/*!****************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/lang/isString.js ***!
  \****************************************************************************************************************/
[2086, 857],
/* 857 */
/*!************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/isObjectLike.js ***!
  \************************************************************************************************************************/
209,
/* 858 */
/*!**********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/support.js ***!
  \**********************************************************************************************************/
210,
/* 859 */
/*!********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/isLength.js ***!
  \********************************************************************************************************************/
219,
/* 860 */
/*!***************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/lang/isArray.js ***!
  \***************************************************************************************************************/
[2094, 861, 859, 857],
/* 861 */
/*!*********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/getNative.js ***!
  \*********************************************************************************************************************/
[2087, 862],
/* 862 */
/*!****************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/lang/isNative.js ***!
  \****************************************************************************************************************/
[2088, 863, 864, 857],
/* 863 */
/*!******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/lang/isFunction.js ***!
  \******************************************************************************************************************/
[2089, 855],
/* 864 */
/*!************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/isHostObject.js ***!
  \************************************************************************************************************************/
215,
/* 865 */
/*!************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/bindCallback.js ***!
  \************************************************************************************************************************/
[2096, 866],
/* 866 */
/*!*******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/utility/identity.js ***!
  \*******************************************************************************************************************/
249,
/* 867 */
/*!***********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/pickByArray.js ***!
  \***********************************************************************************************************************/
[2098, 854],
/* 868 */
/*!**************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/pickByCallback.js ***!
  \**************************************************************************************************************************/
[2099, 869],
/* 869 */
/*!*********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/baseForIn.js ***!
  \*********************************************************************************************************************/
[2100, 870, 872],
/* 870 */
/*!*******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/baseFor.js ***!
  \*******************************************************************************************************************/
[2083, 871],
/* 871 */
/*!*************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/createBaseFor.js ***!
  \*************************************************************************************************************************/
[2084, 854],
/* 872 */
/*!****************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/object/keysIn.js ***!
  \****************************************************************************************************************/
[2095, 873, 850, 860, 863, 874, 859, 855, 856, 858],
/* 873 */
/*!*********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/arrayEach.js ***!
  \*********************************************************************************************************************/
225,
/* 874 */
/*!*******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/isIndex.js ***!
  \*******************************************************************************************************************/
223,
/* 875 */
/*!*********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/function/restParam.js ***!
  \*********************************************************************************************************************/
268,
/* 876 */
/*!*************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/Modal.js ***!
  \*************************************************************************************************************/
[2130, 523, 877, 878, 880, 881, 884, 882, 900, 901, 840, 902, 843, 883],
/* 877 */
/*!*********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/react-overlays/~/warning/browser.js ***!
  \*********************************************************************************************************************/
277,
/* 878 */
/*!*******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/react-prop-types/lib/mountable.js ***!
  \*******************************************************************************************************************/
[2131, 879],
/* 879 */
/*!****************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/react-prop-types/lib/common.js ***!
  \****************************************************************************************************************/
270,
/* 880 */
/*!*********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/react-prop-types/lib/elementType.js ***!
  \*********************************************************************************************************************/
[2101, 523, 879],
/* 881 */
/*!**************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/Portal.js ***!
  \**************************************************************************************************************/
[2132, 523, 679, 878, 882, 883],
/* 882 */
/*!***************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/utils/ownerDocument.js ***!
  \***************************************************************************************************************************/
[2111, 679, 845],
/* 883 */
/*!**************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/utils/getContainer.js ***!
  \**************************************************************************************************************************/
[2133, 679],
/* 884 */
/*!********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/ModalManager.js ***!
  \********************************************************************************************************************/
[2134, 885, 893, 846, 897, 899],
/* 885 */
/*!************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/style/index.js ***!
  \************************************************************************************************************/
[2119, 886, 888, 890, 892],
/* 886 */
/*!*******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/util/camelizeStyle.js ***!
  \*******************************************************************************************************************/
[2120, 887],
/* 887 */
/*!**************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/util/camelize.js ***!
  \**************************************************************************************************************/
328,
/* 888 */
/*!********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/util/hyphenateStyle.js ***!
  \********************************************************************************************************************/
[2121, 889],
/* 889 */
/*!***************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/util/hyphenate.js ***!
  \***************************************************************************************************************/
330,
/* 890 */
/*!***********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/style/getComputedStyle.js ***!
  \***********************************************************************************************************************/
[2122, 891, 886],
/* 891 */
/*!******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/util/babelHelpers.js ***!
  \******************************************************************************************************************/
196,
/* 892 */
/*!******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/style/removeStyle.js ***!
  \******************************************************************************************************************/
332,
/* 893 */
/*!************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/class/index.js ***!
  \************************************************************************************************************/
[2135, 894, 896, 895],
/* 894 */
/*!***************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/class/addClass.js ***!
  \***************************************************************************************************************/
[2136, 895],
/* 895 */
/*!***************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/class/hasClass.js ***!
  \***************************************************************************************************************/
371,
/* 896 */
/*!******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/class/removeClass.js ***!
  \******************************************************************************************************************/
372,
/* 897 */
/*!***************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/utils/isOverflowing.js ***!
  \***************************************************************************************************************************/
[2137, 898, 845],
/* 898 */
/*!***************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/query/isWindow.js ***!
  \***************************************************************************************************************/
374,
/* 899 */
/*!******************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/utils/manageAriaHidden.js ***!
  \******************************************************************************************************************************/
375,
/* 900 */
/*!******************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/utils/addEventListener.js ***!
  \******************************************************************************************************************************/
[2108, 839, 841],
/* 901 */
/*!******************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/utils/addFocusListener.js ***!
  \******************************************************************************************************************************/
376,
/* 902 */
/*!**************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/activeElement.js ***!
  \**************************************************************************************************************/
[2081, 891, 845],
/* 903 */
/*!********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/react-prop-types/lib/deprecated.js ***!
  \********************************************************************************************************************/
[2114, 904],
/* 904 */
/*!****************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/warning/browser.js ***!
  \****************************************************************************************************/
277,
/* 905 */
/*!************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/lib/styleMaps.js ***!
  \************************************************************************************************/
[2103, 816, 906, 832],
/* 906 */
/*!************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/core-js/object/create.js ***!
  \************************************************************************************************************************/
[2061, 907],
/* 907 */
/*!*************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/fn/object/create.js ***!
  \*************************************************************************************************************************************/
[2062, 825],
/* 908 */
/*!***********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/lib/utils/bootstrapUtils.js ***!
  \***********************************************************************************************************/
[2102, 815, 836, 523, 905, 909],
/* 909 */
/*!******************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/invariant/browser.js ***!
  \******************************************************************************************************/
275,
/* 910 */
/*!*******************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/lib/Fade.js ***!
  \*******************************************************************************************/
[2125, 911, 918, 815, 836, 523, 837, 919],
/* 911 */
/*!*******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/helpers/inherits.js ***!
  \*******************************************************************************************************************/
[2060, 906, 912],
/* 912 */
/*!**********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/core-js/object/set-prototype-of.js ***!
  \**********************************************************************************************************************************/
[2063, 913],
/* 913 */
/*!***********************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/fn/object/set-prototype-of.js ***!
  \***********************************************************************************************************************************************/
[2064, 914, 821],
/* 914 */
/*!********************************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/es6.object.set-prototype-of.js ***!
  \********************************************************************************************************************************************************/
[2065, 819, 915],
/* 915 */
/*!****************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.set-proto.js ***!
  \****************************************************************************************************************************************/
[2068, 825, 916, 917, 822],
/* 916 */
/*!****************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.is-object.js ***!
  \****************************************************************************************************************************************/
174,
/* 917 */
/*!****************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.an-object.js ***!
  \****************************************************************************************************************************************/
[2069, 916],
/* 918 */
/*!***************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/helpers/class-call-check.js ***!
  \***************************************************************************************************************************/
176,
/* 919 */
/*!******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/Transition.js ***!
  \******************************************************************************************************************/
[2123, 523, 679, 920, 839, 837],
/* 920 */
/*!**********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/transition/properties.js ***!
  \**********************************************************************************************************************/
[2124, 840],
/* 921 */
/*!**************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/lib/ModalDialog.js ***!
  \**************************************************************************************************/
[2138, 815, 836, 837, 523, 905, 908],
/* 922 */
/*!************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/lib/ModalBody.js ***!
  \************************************************************************************************/
[2139, 911, 918, 815, 836, 837, 523, 908],
/* 923 */
/*!**************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/lib/ModalHeader.js ***!
  \**************************************************************************************************/
[2140, 911, 918, 831, 815, 836, 837, 523, 908, 924],
/* 924 */
/*!******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/lib/utils/createChainedFunction.js ***!
  \******************************************************************************************************************/
280,
/* 925 */
/*!*************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/lib/ModalTitle.js ***!
  \*************************************************************************************************/
[2141, 911, 918, 815, 836, 837, 523, 908],
/* 926 */
/*!**************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/lib/ModalFooter.js ***!
  \**************************************************************************************************/
[2142, 911, 918, 815, 836, 837, 523, 908],
/* 927 */
/*!*********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/lib/Button.js ***!
  \*********************************************************************************************/
[2105, 911, 918, 815, 836, 837, 523, 880, 905, 908, 928],
/* 928 */
/*!*************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/lib/SafeAnchor.js ***!
  \*************************************************************************************************/
[2106, 911, 918, 815, 831, 836, 523, 880],
/* 929 */
/*!************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/lib/Glyphicon.js ***!
  \************************************************************************************************/
[2117, 815, 836, 837, 523, 903],
/* 930 */
/*!**********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/lib/Tooltip.js ***!
  \**********************************************************************************************/
[2153, 815, 836, 837, 523, 931, 908],
/* 931 */
/*!***************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/react-prop-types/lib/isRequiredForA11y.js ***!
  \***************************************************************************************************************************/
272,
/* 932 */
/*!*****************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/lib/OverlayTrigger.js ***!
  \*****************************************************************************************************/
[2152, 815, 832, 836, 843, 847, 523, 679, 904, 933, 924],
/* 933 */
/*!**********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/lib/Overlay.js ***!
  \**********************************************************************************************/
[2143, 911, 918, 815, 831, 836, 523, 934, 880, 910, 837],
/* 934 */
/*!***************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/Overlay.js ***!
  \***************************************************************************************************************/
[2144, 523, 881, 935, 942, 880],
/* 935 */
/*!****************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/Position.js ***!
  \****************************************************************************************************************/
[2145, 837, 523, 679, 878, 936, 883, 882],
/* 936 */
/*!*******************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/utils/calculatePosition.js ***!
  \*******************************************************************************************************************************/
[2146, 937, 938, 940, 882],
/* 937 */
/*!*************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/query/offset.js ***!
  \*************************************************************************************************************/
[2147, 843, 898, 845],
/* 938 */
/*!***************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/query/position.js ***!
  \***************************************************************************************************************/
[2148, 891, 937, 939, 940, 941, 885],
/* 939 */
/*!*******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/query/offsetParent.js ***!
  \*******************************************************************************************************************/
[2149, 891, 845, 885],
/* 940 */
/*!****************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/query/scrollTop.js ***!
  \****************************************************************************************************************/
[2150, 898],
/* 941 */
/*!*****************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/query/scrollLeft.js ***!
  \*****************************************************************************************************************/
[2151, 898],
/* 942 */
/*!************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/RootCloseWrapper.js ***!
  \************************************************************************************************************************/
[2107, 523, 679, 900, 943, 882],
/* 943 */
/*!***********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/utils/createChainedFunction.js ***!
  \***********************************************************************************************************************************/
292,
/* 944 */
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/download-profiles-button/src/BlueprintText.jsx ***!
  \***********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 523);
	
	var BlueprintText = React.createClass({
	    displayName: "BlueprintText",
	
	    render: function () {
	        return React.createElement(
	            "div",
	            null,
	            React.createElement("meta", { charSet: "UTF-8" }),
	            React.createElement(
	                "title",
	                null,
	                "The Blueprint project Data Reuse statement"
	            ),
	            React.createElement(
	                "h3",
	                null,
	                "The Blueprint project Data Reuse statement"
	            ),
	            React.createElement("br", null),
	            React.createElement(
	                "p",
	                null,
	                "This document refers to the reuse of data generated by the EC funded FP7 High Impact Project, Blueprint."
	            ),
	            React.createElement(
	                "p",
	                null,
	                "Blueprint regularly released analysis results via its ftp site and makes the raw sequence data available through the sequence archives at the EMBL-EBI. Much Blueprint data is generated from samples whose data must be released through a managed access process. For these data sets external users must apply for permission to access the data from the European Genome-phenome Archive (EGA) through the Blueprint Data Access Committee.",
	                React.createElement("br", null),
	                "The Blueprint consortium expects this data to be valuable to other researchers and in keeping with Fort Lauderdale principles data users may use the data for many studies, but are expected to allow the data producers to make the first presentations and to publish the first paper with global analyses of the data."
	            ),
	            React.createElement(
	                "h5",
	                null,
	                "Global analyses of Project data"
	            ),
	            React.createElement(
	                "p",
	                null,
	                "Blueprint plans to publish global analyses of the sequencing data, epigenetic marks, expression levels and variation both in the context of normal hematopoietic cells and of those neoplastic and non-neoplastic diseases studied within th econsortium. Talks, posters, and papers on all such analyses are to be published first by the Blueprint project, by approved presenters on behalf of the Project, with the Project as author. When the first major Project paper on these analyses is published, then researchers inside and outside the Project are free to present and publish using the Project data for these and other analyses."
	            ),
	            React.createElement(
	                "h5",
	                null,
	                "Large-scale analyses of Project data"
	            ),
	            React.createElement(
	                "p",
	                null,
	                "Groups within the Project may make presentations and publish papers on more extensive analyses of topics to be included in the main analysis presentations and papers, coincident with the main project analysis presentations and papers. The major points would be included in the main Project presentations and papers, but these additional presentations and papers allow more focused discussion of methods and results. The author list would include the Consortium."
	            ),
	            React.createElement(
	                "h5",
	                null,
	                "Methods development using Project data"
	            ),
	            React.createElement(
	                "p",
	                null,
	                "Researchers who have used small amounts of Project data (<= one chromosome) may present methods development posters, talks, and papers that include these data prior to the first major Project paper, without needing Project approval or authorship, although the Project should be acknowledged. Methods presentations or papers on global analyses or analyses using large amounts of Project data, on topics that the Consortium plans to examine, would be similar to large-scale analyses of Project data: researchers within the Project may make presentations or submit papers at the same time as the main Project presentations and papers, and others could do so after the Project publishes the first major analysis paper."
	            ),
	            React.createElement(
	                "h5",
	                null,
	                "Disease studies using Project data"
	            ),
	            React.createElement(
	                "p",
	                null,
	                "Researchers may present and publish on use of Project data in specific chromosome regions (that are not of general interest) or as summaries (such as number of differentially expressed genes in cell types assayed by Blueprint) for studies on diseases not studied by BLUEPRINT without Project approval, prior to the first major Project paper being published. The Project should not be listed as an author."
	            ),
	            React.createElement(
	                "h5",
	                null,
	                "Authors who use data from the project must acknowledge Blueprint using the following wording"
	            ),
	            React.createElement(
	                "p",
	                null,
	                "This study makes use of data generated by the Blueprint Consortium. A full list of the investigators who contributed to the generation of the data is available from www.blueprint-epigenome.eu. Funding for the project was provided by the European Union's Seventh Framework Programme (FP7/2007-2013) under grant agreement no 282510 BLUEPRINT."
	            )
	        );
	    }
	});
	
	module.exports = BlueprintText;

/***/ },
/* 945 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/atlas-modernizr/modernizr.3.0.0-alpha3.js ***!
  \******************************************************************************/
482,
/* 946 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/fancybox/dist/js/jquery.fancybox.cjs.js ***!
  \****************************************************************************/
473,
/* 947 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/fancybox/dist/css/jquery.fancybox.css ***!
  \**************************************************************************/
[2206, 948, 762],
/* 948 */
/*!******************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/~/fancybox/dist/css/jquery.fancybox.css ***!
  \******************************************************************************************************************/
[2207, 761, 949, 950, 951, 952, 953, 954],
/* 949 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/fancybox/dist/img/fancybox_sprite.png ***!
  \**************************************************************************/
515,
/* 950 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/fancybox/dist/img/fancybox_loading.gif ***!
  \***************************************************************************/
516,
/* 951 */
/*!****************************************************************!*\
  !*** ./expression-atlas-heatmap/~/fancybox/dist/img/blank.gif ***!
  \****************************************************************/
517,
/* 952 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/fancybox/dist/img/fancybox_overlay.png ***!
  \***************************************************************************/
518,
/* 953 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/fancybox/dist/img/fancybox_sprite@2x.png ***!
  \*****************************************************************************/
519,
/* 954 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/fancybox/dist/img/fancybox_loading@2x.gif ***!
  \******************************************************************************/
520,
/* 955 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/jquery-toolbar/jquery.toolbar.js ***!
  \*********************************************************************/
[2188, 681],
/* 956 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/jquery-toolbar/jquery.toolbar.css ***!
  \**********************************************************************/
[2208, 957, 762],
/* 957 */
/*!**************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/~/jquery-toolbar/jquery.toolbar.css ***!
  \**************************************************************************************************************/
[2209, 761],
/* 958 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/heatmap-baseline-cell-variance/index.js ***!
  \****************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/HeatmapBaselineCellVariance.jsx */ 959);


/***/ },
/* 959 */
/*!*******************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/heatmap-baseline-cell-variance/src/HeatmapBaselineCellVariance.jsx ***!
  \*******************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 523);
	var Highcharts = __webpack_require__(/*! react-highcharts */ 960);
	__webpack_require__(/*! highcharts-more */ 962)(Highcharts.Highcharts);
	
	//*------------------------------------------------------------------*
	
	var HeatmapBaselineCellVariance = React.createClass({
	    displayName: 'HeatmapBaselineCellVariance',
	
	
	    propTypes: {
	        quartiles: React.PropTypes.shape({
	            min: React.PropTypes.number,
	            lower: React.PropTypes.number,
	            median: React.PropTypes.number,
	            upper: React.PropTypes.number,
	            max: React.PropTypes.number
	        }).isRequired
	    },
	
	    render: function () {
	
	        var chartWidth = 115;
	        var chartHeight = 105;
	        var chartMargin = 0;
	
	        var highchartsOptions = {
	            credits: { enabled: false },
	            chart: { type: "boxplot", width: chartWidth, height: chartHeight, margin: chartMargin },
	            title: { text: "" },
	            legend: { enabled: false },
	            xAxis: { title: { text: "Variance" } },
	            yAxis: {
	                title: { text: "Expression level" },
	                labels: {
	                    align: "left",
	                    x: 0,
	                    y: -2
	                }
	            },
	            plotOptions: {
	                boxplot: {
	                    fillColor: "#F0F0E0",
	                    lineWidth: 2,
	                    medianColor: "#0C5DA5",
	                    medianWidth: 3,
	                    stemColor: "#A63400",
	                    stemDashStyle: "dot",
	                    stemWidth: 1,
	                    whiskerColor: "#3D9200",
	                    whiskerLength: "20%",
	                    whiskerWidth: 3
	                }
	            },
	            series: [{
	                name: "Expression",
	                data: [[this.props.quartiles.min, this.props.quartiles.lower, this.props.quartiles.median, this.props.quartiles.upper, this.props.quartiles.max]]
	            }],
	            tooltip: {
	                headerFormat: "",
	                style: {
	                    fontSize: "10px",
	                    padding: 5
	                }
	            }
	        };
	
	        var boxPlotStyle = { width: chartWidth, height: chartHeight, margin: chartMargin };
	        return React.createElement(
	            'td',
	            null,
	            React.createElement(
	                'div',
	                { id: 'container', ref: 'container', style: boxPlotStyle },
	                React.createElement(Highcharts, { config: highchartsOptions })
	            )
	        );
	    }
	
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = HeatmapBaselineCellVariance;

/***/ },
/* 960 */
/*!**************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/heatmap-baseline-cell-variance/~/react-highcharts/dist/ReactHighcharts.js ***!
  \**************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	!function(r,t){ true?module.exports=t(__webpack_require__(/*! react */ 523),__webpack_require__(/*! highcharts */ 961)):"function"==typeof define&&define.amd?define(["react","highcharts"],t):"object"==typeof exports?exports.ReactHighcharts=t(require("react"),require("highcharts")):r.ReactHighcharts=t(r.React,r.Highcharts)}(this,function(r,t){return function(r){function t(o){if(e[o])return e[o].exports;var n=e[o]={exports:{},id:o,loaded:!1};return r[o].call(n.exports,n,n.exports,t),n.loaded=!0,n.exports}var e={};return t.m=r,t.c=e,t.p="",t(0)}([function(r,t,e){r.exports=e(3)},function(t,e){t.exports=r},function(r,t,e){(function(t){"use strict";function o(r,t){var e={};for(var o in r)t.indexOf(o)>=0||Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o]);return e}var n=Object.assign||function(r){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(r[o]=e[o])}return r},i=e(1),c="undefined"==typeof t?window:t;r.exports=function(t,e){var a="Highcharts"+t,s=i.createClass({displayName:a,propTypes:{config:i.PropTypes.object.isRequired,isPureConfig:i.PropTypes.bool,neverReflow:i.PropTypes.bool,callback:i.PropTypes.func},defaultProps:{callback:function(){}},renderChart:function(r){var o=this;if(!r)throw new Error("Config must be specified for the "+a+" component");var i=r.chart;this.chart=new e[t](n({},r,{chart:n({},i,{renderTo:this.refs.chart})}),this.props.callback),this.props.neverReflow||c.requestAnimationFrame&&requestAnimationFrame(function(){o.chart&&o.chart.options&&o.chart.reflow()})},shouldComponentUpdate:function(r){return r.neverReflow||r.isPureConfig&&this.props.config===r.config?!0:(this.renderChart(r.config),!1)},getChart:function(){if(!this.chart)throw new Error("getChart() should not be called before the component is mounted");return this.chart},componentDidMount:function(){this.renderChart(this.props.config)},componentWillUnmount:function(){this.chart.destroy()},render:function(){var r=this.props,t=(r.callback,r.config,r.isPureConfig,r.neverReflow,o(r,["callback","config","isPureConfig","neverReflow"]));return t=n({},t,{ref:"chart"}),i.createElement("div",t)}});return s.Highcharts=e,s.withHighcharts=function(e){return r.exports(t,e)},s}}).call(t,function(){return this}())},function(r,t,e){"use strict";r.exports=e(2)("Chart",e(4))},function(r,e){r.exports=t}])});

/***/ },
/* 961 */
/*!*****************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/heatmap-baseline-cell-variance/~/react-highcharts/~/highcharts/highcharts.js ***!
  \*****************************************************************************************************************/
487,
/* 962 */
/*!*********************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/heatmap-baseline-cell-variance/~/highcharts-more/more.js ***!
  \*********************************************************************************************/
485,
/* 963 */
/*!****************************************************!*\
  !*** ./expression-atlas-heatmap/~/legend/index.js ***!
  \****************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	exports.LegendDifferential = __webpack_require__(/*! ./src/LegendDifferential.jsx */ 964);
	exports.LegendBaseline = __webpack_require__(/*! ./src/LegendBaseline.jsx */ 975);

/***/ },
/* 964 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/legend/src/LegendDifferential.jsx ***!
  \**********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 523);
	var ReactDOM = __webpack_require__(/*! react-dom */ 679);
	
	//*------------------------------------------------------------------*
	
	var LegendRow = __webpack_require__(/*! ./LegendRow.jsx */ 965);
	var HelpTooltips = __webpack_require__(/*! help-tooltips */ 968);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./gxaLegend.css */ 973);
	
	//*------------------------------------------------------------------*
	
	var LegendDifferential = React.createClass({
	    displayName: 'LegendDifferential',
	
	
	    propTypes: {
	        atlasBaseURL: React.PropTypes.string.isRequired,
	        minDownLevel: React.PropTypes.string.isRequired,
	        maxDownLevel: React.PropTypes.string.isRequired,
	        minUpLevel: React.PropTypes.string.isRequired,
	        maxUpLevel: React.PropTypes.string.isRequired
	    },
	
	    render: function () {
	        return React.createElement(
	            'div',
	            { className: 'gxaLegend' },
	            React.createElement(
	                'div',
	                { style: { display: "inline-table" } },
	                isNaN(this.props.minDownLevel) && isNaN(this.props.maxDownLevel) ? null : React.createElement(LegendRow, { lowExpressionLevel: this.props.minDownLevel,
	                    highExpressionLevel: this.props.maxDownLevel,
	                    lowValueColour: '#C0C0C0',
	                    highValueColour: '#0000FF' }),
	                isNaN(this.props.minUpLevel) && isNaN(this.props.maxUpLevel) ? null : React.createElement(LegendRow, { lowExpressionLevel: this.props.minUpLevel,
	                    highExpressionLevel: this.props.maxUpLevel,
	                    lowValueColour: '#FFAFAF',
	                    highValueColour: '#FF0000' })
	            ),
	            React.createElement('div', { ref: 'legendHelp', 'data-help-loc': '#gradient-differential', className: 'gxaLegendHelp' })
	        );
	    },
	
	    componentDidMount: function () {
	        HelpTooltips(this.props.atlasBaseURL, "experiment", ReactDOM.findDOMNode(this.refs.legendHelp));
	    }
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = LegendDifferential;

/***/ },
/* 965 */
/*!*************************************************************!*\
  !*** ./expression-atlas-heatmap/~/legend/src/LegendRow.jsx ***!
  \*************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 523);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./gxaGradient.css */ 966);
	
	//*------------------------------------------------------------------*
	
	var LegendRow = React.createClass({
	    displayName: 'LegendRow',
	
	
	    propTypes: {
	        lowValueColour: React.PropTypes.string.isRequired,
	        highValueColour: React.PropTypes.string.isRequired,
	        lowExpressionLevel: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.element]).isRequired, // Baseline legend rows can be a React <span> element returned by NumberFormat
	        highExpressionLevel: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.element]).isRequired
	    },
	
	    render: function () {
	        var BACKGROUND_IMAGE_TEMPLATE = "-webkit-gradient(linear, left top, right top,color-stop(0, ${lowValueColour}), color-stop(1, ${highValueColour}));background-image: -moz-linear-gradient(left, ${lowValueColour}, ${highValueColour});background-image: -ms-linear-gradient(left, ${lowValueColour}, ${highValueColour}); background-image: -o-linear-gradient(left, ${lowValueColour}, ${highValueColour})";
	        var backgroundImage = BACKGROUND_IMAGE_TEMPLATE.replace(/\${lowValueColour}/g, this.props.lowValueColour).replace(/\${highValueColour}/g, this.props.highValueColour);
	
	        // for IE9
	        var LT_IE10_FILTER_TEMPLATE = "progid:DXImageTransform.Microsoft.Gradient(GradientType =1,startColorstr=${lowValueColour},endColorstr=${highValueColour})";
	        var lt_ie10_filter = LT_IE10_FILTER_TEMPLATE.replace(/\${lowValueColour}/, this.props.lowValueColour).replace(/\${highValueColour}/, this.props.highValueColour);
	
	        return React.createElement(
	            'div',
	            { style: { display: "table-row" } },
	            React.createElement(
	                'div',
	                { className: 'gxaGradientLevel gxaGradientLevelMin' },
	                this.props.lowExpressionLevel
	            ),
	            React.createElement(
	                'div',
	                { style: { display: "table-cell" } },
	                React.createElement('span', { className: 'gxaGradientColour', style: { backgroundImage: backgroundImage, filter: lt_ie10_filter } })
	            ),
	            React.createElement(
	                'div',
	                { className: 'gxaGradientLevel gxaGradientLevelMax' },
	                this.props.highExpressionLevel
	            )
	        );
	    }
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = LegendRow;

/***/ },
/* 966 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/legend/src/gxaGradient.css ***!
  \***************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../../css-loader!./gxaGradient.css */ 967);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../../style-loader/addStyles.js */ 762)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../css-loader/index.js!./gxaGradient.css", function() {
				var newContent = require("!!./../../css-loader/index.js!./gxaGradient.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 967 */
/*!*******************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/~/legend/src/gxaGradient.css ***!
  \*******************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../../css-loader/lib/css-base.js */ 761)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaGradientColour {\n    overflow: auto;\n    vertical-align: middle;\n    width: 200px;\n    height: 15px;\n    margin: 2px 6px 2px 6px;\n    display: inline-block;\n}\n\n.gxaGradientLevel {\n    white-space: nowrap;\n    font-size: 10px;\n    vertical-align: middle;\n    display: table-cell;\n}\n\n.gxaGradientLevelMin {\n    text-align: right;\n}\n\n.gxaGradientLevelMax {\n    text-align: left;\n}", ""]);
	
	// exports


/***/ },
/* 968 */
/*!***********************************************************!*\
  !*** ./expression-atlas-heatmap/~/help-tooltips/index.js ***!
  \***********************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/helpTooltipsModule.js */ 969);


/***/ },
/* 969 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/help-tooltips/src/helpTooltipsModule.js ***!
  \****************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var $ = __webpack_require__(/*! jquery */ 681);
	__webpack_require__(/*! jquery-ui-bundle */ 687);
	__webpack_require__(/*! jQuery-ajaxTransport-XDomainRequest */ 970);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./gxaHelpTooltip.css */ 971);
	
	//*------------------------------------------------------------------*
	
	function buildHelpAnchor() {
	    return $("<a/>", {
	        class: "help-icon",
	        href: "#",
	        title: "",
	        text: "?"
	    });
	}
	
	function getHelpFileName(pageName){
	    return "help-tooltips." + pageName + "-page.html";
	}
	
	function initTooltips(atlasBaseURL, pageName, parentElementId) {
	
	    var anchor = buildHelpAnchor();
	
	    var helpSelector = (typeof parentElementId === "object") ? parentElementId : (parentElementId == "") ? "[data-help-loc]" : "#" + parentElementId + " [data-help-loc]";
	
	    $(helpSelector)
	        .append(anchor)
	        .click(function (e) {
	            e.preventDefault();
	        })
	        .tooltip(
	        {
	            tooltipClass: "gxaHelpTooltip",
	            content: function (callback) {
	                var tooltipHelpHtmlId = $(this).parent().attr("data-help-loc");
	
	                $.get(atlasBaseURL + "/resources/html/" + getHelpFileName(pageName),
	                    function (response, status, xhr) {
	                        var tooltipContent;
	
	                        if (status === "error") {
	                            tooltipContent = "Sorry but there was an error: " + xhr.status + " " + xhr.statusText;
	                            callback(tooltipContent);
	                            return;
	                        }
	
	                        tooltipContent = $(response).filter(tooltipHelpHtmlId).text();
	                        if (!tooltipContent) {
	                            tooltipContent = "Missing help section for id = " + tooltipHelpHtmlId + " in html file " + getHelpFileName(pageName);
	                        }
	
	                        callback(tooltipContent);
	                    }
	                );
	            }
	        }
	    );
	
	}
	
	//*------------------------------------------------------------------*
	
	module.exports = function (atlasBaseURL, pageName, parentElementId) {
	    initTooltips(atlasBaseURL, pageName, parentElementId);
	};

/***/ },
/* 970 */
/*!*********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/help-tooltips/~/jQuery-ajaxTransport-XDomainRequest/jquery.xdomainrequest.min.js ***!
  \*********************************************************************************************************************/
[2186, 681],
/* 971 */
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/help-tooltips/src/gxaHelpTooltip.css ***!
  \*************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../../css-loader!./gxaHelpTooltip.css */ 972);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../../style-loader/addStyles.js */ 762)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../css-loader/index.js!./gxaHelpTooltip.css", function() {
				var newContent = require("!!./../../css-loader/index.js!./gxaHelpTooltip.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 972 */
/*!*****************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/~/help-tooltips/src/gxaHelpTooltip.css ***!
  \*****************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../../css-loader/lib/css-base.js */ 761)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaHelpTooltip {\n    background: white;\n    border-width: 1px !important;\n    border: solid cornflowerblue;\n    padding: 4px;\n    color: cornflowerblue;\n    font: 10px Verdana, Helvetica, Arial, sans-serif;\n}\n\na.help-icon {\n    color: darkorange;\n    vertical-align: top;\n    font: 10px Verdana, Helvetica, Arial, sans-serif;\n    font-weight: bold;\n}\n", ""]);
	
	// exports


/***/ },
/* 973 */
/*!*************************************************************!*\
  !*** ./expression-atlas-heatmap/~/legend/src/gxaLegend.css ***!
  \*************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../../css-loader!./gxaLegend.css */ 974);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../../style-loader/addStyles.js */ 762)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../css-loader/index.js!./gxaLegend.css", function() {
				var newContent = require("!!./../../css-loader/index.js!./gxaLegend.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 974 */
/*!*****************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/~/legend/src/gxaLegend.css ***!
  \*****************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../../css-loader/lib/css-base.js */ 761)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaLegendHelp {\n    display: inline-block;\n    vertical-align: top;\n    padding-left: 2px;\n}\n\n.gxaLegend {\n    display: inline-block;\n    padding-left: 20px;\n}\n", ""]);
	
	// exports


/***/ },
/* 975 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/legend/src/LegendBaseline.jsx ***!
  \******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 523);
	var ReactDOM = __webpack_require__(/*! react-dom */ 679);
	
	//*------------------------------------------------------------------*
	
	var LegendRow = __webpack_require__(/*! ./LegendRow.jsx */ 965);
	var NumberFormat = __webpack_require__(/*! number-format */ 976);
	var HelpTooltips = __webpack_require__(/*! help-tooltips */ 968);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./gxaLegend.css */ 973);
	
	//*------------------------------------------------------------------*
	
	var LegendBaseline = React.createClass({
	    displayName: 'LegendBaseline',
	
	
	    propTypes: {
	        atlasBaseURL: React.PropTypes.string.isRequired,
	        minExpressionLevel: React.PropTypes.string.isRequired,
	        maxExpressionLevel: React.PropTypes.string.isRequired,
	        isMultiExperiment: React.PropTypes.bool.isRequired
	    },
	
	    render: function () {
	        var dataHelpLoc = this.props.isMultiExperiment ? "#gradient-base-crossexp" : "#gradient-base";
	
	        // The class gxaHeatmapLegendGradient is used for Selenium tests but isn’t styled
	        return React.createElement(
	            'div',
	            { className: 'gxaHeatmapLegendGradient' },
	            React.createElement(
	                'div',
	                { style: { display: "inline-table" } },
	                React.createElement(LegendRow, { lowExpressionLevel: NumberFormat.baselineExpression(this.props.minExpressionLevel),
	                    highExpressionLevel: NumberFormat.baselineExpression(this.props.maxExpressionLevel),
	                    lowValueColour: '#C0C0C0',
	                    highValueColour: '#0000FF' })
	            ),
	            React.createElement('div', { ref: 'legendHelp', 'data-help-loc': dataHelpLoc, className: 'gxaLegendHelp' })
	        );
	    },
	
	    componentDidMount: function () {
	        HelpTooltips(this.props.atlasBaseURL, "experiment", ReactDOM.findDOMNode(this.refs.legendHelp));
	    }
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = LegendBaseline;

/***/ },
/* 976 */
/*!***********************************************************!*\
  !*** ./expression-atlas-heatmap/~/number-format/index.js ***!
  \***********************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/NumberFormat.jsx */ 977);


/***/ },
/* 977 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/number-format/src/NumberFormat.jsx ***!
  \***********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var React = __webpack_require__(/*! react */ 523); // React is called in the transpiled JS files in the return statements
	
	//*------------------------------------------------------------------*
	
	function formatBaselineExpression(expressionLevel) {
	    var numberExpressionLevel = +expressionLevel;
	    return numberExpressionLevel >= 100000 || numberExpressionLevel < 0.1 ? formatScientificNotation(numberExpressionLevel.toExponential(1).replace('+', '')) : '' + numberExpressionLevel;
	}
	
	// expects number in the format #E# and displays exponent in superscript
	function formatScientificNotation(scientificNotationString) {
	
	    var formatParts = scientificNotationString.split(/[Ee]/);
	
	    if (formatParts.length == 1) {
	        return React.createElement(
	            'span',
	            null,
	            scientificNotationString
	        );
	    }
	
	    var mantissa = formatParts[0];
	    var exponent = formatParts[1];
	
	    return React.createElement(
	        'span',
	        null,
	        mantissa !== "1" ? mantissa + " \u00D7 " : '',
	        '10',
	        React.createElement(
	            'span',
	            { style: { 'verticalAlign': 'super' } },
	            exponent
	        )
	    );
	}
	
	//*------------------------------------------------------------------*
	
	exports.baselineExpression = formatBaselineExpression;
	exports.scientificNotation = formatScientificNotation;

/***/ },
/* 978 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/cell-differential/index.js ***!
  \***************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/CellDifferential.jsx */ 979);


/***/ },
/* 979 */
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/cell-differential/src/CellDifferential.jsx ***!
  \*******************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 523);
	var ReactDOM = __webpack_require__(/*! react-dom */ 679);
	var ReactDOMServer = __webpack_require__(/*! react-dom/server */ 764);
	var $ = __webpack_require__(/*! jquery */ 681);
	__webpack_require__(/*! jquery-ui-bundle */ 687);
	
	//*------------------------------------------------------------------*
	
	var NumberFormat = __webpack_require__(/*! number-format */ 976);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./gxaShowHideCell.css */ 980);
	__webpack_require__(/*! ./gxaDifferentialCellTooltip.css */ 982);
	
	//*------------------------------------------------------------------*
	
	var CellDifferential = React.createClass({
	    displayName: 'CellDifferential',
	
	
	    propTypes: {
	        fontSize: React.PropTypes.number,
	        colour: React.PropTypes.string,
	        foldChange: React.PropTypes.string,
	        pValue: React.PropTypes.string,
	        tStat: React.PropTypes.string,
	        displayLevels: React.PropTypes.bool.isRequired
	    },
	
	    _hasValue: function () {
	        return this.props.foldChange !== undefined;
	    },
	
	    _getStyle: function () {
	        var style = {};
	        if (this.props.fontSize) {
	            style.fontSize = this.props.fontSize + "px";
	        }
	
	        return style;
	    },
	
	    render: function () {
	        if (!this._hasValue()) {
	            return React.createElement('td', null);
	        }
	
	        return React.createElement(
	            'td',
	            { style: { backgroundColor: this.props.colour, verticalAlign: "middle" } },
	            React.createElement(
	                'div',
	                { style: this._getStyle(), className: this.props.displayLevels ? "gxaShowCell" : "gxaHideCell" },
	                this.props.foldChange
	            )
	        );
	    },
	
	    componentDidMount: function () {
	        if (this._hasValue()) {
	            this._initTooltip(ReactDOM.findDOMNode(this));
	        }
	    },
	
	    _initTooltip: function (element) {
	
	        //TODO - build this from a React component, like we do for FactorTooltip
	        function buildHeatmapCellTooltip(pValue, tStatistic, foldChange) {
	
	            return "<table>" + "<thead>" + (pValue !== undefined ? "<th>Adjusted <em>p</em>-value</th>" : "") + (tStatistic !== undefined ? "<th><em>t</em>-statistic</th>" : "") + "<th class='gxaHeaderCell'>Log<sub>2</sub>-fold change</th>" + "</thead>" + "<tbody>" + "<tr>" + (pValue !== undefined ? "<td>" + ReactDOMServer.renderToStaticMarkup(NumberFormat.scientificNotation(pValue)) + "</td>" : "") + (tStatistic !== undefined ? "<td>" + tStatistic + "</td>" : "") + "<td>" + foldChange + "</td>" + "</tr>" + "</tbody>" + "</table>";
	        }
	
	        // Don’t use bind, tooltip uses this internally
	        var thisProps = this.props;
	
	        $(element).attr("title", "").tooltip({
	            open: function (event, ui) {
	                ui.tooltip.css("background", thisProps.colour);
	            },
	
	            tooltipClass: "gxaDifferentialCellTooltip",
	
	            content: function () {
	                return buildHeatmapCellTooltip(thisProps.pValue, thisProps.tStat, thisProps.foldChange);
	            }
	        });
	    }
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = CellDifferential;

/***/ },
/* 980 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/cell-differential/src/gxaShowHideCell.css ***!
  \******************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../../css-loader!./gxaShowHideCell.css */ 981);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../../style-loader/addStyles.js */ 762)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../css-loader/index.js!./gxaShowHideCell.css", function() {
				var newContent = require("!!./../../css-loader/index.js!./gxaShowHideCell.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 981 */
/*!**********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/~/cell-differential/src/gxaShowHideCell.css ***!
  \**********************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../../css-loader/lib/css-base.js */ 761)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaShowCell {\n    background-color: white;\n    white-space: nowrap;\n    text-align: center;\n    margin: 4px;\n    padding: 2px;\n}\n\n.gxaHideCell {\n    display: none;\n    visibility: hidden;\n}\n", ""]);
	
	// exports


/***/ },
/* 982 */
/*!*****************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/cell-differential/src/gxaDifferentialCellTooltip.css ***!
  \*****************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../../css-loader!./gxaDifferentialCellTooltip.css */ 983);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../../style-loader/addStyles.js */ 762)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../css-loader/index.js!./gxaDifferentialCellTooltip.css", function() {
				var newContent = require("!!./../../css-loader/index.js!./gxaDifferentialCellTooltip.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 983 */
/*!*********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/~/cell-differential/src/gxaDifferentialCellTooltip.css ***!
  \*********************************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../../css-loader/lib/css-base.js */ 761)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaDifferentialCellTooltip {\n    border: solid transparent;\n    color: darkslategray;\n    padding: 2px;\n    font: 10px Verdana, Helvetica, Arial, sans-serif;\n}\n\n.gxaDifferentialCellTooltip table {\n    margin: 0; /* overrides ebi-visual.css:134 */\n    background-color: white;\n    border: 1px solid lightgrey;\n    border-collapse: collapse;\n}\n\n.gxaDifferentialCellTooltip th {\n    border-bottom: 1px solid lightgrey;\n    background-color: floralwhite;\n}\n\n.gxaDifferentialCellTooltip td, .gxaDifferentialCellTooltip th {\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: middle;\n    padding: 8px;\n    width: 25px;\n}\n", ""]);
	
	// exports


/***/ },
/* 984 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap/~/display-levels-button/index.js ***!
  \*******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/DisplayLevelsButton.jsx */ 985);


/***/ },
/* 985 */
/*!**************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/display-levels-button/src/DisplayLevelsButton.jsx ***!
  \**************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 523);
	var ReactDOM = __webpack_require__(/*! react-dom */ 679);
	
	var $ = __webpack_require__(/*! jquery */ 681);
	__webpack_require__(/*! jquery-ui-bundle */ 687);
	
	//*------------------------------------------------------------------*
	
	//*------------------------------------------------------------------*
	
	var DisplayLevelsButton = React.createClass({
	    displayName: 'DisplayLevelsButton',
	
	
	    propTypes: {
	        hideText: React.PropTypes.string.isRequired,
	        showText: React.PropTypes.string.isRequired,
	        onClickCallback: React.PropTypes.func.isRequired,
	        displayLevels: React.PropTypes.bool.isRequired,
	        width: React.PropTypes.string,
	        fontSize: React.PropTypes.string
	    },
	
	    _buttonText: function () {
	        return this.props.displayLevels ? this.props.hideText : this.props.showText;
	    },
	
	    _updateButtonText: function () {
	        $(ReactDOM.findDOMNode(this)).button({ label: this._buttonText() });
	    },
	
	    render: function () {
	        var style = {};
	        if (this.props.width) {
	            style.width = this.props.width;
	        }
	        if (this.props.fontSize) {
	            style.fontSize = this.props.fontSize;
	        }
	
	        return React.createElement('button', { style: style, onClick: this.props.onClickCallback });
	    },
	
	    componentDidMount: function () {
	        this._updateButtonText();
	    },
	
	    componentDidUpdate: function () {
	        this._updateButtonText();
	    }
	
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = DisplayLevelsButton;

/***/ },
/* 986 */
/*!***************************************************************!*\
  !*** ./expression-atlas-heatmap/~/contrast-tooltips/index.js ***!
  \***************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/contrastTooltipModule.js */ 987);


/***/ },
/* 987 */
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/contrast-tooltips/src/contrastTooltipModule.js ***!
  \***********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 523);
	var ReactDOMServer = __webpack_require__(/*! react-dom/server */ 764);
	
	var $ = __webpack_require__(/*! jquery */ 681);
	__webpack_require__(/*! jquery-ui-bundle */ 687);
	__webpack_require__(/*! jQuery-ajaxTransport-XDomainRequest */ 988);
	
	//*------------------------------------------------------------------*
	
	var ContrastTooltip = __webpack_require__(/*! ./ContrastTooltip.jsx */ 989);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./gxaContrastTooltip.css */ 990);
	
	//*------------------------------------------------------------------*
	
	function initTooltip(contextRoot, accessKey, element, experimentAccession, contrastId) {
	
	    $(element).attr("title", "").tooltip({
	
	        hide: false,
	
	        show: false,
	
	        tooltipClass: "gxaContrastTooltip",
	
	        close: function() {
	            $(".gxaContrastTooltip").remove();
	        },
	
	        content: function (callback) {
	            $.ajax({
	                url:contextRoot + "/rest/contrast-summary",
	                data:{
	                    experimentAccession: experimentAccession,
	                    contrastId: contrastId,
	                    accessKey: accessKey
	                },
	                type:"GET",
	                success:function (data) {
	                    var html =
	                        ReactDOMServer.renderToString(
	                            React.createElement(
	                                ContrastTooltip,
	                                {
	                                    experimentDescription: data.experimentDescription,
	                                    contrastDescription: data.contrastDescription,
	                                    testReplicates: data.testReplicates,
	                                    referenceReplicates: data.referenceReplicates,
	                                    properties: data.properties
	                                }
	                            )
	                        );
	                    callback(html);
	                }
	            }).fail(function (data) {
	                console.log("ERROR:  " + data);
	                callback("ERROR: " + data);
	            });
	        }
	
	    });
	
	}
	
	//*------------------------------------------------------------------*
	
	module.exports = function (contextRoot, accessKey, element, experimentAccession, contrastId) {
	    initTooltip(contextRoot, accessKey, element, experimentAccession, contrastId);
	};
	


/***/ },
/* 988 */
/*!*************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/contrast-tooltips/~/jQuery-ajaxTransport-XDomainRequest/jquery.xdomainrequest.min.js ***!
  \*************************************************************************************************************************/
[2186, 681],
/* 989 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/contrast-tooltips/src/ContrastTooltip.jsx ***!
  \******************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 523);
	
	//*------------------------------------------------------------------*
	
	var ContrastTooltip = React.createClass({
	    displayName: "ContrastTooltip",
	
	    propTypes: {
	        experimentDescription: React.PropTypes.string.isRequired,
	        contrastDescription: React.PropTypes.string.isRequired,
	        testReplicates: React.PropTypes.number.isRequired,
	        referenceReplicates: React.PropTypes.number.isRequired,
	        properties: React.PropTypes.arrayOf(React.PropTypes.shape({
	            contrastPropertyType: React.PropTypes.string,
	            propertyName: React.PropTypes.string.isRequired,
	            referenceValue: React.PropTypes.string.isRequired,
	            testValue: React.PropTypes.string.isRequired
	        }))
	    },
	
	    propertyRow: function (property) {
	        if (!property.testValue && !property.referenceValue) {
	            return null;
	        }
	
	        function isFactor(property) {
	            return property.contrastPropertyType === "FACTOR";
	        }
	
	        var style = { whiteSpace: "normal" };
	
	        if (isFactor(property)) {
	            style.fontWeight = "bold";
	        } else {
	            style.color = "gray";
	        }
	
	        return React.createElement(
	            "tr",
	            { key: property.contrastPropertyType + "-" + property.propertyName },
	            React.createElement(
	                "td",
	                { style: style },
	                property.propertyName
	            ),
	            React.createElement(
	                "td",
	                { style: style },
	                property.testValue
	            ),
	            React.createElement(
	                "td",
	                { style: style },
	                property.referenceValue
	            )
	        );
	    },
	
	    render: function () {
	        return React.createElement(
	            "div",
	            null,
	            React.createElement(
	                "div",
	                { id: "contrastExperimentDescription", style: { fontWeight: "bold", color: "blue", textAlign: "center" } },
	                this.props.experimentDescription
	            ),
	            React.createElement(
	                "div",
	                { id: "contrastDescription", style: { textAlign: "center" } },
	                this.props.contrastDescription
	            ),
	            React.createElement(
	                "table",
	                { style: { padding: "0px", margin: "0px", width: "100%" } },
	                React.createElement(
	                    "thead",
	                    null,
	                    React.createElement(
	                        "tr",
	                        null,
	                        React.createElement(
	                            "th",
	                            null,
	                            "Property"
	                        ),
	                        React.createElement(
	                            "th",
	                            null,
	                            "Test value (N=",
	                            this.props.testReplicates,
	                            ")"
	                        ),
	                        React.createElement(
	                            "th",
	                            null,
	                            "Reference value (N=",
	                            this.props.referenceReplicates,
	                            ")"
	                        )
	                    )
	                ),
	                React.createElement(
	                    "tbody",
	                    null,
	                    this.props.properties.map(this.propertyRow)
	                )
	            )
	        );
	    }
	
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = ContrastTooltip;

/***/ },
/* 990 */
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/contrast-tooltips/src/gxaContrastTooltip.css ***!
  \*********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../../css-loader!./gxaContrastTooltip.css */ 991);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../../style-loader/addStyles.js */ 762)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../css-loader/index.js!./gxaContrastTooltip.css", function() {
				var newContent = require("!!./../../css-loader/index.js!./gxaContrastTooltip.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 991 */
/*!*************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/~/contrast-tooltips/src/gxaContrastTooltip.css ***!
  \*************************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../../css-loader/lib/css-base.js */ 761)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaContrastTooltip {\n    border: solid transparent;\n    color: darkslategray;\n    padding: 2px;\n    font: 10px Verdana, Helvetica, Arial, sans-serif;\n    max-width: 500px;\n}\n\n.gxaContrastTooltip table {\n    margin: 0; /* overrides ebi-visual.css:134 */\n    background-color: white;\n    border: 1px solid lightgrey;\n    border-collapse: collapse;\n}\n\n.gxaContrastTooltip th {\n    border-bottom: 1px solid lightgrey;\n    background-color: floralwhite;\n}\n\n.gxaContrastTooltip td {\n    border: 1px solid lightgrey;\n}\n\n.gxaContrastTooltip td, .gxaContrastTooltip th {\n    vertical-align: middle;\n    padding: 8px;\n}\n", ""]);
	
	// exports


/***/ },
/* 992 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap/src/genePropertiesTooltipModule.js ***!
  \*********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var $ = __webpack_require__(/*! jquery */ 681);
	__webpack_require__(/*! jquery-ui-bundle */ 687);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./genePropertiesTooltipModule.css */ 993);
	
	//*------------------------------------------------------------------*
	
	/**
	 * @param {Object} options
	 * @param {string} options.contextRoot
	 * @param {string} options.geneName
	 * @param {string} options.identifier
	 * @param {Object} options.element
	 */
	function initTooltip(options){
	
	    $(options.element).attr("title", "").tooltip({
	
	        hide: false,
	
	        show: false,
	
	        tooltipClass: "gxaGeneNameTooltip",
	
	        close: function() {
	            $(".gxaGeneNameTooltip").remove();
	        },
	
	        position: { my: "left+10 top", at: "right"},
	
	        content: function (callback) {
	            if (options.identifier)  {
	                $.ajax({
	                    url: options.contextRoot + "/rest/genename-tooltip",
	                    data: {
	                        geneName: options.geneName,
	                        identifier: options.identifier
	                    },
	                    type:"GET",
	                    success: function (response) {
	                        if (!response) {
	                            callback("Missing properties for id = " + options.identifier + " in Solr.");
	                        }
	
	                        callback(response);
	                    }
	                }).fail(function (data) {
	                    console.log("ERROR:  " + data);
	                    callback("ERROR: " + data);
	                });
	            }
	        }
	
	    });
	
	}
	
	//*------------------------------------------------------------------*
	
	exports.init = function(contextRoot, element, identifier, geneName) {
	    initTooltip({contextRoot: contextRoot, element: element, identifier: identifier, geneName: geneName});
	};


/***/ },
/* 993 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/src/genePropertiesTooltipModule.css ***!
  \**********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../~/css-loader!./genePropertiesTooltipModule.css */ 994);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../~/style-loader/addStyles.js */ 762)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../node_modules/css-loader/index.js!./genePropertiesTooltipModule.css", function() {
				var newContent = require("!!./../node_modules/css-loader/index.js!./genePropertiesTooltipModule.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 994 */
/*!**************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/src/genePropertiesTooltipModule.css ***!
  \**************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../~/css-loader/lib/css-base.js */ 761)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaGeneNameTooltip {\n    border: solid transparent;\n    color: darkslategray;\n    padding: 2px;\n    font: 10px Verdana, Helvetica, Arial, sans-serif;\n    background: floralwhite;\n}\n\nspan.gxaGenePropertyLabel {\n    color: brown;\n    font-weight: bold;\n    display: inline-block;\n    text-align: left;\n}\n\n.gxaPropertyValueMarkup {\n    text-align: center;\n    background-color: rgb(223, 213, 213);\n\n}\n\n.gxaGeneNameTooltip {\n    text-align: justify;\n}", ""]);
	
	// exports


/***/ },
/* 995 */
/*!*************************************************************!*\
  !*** ./expression-atlas-heatmap/src/factorTooltipModule.js ***!
  \*************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 523);
	var ReactDOMServer = __webpack_require__(/*! react-dom/server */ 764);
	
	var $ = __webpack_require__(/*! jquery */ 681);
	__webpack_require__(/*! jquery-ui-bundle */ 687);
	
	//*------------------------------------------------------------------*
	
	var FactorTooltip = __webpack_require__(/*! ./FactorTooltip.jsx */ 996);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./factorTooltipModule.css */ 997);
	
	//*------------------------------------------------------------------*
	
	/**
	 * @param {Object} options
	 * @param {string} options.contextRoot
	 * @param {string} options.accessKey
	 * @param {string} options.experimentAccession
	 * @param {string} options.assayGroupId
	 * @param {Object} options.element
	 */
	function initTooltip(options) {
	
	    $(options.element).attr("title", "").tooltip({
	
	        hide:false,
	
	        show:false,
	
	        tooltipClass: "gxaFactorTooltip",
	
	        close: function() {
	            $(".gxaFactorTooltip").remove();
	        },
	
	        content: function (callback) {
	            $.ajax({
	                url: options.contextRoot + "/rest/assayGroup-summary",
	                data:{
	                    experimentAccession: options.experimentAccession,
	                    assayGroupId: options.assayGroupId,
	                    accessKey: options.accessKey
	                },
	                type:"GET",
	                success:function (data) {
	                    var html =
	                        ReactDOMServer.renderToString(
	                            React.createElement(
	                                FactorTooltip,
	                                {
	                                    properties: data.properties,
	                                    replicates: data.replicates
	                                }
	                            )
	                        );
	                    callback(html);
	                }
	            }).fail(function (data) {
	                    console.log("ERROR:  " + data);
	                    callback("ERROR: " + data);
	            });
	        }
	    });
	}
	
	//*------------------------------------------------------------------*
	
	exports.init = function (contextRoot, accessKey, element, experimentAccession, assayGroupId) {
	    initTooltip({contextRoot: contextRoot, accessKey: accessKey, element: element, experimentAccession: experimentAccession, assayGroupId: assayGroupId});
	};


/***/ },
/* 996 */
/*!********************************************************!*\
  !*** ./expression-atlas-heatmap/src/FactorTooltip.jsx ***!
  \********************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 523);
	
	//*------------------------------------------------------------------*
	
	var FactorTooltip = React.createClass({
	    displayName: 'FactorTooltip',
	
	
	    propertyRow: function (property) {
	        if (!property.testValue) {
	            return null;
	        }
	
	        function isFactor(property) {
	            return property.contrastPropertyType === 'FACTOR';
	        }
	
	        var style = { 'whiteSpace': 'normal' };
	
	        if (isFactor(property)) {
	            style['fontWeight'] = 'bold';
	        } else {
	            style['color'] = 'gray';
	        }
	
	        return React.createElement(
	            'tr',
	            { key: property.propertyName },
	            React.createElement(
	                'td',
	                { style: style },
	                property.propertyName
	            ),
	            React.createElement(
	                'td',
	                { style: style },
	                property.testValue
	            )
	        );
	    },
	
	    render: function () {
	        return React.createElement(
	            'div',
	            null,
	            React.createElement(
	                'table',
	                null,
	                React.createElement(
	                    'thead',
	                    null,
	                    React.createElement(
	                        'tr',
	                        null,
	                        React.createElement(
	                            'th',
	                            null,
	                            'Property'
	                        ),
	                        React.createElement(
	                            'th',
	                            null,
	                            'Value (N=',
	                            this.props.replicates,
	                            ')'
	                        )
	                    )
	                ),
	                React.createElement(
	                    'tbody',
	                    null,
	                    this.props.properties.map(this.propertyRow)
	                )
	            )
	        );
	    }
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = FactorTooltip;

/***/ },
/* 997 */
/*!**************************************************************!*\
  !*** ./expression-atlas-heatmap/src/factorTooltipModule.css ***!
  \**************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../~/css-loader!./factorTooltipModule.css */ 998);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../~/style-loader/addStyles.js */ 762)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../node_modules/css-loader/index.js!./factorTooltipModule.css", function() {
				var newContent = require("!!./../node_modules/css-loader/index.js!./factorTooltipModule.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 998 */
/*!******************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/src/factorTooltipModule.css ***!
  \******************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../~/css-loader/lib/css-base.js */ 761)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaFactorTooltip {\n    border: solid transparent;\n    color: darkslategray;\n    padding: 2px;\n    font: 10px Verdana, Helvetica, Arial, sans-serif;\n    max-width: 600px;\n}\n\n.gxaFactorTooltip table {\n    margin: 0; /* overrides ebi-visual.css:134 */\n    background-color: white;\n    border: 1px solid lightgrey;\n    border-collapse: collapse;\n}\n\n.gxaFactorTooltip th {\n    border-bottom: 1px solid lightgrey;\n    background-color: floralwhite;\n}\n\n.gxaFactorTooltip td {\n    border: 1px solid lightgrey;\n    white-space: nowrap;\n}\n\n.gxaFactorTooltip td, .gxaFactorTooltip th {\n    vertical-align: middle;\n    padding: 8px;\n}\n", ""]);
	
	// exports


/***/ },
/* 999 */
/*!************************************************************!*\
  !*** ./expression-atlas-heatmap/src/stickyHeaderModule.js ***!
  \************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var $ = __webpack_require__(/*! jquery */ 681);
	
	//*------------------------------------------------------------------*
	
	function StickyHeaderModule(table, stickyIntersect, stickyColumn, stickyHeadRow, stickyWrap, tableHeader) {
	    var $t	             = $(table),
	        $stickyIntersect = $(stickyIntersect),
	        $stickyColumn    = $(stickyColumn),
	        $stickyHeadRow   = $(stickyHeadRow),
	        $stickyWrap      = $(stickyWrap),
	        $tableHeader     = $(tableHeader);
	
	    var calculateAllowance = createStickyAllowanceCallback($t, $stickyHeadRow);
	    var stickyReposition = createStickyRepositionCallback($t, $stickyIntersect, $stickyColumn, $stickyHeadRow, $stickyWrap, $tableHeader, calculateAllowance);
	    var setWidthAndHeight = createSetStickyWidthHeight($t, $stickyIntersect, $stickyColumn, $stickyHeadRow, $stickyWrap);
	    var setWidthsAndReposition = createSetStickyWidthHeightAndRepositionCallback(setWidthAndHeight, stickyReposition);
	
	    return {
	        calculateAllowance: calculateAllowance,
	        stickyReposition: stickyReposition,
	        setWidthAndHeight: setWidthAndHeight,
	        setWidthsAndReposition: setWidthsAndReposition
	    };
	
	    function createSetStickyWidthHeight($t, $stickyIntersect, $stickyColumn, $stickyHeadRow, $stickyWrap) {
	        return function () {
	            $t.find("thead th").each(
	                function (i) {
	                    $stickyHeadRow.find("th").eq(i).width($(this).width());
	                }
	            ).end().find("tr").each(
	                function (i) {
	                    $stickyColumn.find("tr").eq(i).height($(this).height());
	                    $stickyIntersect.find("tr").eq(i).height($(this).height());
	                }
	            );
	
	            $stickyHeadRow.width($stickyWrap.width()).find("table").width($t.width());
	            $stickyIntersect.find("table").outerWidth($t.find("thead th").eq(0).outerWidth());
	            $stickyColumn.find("table").outerWidth($t.find("thead th").eq(0).outerWidth());
	
	            // Set width of sticky table col
	            $stickyIntersect.find("tr:nth-child(2) th").each(function (i) {
	                $(this).width($t.find("tr:nth-child(2) th").eq(i).width());
	            });
	        }
	    }
	
	    function createStickyRepositionCallback($t, $stickyIntersect, $stickyColumn, $stickyHeadRow, $stickyWrap, $tableHeader, stickyAllowanceCallback) {
	        return function() {
	            var $w = $(window);
	
	            // Set position sticky col
	            $stickyHeadRow.add($stickyIntersect).add($stickyColumn).css({
	                left: $stickyWrap.offset().left,
	                top: $stickyWrap.offset().top
	            });
	
	            var allowance = stickyAllowanceCallback();
	
	            $stickyHeadRow.find("table").css({
	                left: -$stickyWrap.scrollLeft()
	            });
	            $stickyColumn.css({
	                top: $stickyWrap.offset().top - $w.scrollTop(),
	                left: $stickyWrap.offset().left
	            });
	
	            // 1. Position sticky header based on viewport scrollTop
	            if ($w.scrollTop() + $tableHeader.outerHeight() > $t.offset().top &&
	                $w.scrollTop() + $tableHeader.outerHeight() < $t.offset().top + $t.outerHeight() - allowance) {
	                // When top of viewport is in the table itself
	                $stickyHeadRow.add($stickyIntersect).css({
	                    visibility: "visible",
	                    top: $tableHeader.outerHeight()
	                });
	            } else if ($w.scrollTop() + $tableHeader.outerHeight() > $t.offset().top + $t.outerHeight() - allowance) {
	                $stickyHeadRow.add($stickyIntersect).css({
	                    visibility: "visible",
	                    top: $t.offset().top + $t.outerHeight() - allowance - $w.scrollTop()
	                });
	            } else {
	                // When top of viewport is above or below table
	                $stickyHeadRow.add($stickyIntersect).css({
	                    visibility: "hidden",
	                    top: $stickyWrap.offset().top - $w.scrollTop()
	                });
	            }
	
	            // 2. Now deal with positioning of sticky column
	            if($stickyWrap.scrollLeft() > 0) {
	                // When left of wrapping parent is out of view
	                $stickyColumn.css({
	                    visibility: "visible",
	                    "z-index": 40
	                });
	            } else {
	                $stickyColumn.css({
	                    visibility: "hidden",
	                    "z-index": -5
	                });
	            }
	        }
	    }
	
	    function createSetStickyWidthHeightAndRepositionCallback(setWidthAndHeightCallback, stickyRepositionCallback) {
	        return function () {
	            setWidthAndHeightCallback();
	            stickyRepositionCallback();
	        }
	    }
	
	    function createStickyAllowanceCallback($t, $stickyHeadRow) {
	        return function() {
	            var rowHeight = 0;
	            // Calculate allowance
	            $t.find("tbody tr:lt(1)").each(function () {
	                rowHeight += $(this).height();
	            });
	            return rowHeight + $stickyHeadRow.height();
	        }
	    }
	}
	
	//*------------------------------------------------------------------*
	
	module.exports = StickyHeaderModule;


/***/ },
/* 1000 */
/*!*************************************************************!*\
  !*** ./expression-atlas-heatmap/src/stickyHeaderModule.css ***!
  \*************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../~/css-loader!./stickyHeaderModule.css */ 1001);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../~/style-loader/addStyles.js */ 762)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../node_modules/css-loader/index.js!./stickyHeaderModule.css", function() {
				var newContent = require("!!./../node_modules/css-loader/index.js!./stickyHeaderModule.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 1001 */
/*!*****************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/src/stickyHeaderModule.css ***!
  \*****************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../~/css-loader/lib/css-base.js */ 761)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaStickyTableWrap {\n    overflow-x: auto;\n    overflow-y: hidden;\n    position: relative;\n    width: 100%;\n}\n\n.gxaStickyTableWrap div[class^='gxaSticky'] {\n    overflow: hidden;\n}\n.gxaStickyTableWrap tfoot {\n    display: none;\n}\n.gxaStickyTableWrap div table {\n    margin: 0;\n    position: relative;\n    width: auto; /* Prevent table from stretching to full size */\n    border-collapse: collapse;\n}\n.gxaStickyTableWrap .gxaStickyTableHeader,\n.gxaStickyTableWrap .gxaStickyTableColumn,\n.gxaStickyTableWrap .gxaStickyTableIntersect {\n    visibility: hidden;\n    position: fixed;\n    z-index: 40;\n}\n.gxaStickyTableWrap .gxaStickyTableHeader {\n    z-index: 50;\n    width: 100%; /* Force stretch */\n}\n.gxaStickyTableWrap .gxaStickyTableIntersect {\n    z-index: 60;\n}\n.gxaStickyTableWrap td,\n.gxaStickyTableWrap th {\n    box-sizing: border-box;\n}\n.gxaStickyTableWrap thead th {\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n}\n.gxaStickyEnabled {\n    margin: 0;\n    width: auto;\n}\n\n.wrapper-sticky {\n    z-index: 45;\n}\n\n/* To hide sticky column and intersect when screen gets too narrow */\n@media only screen and (max-width: 768px) {\n    .gxaStickyTableColumn, .gxaStickyTableIntersect {\n        display: none;\n    }\n}\n", ""]);
	
	// exports


/***/ },
/* 1002 */
/*!**************************************************!*\
  !*** ./expression-atlas-heatmap/src/Heatmap.css ***!
  \**************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../~/css-loader!./Heatmap.css */ 1003);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../~/style-loader/addStyles.js */ 762)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../node_modules/css-loader/index.js!./Heatmap.css", function() {
				var newContent = require("!!./../node_modules/css-loader/index.js!./Heatmap.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 1003 */
/*!******************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/src/Heatmap.css ***!
  \******************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../~/css-loader/lib/css-base.js */ 761)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaHeatmapMatrixTopLeftCorner {\n    position: relative;\n    display: table;\n    height: 110px;\n    width: 100%;\n    min-width: 160px;\n}\n\n.gxaTableGrid {\n    color: #404040;\n    background-color: white;\n    border: 1px solid #cdcdcd !important;\n    border-spacing: 0;\n    empty-cells: show;\n    height: 100%;\n    text-align: left;\n    width: auto;\n    border-collapse: collapse;\n}\n\n.gxaTableGrid>tbody>tr>td, .gxaTableGrid>thead>tr>td {\n    color: #3D3D3D;\n    vertical-align: middle;\n    border: 1px solid #cdcdcd !important;\n    height: 25px;\n    width: 25px;\n    white-space: nowrap;\n}\n\nth.gxaVerticalHeaderCell, .gxaHorizontalHeaderCell {\n    font-weight: normal;\n    background-color: rgb(237, 246, 246) !important;\n}\n\nth.gxaHoverableHeader:hover, th.gxaHeaderHover {\n    background-color: #deebeb !important;\n}\n\nth.gxaSelectableHeader:hover {\n    cursor: pointer;\n}\n\nth.gxaVerticalHeaderCell-selected, th.gxaVerticalHeaderCell-selected:hover, th.gxaHorizontalHeaderCell-selected, th.gxaHorizontalHeaderCell-selected:hover {\n    background-color: rgb(181, 234, 234) !important;\n    border: 1px solid #cdcdcd;\n    padding:5px;\n}\n\nth.gxaHorizontalHeaderCell {\n    border: 1px solid #cdcdcd;\n    white-space: nowrap;\n    padding:5px;\n    text-align: left !important;\n}\n\ntr.gxaProteomicsExperiment td.gxaHorizontalHeaderCell {\n    background-color: rgb(210, 233, 233) !important;\n}\n\ntr.gxaProteomicsExperiment td.gxaHorizontalHeaderCell-selected, tr.gxaProteomicsExperiment td.gxaHorizontalHeaderCell:hover {\n    background-color: rgb(200, 220, 220) !important;\n}\n\n.gxaHeatmapCell {\n    font-size: 9px;\n    background-color: white;\n    margin: 4px;\n    padding: 2px;\n    white-space: nowrap;\n    text-align: center;\n}\n\nth.gxaHeatmapTableDesignElement {\n    font-weight: normal;\n    text-align: left;\n    border: 1px solid #CDCDCD;\n}\n\n.gxaHeatmapCountAndLegend {\n    background: white;\n}\n\n.csstransforms .rotated_cell {\n    height: 130px;\n    border: 1px solid #cdcdcd;\n    vertical-align: bottom;\n    padding-bottom: 10px\n}\n\n.csstransforms .rotate_text {\n    position: relative;\n    top: 27px;\n    width: 25px;\n    padding-top: 5px;\n    white-space: nowrap;\n    -moz-transform: rotate(-90deg);\n    -moz-transform-origin: top left;\n    -ms-transform: rotate(-90deg);\n    -ms-transform-origin: top left;\n    -webkit-transform: rotate(-90deg);\n    -webkit-transform-origin: top left;\n    -o-transform: rotate(-90deg);\n    -o-transform-origin: top left;\n}\n\n.csstransforms .rotate_tick {\n    -moz-transform: rotate(-270deg);\n    -webkit-transform: rotate(-270deg);\n    -ms-transform: rotate(-270deg);\n    -o-transform: rotate(-270deg);\n}\n\n.gxaNoTextButton {\n    border: 1px solid #ccc !important; /* overrides ebi-visual.css */\n}\n\n.gxaNoTextButton .ui-button-text {\n    padding: 2px;\n}\n\n.gxaFeedbackBoxWrapper {\n  margin-top: 15px;\n}\n\n.gxaDisplayCoexpressionOffer {\n  margin-top: 30px;\n}\n\n.gxaDisplayCoexpressionOffer .gxaSlider {\n  width: 250px;\n  margin: 15px;\n  padding-bottom: 20px;\n}\n\n.gxaDisplayCoexpressionOffer p {\n  font-size: 93%;\n}\n", ""]);
	
	// exports


/***/ },
/* 1004 */,
/* 1005 */,
/* 1006 */,
/* 1007 */,
/* 1008 */
/*!*********************************************************!*\
  !*** ./expression-atlas-heatmap/src/experimentTypes.js ***!
  \*********************************************************/
/***/ function(module, exports) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = {
	    BASELINE: { isBaseline: true, heatmapTooltip: "#heatMapTableCellInfo-baseline" },
	    PROTEOMICS_BASELINE: { isBaseline: true, isProteomics: true, heatmapTooltip: "#heatMapTableCellInfo-proteomics" },
	    DIFFERENTIAL: { isDifferential: true, heatmapTooltip: "#heatMapTableCellInfo-differential" },
	    MULTIEXPERIMENT: { isMultiExperiment: true, heatmapTooltip: "#heatMapTableCellInfo-multiexperiment" }
	};


/***/ },
/* 1009 */,
/* 1010 */,
/* 1011 */,
/* 1012 */,
/* 1013 */,
/* 1014 */,
/* 1015 */,
/* 1016 */,
/* 1017 */,
/* 1018 */,
/* 1019 */,
/* 1020 */,
/* 1021 */,
/* 1022 */,
/* 1023 */,
/* 1024 */,
/* 1025 */,
/* 1026 */,
/* 1027 */,
/* 1028 */,
/* 1029 */,
/* 1030 */,
/* 1031 */,
/* 1032 */,
/* 1033 */,
/* 1034 */,
/* 1035 */,
/* 1036 */,
/* 1037 */,
/* 1038 */,
/* 1039 */,
/* 1040 */,
/* 1041 */,
/* 1042 */,
/* 1043 */,
/* 1044 */,
/* 1045 */,
/* 1046 */,
/* 1047 */,
/* 1048 */,
/* 1049 */,
/* 1050 */,
/* 1051 */,
/* 1052 */,
/* 1053 */,
/* 1054 */,
/* 1055 */,
/* 1056 */,
/* 1057 */,
/* 1058 */,
/* 1059 */,
/* 1060 */,
/* 1061 */,
/* 1062 */,
/* 1063 */,
/* 1064 */,
/* 1065 */,
/* 1066 */,
/* 1067 */,
/* 1068 */,
/* 1069 */,
/* 1070 */,
/* 1071 */,
/* 1072 */,
/* 1073 */,
/* 1074 */,
/* 1075 */,
/* 1076 */,
/* 1077 */,
/* 1078 */,
/* 1079 */,
/* 1080 */,
/* 1081 */,
/* 1082 */,
/* 1083 */,
/* 1084 */,
/* 1085 */,
/* 1086 */,
/* 1087 */,
/* 1088 */,
/* 1089 */,
/* 1090 */,
/* 1091 */,
/* 1092 */,
/* 1093 */,
/* 1094 */,
/* 1095 */,
/* 1096 */,
/* 1097 */,
/* 1098 */,
/* 1099 */,
/* 1100 */,
/* 1101 */,
/* 1102 */,
/* 1103 */,
/* 1104 */,
/* 1105 */,
/* 1106 */,
/* 1107 */,
/* 1108 */,
/* 1109 */,
/* 1110 */,
/* 1111 */,
/* 1112 */,
/* 1113 */,
/* 1114 */,
/* 1115 */,
/* 1116 */,
/* 1117 */,
/* 1118 */,
/* 1119 */,
/* 1120 */,
/* 1121 */,
/* 1122 */,
/* 1123 */,
/* 1124 */,
/* 1125 */,
/* 1126 */,
/* 1127 */,
/* 1128 */,
/* 1129 */,
/* 1130 */,
/* 1131 */,
/* 1132 */,
/* 1133 */,
/* 1134 */,
/* 1135 */,
/* 1136 */,
/* 1137 */,
/* 1138 */,
/* 1139 */,
/* 1140 */,
/* 1141 */,
/* 1142 */,
/* 1143 */,
/* 1144 */,
/* 1145 */,
/* 1146 */,
/* 1147 */,
/* 1148 */,
/* 1149 */,
/* 1150 */,
/* 1151 */,
/* 1152 */,
/* 1153 */,
/* 1154 */,
/* 1155 */,
/* 1156 */,
/* 1157 */,
/* 1158 */,
/* 1159 */,
/* 1160 */,
/* 1161 */,
/* 1162 */,
/* 1163 */,
/* 1164 */,
/* 1165 */,
/* 1166 */,
/* 1167 */,
/* 1168 */,
/* 1169 */,
/* 1170 */,
/* 1171 */,
/* 1172 */,
/* 1173 */,
/* 1174 */,
/* 1175 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/src/heatmapAnatomogramRenderer.js ***!
  \********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var React = __webpack_require__(/*! react */ 523);
	var ReactDOM = __webpack_require__(/*! react-dom */ 679);
	
	//*------------------------------------------------------------------*
	
	var EventEmitter = __webpack_require__(/*! events */ 483);
	
	var HeatmapAnatomogramContainer = __webpack_require__(/*! ./HeatmapAnatomogramContainer.jsx */ 1176);
	
	var ExperimentTypes = __webpack_require__(/*! ./experimentTypes.js */ 1008);
	
	//*------------------------------------------------------------------*
	
	/**
	 * @param {Object}      options
	 * @param {string}          options.proxyPrefix - Proxy URL with protocol: required by CTTV
	 * @param {boolean=}        options.disableGoogleAnalytics - Disable Google Analytics: required by CTTV
	 * @param {string=}         options.atlasHost - Atlas host with port (note: don’t include port)
	 * @param {string}          options.params
	 * @param {boolean=}        options.isMultiExperiment
	 * @param {boolean=}        options.showAnatomogram
	 * @param {boolean=}        options.isWidget
	 * @param {string | Object} options.target - a <div> id or a DOM element, as returned by ReactDOM.findDOMNode()
	 * @param {function}        options.fail - Callback to run if the AJAX request to the server fails. (jqXHR, textStatus)
	 */
	exports.render = function(options) {
	
	    var protocol = window.location.protocol + "//",
	        atlasHost = options.atlasHost === undefined ? "www.ebi.ac.uk" : options.atlasHost,
	        atlasPath = "/gxa";
	
	    var linksAtlasBaseURL =
	        (atlasHost.indexOf("http://") === 0 || atlasHost.indexOf("https://") === 0) ? atlasHost + atlasPath :
	        protocol + atlasHost + atlasPath;
	
	    var atlasBaseURL = options.proxyPrefix ? options.proxyPrefix + "/" + atlasHost + atlasPath : linksAtlasBaseURL;
	
	    var endpointPath = options.isMultiExperiment ? "/widgets/heatmap/baselineAnalytics" : "/widgets/heatmap/referenceExperiment";
	
	    var sourceURL = atlasBaseURL + endpointPath + "?" + options.params;
	
	    var anatomogramEventEmitter = new EventEmitter();
	    anatomogramEventEmitter.setMaxListeners(0);
	
	    ReactDOM.render(
	        React.createElement(
	            HeatmapAnatomogramContainer,
	            {   key: JSON.stringify(options.params),
	                sourceURL: sourceURL,
	                atlasBaseURL: atlasBaseURL,
	                linksAtlasBaseURL: linksAtlasBaseURL,
	                type: options.isMultiExperiment ? ExperimentTypes.MULTIEXPERIMENT : ExperimentTypes.BASELINE,
	                showAnatomogram: options.showAnatomogram === undefined ? true : options.showAnatomogram,
	                isWidget: options.isWidget === undefined ? true : options.isWidget,
	                disableGoogleAnalytics: options.disableGoogleAnalytics === undefined ? false : options.disableGoogleAnalytics,
	                fail: options.fail,
	                anatomogramEventEmitter: anatomogramEventEmitter
	            }
	        ),
	        (typeof options.target === "string") ? document.getElementById(options.target) : options.target
	    );
	};


/***/ },
/* 1176 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/src/HeatmapAnatomogramContainer.jsx ***!
  \**********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 523);
	var ReactDOM = __webpack_require__(/*! react-dom */ 679);
	
	var $ = __webpack_require__(/*! jquery */ 681);
	__webpack_require__(/*! jQuery-ajaxTransport-XDomainRequest */ 1177);
	__webpack_require__(/*! jquery-hc-sticky */ 683);
	
	var URI = __webpack_require__(/*! urijs */ 1178);
	
	//*------------------------------------------------------------------*
	
	var Anatomogram = __webpack_require__(/*! anatomogram */ 684);
	var Heatmap = __webpack_require__(/*! ./Heatmap.jsx */ 763);
	var ExperimentsList = __webpack_require__(/*! ./ExperimentsList.jsx */ 1182);
	var ExperimentTypes = __webpack_require__(/*! ./experimentTypes.js */ 1008);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./HeatmapAnatomogramContainer.css */ 1183);
	
	//*------------------------------------------------------------------*
	
	var ExperimentDescription = React.createClass({
	    displayName: 'ExperimentDescription',
	
	    propTypes: {
	        linksAtlasBaseURL: React.PropTypes.string.isRequired,
	        experiment: React.PropTypes.shape({
	            URL: React.PropTypes.string.isRequired,
	            description: React.PropTypes.string.isRequired,
	            species: React.PropTypes.string.isRequired
	        }).isRequired
	    },
	
	    render: function () {
	
	        var experimentURL = this.props.linksAtlasBaseURL + this.props.experiment.URL;
	
	        return React.createElement(
	            'div',
	            { style: { width: "100%", paddingBottom: "20px" } },
	            React.createElement(
	                'div',
	                { id: 'experimentDescription' },
	                React.createElement(
	                    'a',
	                    { id: 'goto-experiment', className: 'gxaThickLink', title: 'Experiment Page', href: experimentURL },
	                    this.props.experiment.description
	                )
	            ),
	            React.createElement(
	                'div',
	                { id: 'experimentOrganisms' },
	                'Organism: ',
	                React.createElement(
	                    'span',
	                    { style: { "fontStyle": "italic" } },
	                    this.props.experiment.species
	                )
	            )
	        );
	    }
	
	});
	
	var HeatmapAnatomogramContainer = React.createClass({
	    displayName: 'HeatmapAnatomogramContainer',
	
	    propTypes: {
	        sourceURL: React.PropTypes.string.isRequired,
	        atlasBaseURL: React.PropTypes.string.isRequired,
	        linksAtlasBaseURL: React.PropTypes.string.isRequired,
	        type: React.PropTypes.oneOf([ExperimentTypes.BASELINE, ExperimentTypes.MULTIEXPERIMENT, ExperimentTypes.DIFFERENTIAL, ExperimentTypes.PROTEOMICS_BASELINE]).isRequired,
	        showAnatomogram: React.PropTypes.bool.isRequired,
	        isWidget: React.PropTypes.bool.isRequired,
	        disableGoogleAnalytics: React.PropTypes.bool.isRequired,
	        fail: React.PropTypes.func,
	        googleAnalyticsCallback: React.PropTypes.func,
	        anatomogramEventEmitter: React.PropTypes.object.isRequired,
	        facetsEventEmitter: React.PropTypes.object
	    },
	
	    render: function () {
	
	        var anatomogramExpressedTissueColour = this.props.type.isMultiExperiment ? "red" : "gray";
	        var anatomogramHoveredTissueColour = this.props.type.isMultiExperiment ? "indigo" : "red";
	
	        var geneURL = this.props.linksAtlasBaseURL + "/query" + "?geneQuery=" + this.state.heatmapConfig.geneQuery + "&organism=" + this.state.heatmapConfig.species;
	
	        var display;
	        var marginLeft;
	
	        if (this.state.anatomogramData) {
	            display = this.props.showAnatomogram ? "block" : "none";
	            marginLeft = this.props.showAnatomogram ? "270px" : "0";
	        } else {
	            display = "none";
	            marginLeft = "0";
	        }
	
	        var homoSapiensCellLine = this.state.heatmapConfig.species === "homo sapiens" && new URI(this.props.sourceURL).search(true).source === "CELL_LINE";
	
	        return React.createElement(
	            'div',
	            { ref: 'this' },
	            this.state.experimentData ? React.createElement(ExperimentDescription, { experiment: this.state.experimentData, linksAtlasBaseURL: this.props.linksAtlasBaseURL }) : null,
	            this.state.heatmapConfig ? React.createElement(
	                'div',
	                { id: 'heatmap-anatomogram', className: 'gxaHeatmapAnatomogramRow' },
	                React.createElement(
	                    'div',
	                    { ref: 'anatomogramEnsembl', className: 'gxaAside', style: { display: display } },
	                    this.state.anatomogramData ? React.createElement(Anatomogram, { anatomogramData: this.state.anatomogramData,
	                        expressedTissueColour: anatomogramExpressedTissueColour, hoveredTissueColour: anatomogramHoveredTissueColour,
	                        profileRows: this.state.profiles.rows, eventEmitter: this.props.anatomogramEventEmitter, atlasBaseURL: this.props.atlasBaseURL }) : null
	                ),
	                !homoSapiensCellLine ? React.createElement(
	                    'div',
	                    { id: 'heatmap-react', className: 'gxaInnerHeatmap', style: { marginLeft: marginLeft } },
	                    React.createElement(Heatmap, { type: this.props.type,
	                        heatmapConfig: this.state.heatmapConfig,
	                        columnHeaders: this.state.columnHeaders,
	                        profiles: this.state.profiles,
	                        geneSetProfiles: this.state.geneSetProfiles,
	                        anatomogramEventEmitter: this.props.anatomogramEventEmitter,
	                        atlasBaseURL: this.props.atlasBaseURL,
	                        linksAtlasBaseURL: this.props.linksAtlasBaseURL,
	                        googleAnalyticsCallback: this.state.googleAnalyticsCallback })
	                ) : React.createElement(
	                    'div',
	                    { style: { marginLeft: marginLeft } },
	                    React.createElement(ExperimentsList, { profiles: this.state.profiles,
	                        atlasBaseURL: this.props.atlasBaseURL,
	                        linksAtlasBaseURL: this.props.linksAtlasBaseURL,
	                        geneQuery: this.state.heatmapConfig.geneQuery })
	                )
	            ) : React.createElement(
	                'div',
	                { ref: 'loadingImagePlaceholder' },
	                React.createElement('img', { src: this.props.atlasBaseURL + "/resources/images/loading.gif" })
	            ),
	            this.props.isWidget ? React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    'p',
	                    null,
	                    React.createElement(
	                        'a',
	                        { href: geneURL },
	                        'See more expression data at Expression Atlas.'
	                    ),
	                    React.createElement('br', null),
	                    'This expression view is provided by ',
	                    React.createElement(
	                        'a',
	                        { href: this.props.linksAtlasBaseURL },
	                        'Expression Atlas'
	                    ),
	                    '.',
	                    React.createElement('br', null),
	                    'Please direct any queries or feedback to ',
	                    React.createElement(
	                        'a',
	                        { href: 'mailto:arrayexpress-atlas@ebi.ac.uk' },
	                        'arrayexpress-atlas@ebi.ac.uk'
	                    )
	                )
	            ) : null
	        );
	    },
	
	    getInitialState: function () {
	        return {
	            heatmapConfig: '',
	            columnHeaders: [],
	            profiles: {
	                rows: [],
	                minExpressionLevel: 0,
	                maxExpressionLevel: 0
	            },
	            jsonCoexpressions: [],
	            geneSetProfiles: {},
	            anatomogramData: {},
	            experimentData: '',
	            googleAnalyticsCallback: function () {}
	        };
	    },
	
	    _updateStateAsynchronously: function (data) {
	        this.setState({
	            heatmapConfig: data.config,
	            columnHeaders: data.columnHeaders,
	            profiles: data.profiles,
	            jsonCoexpressions: data.jsonCoexpressions,
	            geneSetProfiles: data.geneSetProfiles,
	            anatomogramData: data.anatomogram,
	            experimentData: data.experiment
	        });
	
	        if (this.props.facetsEventEmitter) {
	            if (this.state.anatomogramData) {
	                this.props.facetsEventEmitter.emit('existAnatomogramData', true);
	            } else {
	                this.props.facetsEventEmitter.emit('existAnatomogramData', false);
	            }
	        }
	    },
	
	    componentDidMount: function () {
	
	        var handleError = function (jqXHR, textStatus, errorThrown) {
	            if (this.props.fail) {
	                this.props.fail(jqXHR, textStatus, errorThrown);
	            } else if (textStatus === "parsererror") {
	                $(ReactDOM.findDOMNode(this.refs.this)).html('<div class="gxaError">Could not parse JSON response</div>');
	            } else {
	                $(ReactDOM.findDOMNode(this.refs.this)).html('<div class="gxaError">' + jqXHR.responseText + '</div>');
	            }
	        }.bind(this);
	
	        var handleSuccess = function (data) {
	            if ("error" in data) {
	                handleError({ responseText: data.error });
	            } else {
	                this._updateStateAsynchronously(data);
	            }
	        }.bind(this);
	
	        var httpRequest = {
	            url: this.props.sourceURL,
	            dataType: "json",
	            method: "GET",
	            success: handleSuccess,
	            error: handleError
	        };
	
	        this.serverRequest = $.ajax(httpRequest);
	
	        if (!this.props.disableGoogleAnalytics) {
	            (function (i, s, o, g, r, a, m) {
	                i['GoogleAnalyticsObject'] = r;i[r] = i[r] || function () {
	                    (i[r].q = i[r].q || []).push(arguments);
	                }, i[r].l = 1 * new Date();a = s.createElement(o), m = s.getElementsByTagName(o)[0];a.async = 1;a.src = g;m.parentNode.insertBefore(a, m);
	            })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');
	
	            ga('create', 'UA-37676851-1', 'auto');
	            ga('send', 'pageview');
	            this.setState({ googleAnalyticsCallback: ga });
	        }
	    },
	
	    componentDidUpdate: function () {
	        // This mounted component is only going to be updated when changing this.props.showAnatomogram, so we only take
	        // care of the anatomogram, the legend and the sticky header (the last two through an event)
	        var $anatomogram = $(ReactDOM.findDOMNode(this.refs.anatomogramEnsembl));
	
	        if (this.props.showAnatomogram) {
	            $anatomogram.hcSticky({ responsive: true });
	        }
	
	        $(window).trigger("gxaResizeHeatmapAnatomogramHeader");
	    },
	    componentWillUnmount: function () {
	        this.serverRequest.abort();
	    }
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = HeatmapAnatomogramContainer;

/***/ },
/* 1177 */
/*!*****************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/jQuery-ajaxTransport-XDomainRequest/jquery.xdomainrequest.min.js ***!
  \*****************************************************************************************************/
[2186, 681],
/* 1178 */
/*!*****************************************************!*\
  !*** ./expression-atlas-heatmap/~/urijs/src/URI.js ***!
  \*****************************************************/
[2189, 1179, 1180, 1181],
/* 1179 */
/*!**********************************************************!*\
  !*** ./expression-atlas-heatmap/~/urijs/src/punycode.js ***!
  \**********************************************************/
476,
/* 1180 */
/*!******************************************************!*\
  !*** ./expression-atlas-heatmap/~/urijs/src/IPv6.js ***!
  \******************************************************/
478,
/* 1181 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap/~/urijs/src/SecondLevelDomains.js ***!
  \********************************************************************/
479,
/* 1182 */
/*!**********************************************************!*\
  !*** ./expression-atlas-heatmap/src/ExperimentsList.jsx ***!
  \**********************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 523);
	var BootstrapButton = __webpack_require__(/*! react-bootstrap/lib/Button */ 285);
	
	//*------------------------------------------------------------------*
	
	var ExperimentsList = React.createClass({
	    displayName: 'ExperimentsList',
	
	    propTypes: {
	        profiles: React.PropTypes.shape({
	            rows: React.PropTypes.array.isRequired
	        }).isRequired,
	        atlasBaseURL: React.PropTypes.string.isRequired,
	        linksAtlasBaseURL: React.PropTypes.string.isRequired,
	        geneQuery: React.PropTypes.string.isRequired
	    },
	
	    getInitialState: function () {
	        return { "displayAll": this.props.profiles.rows.length < 10 };
	    },
	
	    _getRowsToDisplay: function () {
	        var rows = this.props.profiles.rows.sort(this._lexicalSort);
	        return this.state.displayAll ? rows : rows.slice(0, 10);
	    },
	
	    _displayAll: function () {
	        this.setState({ "displayAll": true });
	    },
	
	    _lexicalSort: function (thisProfile, thatProfile) {
	        if (thisProfile.name > thatProfile.name) {
	            return 1;
	        }
	        if (thisProfile.name < thatProfile.name) {
	            return -1;
	        }
	        return 0;
	    },
	
	    _renderListItem: function (profile) {
	        var experimentURL = this.props.linksAtlasBaseURL + "/experiments/" + profile.id + "?geneQuery=" + this.props.geneQuery + (profile.serializedFilterFactors ? "&serializedFilterFactors=" + encodeURIComponent(profile.serializedFilterFactors) : "");
	
	        return React.createElement(
	            'li',
	            { key: profile.name },
	            React.createElement(
	                'a',
	                { target: '_blank', href: experimentURL },
	                profile.name
	            )
	        );
	    },
	
	    _renderListItems: function (options) {
	        return this._getRowsToDisplay().map(this._renderListItem);
	    },
	
	    render: function () {
	        return React.createElement(
	            'ul',
	            { style: { listStyleType: "none", paddingLeft: "0" } },
	            this._renderListItems(),
	            this.state.displayAll ? React.createElement('a', null) : React.createElement(
	                BootstrapButton,
	                { bsStyle: 'default', bsSize: 'xsmall', onClick: this._displayAll },
	                'More'
	            )
	        );
	    }
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = ExperimentsList;

/***/ },
/* 1183 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap/src/HeatmapAnatomogramContainer.css ***!
  \**********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../~/css-loader!./HeatmapAnatomogramContainer.css */ 1184);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../~/style-loader/addStyles.js */ 762)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../node_modules/css-loader/index.js!./HeatmapAnatomogramContainer.css", function() {
				var newContent = require("!!./../node_modules/css-loader/index.js!./HeatmapAnatomogramContainer.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 1184 */
/*!**************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap/~/css-loader!./expression-atlas-heatmap/src/HeatmapAnatomogramContainer.css ***!
  \**************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../~/css-loader/lib/css-base.js */ 761)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaHeatmapAnatomogramRow {\n    position: relative;\n}\n\n.gxaHeatmapAnatomogramRow:after {\n    clear: both;\n    content: \".\";\n    display: block;\n    visibility: hidden;\n}\n\n.gxaInnerHeatmap {\n    position: relative;\n    overflow: hidden;\n}\n\n.gxaAside {\n    float: left;\n}", ""]);
	
	// exports


/***/ }
]);
//# sourceMappingURL=expressionAtlasHeatmap.bundle.js.map