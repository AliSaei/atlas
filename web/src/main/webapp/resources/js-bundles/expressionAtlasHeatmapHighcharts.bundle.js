var expressionAtlasHeatmapHighcharts =
webpackJsonp_name_([4],[
/* 0 */
/*!******************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/index.js ***!
  \******************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/highchartsHeatmapRenderer.js */ 1098);


/***/ },
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */,
/* 18 */,
/* 19 */,
/* 20 */,
/* 21 */,
/* 22 */,
/* 23 */,
/* 24 */,
/* 25 */,
/* 26 */,
/* 27 */,
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */,
/* 34 */,
/* 35 */,
/* 36 */,
/* 37 */,
/* 38 */,
/* 39 */,
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */,
/* 48 */,
/* 49 */,
/* 50 */,
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */,
/* 56 */,
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */,
/* 61 */,
/* 62 */,
/* 63 */,
/* 64 */,
/* 65 */,
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */,
/* 71 */,
/* 72 */,
/* 73 */,
/* 74 */,
/* 75 */,
/* 76 */,
/* 77 */,
/* 78 */,
/* 79 */,
/* 80 */,
/* 81 */,
/* 82 */,
/* 83 */,
/* 84 */,
/* 85 */,
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */,
/* 90 */,
/* 91 */,
/* 92 */,
/* 93 */,
/* 94 */,
/* 95 */,
/* 96 */,
/* 97 */,
/* 98 */,
/* 99 */,
/* 100 */,
/* 101 */,
/* 102 */,
/* 103 */,
/* 104 */,
/* 105 */,
/* 106 */,
/* 107 */,
/* 108 */,
/* 109 */,
/* 110 */,
/* 111 */,
/* 112 */,
/* 113 */,
/* 114 */,
/* 115 */,
/* 116 */,
/* 117 */,
/* 118 */,
/* 119 */,
/* 120 */,
/* 121 */,
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */,
/* 131 */,
/* 132 */,
/* 133 */,
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */,
/* 140 */,
/* 141 */,
/* 142 */,
/* 143 */,
/* 144 */,
/* 145 */,
/* 146 */,
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */,
/* 151 */,
/* 152 */,
/* 153 */,
/* 154 */,
/* 155 */,
/* 156 */,
/* 157 */,
/* 158 */,
/* 159 */,
/* 160 */,
/* 161 */,
/* 162 */,
/* 163 */,
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */,
/* 168 */,
/* 169 */,
/* 170 */,
/* 171 */,
/* 172 */,
/* 173 */,
/* 174 */,
/* 175 */,
/* 176 */,
/* 177 */,
/* 178 */,
/* 179 */,
/* 180 */,
/* 181 */,
/* 182 */,
/* 183 */,
/* 184 */,
/* 185 */,
/* 186 */,
/* 187 */,
/* 188 */,
/* 189 */,
/* 190 */,
/* 191 */,
/* 192 */,
/* 193 */,
/* 194 */,
/* 195 */,
/* 196 */,
/* 197 */,
/* 198 */,
/* 199 */,
/* 200 */,
/* 201 */,
/* 202 */,
/* 203 */,
/* 204 */,
/* 205 */,
/* 206 */,
/* 207 */,
/* 208 */,
/* 209 */,
/* 210 */,
/* 211 */,
/* 212 */,
/* 213 */,
/* 214 */,
/* 215 */,
/* 216 */,
/* 217 */,
/* 218 */,
/* 219 */,
/* 220 */,
/* 221 */,
/* 222 */,
/* 223 */,
/* 224 */,
/* 225 */,
/* 226 */,
/* 227 */,
/* 228 */,
/* 229 */,
/* 230 */,
/* 231 */,
/* 232 */,
/* 233 */,
/* 234 */,
/* 235 */,
/* 236 */,
/* 237 */,
/* 238 */,
/* 239 */,
/* 240 */,
/* 241 */,
/* 242 */,
/* 243 */,
/* 244 */,
/* 245 */,
/* 246 */,
/* 247 */,
/* 248 */,
/* 249 */,
/* 250 */,
/* 251 */,
/* 252 */,
/* 253 */,
/* 254 */,
/* 255 */,
/* 256 */,
/* 257 */,
/* 258 */,
/* 259 */,
/* 260 */,
/* 261 */,
/* 262 */,
/* 263 */,
/* 264 */,
/* 265 */,
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */,
/* 283 */,
/* 284 */,
/* 285 */,
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */,
/* 290 */,
/* 291 */,
/* 292 */,
/* 293 */,
/* 294 */,
/* 295 */,
/* 296 */,
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */,
/* 301 */,
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */,
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */,
/* 310 */,
/* 311 */,
/* 312 */,
/* 313 */,
/* 314 */,
/* 315 */,
/* 316 */,
/* 317 */,
/* 318 */,
/* 319 */,
/* 320 */,
/* 321 */,
/* 322 */,
/* 323 */,
/* 324 */,
/* 325 */,
/* 326 */,
/* 327 */,
/* 328 */,
/* 329 */,
/* 330 */,
/* 331 */,
/* 332 */,
/* 333 */,
/* 334 */,
/* 335 */,
/* 336 */,
/* 337 */,
/* 338 */,
/* 339 */,
/* 340 */,
/* 341 */,
/* 342 */,
/* 343 */,
/* 344 */,
/* 345 */,
/* 346 */,
/* 347 */,
/* 348 */,
/* 349 */,
/* 350 */,
/* 351 */,
/* 352 */,
/* 353 */,
/* 354 */,
/* 355 */,
/* 356 */,
/* 357 */,
/* 358 */,
/* 359 */,
/* 360 */,
/* 361 */,
/* 362 */,
/* 363 */,
/* 364 */,
/* 365 */,
/* 366 */,
/* 367 */,
/* 368 */,
/* 369 */,
/* 370 */,
/* 371 */,
/* 372 */,
/* 373 */,
/* 374 */,
/* 375 */,
/* 376 */,
/* 377 */,
/* 378 */,
/* 379 */,
/* 380 */,
/* 381 */,
/* 382 */,
/* 383 */,
/* 384 */,
/* 385 */,
/* 386 */,
/* 387 */,
/* 388 */,
/* 389 */,
/* 390 */,
/* 391 */,
/* 392 */,
/* 393 */,
/* 394 */,
/* 395 */,
/* 396 */,
/* 397 */,
/* 398 */,
/* 399 */,
/* 400 */,
/* 401 */,
/* 402 */,
/* 403 */,
/* 404 */,
/* 405 */,
/* 406 */,
/* 407 */,
/* 408 */,
/* 409 */,
/* 410 */,
/* 411 */,
/* 412 */,
/* 413 */,
/* 414 */,
/* 415 */,
/* 416 */,
/* 417 */,
/* 418 */,
/* 419 */,
/* 420 */,
/* 421 */,
/* 422 */,
/* 423 */,
/* 424 */,
/* 425 */,
/* 426 */,
/* 427 */,
/* 428 */,
/* 429 */,
/* 430 */,
/* 431 */,
/* 432 */,
/* 433 */,
/* 434 */,
/* 435 */,
/* 436 */,
/* 437 */,
/* 438 */,
/* 439 */,
/* 440 */,
/* 441 */,
/* 442 */,
/* 443 */,
/* 444 */,
/* 445 */,
/* 446 */,
/* 447 */,
/* 448 */,
/* 449 */,
/* 450 */,
/* 451 */,
/* 452 */,
/* 453 */,
/* 454 */,
/* 455 */,
/* 456 */,
/* 457 */,
/* 458 */,
/* 459 */,
/* 460 */,
/* 461 */,
/* 462 */,
/* 463 */,
/* 464 */,
/* 465 */,
/* 466 */,
/* 467 */,
/* 468 */,
/* 469 */,
/* 470 */,
/* 471 */,
/* 472 */,
/* 473 */,
/* 474 */,
/* 475 */,
/* 476 */,
/* 477 */,
/* 478 */,
/* 479 */,
/* 480 */,
/* 481 */,
/* 482 */,
/* 483 */,
/* 484 */,
/* 485 */,
/* 486 */,
/* 487 */,
/* 488 */,
/* 489 */,
/* 490 */,
/* 491 */,
/* 492 */,
/* 493 */,
/* 494 */,
/* 495 */,
/* 496 */,
/* 497 */,
/* 498 */,
/* 499 */,
/* 500 */,
/* 501 */,
/* 502 */,
/* 503 */,
/* 504 */,
/* 505 */,
/* 506 */,
/* 507 */,
/* 508 */,
/* 509 */,
/* 510 */,
/* 511 */,
/* 512 */,
/* 513 */,
/* 514 */,
/* 515 */,
/* 516 */,
/* 517 */,
/* 518 */,
/* 519 */,
/* 520 */,
/* 521 */,
/* 522 */,
/* 523 */,
/* 524 */,
/* 525 */,
/* 526 */,
/* 527 */,
/* 528 */,
/* 529 */,
/* 530 */,
/* 531 */,
/* 532 */,
/* 533 */,
/* 534 */,
/* 535 */,
/* 536 */,
/* 537 */,
/* 538 */,
/* 539 */,
/* 540 */,
/* 541 */,
/* 542 */,
/* 543 */,
/* 544 */,
/* 545 */,
/* 546 */,
/* 547 */,
/* 548 */,
/* 549 */,
/* 550 */,
/* 551 */,
/* 552 */,
/* 553 */,
/* 554 */,
/* 555 */,
/* 556 */,
/* 557 */,
/* 558 */,
/* 559 */,
/* 560 */,
/* 561 */,
/* 562 */,
/* 563 */,
/* 564 */,
/* 565 */,
/* 566 */,
/* 567 */,
/* 568 */,
/* 569 */,
/* 570 */,
/* 571 */,
/* 572 */,
/* 573 */,
/* 574 */,
/* 575 */,
/* 576 */,
/* 577 */,
/* 578 */,
/* 579 */,
/* 580 */,
/* 581 */,
/* 582 */,
/* 583 */,
/* 584 */,
/* 585 */,
/* 586 */,
/* 587 */,
/* 588 */,
/* 589 */,
/* 590 */,
/* 591 */,
/* 592 */,
/* 593 */,
/* 594 */,
/* 595 */,
/* 596 */,
/* 597 */,
/* 598 */,
/* 599 */,
/* 600 */,
/* 601 */,
/* 602 */,
/* 603 */,
/* 604 */,
/* 605 */,
/* 606 */,
/* 607 */,
/* 608 */,
/* 609 */,
/* 610 */,
/* 611 */,
/* 612 */,
/* 613 */,
/* 614 */,
/* 615 */,
/* 616 */,
/* 617 */,
/* 618 */,
/* 619 */,
/* 620 */,
/* 621 */,
/* 622 */,
/* 623 */,
/* 624 */,
/* 625 */,
/* 626 */,
/* 627 */,
/* 628 */,
/* 629 */,
/* 630 */,
/* 631 */,
/* 632 */,
/* 633 */,
/* 634 */,
/* 635 */,
/* 636 */,
/* 637 */,
/* 638 */,
/* 639 */,
/* 640 */,
/* 641 */,
/* 642 */,
/* 643 */,
/* 644 */,
/* 645 */,
/* 646 */,
/* 647 */,
/* 648 */,
/* 649 */,
/* 650 */,
/* 651 */,
/* 652 */,
/* 653 */,
/* 654 */,
/* 655 */,
/* 656 */,
/* 657 */,
/* 658 */,
/* 659 */,
/* 660 */,
/* 661 */,
/* 662 */,
/* 663 */,
/* 664 */,
/* 665 */,
/* 666 */,
/* 667 */,
/* 668 */,
/* 669 */,
/* 670 */,
/* 671 */,
/* 672 */,
/* 673 */,
/* 674 */,
/* 675 */,
/* 676 */,
/* 677 */,
/* 678 */,
/* 679 */,
/* 680 */,
/* 681 */,
/* 682 */,
/* 683 */,
/* 684 */,
/* 685 */,
/* 686 */,
/* 687 */,
/* 688 */,
/* 689 */,
/* 690 */,
/* 691 */,
/* 692 */,
/* 693 */,
/* 694 */,
/* 695 */,
/* 696 */,
/* 697 */,
/* 698 */,
/* 699 */,
/* 700 */,
/* 701 */,
/* 702 */,
/* 703 */,
/* 704 */,
/* 705 */,
/* 706 */,
/* 707 */,
/* 708 */,
/* 709 */,
/* 710 */,
/* 711 */,
/* 712 */,
/* 713 */,
/* 714 */,
/* 715 */,
/* 716 */,
/* 717 */,
/* 718 */,
/* 719 */,
/* 720 */,
/* 721 */,
/* 722 */,
/* 723 */,
/* 724 */,
/* 725 */,
/* 726 */,
/* 727 */,
/* 728 */,
/* 729 */,
/* 730 */,
/* 731 */,
/* 732 */,
/* 733 */,
/* 734 */,
/* 735 */,
/* 736 */,
/* 737 */,
/* 738 */,
/* 739 */,
/* 740 */,
/* 741 */,
/* 742 */,
/* 743 */,
/* 744 */,
/* 745 */,
/* 746 */,
/* 747 */,
/* 748 */,
/* 749 */,
/* 750 */,
/* 751 */,
/* 752 */,
/* 753 */,
/* 754 */,
/* 755 */,
/* 756 */,
/* 757 */,
/* 758 */,
/* 759 */,
/* 760 */,
/* 761 */,
/* 762 */,
/* 763 */,
/* 764 */,
/* 765 */,
/* 766 */,
/* 767 */,
/* 768 */,
/* 769 */,
/* 770 */,
/* 771 */,
/* 772 */,
/* 773 */,
/* 774 */,
/* 775 */,
/* 776 */,
/* 777 */,
/* 778 */,
/* 779 */,
/* 780 */,
/* 781 */,
/* 782 */,
/* 783 */,
/* 784 */,
/* 785 */,
/* 786 */,
/* 787 */,
/* 788 */,
/* 789 */,
/* 790 */,
/* 791 */,
/* 792 */,
/* 793 */,
/* 794 */,
/* 795 */,
/* 796 */,
/* 797 */,
/* 798 */,
/* 799 */,
/* 800 */,
/* 801 */,
/* 802 */,
/* 803 */,
/* 804 */,
/* 805 */,
/* 806 */,
/* 807 */,
/* 808 */,
/* 809 */,
/* 810 */,
/* 811 */,
/* 812 */,
/* 813 */,
/* 814 */,
/* 815 */,
/* 816 */,
/* 817 */,
/* 818 */,
/* 819 */,
/* 820 */,
/* 821 */,
/* 822 */,
/* 823 */,
/* 824 */,
/* 825 */,
/* 826 */,
/* 827 */,
/* 828 */,
/* 829 */,
/* 830 */,
/* 831 */,
/* 832 */,
/* 833 */,
/* 834 */,
/* 835 */,
/* 836 */,
/* 837 */,
/* 838 */,
/* 839 */,
/* 840 */,
/* 841 */,
/* 842 */,
/* 843 */,
/* 844 */,
/* 845 */,
/* 846 */,
/* 847 */,
/* 848 */,
/* 849 */,
/* 850 */,
/* 851 */,
/* 852 */,
/* 853 */,
/* 854 */,
/* 855 */,
/* 856 */,
/* 857 */,
/* 858 */,
/* 859 */,
/* 860 */,
/* 861 */,
/* 862 */,
/* 863 */,
/* 864 */,
/* 865 */,
/* 866 */,
/* 867 */,
/* 868 */,
/* 869 */,
/* 870 */,
/* 871 */,
/* 872 */,
/* 873 */,
/* 874 */,
/* 875 */,
/* 876 */,
/* 877 */,
/* 878 */,
/* 879 */,
/* 880 */,
/* 881 */,
/* 882 */,
/* 883 */,
/* 884 */,
/* 885 */,
/* 886 */,
/* 887 */,
/* 888 */,
/* 889 */,
/* 890 */,
/* 891 */,
/* 892 */,
/* 893 */,
/* 894 */,
/* 895 */,
/* 896 */,
/* 897 */,
/* 898 */,
/* 899 */,
/* 900 */,
/* 901 */,
/* 902 */,
/* 903 */,
/* 904 */,
/* 905 */,
/* 906 */,
/* 907 */,
/* 908 */,
/* 909 */,
/* 910 */,
/* 911 */,
/* 912 */,
/* 913 */,
/* 914 */,
/* 915 */,
/* 916 */,
/* 917 */,
/* 918 */,
/* 919 */,
/* 920 */,
/* 921 */,
/* 922 */,
/* 923 */,
/* 924 */,
/* 925 */,
/* 926 */,
/* 927 */,
/* 928 */,
/* 929 */,
/* 930 */,
/* 931 */,
/* 932 */,
/* 933 */,
/* 934 */,
/* 935 */,
/* 936 */,
/* 937 */,
/* 938 */,
/* 939 */,
/* 940 */,
/* 941 */,
/* 942 */,
/* 943 */,
/* 944 */,
/* 945 */,
/* 946 */,
/* 947 */,
/* 948 */,
/* 949 */,
/* 950 */,
/* 951 */,
/* 952 */,
/* 953 */,
/* 954 */,
/* 955 */,
/* 956 */,
/* 957 */,
/* 958 */,
/* 959 */,
/* 960 */,
/* 961 */,
/* 962 */,
/* 963 */,
/* 964 */,
/* 965 */,
/* 966 */,
/* 967 */,
/* 968 */,
/* 969 */,
/* 970 */,
/* 971 */,
/* 972 */,
/* 973 */,
/* 974 */,
/* 975 */,
/* 976 */,
/* 977 */,
/* 978 */,
/* 979 */,
/* 980 */,
/* 981 */,
/* 982 */,
/* 983 */,
/* 984 */,
/* 985 */,
/* 986 */,
/* 987 */,
/* 988 */,
/* 989 */,
/* 990 */,
/* 991 */,
/* 992 */,
/* 993 */,
/* 994 */,
/* 995 */,
/* 996 */,
/* 997 */,
/* 998 */,
/* 999 */,
/* 1000 */,
/* 1001 */,
/* 1002 */,
/* 1003 */,
/* 1004 */,
/* 1005 */,
/* 1006 */,
/* 1007 */,
/* 1008 */,
/* 1009 */,
/* 1010 */,
/* 1011 */,
/* 1012 */,
/* 1013 */,
/* 1014 */,
/* 1015 */,
/* 1016 */,
/* 1017 */,
/* 1018 */,
/* 1019 */,
/* 1020 */,
/* 1021 */,
/* 1022 */,
/* 1023 */,
/* 1024 */,
/* 1025 */,
/* 1026 */,
/* 1027 */,
/* 1028 */,
/* 1029 */,
/* 1030 */,
/* 1031 */,
/* 1032 */,
/* 1033 */,
/* 1034 */,
/* 1035 */,
/* 1036 */,
/* 1037 */,
/* 1038 */,
/* 1039 */,
/* 1040 */,
/* 1041 */,
/* 1042 */,
/* 1043 */,
/* 1044 */,
/* 1045 */,
/* 1046 */,
/* 1047 */,
/* 1048 */,
/* 1049 */,
/* 1050 */,
/* 1051 */,
/* 1052 */,
/* 1053 */,
/* 1054 */,
/* 1055 */,
/* 1056 */,
/* 1057 */,
/* 1058 */,
/* 1059 */,
/* 1060 */,
/* 1061 */,
/* 1062 */,
/* 1063 */,
/* 1064 */,
/* 1065 */,
/* 1066 */,
/* 1067 */,
/* 1068 */,
/* 1069 */,
/* 1070 */,
/* 1071 */,
/* 1072 */,
/* 1073 */,
/* 1074 */,
/* 1075 */,
/* 1076 */,
/* 1077 */,
/* 1078 */,
/* 1079 */,
/* 1080 */,
/* 1081 */,
/* 1082 */,
/* 1083 */,
/* 1084 */,
/* 1085 */,
/* 1086 */,
/* 1087 */,
/* 1088 */,
/* 1089 */,
/* 1090 */,
/* 1091 */,
/* 1092 */,
/* 1093 */,
/* 1094 */,
/* 1095 */,
/* 1096 */,
/* 1097 */,
/* 1098 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/src/highchartsHeatmapRenderer.js ***!
  \******************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var React = __webpack_require__(/*! react */ 1099);
	var ReactDOM = __webpack_require__(/*! react-dom */ 1255);
	
	//*------------------------------------------------------------------*
	
	var EventEmitter = __webpack_require__(/*! events */ 419);
	
	var HighchartsHeatmapContainer = __webpack_require__(/*! ./HighchartsHeatmapContainer.jsx */ 1256);
	    
	//*------------------------------------------------------------------*
	
	/**
	 * @param {Object}      options
	 * @param {string}          options.proxyPrefix - Proxy URL with protocol: required by CTTV
	 * @param {boolean=}        options.disableGoogleAnalytics - Disable Google Analytics: required by CTTV
	 * @param {string=}         options.atlasHost - Atlas host with port (note: don’t include port)
	 * @param {string}          options.params
	 * @param {boolean}         options.analyticsSearch
	 * @param {boolean=}        options.isMultiExperiment
	 * @param {boolean=}        options.showAnatomogram
	 * @param {boolean=}        options.isWidget
	 * @param {string | Object} options.target - a <div> id or a DOM element, as returned by ReactDOM.findDOMNode()
	 * @param {function}        options.fail - Callback to run if the AJAX request to the server fails. (jqXHR, textStatus)
	 * @param {function}        options.anatomogramDataEventEmitter
	 */
	exports.render = function(options) {
	
	    var protocol = window.location.protocol + "//",
	        atlasHost = options.atlasHost === undefined ? "www.ebi.ac.uk" : options.atlasHost,
	        atlasPath = "/gxa";
	
	    var linksAtlasBaseURL = protocol + atlasHost + atlasPath,
	        atlasBaseURL = options.proxyPrefix ? options.proxyPrefix + "/" + atlasHost + atlasPath : linksAtlasBaseURL;
	
	    var endpointPath =  options.isMultiExperiment ? "/widgets/heatmap/baselineAnalytics" : "/widgets/heatmap/referenceExperiment";
	
	    var sourceURL = atlasBaseURL + endpointPath + "?" + options.params;
	
	    var ensemblEventEmitter = new EventEmitter();
	    ensemblEventEmitter.setMaxListeners(0);
	    var anatomogramEventEmitter = new EventEmitter();
	    anatomogramEventEmitter.setMaxListeners(0);
	
	    ReactDOM.render(
	        React.createElement(
	            HighchartsHeatmapContainer,
	            {
	                sourceURL: sourceURL,
	                atlasBaseURL: atlasBaseURL,
	                linksAtlasBaseURL: linksAtlasBaseURL,
	                showAnatomogram: options.showAnatomogram === undefined ? true : options.showAnatomogram,
	                isWidget: options.isWidget === undefined ? true : options.isWidget,
	                isMultiExperiment: options.isMultiExperiment,
	                disableGoogleAnalytics: options.disableGoogleAnalytics === undefined ? false : options.disableGoogleAnalytics,
	                fail: options.fail,
	                ensemblEventEmitter: ensemblEventEmitter,
	                anatomogramEventEmitter:anatomogramEventEmitter,
	                anatomogramDataEventEmitter: options.anatomogramDataEventEmitter
	            }
	        ),
	        (typeof options.target === "string") ? document.getElementById(options.target) : options.target
	    );
	};


/***/ },
/* 1099 */
/*!**************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/react.js ***!
  \**************************************************************/
[1840, 1100],
/* 1100 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/React.js ***!
  \******************************************************************/
[1841, 1101, 1245, 1249, 1136, 1254],
/* 1101 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactDOM.js ***!
  \*********************************************************************/
[1842, 1102, 1103, 1168, 1142, 1125, 1115, 1147, 1151, 1243, 1188, 1244, 1122, 1106],
/* 1102 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactCurrentOwner.js ***!
  \******************************************************************************/
5,
/* 1103 */
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactDOMTextComponent.js ***!
  \**********************************************************************************/
[1843, 1104, 1119, 1123, 1125, 1136, 1118, 1117, 1167],
/* 1104 */
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/DOMChildrenOperations.js ***!
  \**********************************************************************************/
[1844, 1105, 1113, 1115, 1116, 1117, 1110],
/* 1105 */
/*!*******************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/Danger.js ***!
  \*******************************************************************/
[1845, 1106, 1107, 1112, 1111, 1110],
/* 1106 */
/*!****************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/ExecutionEnvironment.js ***!
  \****************************************************************************************/
9,
/* 1107 */
/*!*****************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/createNodesFromMarkup.js ***!
  \*****************************************************************************************/
[1846, 1106, 1108, 1111, 1110],
/* 1108 */
/*!****************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/createArrayFromMixed.js ***!
  \****************************************************************************************/
[1847, 1109],
/* 1109 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/toArray.js ***!
  \***************************************************************************/
[1848, 1110],
/* 1110 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/invariant.js ***!
  \*****************************************************************************/
13,
/* 1111 */
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/getMarkupWrap.js ***!
  \*********************************************************************************/
[1849, 1106, 1110],
/* 1112 */
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/emptyFunction.js ***!
  \*********************************************************************************/
15,
/* 1113 */
/*!***************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactMultiChildUpdateTypes.js ***!
  \***************************************************************************************/
[1850, 1114],
/* 1114 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/keyMirror.js ***!
  \*****************************************************************************/
[1851, 1110],
/* 1115 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactPerf.js ***!
  \**********************************************************************/
18,
/* 1116 */
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/setInnerHTML.js ***!
  \*************************************************************************/
[1852, 1106],
/* 1117 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/setTextContent.js ***!
  \***************************************************************************/
[1853, 1106, 1118, 1116],
/* 1118 */
/*!****************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/escapeTextContentForBrowser.js ***!
  \****************************************************************************************/
21,
/* 1119 */
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/DOMPropertyOperations.js ***!
  \**********************************************************************************/
[1854, 1120, 1115, 1121, 1122],
/* 1120 */
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/DOMProperty.js ***!
  \************************************************************************/
[1855, 1110],
/* 1121 */
/*!******************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/quoteAttributeValueForBrowser.js ***!
  \******************************************************************************************/
[1856, 1118],
/* 1122 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/warning.js ***!
  \***************************************************************************/
[1857, 1112],
/* 1123 */
/*!*********************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactComponentBrowserEnvironment.js ***!
  \*********************************************************************************************/
[1858, 1124, 1125],
/* 1124 */
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactDOMIDOperations.js ***!
  \*********************************************************************************/
[1859, 1104, 1119, 1125, 1115, 1110],
/* 1125 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactMount.js ***!
  \***********************************************************************/
[1860, 1120, 1126, 1102, 1138, 1139, 1141, 1142, 1144, 1145, 1115, 1147, 1150, 1151, 1136, 1155, 1156, 1159, 1110, 1116, 1164, 1167, 1122],
/* 1126 */
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactBrowserEventEmitter.js ***!
  \*************************************************************************************/
[1861, 1127, 1128, 1129, 1134, 1115, 1135, 1136, 1137],
/* 1127 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/EventConstants.js ***!
  \***************************************************************************/
[1862, 1114],
/* 1128 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/EventPluginHub.js ***!
  \***************************************************************************/
[1863, 1129, 1130, 1131, 1132, 1133, 1110, 1122],
/* 1129 */
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/EventPluginRegistry.js ***!
  \********************************************************************************/
[1864, 1110],
/* 1130 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/EventPluginUtils.js ***!
  \*****************************************************************************/
[1865, 1127, 1131, 1110, 1122],
/* 1131 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactErrorUtils.js ***!
  \****************************************************************************/
34,
/* 1132 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/accumulateInto.js ***!
  \***************************************************************************/
[1866, 1110],
/* 1133 */
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/forEachAccumulated.js ***!
  \*******************************************************************************/
36,
/* 1134 */
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactEventEmitterMixin.js ***!
  \***********************************************************************************/
[1867, 1128],
/* 1135 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ViewportMetrics.js ***!
  \****************************************************************************/
38,
/* 1136 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/Object.assign.js ***!
  \**************************************************************************/
39,
/* 1137 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/isEventSupported.js ***!
  \*****************************************************************************/
[1868, 1106],
/* 1138 */
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactDOMFeatureFlags.js ***!
  \*********************************************************************************/
41,
/* 1139 */
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactElement.js ***!
  \*************************************************************************/
[1869, 1102, 1136, 1140],
/* 1140 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/canDefineProperty.js ***!
  \******************************************************************************/
43,
/* 1141 */
/*!****************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactEmptyComponentRegistry.js ***!
  \****************************************************************************************/
44,
/* 1142 */
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactInstanceHandles.js ***!
  \*********************************************************************************/
[1870, 1143, 1110],
/* 1143 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactRootIndex.js ***!
  \***************************************************************************/
46,
/* 1144 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactInstanceMap.js ***!
  \*****************************************************************************/
47,
/* 1145 */
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactMarkupChecksum.js ***!
  \********************************************************************************/
[1871, 1146],
/* 1146 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/adler32.js ***!
  \********************************************************************/
49,
/* 1147 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactReconciler.js ***!
  \****************************************************************************/
[1872, 1148],
/* 1148 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactRef.js ***!
  \*********************************************************************/
[1873, 1149],
/* 1149 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactOwner.js ***!
  \***********************************************************************/
[1874, 1110],
/* 1150 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactUpdateQueue.js ***!
  \*****************************************************************************/
[1875, 1102, 1139, 1144, 1151, 1136, 1110, 1122],
/* 1151 */
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactUpdates.js ***!
  \*************************************************************************/
[1876, 1152, 1153, 1115, 1147, 1154, 1136, 1110],
/* 1152 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/CallbackQueue.js ***!
  \**************************************************************************/
[1877, 1153, 1136, 1110],
/* 1153 */
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/PooledClass.js ***!
  \************************************************************************/
[1878, 1110],
/* 1154 */
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/Transaction.js ***!
  \************************************************************************/
[1879, 1110],
/* 1155 */
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/emptyObject.js ***!
  \*******************************************************************************/
58,
/* 1156 */
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/containsNode.js ***!
  \********************************************************************************/
[1880, 1157],
/* 1157 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/isTextNode.js ***!
  \******************************************************************************/
[1881, 1158],
/* 1158 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/isNode.js ***!
  \**************************************************************************/
61,
/* 1159 */
/*!**************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/instantiateReactComponent.js ***!
  \**************************************************************************************/
[1882, 1160, 1165, 1166, 1136, 1110, 1122],
/* 1160 */
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactCompositeComponent.js ***!
  \************************************************************************************/
[1883, 1161, 1102, 1139, 1144, 1115, 1162, 1163, 1147, 1150, 1136, 1155, 1110, 1164, 1122],
/* 1161 */
/*!**************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactComponentEnvironment.js ***!
  \**************************************************************************************/
[1884, 1110],
/* 1162 */
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactPropTypeLocations.js ***!
  \***********************************************************************************/
[1885, 1114],
/* 1163 */
/*!***************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactPropTypeLocationNames.js ***!
  \***************************************************************************************/
66,
/* 1164 */
/*!***************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/shouldUpdateReactComponent.js ***!
  \***************************************************************************************/
67,
/* 1165 */
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactEmptyComponent.js ***!
  \********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 1139);
	var ReactEmptyComponentRegistry = __webpack_require__(/*! ./ReactEmptyComponentRegistry */ 1141);
	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 1147);
	
	var assign = __webpack_require__(/*! ./Object.assign */ 1136);
	
	var placeholderElement;
	
	var ReactEmptyComponentInjection = {
	  injectEmptyComponent: function (component) {
	    placeholderElement = ReactElement.createElement(component);
	  }
	};
	
	function registerNullComponentID() {
	  ReactEmptyComponentRegistry.registerNullComponentID(this._rootNodeID);
	}
	
	var ReactEmptyComponent = function (instantiate) {
	  this._currentElement = null;
	  this._rootNodeID = null;
	  this._renderedComponent = instantiate(placeholderElement);
	};
	assign(ReactEmptyComponent.prototype, {
	  construct: function (element) {},
	  mountComponent: function (rootID, transaction, context) {
	    transaction.getReactMountReady().enqueue(registerNullComponentID, this);
	    this._rootNodeID = rootID;
	    return ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, context);
	  },
	  receiveComponent: function () {},
	  unmountComponent: function (rootID, transaction, context) {
	    ReactReconciler.unmountComponent(this._renderedComponent);
	    ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);
	    this._rootNodeID = null;
	    this._renderedComponent = null;
	  }
	});
	
	ReactEmptyComponent.injection = ReactEmptyComponentInjection;
	
	module.exports = ReactEmptyComponent;

/***/ },
/* 1166 */
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactNativeComponent.js ***!
  \*********************************************************************************/
[1886, 1136, 1110],
/* 1167 */
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/validateDOMNesting.js ***!
  \*******************************************************************************/
[1887, 1136, 1112, 1122],
/* 1168 */
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactDefaultInjection.js ***!
  \**********************************************************************************/
[1888, 1169, 1177, 1180, 1181, 1182, 1106, 1186, 1187, 1123, 1189, 1190, 1103, 1215, 1218, 1142, 1125, 1222, 1227, 1228, 1229, 1238, 1239],
/* 1169 */
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/BeforeInputEventPlugin.js ***!
  \***********************************************************************************/
[1889, 1127, 1170, 1106, 1171, 1173, 1175, 1176],
/* 1170 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/EventPropagators.js ***!
  \*****************************************************************************/
[1890, 1127, 1128, 1122, 1132, 1133],
/* 1171 */
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/FallbackCompositionState.js ***!
  \*************************************************************************************/
[1891, 1153, 1136, 1172],
/* 1172 */
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/getTextContentAccessor.js ***!
  \***********************************************************************************/
[1892, 1106],
/* 1173 */
/*!**************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/SyntheticCompositionEvent.js ***!
  \**************************************************************************************/
[1893, 1174],
/* 1174 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/SyntheticEvent.js ***!
  \***************************************************************************/
[1894, 1153, 1136, 1112, 1122],
/* 1175 */
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/SyntheticInputEvent.js ***!
  \********************************************************************************/
[1895, 1174],
/* 1176 */
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/keyOf.js ***!
  \*************************************************************************/
79,
/* 1177 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ChangeEventPlugin.js ***!
  \******************************************************************************/
[1896, 1127, 1128, 1170, 1106, 1151, 1174, 1178, 1137, 1179, 1176],
/* 1178 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/getEventTarget.js ***!
  \***************************************************************************/
81,
/* 1179 */
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/isTextInputElement.js ***!
  \*******************************************************************************/
82,
/* 1180 */
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ClientReactRootIndex.js ***!
  \*********************************************************************************/
83,
/* 1181 */
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/DefaultEventPluginOrder.js ***!
  \************************************************************************************/
[1897, 1176],
/* 1182 */
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/EnterLeaveEventPlugin.js ***!
  \**********************************************************************************/
[1898, 1127, 1170, 1183, 1125, 1176],
/* 1183 */
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/SyntheticMouseEvent.js ***!
  \********************************************************************************/
[1899, 1184, 1135, 1185],
/* 1184 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/SyntheticUIEvent.js ***!
  \*****************************************************************************/
[1900, 1174, 1178],
/* 1185 */
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/getEventModifierState.js ***!
  \**********************************************************************************/
88,
/* 1186 */
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/HTMLDOMPropertyConfig.js ***!
  \**********************************************************************************/
[1901, 1120, 1106],
/* 1187 */
/*!***************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactBrowserComponentMixin.js ***!
  \***************************************************************************************/
[1902, 1144, 1188, 1122],
/* 1188 */
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/findDOMNode.js ***!
  \************************************************************************/
[1903, 1102, 1144, 1125, 1110, 1122],
/* 1189 */
/*!*****************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactDefaultBatchingStrategy.js ***!
  \*****************************************************************************************/
[1904, 1151, 1154, 1136, 1112],
/* 1190 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactDOMComponent.js ***!
  \******************************************************************************/
[1905, 1191, 1193, 1120, 1119, 1127, 1126, 1123, 1201, 1202, 1206, 1209, 1210, 1125, 1211, 1115, 1150, 1136, 1140, 1118, 1110, 1137, 1176, 1116, 1117, 1214, 1167, 1122],
/* 1191 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/AutoFocusUtils.js ***!
  \***************************************************************************/
[1906, 1125, 1188, 1192],
/* 1192 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/focusNode.js ***!
  \*****************************************************************************/
95,
/* 1193 */
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/CSSPropertyOperations.js ***!
  \**********************************************************************************/
[1907, 1194, 1106, 1115, 1195, 1197, 1198, 1200, 1122],
/* 1194 */
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/CSSProperty.js ***!
  \************************************************************************/
97,
/* 1195 */
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/camelizeStyleName.js ***!
  \*************************************************************************************/
[1908, 1196],
/* 1196 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/camelize.js ***!
  \****************************************************************************/
99,
/* 1197 */
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/dangerousStyleValue.js ***!
  \********************************************************************************/
[1909, 1194],
/* 1198 */
/*!**************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/hyphenateStyleName.js ***!
  \**************************************************************************************/
[1910, 1199],
/* 1199 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/hyphenate.js ***!
  \*****************************************************************************/
102,
/* 1200 */
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/memoizeStringOnly.js ***!
  \*************************************************************************************/
103,
/* 1201 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactDOMButton.js ***!
  \***************************************************************************/
104,
/* 1202 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactDOMInput.js ***!
  \**************************************************************************/
[1911, 1124, 1203, 1125, 1151, 1136, 1110],
/* 1203 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/LinkedValueUtils.js ***!
  \*****************************************************************************/
[1912, 1204, 1162, 1110, 1122],
/* 1204 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactPropTypes.js ***!
  \***************************************************************************/
[1913, 1139, 1163, 1112, 1205],
/* 1205 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/getIteratorFn.js ***!
  \**************************************************************************/
108,
/* 1206 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactDOMOption.js ***!
  \***************************************************************************/
[1914, 1207, 1209, 1136, 1122],
/* 1207 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactChildren.js ***!
  \**************************************************************************/
[1915, 1153, 1139, 1112, 1208],
/* 1208 */
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/traverseAllChildren.js ***!
  \********************************************************************************/
[1916, 1102, 1139, 1142, 1205, 1110, 1122],
/* 1209 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactDOMSelect.js ***!
  \***************************************************************************/
[1917, 1203, 1125, 1151, 1136, 1122],
/* 1210 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactDOMTextarea.js ***!
  \*****************************************************************************/
[1918, 1203, 1124, 1151, 1136, 1110, 1122],
/* 1211 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactMultiChild.js ***!
  \****************************************************************************/
[1919, 1161, 1113, 1102, 1147, 1212, 1213],
/* 1212 */
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactChildReconciler.js ***!
  \*********************************************************************************/
[1920, 1147, 1159, 1164, 1208, 1122],
/* 1213 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/flattenChildren.js ***!
  \****************************************************************************/
[1921, 1208, 1122],
/* 1214 */
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/shallowEqual.js ***!
  \********************************************************************************/
117,
/* 1215 */
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactEventListener.js ***!
  \*******************************************************************************/
[1922, 1216, 1106, 1153, 1142, 1125, 1151, 1136, 1178, 1217],
/* 1216 */
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/EventListener.js ***!
  \*********************************************************************************/
[1923, 1112],
/* 1217 */
/*!**********************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/getUnboundedScrollPosition.js ***!
  \**********************************************************************************************/
120,
/* 1218 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactInjection.js ***!
  \***************************************************************************/
[1924, 1120, 1128, 1161, 1219, 1165, 1126, 1166, 1115, 1143, 1151],
/* 1219 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactClass.js ***!
  \***********************************************************************/
[1925, 1220, 1139, 1162, 1163, 1221, 1136, 1155, 1110, 1114, 1176, 1122],
/* 1220 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactComponent.js ***!
  \***************************************************************************/
[1926, 1221, 1140, 1155, 1110, 1122],
/* 1221 */
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactNoopUpdateQueue.js ***!
  \*********************************************************************************/
[1927, 1122],
/* 1222 */
/*!**************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactReconcileTransaction.js ***!
  \**************************************************************************************/
[1928, 1152, 1153, 1126, 1138, 1223, 1154, 1136],
/* 1223 */
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactInputSelection.js ***!
  \********************************************************************************/
[1929, 1224, 1156, 1192, 1226],
/* 1224 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactDOMSelection.js ***!
  \******************************************************************************/
[1930, 1106, 1225, 1172],
/* 1225 */
/*!**************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/getNodeForCharacterOffset.js ***!
  \**************************************************************************************/
128,
/* 1226 */
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/getActiveElement.js ***!
  \************************************************************************************/
129,
/* 1227 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/SelectEventPlugin.js ***!
  \******************************************************************************/
[1931, 1127, 1170, 1106, 1223, 1174, 1226, 1179, 1176, 1214],
/* 1228 */
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ServerReactRootIndex.js ***!
  \*********************************************************************************/
131,
/* 1229 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/SimpleEventPlugin.js ***!
  \******************************************************************************/
[1932, 1127, 1216, 1170, 1125, 1230, 1174, 1231, 1232, 1183, 1235, 1236, 1184, 1237, 1112, 1233, 1110, 1176],
/* 1230 */
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/SyntheticClipboardEvent.js ***!
  \************************************************************************************/
[1933, 1174],
/* 1231 */
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/SyntheticFocusEvent.js ***!
  \********************************************************************************/
[1934, 1184],
/* 1232 */
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/SyntheticKeyboardEvent.js ***!
  \***********************************************************************************/
[1935, 1184, 1233, 1234, 1185],
/* 1233 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/getEventCharCode.js ***!
  \*****************************************************************************/
136,
/* 1234 */
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/getEventKey.js ***!
  \************************************************************************/
[1936, 1233],
/* 1235 */
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/SyntheticDragEvent.js ***!
  \*******************************************************************************/
[1937, 1183],
/* 1236 */
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/SyntheticTouchEvent.js ***!
  \********************************************************************************/
[1938, 1184, 1185],
/* 1237 */
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/SyntheticWheelEvent.js ***!
  \********************************************************************************/
[1939, 1183],
/* 1238 */
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/SVGDOMPropertyConfig.js ***!
  \*********************************************************************************/
[1940, 1120],
/* 1239 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactDefaultPerf.js ***!
  \*****************************************************************************/
[1941, 1120, 1240, 1125, 1115, 1241],
/* 1240 */
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactDefaultPerfAnalysis.js ***!
  \*************************************************************************************/
[1942, 1136],
/* 1241 */
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/performanceNow.js ***!
  \**********************************************************************************/
[1943, 1242],
/* 1242 */
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/performance.js ***!
  \*******************************************************************************/
[1944, 1106],
/* 1243 */
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactVersion.js ***!
  \*************************************************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */
	
	'use strict';
	
	module.exports = '0.14.8';

/***/ },
/* 1244 */
/*!***************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/renderSubtreeIntoContainer.js ***!
  \***************************************************************************************/
[1945, 1125],
/* 1245 */
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactDOMServer.js ***!
  \***************************************************************************/
[1946, 1168, 1246, 1243],
/* 1246 */
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactServerRendering.js ***!
  \*********************************************************************************/
[1947, 1189, 1139, 1142, 1145, 1247, 1248, 1151, 1155, 1159, 1110],
/* 1247 */
/*!****************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactServerBatchingStrategy.js ***!
  \****************************************************************************************/
150,
/* 1248 */
/*!********************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactServerRenderingTransaction.js ***!
  \********************************************************************************************/
[1948, 1153, 1152, 1154, 1136, 1112],
/* 1249 */
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactIsomorphic.js ***!
  \****************************************************************************/
[1949, 1207, 1220, 1219, 1250, 1139, 1251, 1204, 1243, 1136, 1253],
/* 1250 */
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactDOMFactories.js ***!
  \******************************************************************************/
[1950, 1139, 1251, 1252],
/* 1251 */
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/ReactElementValidator.js ***!
  \**********************************************************************************/
[1951, 1139, 1162, 1163, 1102, 1140, 1205, 1110, 1122],
/* 1252 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/~/fbjs/lib/mapObject.js ***!
  \*****************************************************************************/
155,
/* 1253 */
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/onlyChild.js ***!
  \**********************************************************************/
[1952, 1139, 1110],
/* 1254 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react/lib/deprecated.js ***!
  \***********************************************************************/
[1953, 1136, 1122],
/* 1255 */
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react-dom/index.js ***!
  \******************************************************************/
[1954, 1101],
/* 1256 */
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/src/HighchartsHeatmapContainer.jsx ***!
  \********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 1099);
	
	var Snap = __webpack_require__(/*! imports-loader?this=>window,fix=>module.exports=0!snapsvg/dist/snap.svg.js */ 420);
	
	var $ = __webpack_require__(/*! jquery */ 1257);
	__webpack_require__(/*! jQuery-ajaxTransport-XDomainRequest */ 1258);
	
	//*------------------------------------------------------------------*
	
	var HighchartsHeatmap = __webpack_require__(/*! ./HighchartsHeatmap.jsx */ 1259);
	var HighchartsUtils = __webpack_require__(/*! ./highchartsUtils.js */ 1399);
	__webpack_require__(/*! ./HighchartsHeatmapContainer.css */ 1400);
	
	var Anatomogram = __webpack_require__(/*! anatomogram */ 1402);
	
	//*------------------------------------------------------------------*
	
	var ExperimentDescription = React.createClass({
	    displayName: 'ExperimentDescription',
	
	    propTypes: {
	        linksAtlasBaseURL: React.PropTypes.string.isRequired,
	        experiment: React.PropTypes.shape({
	            URL: React.PropTypes.string.isRequired,
	            description: React.PropTypes.string.isRequired,
	            allSpecies: React.PropTypes.string.isRequired
	        }).isRequired
	    },
	
	    render: function () {
	
	        var experimentURL = this.props.linksAtlasBaseURL + this.props.experiment.URL;
	
	        return React.createElement(
	            'div',
	            { style: { width: "100%", paddingBottom: "20px" } },
	            React.createElement(
	                'div',
	                { id: 'experimentDescription' },
	                React.createElement(
	                    'a',
	                    { id: 'goto-experiment', className: 'gxaThickLink', title: 'Experiment Page', href: experimentURL },
	                    this.props.experiment.description
	                )
	            ),
	            React.createElement(
	                'div',
	                { id: 'experimentOrganisms' },
	                'Organism(s): ',
	                React.createElement(
	                    'span',
	                    { style: { "fontStyle": "italic" } },
	                    this.props.experiment.allSpecies
	                )
	            )
	        );
	    }
	
	});
	
	var HighchartsHeatmapContainer = React.createClass({
	    displayName: 'HighchartsHeatmapContainer',
	
	    propTypes: {
	        sourceURL: React.PropTypes.string.isRequired,
	        atlasBaseURL: React.PropTypes.string.isRequired,
	        linksAtlasBaseURL: React.PropTypes.string.isRequired,
	        showAnatomogram: React.PropTypes.bool.isRequired,
	        isWidget: React.PropTypes.bool.isRequired,
	        isMultiExperiment: React.PropTypes.bool.isRequired,
	        disableGoogleAnalytics: React.PropTypes.bool.isRequired,
	        fail: React.PropTypes.func,
	        googleAnalyticsCallback: React.PropTypes.func,
	        ensemblEventEmitter: React.PropTypes.object.isRequired,
	        anatomogramEventEmitter: React.PropTypes.object.isRequired,
	        anatomogramDataEventEmitter: React.PropTypes.object.isRequired
	    },
	
	    render: function () {
	
	        var geneURL = this.props.linksAtlasBaseURL + "/query" + "?geneQuery=" + this.state.heatmapConfig.geneQuery + "&exactMatch=" + this.state.heatmapConfig.isExactMatch + "&organism=" + this.state.heatmapConfig.species;
	
	        var display;
	        var marginLeft;
	
	        if (this.state.anatomogramData) {
	            display = this.props.showAnatomogram ? "block" : "none";
	            marginLeft = this.props.showAnatomogram ? "270px" : "0";
	        } else {
	            display = "none";
	            marginLeft = "0";
	        }
	
	        return React.createElement(
	            'div',
	            { ref: 'this' },
	            this.state.experimentData ? React.createElement(ExperimentDescription, { experiment: this.state.experimentData, linksAtlasBaseURL: this.props.linksAtlasBaseURL }) : null,
	            this.state.heatmapConfig ? React.createElement(
	                'div',
	                { id: 'heatmap-anatomogram', className: 'gxaHeatmapAnatomogramRow' },
	                React.createElement(
	                    'div',
	                    { ref: 'anatomogramEnsembl', className: 'gxaAside', style: { display: display } },
	                    this.props.showAnatomogram && this.state.anatomogramData && Object.keys(this.state.anatomogramData).length ? React.createElement(Anatomogram, { anatomogramData: this.state.anatomogramData,
	                        expressedTissueColour: "gray", hoveredTissueColour: "red",
	                        profileRows: this.state.profiles.rows, eventEmitter: this.props.anatomogramEventEmitter, atlasBaseURL: this.props.atlasBaseURL }) : null
	                ),
	                React.createElement(
	                    'div',
	                    { id: 'heatmap-react', className: 'gxaInnerHeatmap', style: { marginLeft: marginLeft, display: "block" } },
	                    React.createElement(HighchartsHeatmap, {
	                        profiles: this.state.profiles,
	                        heatmapConfig: this.state.heatmapConfig,
	                        anatomogramEventEmitter: this.props.anatomogramEventEmitter,
	                        ensemblEventEmitter: this.props.ensemblEventEmitter,
	                        atlasBaseURL: this.props.atlasBaseURL,
	                        googleAnalyticsCallback: this.state.googleAnalyticsCallback,
	                        xAxisCategories: this.state.xAxisCategories,
	                        yAxisCategories: this.state.yAxisCategories,
	                        yAxisCategoriesLinks: this.state.yAxisCategoriesLinks,
	                        seriesDataNA: this.state.seriesDataNA,
	                        seriesDataNAString: this.state.seriesDataNAString,
	                        seriesDataBelowCutoff: this.state.seriesDataBelowCutoff,
	                        seriesDataBelowCutoffString: this.state.seriesDataBelowCutoffString,
	                        seriesDataRanges: this.state.seriesDataRanges
	                    })
	                )
	            ) : React.createElement(
	                'div',
	                { ref: 'loadingImagePlaceholder' },
	                React.createElement('img', { src: this.props.atlasBaseURL + "/resources/images/loading.gif" })
	            ),
	            this.props.isWidget ? React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    'p',
	                    null,
	                    React.createElement(
	                        'a',
	                        { href: geneURL },
	                        'See more expression data at Expression Atlas.'
	                    ),
	                    React.createElement('br', null),
	                    'This expression view is provided by ',
	                    React.createElement(
	                        'a',
	                        { href: this.props.linksAtlasBaseURL },
	                        'Expression Atlas'
	                    ),
	                    '.',
	                    React.createElement('br', null),
	                    'Please direct any queries or feedback to ',
	                    React.createElement(
	                        'a',
	                        { href: 'mailto:arrayexpress-atlas@ebi.ac.uk' },
	                        'arrayexpress-atlas@ebi.ac.uk'
	                    )
	                )
	            ) : null
	        );
	    },
	
	    componentDidUpdate: function () {
	        /*
	        I am a hack and I attach event listeners to the labels.
	        There seems to be no way to do it in the HighchartsHeatmap component -
	        the labels that are selected when HighchartsHeatmap.componentDidUpdate is called are redrawn when both components appear on the screen
	        */
	        Snap.selectAll('.highcharts-yaxis-labels > *').forEach(function (v) {
	            //careful - if the label doesn't fit, the element will have two children: displayed and full title
	            //here we assume the longest text is the correct title of the experiment
	            var title = v.selectAll('*').items.map(function (c) {
	                return c.node.textContent;
	            }).reduce(function (l, r) {
	                return l.length > r.length ? l : r;
	            }, "");
	            if (title) {
	                v.hover(function onMouseEnterSendTitle() {
	                    this.props.anatomogramEventEmitter.emit('gxaHeatmapRowHoverChange', title);
	                }, function onMouseLeaveSendNull() {
	                    this.props.anatomogramEventEmitter.emit('gxaHeatmapRowHoverChange', null);
	                }, this, this);
	            }
	        }, this);
	
	        if (this.state.anatomogramData) {
	            this.props.anatomogramDataEventEmitter.emit('existAnatomogramData', true);
	        } else {
	            this.props.anatomogramDataEventEmitter.emit('existAnatomogramData', false);
	        }
	    },
	
	    getInitialState: function () {
	        return {
	            heatmapConfig: '',
	            profiles: {
	                rows: [],
	                minExpressionLevel: 0,
	                maxExpressionLevel: 0
	            },
	            jsonCoexpressions: [],
	            geneSetProfiles: {},
	            anatomogramData: {},
	            googleAnalyticsCallback: function () {},
	
	            xAxisCategories: {},
	            yAxisCategories: {},
	            yAxisCategoriesLinks: {},
	
	            seriesDataNA: [],
	            seriesDataNAString: "NA",
	            seriesDataBelowCutoff: [],
	            seriesDataBelowCutoffString: "Below cutoff",
	
	            seriesDataRanges: []
	        };
	    },
	
	    componentDidMount: function () {
	        var httpRequest = {
	            url: this.props.sourceURL,
	            dataType: "json",
	            method: "GET"
	        };
	
	        $.ajax(httpRequest).done(function (data) {
	            if (this.isMounted()) {
	
	                // var orderedData = HighchartsUtils.rankColumns(data.profiles, data.columnHeaders);
	                // var filteredDataByThreshold = HighchartsUtils.applyThresholdToColumns(orderedData.profiles, orderedData.columnHeaders, 40);
	                // var rankedExperiments = HighchartsUtils.rankExperiments(filteredDataByThreshold.rows, filteredDataByThreshold.columnHeaders.length);
	                // if (this.props.isMultiExperiment) {
	                //     data.profiles.rows = HighchartsUtils.applyThresholdToRows(rankedExperiments, filteredDataByThreshold.columnHeaders, 40);
	                // } else { //We don't apply threshold for reference experiments
	                //     data.profiles.rows = rankedExperiments;
	                // }
	
	                // var xAxisCategories = HighchartsUtils.getXAxisCategories(filteredDataByThreshold.columnHeaders);
	                var xAxisCategories = HighchartsUtils.getXAxisCategories(data.columnHeaders);
	                var yAxisCategories = HighchartsUtils.getYAxisCategories(data.profiles, data.config);
	                var yAxisCategoriesLinks = HighchartsUtils.getYAxisCategoriesLinks();
	
	                var seriesDataNA = [],
	                    seriesDataNAString = "NA";
	
	                var seriesDataBelowCutoff = [],
	                    seriesDataBelowCutoffString = "Below cutoff";
	
	                var seriesDataRanges = [{
	                    label: "Low",
	                    from: 0,
	                    to: 10,
	                    seriesData: []
	                }, {
	                    label: "Medium",
	                    from: 10,
	                    to: 1000,
	                    seriesData: []
	                }, {
	                    label: "High",
	                    from: 1000,
	                    to: 100000,
	                    seriesData: []
	                }];
	
	                var experimentTypes = [];
	
	                for (var i = 0; i < data.profiles.rows.length; i++) {
	                    if (experimentTypes.indexOf(data.profiles.rows[i].experimentType) === -1) {
	                        experimentTypes.push(data.profiles.rows[i].experimentType);
	                    }
	                }
	
	                for (var i = 0; i < experimentTypes.length; i++) {
	                    var experimentTypeSeriesData = [];
	
	                    for (var j = 0; j < yAxisCategories.length; j++) {
	                        if (data.profiles.rows[j].experimentType !== experimentTypes[i]) {
	                            continue;
	                        }
	
	                        for (var k = 0; k < xAxisCategories.length; k++) {
	                            var expression = data.profiles.rows[j].expressions[k];
	                            //we switched from strings to doubles in April 2016, after a release you can assume we serve doubles that are optionally absent to mean "NT"
	                            if (!expression.hasOwnProperty("value") || expression.value === "NT") {
	                                seriesDataNA.push([k, j, seriesDataNAString]);
	                            } else if (!expression.value) {
	                                seriesDataBelowCutoff.push([k, j, seriesDataBelowCutoffString]);
	                            } else {
	                                experimentTypeSeriesData.push([k, j, +expression.value]);
	                            }
	                        }
	                    }
	
	                    experimentTypeSeriesData.sort(function (a, b) {
	                        return a[2] - b[2];
	                    });
	
	                    var experimentTypeMax = experimentTypeSeriesData[experimentTypeSeriesData.length - 1][2];
	
	                    for (var k = 0; k < seriesDataRanges.length; k++) {
	                        //seriesDataRanges[k].seriesData.concat(
	                        experimentTypeSeriesData.filter(function (datum) {
	                            return datum[2] > seriesDataRanges[k].from * experimentTypeMax && datum[2] <= seriesDataRanges[k].to * experimentTypeMax;
	                        }).forEach(function (filteredDatum) {
	                            seriesDataRanges[k].seriesData.push(filteredDatum);
	                        });
	                    }
	                }
	
	                this.setState({
	                    heatmapConfig: data.config,
	                    columnHeaders: data.columnHeaders,
	                    nonExpressedColumnHeaders: data.nonExpressedColumnHeaders,
	                    profiles: data.profiles,
	                    jsonCoexpressions: data.jsonCoexpressions,
	                    geneSetProfiles: data.geneSetProfiles,
	                    anatomogramData: data.anatomogram,
	                    experimentData: data.experiment,
	
	                    xAxisCategories: xAxisCategories,
	                    yAxisCategories: yAxisCategories,
	                    yAxisCategoriesLinks: yAxisCategoriesLinks,
	
	                    seriesDataBelowCutoff: seriesDataBelowCutoff,
	                    seriesDataBelowCutoffString: seriesDataBelowCutoffString,
	                    seriesDataNA: seriesDataNA,
	                    seriesDataNAString: seriesDataNAString,
	                    seriesDataRanges: seriesDataRanges
	
	                });
	
	                if (this.state.anatomogramData) {
	                    this.props.anatomogramDataEventEmitter.emit('existAnatomogramData', true);
	                } else {
	                    this.props.anatomogramDataEventEmitter.emit('existAnatomogramData', false);
	                }
	            }
	        }.bind(this)).fail(function (jqXHR, textStatus, errorThrown) {
	            if (this.props.fail) {
	                this.props.fail(jqXHR, textStatus, errorThrown);
	            } else if (textStatus === "parsererror") {
	                $(this.refs.this.getDOMNode()).html("<div class='gxaError'>Could not parse JSON response</div>");
	            } else {
	                $(this.refs.this.getDOMNode()).html(jqXHR.responseText);
	            }
	        }.bind(this));
	
	        if (!this.props.disableGoogleAnalytics) {
	            (function (i, s, o, g, r, a, m) {
	                i['GoogleAnalyticsObject'] = r;i[r] = i[r] || function () {
	                    (i[r].q = i[r].q || []).push(arguments);
	                }, i[r].l = 1 * new Date();a = s.createElement(o), m = s.getElementsByTagName(o)[0];a.async = 1;a.src = g;m.parentNode.insertBefore(a, m);
	            })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');
	
	            ga('create', 'UA-37676851-1', 'auto');
	            ga('send', 'pageview');
	            this.setState({ googleAnalyticsCallback: ga });
	        }
	    }
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = HighchartsHeatmapContainer;

/***/ },
/* 1257 */
/*!*********************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/jquery/dist/jquery.js ***!
  \*********************************************************************/
404,
/* 1258 */
/*!****************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/jQuery-ajaxTransport-XDomainRequest/jquery.xdomainrequest.min.js ***!
  \****************************************************************************************************************/
[2038, 1257],
/* 1259 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/src/HighchartsHeatmap.jsx ***!
  \***********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 1099);
	
	var ReactHighcharts = __webpack_require__(/*! react-highcharts */ 1260);
	var Highcharts = ReactHighcharts.Highcharts;
	__webpack_require__(/*! highcharts-heatmap */ 1262)(Highcharts);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./HighchartsHeatmap.css */ 1263);
	var DownloadProfilesButton = __webpack_require__(/*! download-profiles-button */ 1267);
	
	var EventEmitter = __webpack_require__(/*! events */ 419);
	
	//*------------------------------------------------------------------*
	
	var HighchartsHeatmap = React.createClass({
	    displayName: 'HighchartsHeatmap',
	
	
	    propTypes: {
	        profiles: React.PropTypes.object.isRequired,
	        atlasBaseURL: React.PropTypes.string.isRequired,
	        anatomogramEventEmitter: React.PropTypes.instanceOf(EventEmitter).isRequired,
	        ensemblEventEmitter: React.PropTypes.instanceOf(EventEmitter),
	        googleAnalyticsCallback: React.PropTypes.func.isRequired
	    },
	
	    getInitialState: function () {
	        return {
	            xAxisCategories: {},
	            yAxisCategories: {},
	            yAxisCategoriesLinks: {},
	            seriesDataNA: [],
	            seriesDataNAString: "NA",
	            seriesDataBelowCutoff: [],
	            seriesDataBelowCutoffString: "Below cutoff",
	            seriesDataRanges: [{
	                label: "Low",
	                from: 0,
	                to: 10,
	                seriesData: []
	            }, {
	                label: "Medium",
	                from: 10,
	                to: 1000,
	                seriesData: []
	            }, {
	                label: "High",
	                from: 1000,
	                to: 100000,
	                seriesData: []
	            }],
	
	            legend_1: false,
	            legend_2: false,
	            legend_3: false,
	            legend_4: false
	
	        };
	    },
	
	    handleClick: function (index) {
	        if (index == 1) {
	            this.setState({ legend_1: !this.state.legend_1 });
	        } else if (index == 2) {
	            this.setState({ legend_2: !this.state.legend_2 });
	        } else if (index == 3) {
	            this.setState({ legend_3: !this.state.legend_3 });
	        } else if (index == 4) {
	            this.setState({ legend_4: !this.state.legend_4 });
	        }
	    },
	
	    _anatomogramTissueMouseEnter: function (svgPathId) {
	        Highcharts.fireEvent(this.refs.chart.getChart(), 'handleGxaAnatomogramTissueMouseEnter', { svgPathId: svgPathId });
	    },
	
	    _anatomogramTissueMouseLeave: function (svgPathId) {
	        Highcharts.fireEvent(this.refs.chart.getChart(), 'handleGxaAnatomogramTissueMouseLeave', { svgPathId: svgPathId });
	    },
	
	    _registerListenerIfNecessary(name, fn) {
	        if (this.props.anatomogramEventEmitter && this.props.anatomogramEventEmitter._events && !this.props.anatomogramEventEmitter._events.hasOwnProperty(name)) {
	            this.props.anatomogramEventEmitter.addListener(name, fn);
	        }
	    },
	
	    componentDidMount: function () {
	        this._registerListenerIfNecessary('gxaAnatomogramTissueMouseEnter', this._anatomogramTissueMouseEnter);
	        this._registerListenerIfNecessary('gxaAnatomogramTissueMouseLeave', this._anatomogramTissueMouseLeave);
	        var heatmap = this.refs.chart.getChart();
	        heatmap.series[0].hide();
	    },
	
	    componentDidUpdate: function () {
	        this._registerListenerIfNecessary('gxaAnatomogramTissueMouseEnter', this._anatomogramTissueMouseEnter);
	        this._registerListenerIfNecessary('gxaAnatomogramTissueMouseLeave', this._anatomogramTissueMouseLeave);
	        var heatmap = this.refs.chart.getChart();
	        heatmap.series[0].hide();
	
	        this.state.legend_1 ? heatmap.series[1].hide() : heatmap.series[1].show();
	        this.state.legend_2 ? heatmap.series[2].hide() : heatmap.series[2].show();
	        this.state.legend_3 ? heatmap.series[3].hide() : heatmap.series[3].show();
	        this.state.legend_4 ? heatmap.series[4].hide() : heatmap.series[4].show();
	    },
	
	    _showGeneCount: function () {
	        var shownRows, totalRows;
	        shownRows = this.props.profiles.rows.length;
	        totalRows = this.props.profiles.searchResultTotal;
	
	        return React.createElement(
	            'div',
	            { style: { display: "inline-block", 'verticalAlign': "top" } },
	            React.createElement(
	                'span',
	                { id: 'geneCount' },
	                'Showing ',
	                shownRows,
	                ' of ',
	                totalRows,
	                ' experiments found: '
	            )
	        );
	    },
	
	    render: function () {
	        var atlasBaseURL = this.props.atlasBaseURL;
	        var yAxisCategoriesLinks = this.props.yAxisCategoriesLinks;
	        var yAxisCategories = this.props.yAxisCategories;
	
	        var highchartsOptions = {
	            plotOptions: {
	                series: {
	                    point: {
	                        events: {
	                            mouseOver: function () {
	                                this.series.chart.userOptions.anatomogramEventEmitter.emit('gxaHeatmapColumnHoverChange', this.series.xAxis.categories[this.x].id);
	                            }
	                        }
	                    },
	                    events: {
	                        mouseOut: function () {
	                            this.chart.userOptions.anatomogramEventEmitter.emit('gxaHeatmapColumnHoverChange', null);
	                        }
	                    },
	
	                    states: {
	                        hover: {
	                            color: '#eeec38' //#edab12 color cell on mouse over
	                        },
	                        select: {
	                            color: '#eeec38'
	                        }
	                    }
	                }
	            },
	            credits: {
	                enabled: false //remove highchart text in the bottom right corner
	            },
	            chart: {
	                type: 'heatmap',
	                marginTop: 82, //labels
	                marginRight: 36, //leave space for the export button to appear
	                plotBorderWidth: 1,
	                height: yAxisCategories.length * 12 + 200,
	                zoomType: 'xy',
	                events: {
	                    handleGxaAnatomogramTissueMouseEnter: function (e) {
	                        Highcharts.each(this.series, function (series) {
	                            Highcharts.each(series.points, function (point) {
	                                if (point.series.xAxis.categories[point.x].id === e.svgPathId) {
	                                    point.select(true, true);
	                                }
	                            });
	                        });
	                    },
	                    handleGxaAnatomogramTissueMouseLeave: function (e) {
	                        var points = this.getSelectedPoints();
	                        if (points.length > 0) {
	                            Highcharts.each(points, function (point) {
	                                point.select(false);
	                            });
	                        }
	                    }
	                }
	            },
	            legend: {
	                useHTML: true,
	                enabled: false,
	                itemDistance: 18,
	                symbolWidth: 12,
	                symbolHeight: 12,
	                x: 150,
	                align: 'left',
	                verticalAlign: 'bottom',
	                layout: 'horizontal',
	                itemStyle: {
	                    lineHeight: "10px",
	                    fontSize: "10px",
	                    color: '#606060',
	                    fontWeight: 'normal'
	                }
	            },
	            title: null,
	            xAxis: { //tissues
	                tickLength: 5,
	                tickColor: "rgb(192, 192, 192)",
	                lineColor: "rgb(192, 192, 192)",
	                labels: {
	                    y: -6,
	                    style: {
	                        fontSize: "9px"
	                    },
	                    autoRotation: [-45, -90],
	                    formatter: function () {
	                        return this.value.label;
	                    }
	                },
	                opposite: 'true',
	                categories: this.props.xAxisCategories
	            },
	            yAxis: { //experiments
	                useHTML: true,
	                reversed: true,
	                labels: {
	                    style: {
	                        fontSize: "10px",
	                        color: "#148ff3"
	                    },
	                    formatter: function () {
	                        return '<a href="' + atlasBaseURL + '/experiments/' + yAxisCategoriesLinks[this.value] + '">' + this.value + '</a>';
	                    }
	                },
	                categories: this.props.yAxisCategories,
	                title: null,
	                gridLineWidth: 0,
	                minorGridLineWidth: 0
	            },
	            tooltip: {
	                useHTML: true,
	                formatter: function () {
	                    return 'Sample name: <b>' + this.series.yAxis.categories[this.point.y] + '</b>  <br> Tissue: <b>' + this.series.xAxis.categories[this.point.x].label + '</b><br><b>' + '</b>' + '<span style="border:1px rgb(192, 192, 192) solid; margin-right: 2px; width:6px; height:6px; display:inline-block; background-color:' + this.point.color + ';">' + '</span> Expression level: <b></span>' + 'Expression level: <b>' + this.point.value + '</b>';
	                }
	            },
	            anatomogramEventEmitter: this.props.anatomogramEventEmitter,
	            ensemblEventEmitter: this.props.ensemblEventEmitter,
	            series: [{
	                name: this.props.seriesDataNAString,
	                color: "#f7f7f7",
	                borderWidth: 1,
	                borderColor: "#fff",
	                data: this.props.seriesDataNA
	            }, {
	                name: this.props.seriesDataBelowCutoffString,
	                color: "#eaeaea",
	                borderWidth: 1,
	                borderColor: "#fff",
	                data: this.props.seriesDataBelowCutoff
	            }, {
	                name: this.props.seriesDataRanges[0].label,
	                color: "#dff8ff",
	                borderWidth: 1,
	                borderColor: "#fff",
	                data: this.props.seriesDataRanges[0].seriesData
	            }, {
	                name: this.props.seriesDataRanges[1].label,
	                color: "#9fd2fa",
	                borderWidth: 1,
	                borderColor: "#fff",
	                data: this.props.seriesDataRanges[1].seriesData
	            }, {
	                name: this.props.seriesDataRanges[2].label,
	                color: "#45affd",
	                borderWidth: 1,
	                borderColor: "#fff",
	                data: this.props.seriesDataRanges[2].seriesData
	            }]
	        };
	
	        var clsName_1 = this.state.legend_1 ? 'legend-item legend-item-off' : 'legend-item';
	        var clsName_2 = this.state.legend_2 ? 'legend-item legend-item-off' : 'legend-item';
	        var clsName_3 = this.state.legend_3 ? 'legend-item legend-item-off' : 'legend-item';
	        var clsName_4 = this.state.legend_4 ? 'legend-item legend-item-off' : 'legend-item';
	
	        var barcharts_legend = React.createElement(
	            'div',
	            { id: 'barcharts_legend_list_items', ref: 'barcharts_legend_items' },
	            React.createElement(
	                'div',
	                { className: 'legend-text' },
	                'Click to interact:'
	            ),
	            React.createElement(
	                'div',
	                { id: 'legend_1', ref: 'legend_1', className: clsName_1, onClick: this.handleClick.bind(this, 1) },
	                React.createElement('div', { className: 'legend-rectangle col_below' }),
	                React.createElement(
	                    'span',
	                    null,
	                    'Below cutoff'
	                )
	            ),
	            React.createElement(
	                'div',
	                { id: 'legend_2', className: clsName_2, onClick: this.handleClick.bind(this, 2) },
	                React.createElement('div', { className: 'legend-rectangle col_low' }),
	                React.createElement(
	                    'span',
	                    null,
	                    'Low'
	                )
	            ),
	            React.createElement(
	                'div',
	                { id: 'legend_3', className: clsName_3, onClick: this.handleClick.bind(this, 3) },
	                React.createElement('div', { className: 'legend-rectangle col_med' }),
	                React.createElement(
	                    'span',
	                    null,
	                    'Medium'
	                )
	            ),
	            React.createElement(
	                'div',
	                { id: 'legend_4', className: clsName_4, onClick: this.handleClick.bind(this, 4) },
	                React.createElement('div', { className: 'legend-rectangle col_high' }),
	                React.createElement(
	                    'span',
	                    null,
	                    'High'
	                )
	            ),
	            React.createElement(
	                'div',
	                { className: 'legend-item' },
	                React.createElement('span', { className: 'icon icon-generic', 'data-icon': 'i', 'data-toggle': 'tooltip', 'data-placement': 'bottom',
	                    title: 'This range of values indicates gene expression level across different experimental conditions (e.g. tissues). It is calculated differently between RNA and proteomics experiments.' })
	            ),
	            React.createElement(
	                'div',
	                { id: 'legend_5', className: 'legend-item special' },
	                React.createElement('div', { className: 'legend-rectangle col_nd' }),
	                React.createElement(
	                    'span',
	                    null,
	                    'No data available'
	                )
	            )
	        );
	
	        var paddingMargin = "15px";
	
	        return React.createElement(
	            'div',
	            null,
	            React.createElement(
	                'div',
	                { ref: 'countAndLegend', className: 'gxaHeatmapCountAndLegend', style: { "paddingBottom": paddingMargin, "position": "sticky" } },
	                this._showGeneCount(),
	                React.createElement(
	                    'div',
	                    { style: { display: "inline-block", "paddingLeft": "10px", "verticalAlign": "top" } },
	                    React.createElement(DownloadProfilesButton, { ref: 'downloadProfilesButton',
	                        downloadProfilesURL: this.props.heatmapConfig.downloadProfilesURL,
	                        atlasBaseURL: this.props.atlasBaseURL,
	                        isFortLauderdale: this.props.heatmapConfig.isFortLauderdale,
	                        onDownloadCallbackForAnalytics: function () {
	                            this.props.googleAnalyticsCallback('send', 'event', 'HeatmapHighcharts', 'downloadData');
	                        }.bind(this) })
	                )
	            ),
	            React.createElement(
	                'div',
	                { id: 'highcharts_container' },
	                React.createElement(ReactHighcharts, { config: highchartsOptions, ref: 'chart' }),
	                barcharts_legend
	            )
	        );
	    }
	
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = HighchartsHeatmap;

/***/ },
/* 1260 */
/*!****************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react-highcharts/dist/ReactHighcharts.js ***!
  \****************************************************************************************/
[2042, 1099, 1261],
/* 1261 */
/*!*******************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/react-highcharts/~/highcharts/highcharts.js ***!
  \*******************************************************************************************/
423,
/* 1262 */
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/highcharts-heatmap/heatmap.js ***!
  \*****************************************************************************/
/***/ function(module, exports) {

	/*
	 Highcharts JS v4.2.3 (2016-02-08)
	
	 (c) 2011-2016 Torstein Honsi
	
	 License: www.highcharts.com/license
	*/
	(function(d){typeof module==="object"&&module.exports?module.exports=d:d(Highcharts)})(function(d){var m=d.Axis,q=d.Chart,i=d.Color,x=d.Legend,s=d.LegendSymbolMixin,t=d.Series,y=d.Point,u=d.getOptions(),h=d.each,r=d.extend,v=d.extendClass,j=d.merge,k=d.pick,o=d.seriesTypes,w=d.wrap,n=function(){},p=d.ColorAxis=function(){this.isColorAxis=!0;this.init.apply(this,arguments)};r(p.prototype,m.prototype);r(p.prototype,{defaultColorAxisOptions:{lineWidth:0,minPadding:0,maxPadding:0,gridLineWidth:1,tickPixelInterval:72,
	startOnTick:!0,endOnTick:!0,offset:0,marker:{animation:{duration:50},color:"gray",width:0.01},labels:{overflow:"justify"},minColor:"#EFEFFF",maxColor:"#003875",tickLength:5},init:function(a,b){var c=a.options.legend.layout!=="vertical",f;f=j(this.defaultColorAxisOptions,{side:c?2:1,reversed:!c},b,{opposite:!c,showEmpty:!1,title:null,isColor:!0});m.prototype.init.call(this,a,f);b.dataClasses&&this.initDataClasses(b);this.initStops(b);this.horiz=c;this.zoomEnabled=!1},tweenColors:function(a,b,c){var f;
	!b.rgba.length||!a.rgba.length?a=b.input||"none":(a=a.rgba,b=b.rgba,f=b[3]!==1||a[3]!==1,a=(f?"rgba(":"rgb(")+Math.round(b[0]+(a[0]-b[0])*(1-c))+","+Math.round(b[1]+(a[1]-b[1])*(1-c))+","+Math.round(b[2]+(a[2]-b[2])*(1-c))+(f?","+(b[3]+(a[3]-b[3])*(1-c)):"")+")");return a},initDataClasses:function(a){var b=this,c=this.chart,f,e=0,l=this.options,g=a.dataClasses.length;this.dataClasses=f=[];this.legendItems=[];h(a.dataClasses,function(a,d){var h,a=j(a);f.push(a);if(!a.color)l.dataClassColor==="category"?
	(h=c.options.colors,a.color=h[e++],e===h.length&&(e=0)):a.color=b.tweenColors(i(l.minColor),i(l.maxColor),g<2?0.5:d/(g-1))})},initStops:function(a){this.stops=a.stops||[[0,this.options.minColor],[1,this.options.maxColor]];h(this.stops,function(a){a.color=i(a[1])})},setOptions:function(a){m.prototype.setOptions.call(this,a);this.options.crosshair=this.options.marker;this.coll="colorAxis"},setAxisSize:function(){var a=this.legendSymbol,b=this.chart,c,f,e;if(a)this.left=c=a.attr("x"),this.top=f=a.attr("y"),
	this.width=e=a.attr("width"),this.height=a=a.attr("height"),this.right=b.chartWidth-c-e,this.bottom=b.chartHeight-f-a,this.len=this.horiz?e:a,this.pos=this.horiz?c:f},toColor:function(a,b){var c,f=this.stops,e,l=this.dataClasses,g,d;if(l)for(d=l.length;d--;){if(g=l[d],e=g.from,f=g.to,(e===void 0||a>=e)&&(f===void 0||a<=f)){c=g.color;if(b)b.dataClass=d;break}}else{this.isLog&&(a=this.val2lin(a));c=1-(this.max-a)/(this.max-this.min||1);for(d=f.length;d--;)if(c>f[d][0])break;e=f[d]||f[d+1];f=f[d+1]||
	e;c=1-(f[0]-c)/(f[0]-e[0]||1);c=this.tweenColors(e.color,f.color,c)}return c},getOffset:function(){var a=this.legendGroup,b=this.chart.axisOffset[this.side];if(a){this.axisParent=a;m.prototype.getOffset.call(this);if(!this.added)this.added=!0,this.labelLeft=0,this.labelRight=this.width;this.chart.axisOffset[this.side]=b}},setLegendColor:function(){var a,b=this.options,c=this.reversed;a=c?1:0;c=c?0:1;a=this.horiz?[a,0,c,0]:[0,c,0,a];this.legendColor={linearGradient:{x1:a[0],y1:a[1],x2:a[2],y2:a[3]},
	stops:b.stops||[[0,b.minColor],[1,b.maxColor]]}},drawLegendSymbol:function(a,b){var c=a.padding,f=a.options,e=this.horiz,d=k(f.symbolWidth,e?200:12),g=k(f.symbolHeight,e?12:200),h=k(f.labelPadding,e?16:30),f=k(f.itemDistance,10);this.setLegendColor();b.legendSymbol=this.chart.renderer.rect(0,a.baseline-11,d,g).attr({zIndex:1}).add(b.legendGroup);this.legendItemWidth=d+c+(e?f:h);this.legendItemHeight=g+c+(e?h:0)},setState:n,visible:!0,setVisible:n,getSeriesExtremes:function(){var a;if(this.series.length)a=
	this.series[0],this.dataMin=a.valueMin,this.dataMax=a.valueMax},drawCrosshair:function(a,b){var c=b&&b.plotX,f=b&&b.plotY,e,d=this.pos,g=this.len;if(b)e=this.toPixels(b[b.series.colorKey]),e<d?e=d-2:e>d+g&&(e=d+g+2),b.plotX=e,b.plotY=this.len-e,m.prototype.drawCrosshair.call(this,a,b),b.plotX=c,b.plotY=f,this.cross&&this.cross.attr({fill:this.crosshair.color}).add(this.legendGroup)},getPlotLinePath:function(a,b,c,f,e){return typeof e==="number"?this.horiz?["M",e-4,this.top-6,"L",e+4,this.top-6,e,
	this.top,"Z"]:["M",this.left,e,"L",this.left-6,e+6,this.left-6,e-6,"Z"]:m.prototype.getPlotLinePath.call(this,a,b,c,f)},update:function(a,b){var c=this.chart,f=c.legend;h(this.series,function(a){a.isDirtyData=!0});if(a.dataClasses&&f.allItems)h(f.allItems,function(a){a.isDataClass&&a.legendGroup.destroy()}),c.isDirtyLegend=!0;c.options[this.coll]=j(this.userOptions,a);m.prototype.update.call(this,a,b);this.legendItem&&(this.setLegendColor(),f.colorizeItem(this,!0))},getDataClassLegendSymbols:function(){var a=
	this,b=this.chart,c=this.legendItems,f=b.options.legend,e=f.valueDecimals,l=f.valueSuffix||"",g;c.length||h(this.dataClasses,function(f,m){var i=!0,j=f.from,k=f.to;g="";j===void 0?g="< ":k===void 0&&(g="> ");j!==void 0&&(g+=d.numberFormat(j,e)+l);j!==void 0&&k!==void 0&&(g+=" - ");k!==void 0&&(g+=d.numberFormat(k,e)+l);c.push(r({chart:b,name:g,options:{},drawLegendSymbol:s.drawRectangle,visible:!0,setState:n,isDataClass:!0,setVisible:function(){i=this.visible=!i;h(a.series,function(a){h(a.points,
	function(a){a.dataClass===m&&a.setVisible(i)})});b.legend.colorizeItem(this,i)}},f))});return c},name:""});h(["fill","stroke"],function(a){d.Fx.prototype[a+"Setter"]=function(){this.elem.attr(a,p.prototype.tweenColors(i(this.start),i(this.end),this.pos))}});w(q.prototype,"getAxes",function(a){var b=this.options.colorAxis;a.call(this);this.colorAxis=[];b&&new p(this,b)});w(x.prototype,"getAllItems",function(a){var b=[],c=this.chart.colorAxis[0];c&&(c.options.dataClasses?b=b.concat(c.getDataClassLegendSymbols()):
	b.push(c),h(c.series,function(a){a.options.showInLegend=!1}));return b.concat(a.call(this))});q={pointAttrToOptions:{stroke:"borderColor","stroke-width":"borderWidth",fill:"color",dashstyle:"dashStyle"},pointArrayMap:["value"],axisTypes:["xAxis","yAxis","colorAxis"],optionalAxis:"colorAxis",trackerGroups:["group","markerGroup","dataLabelsGroup"],getSymbol:n,parallelArrays:["x","y","value"],colorKey:"value",translateColors:function(){var a=this,b=this.options.nullColor,c=this.colorAxis,f=this.colorKey;
	h(this.data,function(e){var d=e[f];if(d=e.options.color||(d===null?b:c&&d!==void 0?c.toColor(d,e):e.color||a.color))e.color=d})}};u.plotOptions.heatmap=j(u.plotOptions.scatter,{animation:!1,borderWidth:0,nullColor:"#F8F8F8",dataLabels:{formatter:function(){return this.point.value},inside:!0,verticalAlign:"middle",crop:!1,overflow:!1,padding:0},marker:null,pointRange:null,tooltip:{pointFormat:"{point.x}, {point.y}: {point.value}<br/>"},states:{normal:{animation:!0},hover:{halo:!1,brightness:0.2}}});
	o.heatmap=v(o.scatter,j(q,{type:"heatmap",pointArrayMap:["y","value"],hasPointSpecificOptions:!0,pointClass:v(y,{setVisible:function(a){var b=this,c=a?"show":"hide";h(["graphic","dataLabel"],function(a){if(b[a])b[a][c]()})}}),supportsDrilldown:!0,getExtremesFromAll:!0,directTouch:!0,init:function(){var a;o.scatter.prototype.init.apply(this,arguments);a=this.options;a.pointRange=k(a.pointRange,a.colsize||1);this.yAxis.axisPointRange=a.rowsize||1},translate:function(){var a=this.options,b=this.xAxis,
	c=this.yAxis,f=function(a,b,c){return Math.min(Math.max(b,a),c)};this.generatePoints();h(this.points,function(e){var d=(a.colsize||1)/2,g=(a.rowsize||1)/2,h=f(Math.round(b.len-b.translate(e.x-d,0,1,0,1)),0,b.len),d=f(Math.round(b.len-b.translate(e.x+d,0,1,0,1)),0,b.len),i=f(Math.round(c.translate(e.y-g,0,1,0,1)),0,c.len),g=f(Math.round(c.translate(e.y+g,0,1,0,1)),0,c.len);e.plotX=e.clientX=(h+d)/2;e.plotY=(i+g)/2;e.shapeType="rect";e.shapeArgs={x:Math.min(h,d),y:Math.min(i,g),width:Math.abs(d-h),
	height:Math.abs(g-i)}});this.translateColors();this.chart.hasRendered&&h(this.points,function(a){a.shapeArgs.fill=a.options.color||a.color})},drawPoints:o.column.prototype.drawPoints,animate:n,getBox:n,drawLegendSymbol:s.drawRectangle,getExtremes:function(){t.prototype.getExtremes.call(this,this.valueData);this.valueMin=this.dataMin;this.valueMax=this.dataMax;t.prototype.getExtremes.call(this)}}))});


/***/ },
/* 1263 */
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/src/HighchartsHeatmap.css ***!
  \***********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../~/css-loader!./HighchartsHeatmap.css */ 1264);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../~/style-loader/addStyles.js */ 1266)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../node_modules/css-loader/index.js!./HighchartsHeatmap.css", function() {
				var newContent = require("!!./../node_modules/css-loader/index.js!./HighchartsHeatmap.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 1264 */
/*!**************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/css-loader!./expression-atlas-heatmap-highcharts/src/HighchartsHeatmap.css ***!
  \**************************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../~/css-loader/lib/css-base.js */ 1265)();
	// imports
	
	
	// module
	exports.push([module.id, ".gene_title {\n    text-align: center;\n    font-size: 70%;\n    border: 0 red solid;\n}\n\n#container {\n    min-width: 410px;\n    min-height: 210px;\n    margin: 0 auto; /*avoid line overlap*/\n    border: 0 red solid;\n}\n\n#barcharts_legend_list_items {\n    color: #606060;\n    margin-left: 180px;\n    border: 0 solid olive;\n}\n\n.col_below {\n    background: #d7d7d7;\n}\n\n.col_low {\n    background: #dff8ff;\n}\n\n.col_med {\n    background: #9fd2fa;\n}\n\n.col_high {\n    background: #45affd;\n}\n\n.col_nd {\n    background: #fff;\n}\n\n#barcharts_legend_list_items .legend-text {\n    display: inline-block;\n    padding: 4px;\n    vertical-align: middle;\n}\n\n#barcharts_legend_list_items .legend-item {\n    cursor: pointer;\n    display: inline-block;\n    padding: 4px;\n    vertical-align: middle;\n}\n\n#barcharts_legend_list_items .legend-item:hover {\n    color: black;\n}\n\n#barcharts_legend_list_items .legend-item.legend-item-off {\n    color: #ccc;\n}\n\n#barcharts_legend_list_items .legend-item.legend-item-off div {\n    background-color: #f7f7f7;\n}\n\n#barcharts_legend_list_items .legend-item.special {\n    cursor: default;\n    margin-left: 36px;\n    color: black;\n}\n\n#barcharts_legend_list_items .legend-item .legend-rectangle {\n    width: 12px;\n    height: 12px;\n    border: 1px rgba(0, 0, 0, 0.2) solid;\n    display: inline-block;\n    margin-right: 4px;\n    vertical-align: middle;\n}\n\n#barcharts_legend_list_items .legend-item .icon-generic:before {\n    font-size: 180%;\n    color: #7e7e7e;\n}\n\n#barcharts_legend_list_items .legend-item:hover .icon-generic:before {\n    color: #353535;\n}\n\n/*****************************************EBI font*******************************************************/\n@font-face {\n    font-family: 'EBI-Conceptual';\n    src: url('http://www.ebi.ac.uk//web_guidelines/fonts/EBI-Conceptual/fonts/EBI-Conceptual.eot');\n    src: url('http://www.ebi.ac.uk//web_guidelines/fonts/EBI-Conceptual/fonts/EBI-Conceptual.eot?#iefix') format('embedded-opentype'),\n    url('http://www.ebi.ac.uk//web_guidelines/fonts/EBI-Conceptual/fonts/EBI-Conceptual.woff') format('woff'),\n    local('\\263A'),\n    url('http://www.ebi.ac.uk//web_guidelines/fonts/EBI-Conceptual/fonts/EBI-Conceptual.svg#EBI-Conceptual') format('svg'),\n    url('http://www.ebi.ac.uk//web_guidelines/fonts/EBI-Conceptual/fonts/EBI-Conceptual.ttf') format('truetype');\n    font-weight: normal;\n    font-style: normal\n}\n\n@font-face {\n    font-family: 'EBI-Functional';\n    src: url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Functional/fonts/EBI-Functional.eot');\n    src: url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Functional/fonts/EBI-Functional.eot?#iefix') format('embedded-opentype'),\n    url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Functional/fonts/EBI-Functional.woff') format('woff'),\n    local('\\263A'),\n    url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Functional/fonts/EBI-Functional.svg#EBI-Functional') format('svg'),\n    url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Functional/fonts/EBI-Functional.ttf') format('truetype');\n    font-weight: normal;\n    font-style: normal\n}\n\n@font-face {\n    font-family: 'EBI-Generic';\n    src: url('http://www.ebi.ac.uk//web_guidelines/fonts/EBI-Generic/fonts/EBI-Generic.eot');\n    src: url('http://www.ebi.ac.uk//web_guidelines/fonts/EBI-Generic/fonts/EBI-Generic.eot?#iefix') format('embedded-opentype'),\n    url('http://www.ebi.ac.uk//web_guidelines/fonts/EBI-Generic/fonts/EBI-Generic.woff') format('woff'),\n    local('\\263A'),\n    url('http://www.ebi.ac.uk//web_guidelines/fonts/EBI-Generic/fonts/EBI-Generic.svg#EBI-Generic') format('svg'),\n    url('http://www.ebi.ac.uk//web_guidelines/fonts/EBI-Generic/fonts/EBI-Generic.ttf') format('truetype');\n    font-weight: normal;\n    font-style: normal\n}\n\n@font-face {\n    font-family: 'EBI-Species';\n    src: url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Species/fonts/EBI-Species.eot');\n    src: url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Species/fonts/EBI-Species.eot?#iefix') format('embedded-opentype'),\n    url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Species/fonts/EBI-Species.woff') format('woff'),\n    local('\\263A'),\n    url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Species/fonts/EBI-Species.svg#EBI-Species') format('svg'),\n    url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Species/fonts/EBI-Species.ttf') format('truetype');\n    font-weight: normal;\n    font-style: normal\n}\n\n@font-face {\n    font-family: 'EBI-SocialMedia';\n    src: url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-SocialMedia/fonts/EBI-SocialMedia.eot');\n    src: url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-SocialMedia/fonts/EBI-SocialMedia.eot?#iefix') format('embedded-opentype'),\n    url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-SocialMedia/fonts/EBI-SocialMedia.woff') format('woff'),\n    local('\\263A'),\n    url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-SocialMedia/fonts/EBI-SocialMedia.svg#EBI-Species') format('svg'),\n    url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-SocialMedia/fonts/EBI-SocialMedia.ttf') format('truetype');\n    font-weight: normal;\n    font-style: normal\n}\n\n.icon-socialmedia:before {\n    font-family: 'EBI-SocialMedia';\n    margin: 0 0.3em 0 0;\n    content: attr(data-icon);\n    color: white;\n    font-size: 100%;\n}\n\n.icon-conceptual:before {\n    font-family: 'EBI-Conceptual';\n    margin: 0 0.3em 0 0;\n    content: attr(data-icon);\n    color: #7e7e7e;\n    font-size: 180%;\n}\n\n.icon-species:before {\n    font-family: 'EBI-Species';\n    font-size: 100%;\n    color: white;\n    content: attr(data-icon);\n    margin: 0 0 0 0;\n}\n\n.icon {\n    text-decoration: none;\n    font-style: normal;\n}\n\n.icon-static:before, .icon-generic:before {\n    font-family: 'EBI-Generic';\n    font-size: 100%;\n    color: #BBB;\n    content: attr(data-icon);\n    margin: 0 0 0 0;\n}\n\n.icon-functional:before {\n    font-family: 'EBI-Functional';\n    font-size: 100%;\n    color: white;\n    content: attr(data-icon);\n    margin: 0 0.3em 0 0;\n}\n\n/*****************************************END EBI font*******************************************************/\n", ""]);
	
	// exports


/***/ },
/* 1265 */
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/css-loader/lib/css-base.js ***!
  \**************************************************************************/
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 1266 */
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/style-loader/addStyles.js ***!
  \*************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];
	
	module.exports = function(list, options) {
		if(true) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
	
		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();
	
		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";
	
		var styles = listToStyles(list);
		addStylesToDom(styles, options);
	
		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}
	
	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}
	
	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}
	
	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}
	
	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}
	
	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}
	
	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}
	
	function addStyle(obj, options) {
		var styleElement, update, remove;
	
		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}
	
		update(obj);
	
		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}
	
	var replaceText = (function () {
		var textStore = [];
	
		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();
	
	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;
	
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}
	
	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
	
		if(media) {
			styleElement.setAttribute("media", media)
		}
	
		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}
	
	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;
	
		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}
	
		var blob = new Blob([css], { type: "text/css" });
	
		var oldSrc = linkElement.href;
	
		linkElement.href = URL.createObjectURL(blob);
	
		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ },
/* 1267 */
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/index.js ***!
  \*********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/DownloadProfilesButton.jsx */ 1268);


/***/ },
/* 1268 */
/*!*******************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/src/DownloadProfilesButton.jsx ***!
  \*******************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 1099);
	var ReactDOM = __webpack_require__(/*! react-dom */ 1255);
	
	var Modal = __webpack_require__(/*! react-bootstrap/lib/Modal */ 1269);
	var BootstrapButton = __webpack_require__(/*! react-bootstrap/lib/Button */ 1383);
	var Tooltip = __webpack_require__(/*! react-bootstrap/lib/Tooltip */ 1384);
	var OverlayTrigger = __webpack_require__(/*! react-bootstrap/lib/OverlayTrigger */ 1386);
	
	var BlueprintText = __webpack_require__(/*! ./BlueprintText.jsx */ 1398);
	
	//*------------------------------------------------------------------*
	
	//*------------------------------------------------------------------*
	var DownloadProfilesButton = React.createClass({
	    displayName: 'DownloadProfilesButton',
	
	    propTypes: {
	        atlasBaseURL: React.PropTypes.string.isRequired,
	        downloadProfilesURL: React.PropTypes.string.isRequired,
	        isFortLauderdale: React.PropTypes.bool.isRequired,
	        onDownloadCallbackForAnalytics: React.PropTypes.func.isRequired
	    },
	    getInitialState: function () {
	        return { showModal: false };
	    },
	
	    _closeModal: function () {
	        this.setState({ showModal: false });
	    },
	
	    _afterDownloadButtonClicked: function () {
	        if (!this.props.isFortLauderdale) {
	            this._commenceDownload();
	        } else {
	            this.setState({ showModal: true });
	        }
	    },
	
	    _commenceDownload: function () {
	        this.props.onDownloadCallbackForAnalytics();
	        window.location.href = this.props.atlasBaseURL + this.props.downloadProfilesURL;
	    },
	
	    _commenceDownloadAndCloseModal: function () {
	        this._commenceDownload();
	        this._closeModal();
	    },
	
	    render: function () {
	        var downloadImgSrcURL = this.props.atlasBaseURL + "/resources/images/download_blue_small.png";
	        return React.createElement(
	            'a',
	            { id: 'download-profiles-link', ref: 'downloadProfilesLink', className: 'gxaNoTextButton',
	                href: 'javascript:void(0)', onClick: this._afterDownloadButtonClicked },
	            React.createElement(
	                OverlayTrigger,
	                {
	                    placement: 'bottom',
	                    overlay: React.createElement(
	                        Tooltip,
	                        { id: 'downloadResultsTooltip' },
	                        React.createElement(
	                            'div',
	                            { className: 'gxaHelpTooltip' },
	                            'Download all results'
	                        )
	                    ),
	                    delay: 0 },
	                React.createElement('img', { id: 'download-profiles', alt: 'Download query results', style: { width: "20px" }, src: downloadImgSrcURL })
	            ),
	            React.createElement(
	                Modal,
	                { id: 'myModal', show: this.state.showModal, onHide: this._closeModal, bsSize: 'large' },
	                React.createElement(Modal.Header, { closeButton: true }),
	                React.createElement(
	                    Modal.Body,
	                    { style: { 'maxHeight': '360px' } },
	                    React.createElement(BlueprintText, null)
	                ),
	                React.createElement(
	                    Modal.Footer,
	                    null,
	                    React.createElement(
	                        BootstrapButton,
	                        { onClick: this._closeModal },
	                        'Close'
	                    ),
	                    React.createElement(
	                        BootstrapButton,
	                        { bsStyle: 'primary', onClick: this._commenceDownloadAndCloseModal },
	                        'Continue downloading'
	                    )
	                )
	            )
	        );
	    }
	});
	
	module.exports = DownloadProfilesButton;

/***/ },
/* 1269 */
/*!*******************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/lib/Modal.js ***!
  \*******************************************************************************************************/
[2012, 1270, 1286, 1287, 1291, 1292, 1099, 1255, 1293, 1294, 1299, 1300, 1301, 1302, 1308, 1310, 1322, 1323, 1324, 1326, 1327, 1328, 1348, 1354],
/* 1270 */
/*!*****************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/helpers/extends.js ***!
  \*****************************************************************************************************************************/
[1957, 1271],
/* 1271 */
/*!***********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/core-js/object/assign.js ***!
  \***********************************************************************************************************************************/
[1958, 1272],
/* 1272 */
/*!************************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/fn/object/assign.js ***!
  \************************************************************************************************************************************************/
[1959, 1273, 1276],
/* 1273 */
/*!*********************************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/es6.object.assign.js ***!
  \*********************************************************************************************************************************************************/
[1960, 1274, 1279],
/* 1274 */
/*!************************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.export.js ***!
  \************************************************************************************************************************************************/
[1961, 1275, 1276, 1277],
/* 1275 */
/*!************************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.global.js ***!
  \************************************************************************************************************************************************/
173,
/* 1276 */
/*!**********************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.core.js ***!
  \**********************************************************************************************************************************************/
174,
/* 1277 */
/*!*********************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.ctx.js ***!
  \*********************************************************************************************************************************************/
[1962, 1278],
/* 1278 */
/*!****************************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.a-function.js ***!
  \****************************************************************************************************************************************************/
176,
/* 1279 */
/*!*******************************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.object-assign.js ***!
  \*******************************************************************************************************************************************************/
[1963, 1280, 1281, 1283, 1285],
/* 1280 */
/*!*****************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.js ***!
  \*****************************************************************************************************************************************/
178,
/* 1281 */
/*!***************************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.to-object.js ***!
  \***************************************************************************************************************************************************/
[1964, 1282],
/* 1282 */
/*!*************************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.defined.js ***!
  \*************************************************************************************************************************************************/
180,
/* 1283 */
/*!*************************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.iobject.js ***!
  \*************************************************************************************************************************************************/
[1965, 1284],
/* 1284 */
/*!*********************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.cof.js ***!
  \*********************************************************************************************************************************************/
182,
/* 1285 */
/*!***********************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.fails.js ***!
  \***********************************************************************************************************************************************/
183,
/* 1286 */
/*!***********************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/helpers/object-without-properties.js ***!
  \***********************************************************************************************************************************************/
195,
/* 1287 */
/*!*********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/core-js/object/keys.js ***!
  \*********************************************************************************************************************************/
[1969, 1288],
/* 1288 */
/*!**********************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/fn/object/keys.js ***!
  \**********************************************************************************************************************************************/
[1970, 1289, 1276],
/* 1289 */
/*!*******************************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/es6.object.keys.js ***!
  \*******************************************************************************************************************************************************/
[1971, 1281, 1290],
/* 1290 */
/*!****************************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.object-sap.js ***!
  \****************************************************************************************************************************************************/
[1972, 1274, 1276, 1285],
/* 1291 */
/*!*********************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/helpers/interop-require-default.js ***!
  \*********************************************************************************************************************************************/
161,
/* 1292 */
/*!****************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/classnames/index.js ***!
  \****************************************************************************************************************/
196,
/* 1293 */
/*!**********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/lib/utils/bootstrapUtils.js ***!
  \**********************************************************************************************************************/
[1956, 1270, 1291, 1099, 1294, 1297, 1298],
/* 1294 */
/*!***********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/lib/styleMaps.js ***!
  \***********************************************************************************************************/
[1966, 1271, 1295, 1287],
/* 1295 */
/*!***********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/core-js/object/create.js ***!
  \***********************************************************************************************************************************/
[1967, 1296],
/* 1296 */
/*!************************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/fn/object/create.js ***!
  \************************************************************************************************************************************************/
[1968, 1280],
/* 1297 */
/*!*****************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/invariant/browser.js ***!
  \*****************************************************************************************************************/
191,
/* 1298 */
/*!***************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/warning/browser.js ***!
  \***************************************************************************************************************/
192,
/* 1299 */
/*!******************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/util/scrollbarSize.js ***!
  \******************************************************************************************************************************/
[2013, 1300],
/* 1300 */
/*!**********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/util/inDOM.js ***!
  \**********************************************************************************************************************/
236,
/* 1301 */
/*!*************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/ownerDocument.js ***!
  \*************************************************************************************************************************/
242,
/* 1302 */
/*!************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/events/index.js ***!
  \************************************************************************************************************************/
[2014, 1303, 1304, 1305],
/* 1303 */
/*!*********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/events/on.js ***!
  \*********************************************************************************************************************/
[1986, 1300],
/* 1304 */
/*!**********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/events/off.js ***!
  \**********************************************************************************************************************/
[2009, 1300],
/* 1305 */
/*!*************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/events/filter.js ***!
  \*************************************************************************************************************************/
[2015, 1306, 1307],
/* 1306 */
/*!**************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/query/contains.js ***!
  \**************************************************************************************************************************/
[1989, 1300],
/* 1307 */
/*!**********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/query/querySelectorAll.js ***!
  \**********************************************************************************************************************************/
343,
/* 1308 */
/*!********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-prop-types/lib/elementType.js ***!
  \********************************************************************************************************************************/
[1980, 1099, 1309],
/* 1309 */
/*!***************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-prop-types/lib/common.js ***!
  \***************************************************************************************************************************/
212,
/* 1310 */
/*!******************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/lib/Fade.js ***!
  \******************************************************************************************************/
[2016, 1311, 1318, 1270, 1291, 1099, 1292, 1319, 1321],
/* 1311 */
/*!******************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/helpers/inherits.js ***!
  \******************************************************************************************************************************/
[1973, 1295, 1312],
/* 1312 */
/*!*********************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/core-js/object/set-prototype-of.js ***!
  \*********************************************************************************************************************************************/
[1974, 1313],
/* 1313 */
/*!**********************************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/fn/object/set-prototype-of.js ***!
  \**********************************************************************************************************************************************************/
[1975, 1314, 1276],
/* 1314 */
/*!*******************************************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/es6.object.set-prototype-of.js ***!
  \*******************************************************************************************************************************************************************/
[1976, 1274, 1315],
/* 1315 */
/*!***************************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.set-proto.js ***!
  \***************************************************************************************************************************************************/
[1977, 1280, 1316, 1317, 1277],
/* 1316 */
/*!***************************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.is-object.js ***!
  \***************************************************************************************************************************************************/
207,
/* 1317 */
/*!***************************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/~/core-js/library/modules/$.an-object.js ***!
  \***************************************************************************************************************************************************/
[1978, 1316],
/* 1318 */
/*!**************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/babel-runtime/helpers/class-call-check.js ***!
  \**************************************************************************************************************************************/
209,
/* 1319 */
/*!*****************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/Transition.js ***!
  \*****************************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _react = __webpack_require__(/*! react */ 1099);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(/*! react-dom */ 1255);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _domHelpersTransitionProperties = __webpack_require__(/*! dom-helpers/transition/properties */ 1320);
	
	var _domHelpersTransitionProperties2 = _interopRequireDefault(_domHelpersTransitionProperties);
	
	var _domHelpersEventsOn = __webpack_require__(/*! dom-helpers/events/on */ 1303);
	
	var _domHelpersEventsOn2 = _interopRequireDefault(_domHelpersEventsOn);
	
	var _classnames = __webpack_require__(/*! classnames */ 1292);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var transitionEndEvent = _domHelpersTransitionProperties2['default'].end;
	
	var UNMOUNTED = 0;
	exports.UNMOUNTED = UNMOUNTED;
	var EXITED = 1;
	exports.EXITED = EXITED;
	var ENTERING = 2;
	exports.ENTERING = ENTERING;
	var ENTERED = 3;
	exports.ENTERED = ENTERED;
	var EXITING = 4;
	
	exports.EXITING = EXITING;
	/**
	 * The Transition component lets you define and run css transitions with a simple declarative api.
	 * It works similar to React's own [CSSTransitionGroup](http://facebook.github.io/react/docs/animation.html#high-level-api-reactcsstransitiongroup)
	 * but is specifically optimized for transitioning a single child "in" or "out".
	 *
	 * You don't even need to use class based css transitions if you don't want to (but it is easiest).
	 * The extensive set of lifecyle callbacks means you have control over
	 * the transitioning now at each step of the way.
	 */
	
	var Transition = (function (_React$Component) {
	  _inherits(Transition, _React$Component);
	
	  function Transition(props, context) {
	    _classCallCheck(this, Transition);
	
	    _React$Component.call(this, props, context);
	
	    var initialStatus = undefined;
	    if (props['in']) {
	      // Start enter transition in componentDidMount.
	      initialStatus = props.transitionAppear ? EXITED : ENTERED;
	    } else {
	      initialStatus = props.unmountOnExit ? UNMOUNTED : EXITED;
	    }
	    this.state = { status: initialStatus };
	
	    this.nextCallback = null;
	  }
	
	  Transition.prototype.componentDidMount = function componentDidMount() {
	    if (this.props.transitionAppear && this.props['in']) {
	      this.performEnter(this.props);
	    }
	  };
	
	  Transition.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    if (nextProps['in'] && this.props.unmountOnExit) {
	      if (this.state.status === UNMOUNTED) {
	        // Start enter transition in componentDidUpdate.
	        this.setState({ status: EXITED });
	      }
	    } else {
	      this._needsUpdate = true;
	    }
	  };
	
	  Transition.prototype.componentDidUpdate = function componentDidUpdate() {
	    var status = this.state.status;
	
	    if (this.props.unmountOnExit && status === EXITED) {
	      // EXITED is always a transitional state to either ENTERING or UNMOUNTED
	      // when using unmountOnExit.
	      if (this.props['in']) {
	        this.performEnter(this.props);
	      } else {
	        this.setState({ status: UNMOUNTED });
	      }
	
	      return;
	    }
	
	    // guard ensures we are only responding to prop changes
	    if (this._needsUpdate) {
	      this._needsUpdate = false;
	
	      if (this.props['in']) {
	        if (status === EXITING) {
	          this.performEnter(this.props);
	        } else if (status === EXITED) {
	          this.performEnter(this.props);
	        }
	        // Otherwise we're already entering or entered.
	      } else {
	          if (status === ENTERING || status === ENTERED) {
	            this.performExit(this.props);
	          }
	          // Otherwise we're already exited or exiting.
	        }
	    }
	  };
	
	  Transition.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.cancelNextCallback();
	  };
	
	  Transition.prototype.performEnter = function performEnter(props) {
	    var _this = this;
	
	    this.cancelNextCallback();
	    var node = _reactDom2['default'].findDOMNode(this);
	
	    // Not this.props, because we might be about to receive new props.
	    props.onEnter(node);
	
	    this.safeSetState({ status: ENTERING }, function () {
	      _this.props.onEntering(node);
	
	      _this.onTransitionEnd(node, function () {
	        _this.safeSetState({ status: ENTERED }, function () {
	          _this.props.onEntered(node);
	        });
	      });
	    });
	  };
	
	  Transition.prototype.performExit = function performExit(props) {
	    var _this2 = this;
	
	    this.cancelNextCallback();
	    var node = _reactDom2['default'].findDOMNode(this);
	
	    // Not this.props, because we might be about to receive new props.
	    props.onExit(node);
	
	    this.safeSetState({ status: EXITING }, function () {
	      _this2.props.onExiting(node);
	
	      _this2.onTransitionEnd(node, function () {
	        _this2.safeSetState({ status: EXITED }, function () {
	          _this2.props.onExited(node);
	        });
	      });
	    });
	  };
	
	  Transition.prototype.cancelNextCallback = function cancelNextCallback() {
	    if (this.nextCallback !== null) {
	      this.nextCallback.cancel();
	      this.nextCallback = null;
	    }
	  };
	
	  Transition.prototype.safeSetState = function safeSetState(nextState, callback) {
	    // This shouldn't be necessary, but there are weird race conditions with
	    // setState callbacks and unmounting in testing, so always make sure that
	    // we can cancel any pending setState callbacks after we unmount.
	    this.setState(nextState, this.setNextCallback(callback));
	  };
	
	  Transition.prototype.setNextCallback = function setNextCallback(callback) {
	    var _this3 = this;
	
	    var active = true;
	
	    this.nextCallback = function (event) {
	      if (active) {
	        active = false;
	        _this3.nextCallback = null;
	
	        callback(event);
	      }
	    };
	
	    this.nextCallback.cancel = function () {
	      active = false;
	    };
	
	    return this.nextCallback;
	  };
	
	  Transition.prototype.onTransitionEnd = function onTransitionEnd(node, handler) {
	    this.setNextCallback(handler);
	
	    if (node) {
	      _domHelpersEventsOn2['default'](node, transitionEndEvent, this.nextCallback);
	      setTimeout(this.nextCallback, this.props.timeout);
	    } else {
	      setTimeout(this.nextCallback, 0);
	    }
	  };
	
	  Transition.prototype.render = function render() {
	    var status = this.state.status;
	    if (status === UNMOUNTED) {
	      return null;
	    }
	
	    var _props = this.props;
	    var children = _props.children;
	    var className = _props.className;
	
	    var childProps = _objectWithoutProperties(_props, ['children', 'className']);
	
	    Object.keys(Transition.propTypes).forEach(function (key) {
	      return delete childProps[key];
	    });
	
	    var transitionClassName = undefined;
	    if (status === EXITED) {
	      transitionClassName = this.props.exitedClassName;
	    } else if (status === ENTERING) {
	      transitionClassName = this.props.enteringClassName;
	    } else if (status === ENTERED) {
	      transitionClassName = this.props.enteredClassName;
	    } else if (status === EXITING) {
	      transitionClassName = this.props.exitingClassName;
	    }
	
	    var child = _react2['default'].Children.only(children);
	    return _react2['default'].cloneElement(child, _extends({}, childProps, {
	      className: _classnames2['default'](child.props.className, className, transitionClassName)
	    }));
	  };
	
	  return Transition;
	})(_react2['default'].Component);
	
	Transition.propTypes = {
	  /**
	   * Show the component; triggers the enter or exit animation
	   */
	  'in': _react2['default'].PropTypes.bool,
	
	  /**
	   * Unmount the component (remove it from the DOM) when it is not shown
	   */
	  unmountOnExit: _react2['default'].PropTypes.bool,
	
	  /**
	   * Run the enter animation when the component mounts, if it is initially
	   * shown
	   */
	  transitionAppear: _react2['default'].PropTypes.bool,
	
	  /**
	   * A Timeout for the animation, in milliseconds, to ensure that a node doesn't
	   * transition indefinately if the browser transitionEnd events are
	   * canceled or interrupted.
	   *
	   * By default this is set to a high number (5 seconds) as a failsafe. You should consider
	   * setting this to the duration of your animation (or a bit above it).
	   */
	  timeout: _react2['default'].PropTypes.number,
	
	  /**
	   * CSS class or classes applied when the component is exited
	   */
	  exitedClassName: _react2['default'].PropTypes.string,
	  /**
	   * CSS class or classes applied while the component is exiting
	   */
	  exitingClassName: _react2['default'].PropTypes.string,
	  /**
	   * CSS class or classes applied when the component is entered
	   */
	  enteredClassName: _react2['default'].PropTypes.string,
	  /**
	   * CSS class or classes applied while the component is entering
	   */
	  enteringClassName: _react2['default'].PropTypes.string,
	
	  /**
	   * Callback fired before the "entering" classes are applied
	   */
	  onEnter: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired after the "entering" classes are applied
	   */
	  onEntering: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired after the "enter" classes are applied
	   */
	  onEntered: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired before the "exiting" classes are applied
	   */
	  onExit: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired after the "exiting" classes are applied
	   */
	  onExiting: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired after the "exited" classes are applied
	   */
	  onExited: _react2['default'].PropTypes.func
	};
	
	// Name the function so it is clearer in the documentation
	function noop() {}
	
	Transition.displayName = 'Transition';
	
	Transition.defaultProps = {
	  'in': false,
	  unmountOnExit: false,
	  transitionAppear: false,
	
	  timeout: 5000,
	
	  onEnter: noop,
	  onEntering: noop,
	  onEntered: noop,
	
	  onExit: noop,
	  onExiting: noop,
	  onExited: noop
	};
	
	exports['default'] = Transition;

/***/ },
/* 1320 */
/*!*********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/transition/properties.js ***!
  \*********************************************************************************************************************************/
[1985, 1300],
/* 1321 */
/*!*******************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-prop-types/lib/deprecated.js ***!
  \*******************************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = deprecated;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(/*! warning */ 1298);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var warned = {};
	
	function deprecated(propType, explanation) {
	  return function validate(props, propName, componentName) {
	    if (props[propName] != null) {
	      var message = '"' + propName + '" property of "' + componentName + '" has been deprecated.\n' + explanation;
	      if (!warned[message]) {
	        _warning2['default'](false, message);
	        warned[message] = true;
	      }
	    }
	
	    return propType(props, propName, componentName);
	  };
	}
	
	function _resetWarned() {
	  warned = {};
	}
	
	deprecated._resetWarned = _resetWarned;
	module.exports = exports['default'];

/***/ },
/* 1322 */
/*!*************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/lib/ModalDialog.js ***!
  \*************************************************************************************************************/
[2017, 1270, 1291, 1099, 1292, 1293, 1294],
/* 1323 */
/*!***********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/lib/ModalBody.js ***!
  \***********************************************************************************************************/
[2018, 1311, 1318, 1270, 1291, 1099, 1292, 1293],
/* 1324 */
/*!*************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/lib/ModalHeader.js ***!
  \*************************************************************************************************************/
[2019, 1311, 1318, 1286, 1270, 1291, 1099, 1292, 1293, 1325],
/* 1325 */
/*!*****************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/lib/utils/createChainedFunction.js ***!
  \*****************************************************************************************************************************/
165,
/* 1326 */
/*!************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/lib/ModalTitle.js ***!
  \************************************************************************************************************/
[2020, 1311, 1318, 1270, 1291, 1099, 1292, 1293],
/* 1327 */
/*!*************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/lib/ModalFooter.js ***!
  \*************************************************************************************************************/
[2021, 1311, 1318, 1270, 1291, 1099, 1292, 1293],
/* 1328 */
/*!************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/Modal.js ***!
  \************************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	/*eslint-disable react/prop-types */
	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var _react = __webpack_require__(/*! react */ 1099);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _warning = __webpack_require__(/*! warning */ 1298);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _reactPropTypesLibMountable = __webpack_require__(/*! react-prop-types/lib/mountable */ 1329);
	
	var _reactPropTypesLibMountable2 = _interopRequireDefault(_reactPropTypesLibMountable);
	
	var _reactPropTypesLibElementType = __webpack_require__(/*! react-prop-types/lib/elementType */ 1331);
	
	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);
	
	var _Portal = __webpack_require__(/*! ./Portal */ 1332);
	
	var _Portal2 = _interopRequireDefault(_Portal);
	
	var _ModalManager = __webpack_require__(/*! ./ModalManager */ 1335);
	
	var _ModalManager2 = _interopRequireDefault(_ModalManager);
	
	var _utilsOwnerDocument = __webpack_require__(/*! ./utils/ownerDocument */ 1333);
	
	var _utilsOwnerDocument2 = _interopRequireDefault(_utilsOwnerDocument);
	
	var _utilsAddEventListener = __webpack_require__(/*! ./utils/addEventListener */ 1351);
	
	var _utilsAddEventListener2 = _interopRequireDefault(_utilsAddEventListener);
	
	var _utilsAddFocusListener = __webpack_require__(/*! ./utils/addFocusListener */ 1352);
	
	var _utilsAddFocusListener2 = _interopRequireDefault(_utilsAddFocusListener);
	
	var _domHelpersUtilInDOM = __webpack_require__(/*! dom-helpers/util/inDOM */ 1300);
	
	var _domHelpersUtilInDOM2 = _interopRequireDefault(_domHelpersUtilInDOM);
	
	var _domHelpersActiveElement = __webpack_require__(/*! dom-helpers/activeElement */ 1353);
	
	var _domHelpersActiveElement2 = _interopRequireDefault(_domHelpersActiveElement);
	
	var _domHelpersQueryContains = __webpack_require__(/*! dom-helpers/query/contains */ 1306);
	
	var _domHelpersQueryContains2 = _interopRequireDefault(_domHelpersQueryContains);
	
	var _utilsGetContainer = __webpack_require__(/*! ./utils/getContainer */ 1334);
	
	var _utilsGetContainer2 = _interopRequireDefault(_utilsGetContainer);
	
	var modalManager = new _ModalManager2['default']();
	
	/**
	 * Love them or hate them, `<Modal/>` provides a solid foundation for creating dialogs, lightboxes, or whatever else.
	 * The Modal component renders its `children` node in front of a backdrop component.
	 *
	 * The Modal offers a few helpful features over using just a `<Portal/>` component and some styles:
	 *
	 * - Manages dialog stacking when one-at-a-time just isn't enough.
	 * - Creates a backdrop, for disabling interaction below the modal.
	 * - It properly manages focus; moving to the modal content, and keeping it there until the modal is closed.
	 * - It disables scrolling of the page content while open.
	 * - Adds the appropriate ARIA roles are automatically.
	 * - Easily pluggable animations via a `<Transition/>` component.
	 *
	 * Note that, in the same way the backdrop element prevents users from clicking or interacting
	 * with the page content underneath the Modal, Screen readers also need to be signaled to not to
	 * interact with page content while the Modal is open. To do this, we use a common technique of applying
	 * the `aria-hidden='true'` attribute to the non-Modal elements in the Modal `container`. This means that for
	 * a Modal to be truly modal, it should have a `container` that is _outside_ your app's
	 * React hierarchy (such as the default: document.body).
	 */
	var Modal = _react2['default'].createClass({
	  displayName: 'Modal',
	
	  propTypes: _extends({}, _Portal2['default'].propTypes, {
	
	    /**
	     * Set the visibility of the Modal
	     */
	    show: _react2['default'].PropTypes.bool,
	
	    /**
	     * A Node, Component instance, or function that returns either. The Modal is appended to it's container element.
	     *
	     * For the sake of assistive technologies, the container should usually be the document body, so that the rest of the
	     * page content can be placed behind a virtual backdrop as well as a visual one.
	     */
	    container: _react2['default'].PropTypes.oneOfType([_reactPropTypesLibMountable2['default'], _react2['default'].PropTypes.func]),
	
	    /**
	     * A callback fired when the Modal is opening.
	     */
	    onShow: _react2['default'].PropTypes.func,
	
	    /**
	     * A callback fired when either the backdrop is clicked, or the escape key is pressed.
	     *
	     * The `onHide` callback only signals intent from the Modal,
	     * you must actually set the `show` prop to `false` for the Modal to close.
	     */
	    onHide: _react2['default'].PropTypes.func,
	
	    /**
	     * Include a backdrop component.
	     */
	    backdrop: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.bool, _react2['default'].PropTypes.oneOf(['static'])]),
	
	    /**
	     * A callback fired when the escape key, if specified in `keyboard`, is pressed.
	     */
	    onEscapeKeyUp: _react2['default'].PropTypes.func,
	
	    /**
	     * A callback fired when the backdrop, if specified, is clicked.
	     */
	    onBackdropClick: _react2['default'].PropTypes.func,
	
	    /**
	     * A style object for the backdrop component.
	     */
	    backdropStyle: _react2['default'].PropTypes.object,
	
	    /**
	     * A css class or classes for the backdrop component.
	     */
	    backdropClassName: _react2['default'].PropTypes.string,
	
	    /**
	     * A css class or set of classes applied to the modal container when the modal is open,
	     * and removed when it is closed.
	     */
	    containerClassName: _react2['default'].PropTypes.string,
	
	    /**
	     * Close the modal when escape key is pressed
	     */
	    keyboard: _react2['default'].PropTypes.bool,
	
	    /**
	     * A `<Transition/>` component to use for the dialog and backdrop components.
	     */
	    transition: _reactPropTypesLibElementType2['default'],
	
	    /**
	     * The `timeout` of the dialog transition if specified. This number is used to ensure that
	     * transition callbacks are always fired, even if browser transition events are canceled.
	     *
	     * See the Transition `timeout` prop for more infomation.
	     */
	    dialogTransitionTimeout: _react2['default'].PropTypes.number,
	
	    /**
	     * The `timeout` of the backdrop transition if specified. This number is used to
	     * ensure that transition callbacks are always fired, even if browser transition events are canceled.
	     *
	     * See the Transition `timeout` prop for more infomation.
	     */
	    backdropTransitionTimeout: _react2['default'].PropTypes.number,
	
	    /**
	     * When `true` The modal will automatically shift focus to itself when it opens, and
	     * replace it to the last focused element when it closes. This also
	     * works correctly with any Modal children that have the `autoFocus` prop.
	     *
	     * Generally this should never be set to `false` as it makes the Modal less
	     * accessible to assistive technologies, like screen readers.
	     */
	    autoFocus: _react2['default'].PropTypes.bool,
	
	    /**
	     * When `true` The modal will prevent focus from leaving the Modal while open.
	     *
	     * Generally this should never be set to `false` as it makes the Modal less
	     * accessible to assistive technologies, like screen readers.
	     */
	    enforceFocus: _react2['default'].PropTypes.bool,
	
	    /**
	     * Callback fired before the Modal transitions in
	     */
	    onEnter: _react2['default'].PropTypes.func,
	
	    /**
	     * Callback fired as the Modal begins to transition in
	     */
	    onEntering: _react2['default'].PropTypes.func,
	
	    /**
	     * Callback fired after the Modal finishes transitioning in
	     */
	    onEntered: _react2['default'].PropTypes.func,
	
	    /**
	     * Callback fired right before the Modal transitions out
	     */
	    onExit: _react2['default'].PropTypes.func,
	
	    /**
	     * Callback fired as the Modal begins to transition out
	     */
	    onExiting: _react2['default'].PropTypes.func,
	
	    /**
	     * Callback fired after the Modal finishes transitioning out
	     */
	    onExited: _react2['default'].PropTypes.func
	
	  }),
	
	  getDefaultProps: function getDefaultProps() {
	    var noop = function noop() {};
	
	    return {
	      show: false,
	      backdrop: true,
	      keyboard: true,
	      autoFocus: true,
	      enforceFocus: true,
	      onHide: noop
	    };
	  },
	
	  getInitialState: function getInitialState() {
	    return { exited: !this.props.show };
	  },
	
	  render: function render() {
	    var _props = this.props;
	    var children = _props.children;
	    var Transition = _props.transition;
	    var backdrop = _props.backdrop;
	    var dialogTransitionTimeout = _props.dialogTransitionTimeout;
	
	    var props = _objectWithoutProperties(_props, ['children', 'transition', 'backdrop', 'dialogTransitionTimeout']);
	
	    var onExit = props.onExit;
	    var onExiting = props.onExiting;
	    var onEnter = props.onEnter;
	    var onEntering = props.onEntering;
	    var onEntered = props.onEntered;
	
	    var show = !!props.show;
	    var dialog = _react2['default'].Children.only(this.props.children);
	
	    var mountModal = show || Transition && !this.state.exited;
	
	    if (!mountModal) {
	      return null;
	    }
	
	    var _dialog$props = dialog.props;
	    var role = _dialog$props.role;
	    var tabIndex = _dialog$props.tabIndex;
	
	    if (role === undefined || tabIndex === undefined) {
	      dialog = _react.cloneElement(dialog, {
	        role: role === undefined ? 'document' : role,
	        tabIndex: tabIndex == null ? '-1' : tabIndex
	      });
	    }
	
	    if (Transition) {
	      dialog = _react2['default'].createElement(
	        Transition,
	        {
	          transitionAppear: true,
	          unmountOnExit: true,
	          'in': show,
	          timeout: dialogTransitionTimeout,
	          onExit: onExit,
	          onExiting: onExiting,
	          onExited: this.handleHidden,
	          onEnter: onEnter,
	          onEntering: onEntering,
	          onEntered: onEntered
	        },
	        dialog
	      );
	    }
	
	    return _react2['default'].createElement(
	      _Portal2['default'],
	      {
	        ref: this.setMountNode,
	        container: props.container
	      },
	      _react2['default'].createElement(
	        'div',
	        {
	          ref: 'modal',
	          role: props.role || 'dialog',
	          style: props.style,
	          className: props.className
	        },
	        backdrop && this.renderBackdrop(),
	        dialog
	      )
	    );
	  },
	
	  renderBackdrop: function renderBackdrop() {
	    var _props2 = this.props;
	    var Transition = _props2.transition;
	    var backdropTransitionTimeout = _props2.backdropTransitionTimeout;
	
	    var backdrop = _react2['default'].createElement('div', { ref: 'backdrop',
	      style: this.props.backdropStyle,
	      className: this.props.backdropClassName,
	      onClick: this.handleBackdropClick
	    });
	
	    if (Transition) {
	      backdrop = _react2['default'].createElement(
	        Transition,
	        { transitionAppear: true,
	          'in': this.props.show,
	          timeout: backdropTransitionTimeout
	        },
	        backdrop
	      );
	    }
	
	    return backdrop;
	  },
	
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    if (nextProps.show) {
	      this.setState({ exited: false });
	    } else if (!nextProps.transition) {
	      // Otherwise let handleHidden take care of marking exited.
	      this.setState({ exited: true });
	    }
	  },
	
	  componentWillUpdate: function componentWillUpdate(nextProps) {
	    if (nextProps.show) {
	      this.checkForFocus();
	    }
	  },
	
	  componentDidMount: function componentDidMount() {
	    if (this.props.show) {
	      this.onShow();
	    }
	  },
	
	  componentDidUpdate: function componentDidUpdate(prevProps) {
	    var transition = this.props.transition;
	
	    if (prevProps.show && !this.props.show && !transition) {
	      // Otherwise handleHidden will call this.
	      this.onHide();
	    } else if (!prevProps.show && this.props.show) {
	      this.onShow();
	    }
	  },
	
	  componentWillUnmount: function componentWillUnmount() {
	    var _props3 = this.props;
	    var show = _props3.show;
	    var transition = _props3.transition;
	
	    if (show || transition && !this.state.exited) {
	      this.onHide();
	    }
	  },
	
	  onShow: function onShow() {
	    var doc = _utilsOwnerDocument2['default'](this);
	    var container = _utilsGetContainer2['default'](this.props.container, doc.body);
	
	    modalManager.add(this, container, this.props.containerClassName);
	
	    this._onDocumentKeyupListener = _utilsAddEventListener2['default'](doc, 'keyup', this.handleDocumentKeyUp);
	
	    this._onFocusinListener = _utilsAddFocusListener2['default'](this.enforceFocus);
	
	    this.focus();
	
	    if (this.props.onShow) {
	      this.props.onShow();
	    }
	  },
	
	  onHide: function onHide() {
	    modalManager.remove(this);
	
	    this._onDocumentKeyupListener.remove();
	
	    this._onFocusinListener.remove();
	
	    this.restoreLastFocus();
	  },
	
	  setMountNode: function setMountNode(ref) {
	    this.mountNode = ref ? ref.getMountNode() : ref;
	  },
	
	  handleHidden: function handleHidden() {
	    this.setState({ exited: true });
	    this.onHide();
	
	    if (this.props.onExited) {
	      var _props4;
	
	      (_props4 = this.props).onExited.apply(_props4, arguments);
	    }
	  },
	
	  handleBackdropClick: function handleBackdropClick(e) {
	    if (e.target !== e.currentTarget) {
	      return;
	    }
	
	    if (this.props.onBackdropClick) {
	      this.props.onBackdropClick(e);
	    }
	
	    if (this.props.backdrop === true) {
	      this.props.onHide();
	    }
	  },
	
	  handleDocumentKeyUp: function handleDocumentKeyUp(e) {
	    if (this.props.keyboard && e.keyCode === 27 && this.isTopModal()) {
	      if (this.props.onEscapeKeyUp) {
	        this.props.onEscapeKeyUp(e);
	      }
	      this.props.onHide();
	    }
	  },
	
	  checkForFocus: function checkForFocus() {
	    if (_domHelpersUtilInDOM2['default']) {
	      this.lastFocus = _domHelpersActiveElement2['default']();
	    }
	  },
	
	  focus: function focus() {
	    var autoFocus = this.props.autoFocus;
	    var modalContent = this.getDialogElement();
	    var current = _domHelpersActiveElement2['default'](_utilsOwnerDocument2['default'](this));
	    var focusInModal = current && _domHelpersQueryContains2['default'](modalContent, current);
	
	    if (modalContent && autoFocus && !focusInModal) {
	      this.lastFocus = current;
	
	      if (!modalContent.hasAttribute('tabIndex')) {
	        modalContent.setAttribute('tabIndex', -1);
	        _warning2['default'](false, 'The modal content node does not accept focus. ' + 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".');
	      }
	
	      modalContent.focus();
	    }
	  },
	
	  restoreLastFocus: function restoreLastFocus() {
	    // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)
	    if (this.lastFocus && this.lastFocus.focus) {
	      this.lastFocus.focus();
	      this.lastFocus = null;
	    }
	  },
	
	  enforceFocus: function enforceFocus() {
	    var enforceFocus = this.props.enforceFocus;
	
	    if (!enforceFocus || !this.isMounted() || !this.isTopModal()) {
	      return;
	    }
	
	    var active = _domHelpersActiveElement2['default'](_utilsOwnerDocument2['default'](this));
	    var modal = this.getDialogElement();
	
	    if (modal && modal !== active && !_domHelpersQueryContains2['default'](modal, active)) {
	      modal.focus();
	    }
	  },
	
	  //instead of a ref, which might conflict with one the parent applied.
	  getDialogElement: function getDialogElement() {
	    var node = this.refs.modal;
	    return node && node.lastChild;
	  },
	
	  isTopModal: function isTopModal() {
	    return modalManager.isTopModal(this);
	  }
	
	});
	
	Modal.manager = modalManager;
	
	exports['default'] = Modal;
	module.exports = exports['default'];

/***/ },
/* 1329 */
/*!***********************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-overlays/~/react-prop-types/lib/mountable.js ***!
  \***********************************************************************************************************************************************/
[2022, 1330],
/* 1330 */
/*!********************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-overlays/~/react-prop-types/lib/common.js ***!
  \********************************************************************************************************************************************/
212,
/* 1331 */
/*!*************************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-overlays/~/react-prop-types/lib/elementType.js ***!
  \*************************************************************************************************************************************************/
[1980, 1099, 1330],
/* 1332 */
/*!*************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/Portal.js ***!
  \*************************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _react = __webpack_require__(/*! react */ 1099);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(/*! react-dom */ 1255);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _reactPropTypesLibMountable = __webpack_require__(/*! react-prop-types/lib/mountable */ 1329);
	
	var _reactPropTypesLibMountable2 = _interopRequireDefault(_reactPropTypesLibMountable);
	
	var _utilsOwnerDocument = __webpack_require__(/*! ./utils/ownerDocument */ 1333);
	
	var _utilsOwnerDocument2 = _interopRequireDefault(_utilsOwnerDocument);
	
	var _utilsGetContainer = __webpack_require__(/*! ./utils/getContainer */ 1334);
	
	var _utilsGetContainer2 = _interopRequireDefault(_utilsGetContainer);
	
	/**
	 * The `<Portal/>` component renders its children into a new "subtree" outside of current component hierarchy.
	 * You can think of it as a declarative `appendChild()`, or jQuery's `$.fn.appendTo()`.
	 * The children of `<Portal/>` component will be appended to the `container` specified.
	 */
	var Portal = _react2['default'].createClass({
	
	  displayName: 'Portal',
	
	  propTypes: {
	    /**
	     * A Node, Component instance, or function that returns either. The `container` will have the Portal children
	     * appended to it.
	     */
	    container: _react2['default'].PropTypes.oneOfType([_reactPropTypesLibMountable2['default'], _react2['default'].PropTypes.func])
	  },
	
	  componentDidMount: function componentDidMount() {
	    this._renderOverlay();
	  },
	
	  componentDidUpdate: function componentDidUpdate() {
	    this._renderOverlay();
	  },
	
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    if (this._overlayTarget && nextProps.container !== this.props.container) {
	      this._portalContainerNode.removeChild(this._overlayTarget);
	      this._portalContainerNode = _utilsGetContainer2['default'](nextProps.container, _utilsOwnerDocument2['default'](this).body);
	      this._portalContainerNode.appendChild(this._overlayTarget);
	    }
	  },
	
	  componentWillUnmount: function componentWillUnmount() {
	    this._unrenderOverlay();
	    this._unmountOverlayTarget();
	  },
	
	  _mountOverlayTarget: function _mountOverlayTarget() {
	    if (!this._overlayTarget) {
	      this._overlayTarget = document.createElement('div');
	      this._portalContainerNode = _utilsGetContainer2['default'](this.props.container, _utilsOwnerDocument2['default'](this).body);
	      this._portalContainerNode.appendChild(this._overlayTarget);
	    }
	  },
	
	  _unmountOverlayTarget: function _unmountOverlayTarget() {
	    if (this._overlayTarget) {
	      this._portalContainerNode.removeChild(this._overlayTarget);
	      this._overlayTarget = null;
	    }
	    this._portalContainerNode = null;
	  },
	
	  _renderOverlay: function _renderOverlay() {
	
	    var overlay = !this.props.children ? null : _react2['default'].Children.only(this.props.children);
	
	    // Save reference for future access.
	    if (overlay !== null) {
	      this._mountOverlayTarget();
	      this._overlayInstance = _reactDom2['default'].unstable_renderSubtreeIntoContainer(this, overlay, this._overlayTarget);
	    } else {
	      // Unrender if the component is null for transitions to null
	      this._unrenderOverlay();
	      this._unmountOverlayTarget();
	    }
	  },
	
	  _unrenderOverlay: function _unrenderOverlay() {
	    if (this._overlayTarget) {
	      _reactDom2['default'].unmountComponentAtNode(this._overlayTarget);
	      this._overlayInstance = null;
	    }
	  },
	
	  render: function render() {
	    return null;
	  },
	
	  getMountNode: function getMountNode() {
	    return this._overlayTarget;
	  },
	
	  getOverlayDOMNode: function getOverlayDOMNode() {
	    if (!this.isMounted()) {
	      throw new Error('getOverlayDOMNode(): A component must be mounted to have a DOM node.');
	    }
	
	    if (this._overlayInstance) {
	      if (this._overlayInstance.getWrappedDOMNode) {
	        return this._overlayInstance.getWrappedDOMNode();
	      } else {
	        return _reactDom2['default'].findDOMNode(this._overlayInstance);
	      }
	    }
	
	    return null;
	  }
	
	});
	
	exports['default'] = Portal;
	module.exports = exports['default'];

/***/ },
/* 1333 */
/*!**************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/utils/ownerDocument.js ***!
  \**************************************************************************************************************************************/
[2010, 1255, 1301],
/* 1334 */
/*!*************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/utils/getContainer.js ***!
  \*************************************************************************************************************************************/
[2023, 1255],
/* 1335 */
/*!*******************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/ModalManager.js ***!
  \*******************************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	var _domHelpersStyle = __webpack_require__(/*! dom-helpers/style */ 1336);
	
	var _domHelpersStyle2 = _interopRequireDefault(_domHelpersStyle);
	
	var _domHelpersClass = __webpack_require__(/*! dom-helpers/class */ 1344);
	
	var _domHelpersClass2 = _interopRequireDefault(_domHelpersClass);
	
	var _domHelpersUtilScrollbarSize = __webpack_require__(/*! dom-helpers/util/scrollbarSize */ 1299);
	
	var _domHelpersUtilScrollbarSize2 = _interopRequireDefault(_domHelpersUtilScrollbarSize);
	
	var _utilsIsOverflowing = __webpack_require__(/*! ./utils/isOverflowing */ 1348);
	
	var _utilsIsOverflowing2 = _interopRequireDefault(_utilsIsOverflowing);
	
	var _utilsManageAriaHidden = __webpack_require__(/*! ./utils/manageAriaHidden */ 1350);
	
	function findIndexOf(arr, cb) {
	  var idx = -1;
	  arr.some(function (d, i) {
	    if (cb(d, i)) {
	      idx = i;
	      return true;
	    }
	  });
	  return idx;
	}
	
	function findContainer(data, modal) {
	  return findIndexOf(data, function (d) {
	    return d.modals.indexOf(modal) !== -1;
	  });
	}
	
	/**
	 * Proper state managment for containers and the modals in those containers.
	 *
	 * @internal Used by the Modal to ensure proper styling of containers.
	 */
	
	var ModalManager = (function () {
	  function ModalManager() {
	    var hideSiblingNodes = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];
	
	    _classCallCheck(this, ModalManager);
	
	    this.hideSiblingNodes = hideSiblingNodes;
	    this.modals = [];
	    this.containers = [];
	    this.data = [];
	  }
	
	  ModalManager.prototype.add = function add(modal, container, className) {
	    var modalIdx = this.modals.indexOf(modal);
	    var containerIdx = this.containers.indexOf(container);
	
	    if (modalIdx !== -1) {
	      return modalIdx;
	    }
	
	    modalIdx = this.modals.length;
	    this.modals.push(modal);
	
	    if (this.hideSiblingNodes) {
	      _utilsManageAriaHidden.hideSiblings(container, modal.mountNode);
	    }
	
	    if (containerIdx !== -1) {
	      this.data[containerIdx].modals.push(modal);
	      return modalIdx;
	    }
	
	    var data = {
	      modals: [modal],
	      //right now only the first modal of a container will have its classes applied
	      classes: className ? className.split(/\s+/) : [],
	      //we are only interested in the actual `style` here becasue we will override it
	      style: {
	        overflow: container.style.overflow,
	        paddingRight: container.style.paddingRight
	      }
	    };
	
	    var style = { overflow: 'hidden' };
	
	    data.overflowing = _utilsIsOverflowing2['default'](container);
	
	    if (data.overflowing) {
	      // use computed style, here to get the real padding
	      // to add our scrollbar width
	      style.paddingRight = parseInt(_domHelpersStyle2['default'](container, 'paddingRight') || 0, 10) + _domHelpersUtilScrollbarSize2['default']() + 'px';
	    }
	
	    _domHelpersStyle2['default'](container, style);
	
	    data.classes.forEach(_domHelpersClass2['default'].addClass.bind(null, container));
	
	    this.containers.push(container);
	    this.data.push(data);
	
	    return modalIdx;
	  };
	
	  ModalManager.prototype.remove = function remove(modal) {
	    var modalIdx = this.modals.indexOf(modal);
	
	    if (modalIdx === -1) {
	      return;
	    }
	
	    var containerIdx = findContainer(this.data, modal);
	    var data = this.data[containerIdx];
	    var container = this.containers[containerIdx];
	
	    data.modals.splice(data.modals.indexOf(modal), 1);
	
	    this.modals.splice(modalIdx, 1);
	
	    // if that was the last modal in a container,
	    // clean up the container stylinhg.
	    if (data.modals.length === 0) {
	      Object.keys(data.style).forEach(function (key) {
	        return container.style[key] = data.style[key];
	      });
	
	      data.classes.forEach(_domHelpersClass2['default'].removeClass.bind(null, container));
	
	      if (this.hideSiblingNodes) {
	        _utilsManageAriaHidden.showSiblings(container, modal.mountNode);
	      }
	      this.containers.splice(containerIdx, 1);
	      this.data.splice(containerIdx, 1);
	    } else if (this.hideSiblingNodes) {
	      //otherwise make sure the next top modal is visible to a SR
	      _utilsManageAriaHidden.ariaHidden(false, data.modals[data.modals.length - 1].mountNode);
	    }
	  };
	
	  ModalManager.prototype.isTopModal = function isTopModal(modal) {
	    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;
	  };
	
	  return ModalManager;
	})();
	
	exports['default'] = ModalManager;
	module.exports = exports['default'];

/***/ },
/* 1336 */
/*!***********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/style/index.js ***!
  \***********************************************************************************************************************/
[1981, 1337, 1339, 1341, 1343],
/* 1337 */
/*!******************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/util/camelizeStyle.js ***!
  \******************************************************************************************************************************/
[1982, 1338],
/* 1338 */
/*!*************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/util/camelize.js ***!
  \*************************************************************************************************************************/
228,
/* 1339 */
/*!*******************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/util/hyphenateStyle.js ***!
  \*******************************************************************************************************************************/
[1983, 1340],
/* 1340 */
/*!**************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/util/hyphenate.js ***!
  \**************************************************************************************************************************/
230,
/* 1341 */
/*!**********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/style/getComputedStyle.js ***!
  \**********************************************************************************************************************************/
[1984, 1342, 1337],
/* 1342 */
/*!*****************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/util/babelHelpers.js ***!
  \*****************************************************************************************************************************/
232,
/* 1343 */
/*!*****************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/style/removeStyle.js ***!
  \*****************************************************************************************************************************/
233,
/* 1344 */
/*!***********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/class/index.js ***!
  \***********************************************************************************************************************/
[2024, 1345, 1347, 1346],
/* 1345 */
/*!**************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/class/addClass.js ***!
  \**************************************************************************************************************************/
[2025, 1346],
/* 1346 */
/*!**************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/class/hasClass.js ***!
  \**************************************************************************************************************************/
359,
/* 1347 */
/*!*****************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/class/removeClass.js ***!
  \*****************************************************************************************************************************/
360,
/* 1348 */
/*!**************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/utils/isOverflowing.js ***!
  \**************************************************************************************************************************************/
[2026, 1349, 1301],
/* 1349 */
/*!**************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/query/isWindow.js ***!
  \**************************************************************************************************************************/
362,
/* 1350 */
/*!*****************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/utils/manageAriaHidden.js ***!
  \*****************************************************************************************************************************************/
363,
/* 1351 */
/*!*****************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/utils/addEventListener.js ***!
  \*****************************************************************************************************************************************/
[2008, 1303, 1304],
/* 1352 */
/*!*****************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/utils/addFocusListener.js ***!
  \*****************************************************************************************************************************************/
/***/ function(module, exports) {

	/**
	 * Firefox doesn't have a focusin event so using capture is easiest way to get bubbling
	 * IE8 can't do addEventListener, but does have onfocusin, so we use that in ie8
	 *
	 * We only allow one Listener at a time to avoid stack overflows
	 */
	'use strict';
	
	exports.__esModule = true;
	exports['default'] = addFocusListener;
	
	function addFocusListener(handler) {
	  var useFocusin = !document.addEventListener;
	  var remove = undefined;
	
	  if (useFocusin) {
	    document.attachEvent('onfocusin', handler);
	    remove = function () {
	      return document.detachEvent('onfocusin', handler);
	    };
	  } else {
	    document.addEventListener('focus', handler, true);
	    remove = function () {
	      return document.removeEventListener('focus', handler, true);
	    };
	  }
	
	  return { remove: remove };
	}
	
	module.exports = exports['default'];

/***/ },
/* 1353 */
/*!*************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/activeElement.js ***!
  \*************************************************************************************************************************/
[1988, 1342, 1301],
/* 1354 */
/*!*************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/object/pick.js ***!
  \*************************************************************************************************************************/
[2011, 1355, 1372, 1374, 1375, 1382],
/* 1355 */
/*!**********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/baseFlatten.js ***!
  \**********************************************************************************************************************************/
[2004, 1356, 1357, 1367, 1358, 1364],
/* 1356 */
/*!********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/arrayPush.js ***!
  \********************************************************************************************************************************/
308,
/* 1357 */
/*!******************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/lang/isArguments.js ***!
  \******************************************************************************************************************************/
[2000, 1358, 1364],
/* 1358 */
/*!**********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/isArrayLike.js ***!
  \**********************************************************************************************************************************/
[1997, 1359, 1366],
/* 1359 */
/*!********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/getLength.js ***!
  \********************************************************************************************************************************/
[1998, 1360],
/* 1360 */
/*!***********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/baseProperty.js ***!
  \***********************************************************************************************************************************/
[1999, 1361],
/* 1361 */
/*!*******************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/toObject.js ***!
  \*******************************************************************************************************************************/
[1992, 1362, 1363, 1365],
/* 1362 */
/*!***************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/lang/isObject.js ***!
  \***************************************************************************************************************************/
251,
/* 1363 */
/*!***************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/lang/isString.js ***!
  \***************************************************************************************************************************/
[1993, 1364],
/* 1364 */
/*!***********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/isObjectLike.js ***!
  \***********************************************************************************************************************************/
253,
/* 1365 */
/*!*********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/support.js ***!
  \*********************************************************************************************************************/
254,
/* 1366 */
/*!*******************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/isLength.js ***!
  \*******************************************************************************************************************************/
263,
/* 1367 */
/*!**************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/lang/isArray.js ***!
  \**************************************************************************************************************************/
[2001, 1368, 1366, 1364],
/* 1368 */
/*!********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/getNative.js ***!
  \********************************************************************************************************************************/
[1994, 1369],
/* 1369 */
/*!***************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/lang/isNative.js ***!
  \***************************************************************************************************************************/
[1995, 1370, 1371, 1364],
/* 1370 */
/*!*****************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/lang/isFunction.js ***!
  \*****************************************************************************************************************************/
[1996, 1362],
/* 1371 */
/*!***********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/isHostObject.js ***!
  \***********************************************************************************************************************************/
259,
/* 1372 */
/*!***********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/bindCallback.js ***!
  \***********************************************************************************************************************************/
[2003, 1373],
/* 1373 */
/*!******************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/utility/identity.js ***!
  \******************************************************************************************************************************/
293,
/* 1374 */
/*!**********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/pickByArray.js ***!
  \**********************************************************************************************************************************/
[2005, 1361],
/* 1375 */
/*!*************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/pickByCallback.js ***!
  \*************************************************************************************************************************************/
[2006, 1376],
/* 1376 */
/*!********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/baseForIn.js ***!
  \********************************************************************************************************************************/
[2007, 1377, 1379],
/* 1377 */
/*!******************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/baseFor.js ***!
  \******************************************************************************************************************************/
[1990, 1378],
/* 1378 */
/*!************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/createBaseFor.js ***!
  \************************************************************************************************************************************/
[1991, 1361],
/* 1379 */
/*!***************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/object/keysIn.js ***!
  \***************************************************************************************************************************/
[2002, 1380, 1357, 1367, 1370, 1381, 1366, 1362, 1363, 1365],
/* 1380 */
/*!********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/arrayEach.js ***!
  \********************************************************************************************************************************/
269,
/* 1381 */
/*!******************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/internal/isIndex.js ***!
  \******************************************************************************************************************************/
267,
/* 1382 */
/*!********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/lodash-compat/function/restParam.js ***!
  \********************************************************************************************************************************/
312,
/* 1383 */
/*!********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/lib/Button.js ***!
  \********************************************************************************************************/
[1979, 1270, 1291, 1099, 1292, 1308, 1293, 1294],
/* 1384 */
/*!*********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/lib/Tooltip.js ***!
  \*********************************************************************************************************/
[2035, 1270, 1291, 1099, 1292, 1293, 1385],
/* 1385 */
/*!**************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-prop-types/lib/isRequiredForA11y.js ***!
  \**************************************************************************************************************************************/
313,
/* 1386 */
/*!****************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/lib/OverlayTrigger.js ***!
  \****************************************************************************************************************/
[2034, 1270, 1287, 1291, 1306, 1354, 1099, 1255, 1298, 1387, 1325],
/* 1387 */
/*!*********************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/lib/Overlay.js ***!
  \*********************************************************************************************************/
[2027, 1311, 1318, 1270, 1286, 1291, 1099, 1388, 1308, 1310, 1292],
/* 1388 */
/*!**************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/Overlay.js ***!
  \**************************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _react = __webpack_require__(/*! react */ 1099);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Portal = __webpack_require__(/*! ./Portal */ 1332);
	
	var _Portal2 = _interopRequireDefault(_Portal);
	
	var _Position = __webpack_require__(/*! ./Position */ 1389);
	
	var _Position2 = _interopRequireDefault(_Position);
	
	var _RootCloseWrapper = __webpack_require__(/*! ./RootCloseWrapper */ 1396);
	
	var _RootCloseWrapper2 = _interopRequireDefault(_RootCloseWrapper);
	
	var _reactPropTypesLibElementType = __webpack_require__(/*! react-prop-types/lib/elementType */ 1331);
	
	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);
	
	/**
	 * Built on top of `<Position/>` and `<Portal/>`, the overlay component is great for custom tooltip overlays.
	 */
	
	var Overlay = (function (_React$Component) {
	  _inherits(Overlay, _React$Component);
	
	  function Overlay(props, context) {
	    _classCallCheck(this, Overlay);
	
	    _React$Component.call(this, props, context);
	
	    this.state = { exited: !props.show };
	    this.onHiddenListener = this.handleHidden.bind(this);
	  }
	
	  Overlay.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    if (nextProps.show) {
	      this.setState({ exited: false });
	    } else if (!nextProps.transition) {
	      // Otherwise let handleHidden take care of marking exited.
	      this.setState({ exited: true });
	    }
	  };
	
	  Overlay.prototype.render = function render() {
	    var _props = this.props;
	    var container = _props.container;
	    var containerPadding = _props.containerPadding;
	    var target = _props.target;
	    var placement = _props.placement;
	    var shouldUpdatePosition = _props.shouldUpdatePosition;
	    var rootClose = _props.rootClose;
	    var children = _props.children;
	    var Transition = _props.transition;
	
	    var props = _objectWithoutProperties(_props, ['container', 'containerPadding', 'target', 'placement', 'shouldUpdatePosition', 'rootClose', 'children', 'transition']);
	
	    // Don't un-render the overlay while it's transitioning out.
	    var mountOverlay = props.show || Transition && !this.state.exited;
	    if (!mountOverlay) {
	      // Don't bother showing anything if we don't have to.
	      return null;
	    }
	
	    var child = children;
	
	    // Position is be inner-most because it adds inline styles into the child,
	    // which the other wrappers don't forward correctly.
	    child = _react2['default'].createElement(
	      _Position2['default'],
	      { container: container, containerPadding: containerPadding, target: target, placement: placement, shouldUpdatePosition: shouldUpdatePosition },
	      child
	    );
	
	    if (Transition) {
	      var onExit = props.onExit;
	      var onExiting = props.onExiting;
	      var onEnter = props.onEnter;
	      var onEntering = props.onEntering;
	      var onEntered = props.onEntered;
	
	      // This animates the child node by injecting props, so it must precede
	      // anything that adds a wrapping div.
	      child = _react2['default'].createElement(
	        Transition,
	        {
	          'in': props.show,
	          transitionAppear: true,
	          onExit: onExit,
	          onExiting: onExiting,
	          onExited: this.onHiddenListener,
	          onEnter: onEnter,
	          onEntering: onEntering,
	          onEntered: onEntered
	        },
	        child
	      );
	    }
	
	    // This goes after everything else because it adds a wrapping div.
	    if (rootClose) {
	      child = _react2['default'].createElement(
	        _RootCloseWrapper2['default'],
	        { onRootClose: props.onHide },
	        child
	      );
	    }
	
	    return _react2['default'].createElement(
	      _Portal2['default'],
	      { container: container },
	      child
	    );
	  };
	
	  Overlay.prototype.handleHidden = function handleHidden() {
	    this.setState({ exited: true });
	
	    if (this.props.onExited) {
	      var _props2;
	
	      (_props2 = this.props).onExited.apply(_props2, arguments);
	    }
	  };
	
	  return Overlay;
	})(_react2['default'].Component);
	
	Overlay.propTypes = _extends({}, _Portal2['default'].propTypes, _Position2['default'].propTypes, {
	
	  /**
	   * Set the visibility of the Overlay
	   */
	  show: _react2['default'].PropTypes.bool,
	
	  /**
	   * Specify whether the overlay should trigger `onHide` when the user clicks outside the overlay
	   */
	  rootClose: _react2['default'].PropTypes.bool,
	
	  /**
	   * A Callback fired by the Overlay when it wishes to be hidden.
	   *
	   * __required__ when `rootClose` is `true`.
	   *
	   * @type func
	   */
	  onHide: function onHide(props, name, cname) {
	    var pt = _react2['default'].PropTypes.func;
	
	    if (props.rootClose) pt = pt.isRequired;
	    return pt(props, name, cname);
	  },
	
	  /**
	   * A `<Transition/>` component used to animate the overlay changes visibility.
	   */
	  transition: _reactPropTypesLibElementType2['default'],
	
	  /**
	   * Callback fired before the Overlay transitions in
	   */
	  onEnter: _react2['default'].PropTypes.func,
	
	  /**
	   * Callback fired as the Overlay begins to transition in
	   */
	  onEntering: _react2['default'].PropTypes.func,
	
	  /**
	   * Callback fired after the Overlay finishes transitioning in
	   */
	  onEntered: _react2['default'].PropTypes.func,
	
	  /**
	   * Callback fired right before the Overlay transitions out
	   */
	  onExit: _react2['default'].PropTypes.func,
	
	  /**
	   * Callback fired as the Overlay begins to transition out
	   */
	  onExiting: _react2['default'].PropTypes.func,
	
	  /**
	   * Callback fired after the Overlay finishes transitioning out
	   */
	  onExited: _react2['default'].PropTypes.func
	});
	
	exports['default'] = Overlay;
	module.exports = exports['default'];

/***/ },
/* 1389 */
/*!***************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/Position.js ***!
  \***************************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _react = __webpack_require__(/*! react */ 1099);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(/*! react-dom */ 1255);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _classnames = __webpack_require__(/*! classnames */ 1292);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _utilsOwnerDocument = __webpack_require__(/*! ./utils/ownerDocument */ 1333);
	
	var _utilsOwnerDocument2 = _interopRequireDefault(_utilsOwnerDocument);
	
	var _utilsGetContainer = __webpack_require__(/*! ./utils/getContainer */ 1334);
	
	var _utilsGetContainer2 = _interopRequireDefault(_utilsGetContainer);
	
	var _utilsOverlayPositionUtils = __webpack_require__(/*! ./utils/overlayPositionUtils */ 1390);
	
	var _reactPropTypesLibMountable = __webpack_require__(/*! react-prop-types/lib/mountable */ 1329);
	
	var _reactPropTypesLibMountable2 = _interopRequireDefault(_reactPropTypesLibMountable);
	
	/**
	 * The Position component calculates the coordinates for its child, to
	 * position it relative to a `target` component or node. Useful for creating callouts and tooltips,
	 * the Position component injects a `style` props with `left` and `top` values for positioning your component.
	 *
	 * It also injects "arrow" `left`, and `top` values for styling callout arrows for giving your components
	 * a sense of directionality.
	 */
	
	var Position = (function (_React$Component) {
	  _inherits(Position, _React$Component);
	
	  function Position(props, context) {
	    _classCallCheck(this, Position);
	
	    _React$Component.call(this, props, context);
	
	    this.state = {
	      positionLeft: 0,
	      positionTop: 0,
	      arrowOffsetLeft: null,
	      arrowOffsetTop: null
	    };
	
	    this._needsFlush = false;
	    this._lastTarget = null;
	  }
	
	  Position.prototype.componentDidMount = function componentDidMount() {
	    this.updatePosition();
	  };
	
	  Position.prototype.componentWillReceiveProps = function componentWillReceiveProps() {
	    this._needsFlush = true;
	  };
	
	  Position.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
	    if (this._needsFlush) {
	      this._needsFlush = false;
	      this.updatePosition(prevProps.placement !== this.props.placement);
	    }
	  };
	
	  Position.prototype.componentWillUnmount = function componentWillUnmount() {
	    // Probably not necessary, but just in case holding a reference to the
	    // target causes problems somewhere.
	    this._lastTarget = null;
	  };
	
	  Position.prototype.render = function render() {
	    var _props = this.props;
	    var children = _props.children;
	    var className = _props.className;
	
	    var props = _objectWithoutProperties(_props, ['children', 'className']);
	
	    var _state = this.state;
	    var positionLeft = _state.positionLeft;
	    var positionTop = _state.positionTop;
	
	    var arrowPosition = _objectWithoutProperties(_state, ['positionLeft', 'positionTop']);
	
	    // These should not be forwarded to the child.
	    delete props.target;
	    delete props.container;
	    delete props.containerPadding;
	
	    var child = _react2['default'].Children.only(children);
	    return _react.cloneElement(child, _extends({}, props, arrowPosition, {
	      //do we need to also forward positionLeft and positionTop if they are set to style?
	      positionLeft: positionLeft,
	      positionTop: positionTop,
	      className: _classnames2['default'](className, child.props.className),
	      style: _extends({}, child.props.style, {
	        left: positionLeft,
	        top: positionTop
	      })
	    }));
	  };
	
	  Position.prototype.getTargetSafe = function getTargetSafe() {
	    if (!this.props.target) {
	      return null;
	    }
	
	    var target = this.props.target(this.props);
	    if (!target) {
	      // This is so we can just use === check below on all falsy targets.
	      return null;
	    }
	
	    return target;
	  };
	
	  Position.prototype.updatePosition = function updatePosition(placementChanged) {
	    var target = this.getTargetSafe();
	
	    if (!this.props.shouldUpdatePosition && target === this._lastTarget && !placementChanged) {
	      return;
	    }
	
	    this._lastTarget = target;
	
	    if (!target) {
	      this.setState({
	        positionLeft: 0,
	        positionTop: 0,
	        arrowOffsetLeft: null,
	        arrowOffsetTop: null
	      });
	
	      return;
	    }
	
	    var overlay = _reactDom2['default'].findDOMNode(this);
	    var container = _utilsGetContainer2['default'](this.props.container, _utilsOwnerDocument2['default'](this).body);
	
	    this.setState(_utilsOverlayPositionUtils.calcOverlayPosition(this.props.placement, overlay, target, container, this.props.containerPadding));
	  };
	
	  return Position;
	})(_react2['default'].Component);
	
	Position.propTypes = {
	  /**
	   * Function mapping props to a DOM node the component is positioned next to
	   *
	   */
	  target: _react2['default'].PropTypes.func,
	
	  /**
	   * "offsetParent" of the component
	   */
	  container: _react2['default'].PropTypes.oneOfType([_reactPropTypesLibMountable2['default'], _react2['default'].PropTypes.func]),
	  /**
	   * Minimum spacing in pixels between container border and component border
	   */
	  containerPadding: _react2['default'].PropTypes.number,
	  /**
	   * How to position the component relative to the target
	   */
	  placement: _react2['default'].PropTypes.oneOf(['top', 'right', 'bottom', 'left']),
	  /**
	   * Whether the position should be changed on each update
	   */
	  shouldUpdatePosition: _react2['default'].PropTypes.bool
	};
	
	Position.displayName = 'Position';
	
	Position.defaultProps = {
	  containerPadding: 0,
	  placement: 'right',
	  shouldUpdatePosition: false
	};
	
	exports['default'] = Position;
	module.exports = exports['default'];

/***/ },
/* 1390 */
/*!*********************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/utils/overlayPositionUtils.js ***!
  \*********************************************************************************************************************************************/
[2028, 1333, 1391, 1392, 1394],
/* 1391 */
/*!************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/query/offset.js ***!
  \************************************************************************************************************************/
[2029, 1306, 1349, 1301],
/* 1392 */
/*!**************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/query/position.js ***!
  \**************************************************************************************************************************/
[2030, 1342, 1391, 1393, 1394, 1395, 1336],
/* 1393 */
/*!******************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/query/offsetParent.js ***!
  \******************************************************************************************************************************/
[2031, 1342, 1301, 1336],
/* 1394 */
/*!***************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/query/scrollTop.js ***!
  \***************************************************************************************************************************/
[2032, 1349],
/* 1395 */
/*!****************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/dom-helpers/query/scrollLeft.js ***!
  \****************************************************************************************************************************/
[2033, 1349],
/* 1396 */
/*!***********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/RootCloseWrapper.js ***!
  \***********************************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _react = __webpack_require__(/*! react */ 1099);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(/*! react-dom */ 1255);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _utilsAddEventListener = __webpack_require__(/*! ./utils/addEventListener */ 1351);
	
	var _utilsAddEventListener2 = _interopRequireDefault(_utilsAddEventListener);
	
	var _utilsCreateChainedFunction = __webpack_require__(/*! ./utils/createChainedFunction */ 1397);
	
	var _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction);
	
	var _utilsOwnerDocument = __webpack_require__(/*! ./utils/ownerDocument */ 1333);
	
	var _utilsOwnerDocument2 = _interopRequireDefault(_utilsOwnerDocument);
	
	// TODO: Consider using an ES6 symbol here, once we use babel-runtime.
	var CLICK_WAS_INSIDE = '__click_was_inside';
	
	var counter = 0;
	
	function isLeftClickEvent(event) {
	  return event.button === 0;
	}
	
	function isModifiedEvent(event) {
	  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
	}
	
	function getSuppressRootClose() {
	  var id = CLICK_WAS_INSIDE + '_' + counter++;
	  return {
	    id: id,
	    suppressRootClose: function suppressRootClose(event) {
	      // Tag the native event to prevent the root close logic on document click.
	      // This seems safer than using event.nativeEvent.stopImmediatePropagation(),
	      // which is only supported in IE >= 9.
	      event.nativeEvent[id] = true;
	    }
	  };
	}
	
	var RootCloseWrapper = (function (_React$Component) {
	  _inherits(RootCloseWrapper, _React$Component);
	
	  function RootCloseWrapper(props) {
	    _classCallCheck(this, RootCloseWrapper);
	
	    _React$Component.call(this, props);
	
	    this.handleDocumentClick = this.handleDocumentClick.bind(this);
	    this.handleDocumentKeyUp = this.handleDocumentKeyUp.bind(this);
	
	    var _getSuppressRootClose = getSuppressRootClose();
	
	    var id = _getSuppressRootClose.id;
	    var suppressRootClose = _getSuppressRootClose.suppressRootClose;
	
	    this._suppressRootId = id;
	
	    this._suppressRootCloseHandler = suppressRootClose;
	  }
	
	  RootCloseWrapper.prototype.bindRootCloseHandlers = function bindRootCloseHandlers() {
	    var doc = _utilsOwnerDocument2['default'](this);
	
	    this._onDocumentClickListener = _utilsAddEventListener2['default'](doc, 'click', this.handleDocumentClick);
	
	    this._onDocumentKeyupListener = _utilsAddEventListener2['default'](doc, 'keyup', this.handleDocumentKeyUp);
	  };
	
	  RootCloseWrapper.prototype.handleDocumentClick = function handleDocumentClick(e) {
	    // This is now the native event.
	    if (e[this._suppressRootId]) {
	      return;
	    }
	
	    if (isModifiedEvent(e) || !isLeftClickEvent(e)) {
	      return;
	    }
	
	    this.props.onRootClose();
	  };
	
	  RootCloseWrapper.prototype.handleDocumentKeyUp = function handleDocumentKeyUp(e) {
	    if (e.keyCode === 27) {
	      this.props.onRootClose();
	    }
	  };
	
	  RootCloseWrapper.prototype.unbindRootCloseHandlers = function unbindRootCloseHandlers() {
	    if (this._onDocumentClickListener) {
	      this._onDocumentClickListener.remove();
	    }
	
	    if (this._onDocumentKeyupListener) {
	      this._onDocumentKeyupListener.remove();
	    }
	  };
	
	  RootCloseWrapper.prototype.componentDidMount = function componentDidMount() {
	    this.bindRootCloseHandlers();
	  };
	
	  RootCloseWrapper.prototype.render = function render() {
	    var _props = this.props;
	    var noWrap = _props.noWrap;
	    var children = _props.children;
	
	    var child = _react2['default'].Children.only(children);
	
	    if (noWrap) {
	      return _react2['default'].cloneElement(child, {
	        onClick: _utilsCreateChainedFunction2['default'](this._suppressRootCloseHandler, child.props.onClick)
	      });
	    }
	
	    // Wrap the child in a new element, so the child won't have to handle
	    // potentially combining multiple onClick listeners.
	    return _react2['default'].createElement(
	      'div',
	      { onClick: this._suppressRootCloseHandler },
	      child
	    );
	  };
	
	  RootCloseWrapper.prototype.getWrappedDOMNode = function getWrappedDOMNode() {
	    // We can't use a ref to identify the wrapped child, since we might be
	    // stealing the ref from the owner, but we know exactly the DOM structure
	    // that will be rendered, so we can just do this to get the child's DOM
	    // node for doing size calculations in OverlayMixin.
	    var node = _reactDom2['default'].findDOMNode(this);
	    return this.props.noWrap ? node : node.firstChild;
	  };
	
	  RootCloseWrapper.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.unbindRootCloseHandlers();
	  };
	
	  return RootCloseWrapper;
	})(_react2['default'].Component);
	
	exports['default'] = RootCloseWrapper;
	
	RootCloseWrapper.displayName = 'RootCloseWrapper';
	
	RootCloseWrapper.propTypes = {
	  onRootClose: _react2['default'].PropTypes.func.isRequired,
	
	  /**
	   * Passes the suppress click handler directly to the child component instead
	   * of placing it on a wrapping div. Only use when you can be sure the child
	   * properly handle the click event.
	   */
	  noWrap: _react2['default'].PropTypes.bool
	};
	module.exports = exports['default'];

/***/ },
/* 1397 */
/*!**********************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/~/react-bootstrap/~/react-overlays/lib/utils/createChainedFunction.js ***!
  \**********************************************************************************************************************************************/
165,
/* 1398 */
/*!**********************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/download-profiles-button/src/BlueprintText.jsx ***!
  \**********************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 1099);
	
	var BlueprintText = React.createClass({
	    displayName: "BlueprintText",
	
	    render: function () {
	        return React.createElement(
	            "div",
	            null,
	            React.createElement("meta", { charSet: "UTF-8" }),
	            React.createElement(
	                "title",
	                null,
	                "The Blueprint project Data Reuse statement"
	            ),
	            React.createElement(
	                "h3",
	                null,
	                "The Blueprint project Data Reuse statement"
	            ),
	            React.createElement("br", null),
	            React.createElement(
	                "p",
	                null,
	                "This document refers to the reuse of data generated by the EC funded FP7 High Impact Project, Blueprint."
	            ),
	            React.createElement(
	                "p",
	                null,
	                "Blueprint regularly released analysis results via its ftp site and makes the raw sequence data available through the sequence archives at the EMBL-EBI. Much Blueprint data is generated from samples whose data must be released through a managed access process. For these data sets external users must apply for permission to access the data from the European Genome-phenome Archive (EGA) through the Blueprint Data Access Committee.",
	                React.createElement("br", null),
	                "The Blueprint consortium expects this data to be valuable to other researchers and in keeping with Fort Lauderdale principles data users may use the data for many studies, but are expected to allow the data producers to make the first presentations and to publish the first paper with global analyses of the data."
	            ),
	            React.createElement(
	                "h5",
	                null,
	                "Global analyses of Project data"
	            ),
	            React.createElement(
	                "p",
	                null,
	                "Blueprint plans to publish global analyses of the sequencing data, epigenetic marks, expression levels and variation both in the context of normal hematopoietic cells and of those neoplastic and non-neoplastic diseases studied within th econsortium. Talks, posters, and papers on all such analyses are to be published first by the Blueprint project, by approved presenters on behalf of the Project, with the Project as author. When the first major Project paper on these analyses is published, then researchers inside and outside the Project are free to present and publish using the Project data for these and other analyses."
	            ),
	            React.createElement(
	                "h5",
	                null,
	                "Large-scale analyses of Project data"
	            ),
	            React.createElement(
	                "p",
	                null,
	                "Groups within the Project may make presentations and publish papers on more extensive analyses of topics to be included in the main analysis presentations and papers, coincident with the main project analysis presentations and papers. The major points would be included in the main Project presentations and papers, but these additional presentations and papers allow more focused discussion of methods and results. The author list would include the Consortium."
	            ),
	            React.createElement(
	                "h5",
	                null,
	                "Methods development using Project data"
	            ),
	            React.createElement(
	                "p",
	                null,
	                "Researchers who have used small amounts of Project data (<= one chromosome) may present methods development posters, talks, and papers that include these data prior to the first major Project paper, without needing Project approval or authorship, although the Project should be acknowledged. Methods presentations or papers on global analyses or analyses using large amounts of Project data, on topics that the Consortium plans to examine, would be similar to large-scale analyses of Project data: researchers within the Project may make presentations or submit papers at the same time as the main Project presentations and papers, and others could do so after the Project publishes the first major analysis paper."
	            ),
	            React.createElement(
	                "h5",
	                null,
	                "Disease studies using Project data"
	            ),
	            React.createElement(
	                "p",
	                null,
	                "Researchers may present and publish on use of Project data in specific chromosome regions (that are not of general interest) or as summaries (such as number of differentially expressed genes in cell types assayed by Blueprint) for studies on diseases not studied by BLUEPRINT without Project approval, prior to the first major Project paper being published. The Project should not be listed as an author."
	            ),
	            React.createElement(
	                "h5",
	                null,
	                "Authors who use data from the project must acknowledge Blueprint using the following wording"
	            ),
	            React.createElement(
	                "p",
	                null,
	                "This study makes use of data generated by the Blueprint Consortium. A full list of the investigators who contributed to the generation of the data is available from www.blueprint-epigenome.eu. Funding for the project was provided by the European Union's Seventh Framework Programme (FP7/2007-2013) under grant agreement no 282510 BLUEPRINT."
	            )
	        );
	    }
	});
	
	module.exports = BlueprintText;

/***/ },
/* 1399 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/src/highchartsUtils.js ***!
  \********************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	function getXAxisCategories (columnHeaders) {
	    return columnHeaders.map(function (columnHeader) {
	        return {"label": columnHeader.factorValue, "id" : columnHeader.factorValueOntologyTermId};
	    });
	}
	
	var yAxisCategoriesLinks = {};
	
	function getYAxisCategories (profiles, heatmapConfig) {
	
	    return profiles.rows.map(function (profile) {
	        yAxisCategoriesLinks[profile.name] = profile.id + "?geneQuery=" + heatmapConfig.geneQuery +
	            "&serializedFilterFactors=" + encodeURIComponent(profile.serializedFilterFactors);
	        return profile.name;
	    });
	}
	
	function getYAxisCategoriesLinks () {
	    return yAxisCategoriesLinks;
	}
	
	function compareLevels(a,b) {
	    var a1 = parseFloat( a.value );
	    var b1 = parseFloat( b.value );
	
	    //Both are numbers
	    if( !isNaN(a1) && !isNaN(b1) ) return a1 > b1 ? -1: 1;
	
	    //a IS number
	    if( !isNaN(a1) )  return -1;
	
	    //b IS number
	    if( !isNaN(b1) ) return 1;
	
	    return a.value.localeCompare(b.value);
	    // return a > b ? 1 : -1;
	}
	
	function initializeRanking(cols) {
	    var rank_array = [];
	    for(var i=0; i<cols; i++) {
	        rank_array[i] = 0;
	    }
	
	    return rank_array;
	}
	
	function rankColumns (profiles, columnHeaders) {
	    var rank_array = initializeRanking(columnHeaders.length);
	
	    for (var i=0; i < profiles.rows.length; i++) {
	        var mapped = profiles.rows[i].expressions.map(function(el, i) {
	            return { index: i, value: el.value, factorName: el.factorName, color: el.color };
	        });
	
	        //Compare the level values for each expression within each row and sort them
	        var sorted_array = mapped.sort(compareLevels);
	        // Rank levels
	        for (var j=0; j < sorted_array.length; j++) {
	            var ind = sorted_array[j].index;
	            rank_array[ind] = rank_array[ind] + j + 1;
	        }
	    }
	
	    //Avg rank_array by rows
	    var rank_avg = [];
	    for(var i=0; i<rank_array.length; i++) {
	        rank_avg[i] = rank_array[i] / profiles.rows.length;
	    }
	
	    var avg_mapped = rank_avg.map(function(el, i) {
	        return { index: i, value: el}
	    });
	
	    //Sort tissues by increasing average rank
	    var sort_tissues = avg_mapped.sort(function (a,b) {
	        return a.value-b.value;
	    });
	
	    //Modify the rows
	    for (var i=0; i< profiles.rows.length; i++) {
	        var expressions = profiles.rows[i].expressions;
	        var new_expressions = [];
	        var new_columnHeaders = [];
	
	        for (var j = 0; j < sort_tissues.length; j++) {
	            var position = sort_tissues[j].index;
	            new_expressions.push(expressions[position]);
	            new_columnHeaders.push(columnHeaders[position]);
	        }
	
	        profiles.rows[i].expressions = new_expressions;
	    }
	
	    return {
	        profiles: profiles.rows,
	        columnHeaders: new_columnHeaders
	    }
	}
	
	function applyThresholdToColumns(rows, columns, threshold) {
	
	    var percentageExpressedBelowThreshold = [];
	    var percentageExpressedAboveThreshold = [];
	    for (var i=0; i < columns.length; i++) {
	        var count = 0;
	        for (var j=0; j < rows.length; j++) {
	            var value = rows[j].expressions[i].value;
	            if(value != "NT" && value != "") {
	                count++;
	            }
	        }
	
	        var totalExpressed = {};
	        totalExpressed.total = count;
	        totalExpressed.percentage = (count / rows.length) * 100;
	        totalExpressed.index = i;
	
	        if(totalExpressed.percentage > threshold) {
	            percentageExpressedAboveThreshold.push(totalExpressed);
	        } else {
	            percentageExpressedBelowThreshold.push(totalExpressed);
	        }
	    }
	
	    //Sort by percentage
	    var percentageExpressedAboveThresholdSorted = percentageExpressedAboveThreshold.sort(function (a,b) {
	        return b.percentage-a.percentage;
	    });
	    var percentageExpressedBelowThresholdSorted = percentageExpressedBelowThreshold.sort(function (a,b) {
	        return b.percentage-a.percentage;
	    });
	
	    var percentageExpressed = percentageExpressedAboveThresholdSorted.concat(percentageExpressedBelowThresholdSorted);
	
	    //Filter and order the columns with the new percentage
	    for (var i=0; i< rows.length; i++) {
	        var expressions = rows[i].expressions;
	        var new_expressions = [];
	        var new_columnHeaders = [];
	
	        for (var j = 0; j < percentageExpressed.length; j++) {
	            var position = percentageExpressed[j].index;
	            new_expressions.push(expressions[position]);
	            new_columnHeaders.push(columns[position]);
	        }
	
	        rows[i].expressions = new_expressions;
	    }
	
	    return {
	        rows: rows,
	        columnHeaders: new_columnHeaders
	    }
	}
	
	function applyThresholdToRows(rows, columns, threshold) {
	    var percentageExpressedBelowThreshold = [];
	    var percentageExpressedAboveThreshold = [];
	
	    for (var i=0; i < rows.length; i++) {
	        var count = 0;
	        for (var j=0; j < columns.length; j++) {
	            var value = rows[i].expressions[j].value;
	            if(value != "NT" && value != "") {
	                count++;
	            }
	        }
	
	        var totalExpressed = {};
	        totalExpressed.total = count;
	        totalExpressed.percentage = (count / columns.length) * 100;
	        totalExpressed.index = i;
	
	        if(totalExpressed.percentage > threshold) {
	            percentageExpressedAboveThreshold.push(totalExpressed);
	        } else {
	            percentageExpressedBelowThreshold.push(totalExpressed);
	        }
	    }
	
	    //Sort by percentage
	    var percentageExpressedAboveThresholdSorted = percentageExpressedAboveThreshold.sort(function (a,b) {
	        return b.percentage-a.percentage;
	    });
	    var percentageExpressedBelowThresholdSorted = percentageExpressedBelowThreshold.sort(function (a,b) {
	        return b.percentage-a.percentage;
	    });
	
	    var percentageExpressed = percentageExpressedAboveThresholdSorted.concat(percentageExpressedBelowThresholdSorted);
	
	    //Filter and order the rows with the new percentage
	    var new_rows = [];
	    for (var i = 0; i < percentageExpressed.length; i++) {
	        var position = percentageExpressed[i].index;
	        new_rows.push(rows[position]);
	    }
	
	    return new_rows;
	}
	
	function rankExperiments(rows, columns) {
	
	    //Initialize ranking
	    var rank_experiments = [];
	    for(i=0; i< columns; i++) {
	        rank_experiments[i] = new Array(rows.length);
	    }
	
	    for(i=0; i< columns; i++) {
	        for (j=0; j<rows.length; j++) {
	            rank_experiments[i][j] = 0;
	        }
	    }
	
	    //Sort
	    var sorted_cols = [];
	    for (var i=0; i < columns; i++) {
	
	        var cols_expressions = [];
	        for (j = 0; j < rows.length; j++) {
	            var expr = {};
	            expr.factorName = rows[j].expressions[i].factorName;
	            expr.value = rows[j].expressions[i].value;
	            expr.index = j;
	
	            cols_expressions.push(expr)
	        }
	
	        //Compare the level values for each expression within each row and sort them
	        var sorted_profiles = cols_expressions.sort(compareLevels);
	        sorted_cols.push(sorted_profiles);
	    }
	
	    // Rank levels
	    for (var j=0; j < sorted_cols.length; j++) {
	        for (var k=0; k < rows.length; k++) {
	            var ind = sorted_cols[j][k].index;
	            rank_experiments[j][ind] = rank_experiments[j][ind] + k + 1;
	        }
	    }
	
	    //Avg rank_experiments by cols
	    var exp_rank_avg = [];
	    for (var r=0; r<rows.length; r++) {
	        var sum = 0;
	        for (var cols=0; cols<rank_experiments.length; cols++) {
	            sum = sum + rank_experiments[cols][r];
	        }
	        exp_rank_avg.push(sum/rank_experiments.length);
	    }
	
	    var exp_rank_avg_mapped = exp_rank_avg.map(function(el, i) {
	        return { index: i, value: el}
	    });
	
	    //Sort experiments by increasing average rank
	    var sort_experiments = exp_rank_avg_mapped.sort(function (a,b) {
	        return a.value-b.value;
	    });
	
	    //Replace new rows
	    var new_rows = [];
	
	    for(var i=0; i<sort_experiments.length; i++) {
	        var position = sort_experiments[i].index;
	        new_rows.push(rows[position]);
	    }
	
	    return new_rows;
	}
	
	//*------------------------------------------------------------------*
	
	exports.getXAxisCategories = getXAxisCategories;
	exports.getYAxisCategories = getYAxisCategories;
	exports.getYAxisCategoriesLinks = getYAxisCategoriesLinks;
	exports.rankColumns = rankColumns;
	exports.rankExperiments = rankExperiments;
	exports.applyThresholdtoColumns = applyThresholdToColumns;
	exports.applyThresholdToRows = applyThresholdToRows;

/***/ },
/* 1400 */
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/src/HighchartsHeatmapContainer.css ***!
  \********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../~/css-loader!./HighchartsHeatmapContainer.css */ 1401);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../~/style-loader/addStyles.js */ 1266)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../node_modules/css-loader/index.js!./HighchartsHeatmapContainer.css", function() {
				var newContent = require("!!./../node_modules/css-loader/index.js!./HighchartsHeatmapContainer.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 1401 */
/*!***********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/css-loader!./expression-atlas-heatmap-highcharts/src/HighchartsHeatmapContainer.css ***!
  \***********************************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../~/css-loader/lib/css-base.js */ 1265)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaInnerHeatmap {\n    position: relative;\n    overflow: hidden;\n}\n\n.gxaAside {\n    float: left;\n}\n\n.gxaInnerHeatmap:after {\n    clear: both;\n    content: \".\";\n    display: block;\n    visibility: hidden;\n}\n", ""]);
	
	// exports


/***/ },
/* 1402 */
/*!********************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/anatomogram/index.js ***!
  \********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/Anatomogram.jsx */ 1403);

/***/ },
/* 1403 */
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/anatomogram/src/Anatomogram.jsx ***!
  \*******************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 1099);
	var ReactDOM = __webpack_require__(/*! react-dom */ 1255);
	
	var $ = __webpack_require__(/*! jquery */ 1257);
	__webpack_require__(/*! jquery-hc-sticky */ 1404);
	__webpack_require__(/*! jquery-ui-bundle */ 1405);
	
	var Snap = __webpack_require__(/*! imports-loader?this=>window,fix=>module.exports=0!snapsvg/dist/snap.svg.js */ 1406);
	
	var EventEmitter = __webpack_require__(/*! events */ 419);
	
	//*------------------------------------------------------------------*
	
	var AnatomogramSelectImageButton = React.createClass({
	    displayName: 'AnatomogramSelectImageButton',
	
	    propTypes: {
	        anatomogramId: React.PropTypes.string.isRequired,
	        selected: React.PropTypes.bool.isRequired,
	        toggleSrcTemplate: React.PropTypes.string.isRequired,
	        onClick: React.PropTypes.func.isRequired
	    },
	
	    render: function () {
	        var selectedToggleSrc = this.props.toggleSrcTemplate + "_selected.png",
	            unselectedToggleSrc = this.props.toggleSrcTemplate + "_unselected.png";
	
	        return React.createElement(
	            'div',
	            null,
	            React.createElement('img', { ref: 'toggleButton', onClick: this._onClick, src: this.props.selected ? selectedToggleSrc : unselectedToggleSrc,
	                style: { width: "20px", height: "20px", padding: "2px" } })
	        );
	    },
	
	    componentDidMount: function () {
	        $(ReactDOM.findDOMNode(this.refs.toggleButton)).button();
	    },
	
	    _onClick: function () {
	        this.props.onClick(this.props.anatomogramId);
	    }
	});
	
	var AnatomogramSelectImageButtons = React.createClass({
	    displayName: 'AnatomogramSelectImageButtons',
	
	    propTypes: {
	        selectedId: React.PropTypes.string.isRequired,
	        availableAnatomograms: React.PropTypes.array.isRequired,
	        onClick: React.PropTypes.func.isRequired
	    },
	
	    render: function () {
	        if (this.props.availableAnatomograms.length > 1) {
	            var selectedId = this.props.selectedId,
	                onClick = this.props.onClick;
	            var anatomogramSelectImageButtons = this.props.availableAnatomograms.map(function (availableAnatomogram) {
	                return React.createElement(AnatomogramSelectImageButton, { key: availableAnatomogram.id + "_toggle",
	                    anatomogramId: availableAnatomogram.id, selected: selectedId === availableAnatomogram.id, toggleSrcTemplate: availableAnatomogram.toggleSrcTemplate, onClick: onClick });
	            });
	
	            return React.createElement(
	                'span',
	                null,
	                anatomogramSelectImageButtons
	            );
	        } else {
	            return null;
	        }
	    }
	
	});
	
	var AnatomogramImageParts = React.createClass({
	    displayName: 'AnatomogramImageParts',
	
	    propTypes: {
	        idsExpressedInExperiment: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        idsHeatmapWantsHighlighted: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        idsMousedOver: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        idsNotHighlighted: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        expressedTissueColour: React.PropTypes.string.isRequired,
	        hoveredTissueColour: React.PropTypes.string.isRequired
	    },
	
	    getInitialState: function () {
	        return { toDraw: [].concat(AnatomogramImageParts.idsThatShouldBeStronglyHighlighted(this.props).map(this._highlightStrongly), this.props.idsExpressedInExperiment.map(this._highlightSlightly), this.props.idsNotHighlighted.map(this._highlightAsBackground)) };
	    },
	
	    render: function () {
	        return React.createElement('span', null);
	    },
	
	    _highlightStrongly: function (svgPathId) {
	        return { id: svgPathId, colour: this.props.hoveredTissueColour, opacity: 0.7 };
	    },
	
	    _highlightSlightly: function (svgPathId) {
	        return { id: svgPathId, colour: this.props.expressedTissueColour, opacity: 0.7 };
	    },
	
	    _highlightAsBackground: function (svgPathId) {
	        return { id: svgPathId, colour: "gray", opacity: 0.5 };
	    },
	
	    componentWillReceiveProps: function (nextProps) {
	        var oldStrong = AnatomogramImageParts.idsThatShouldBeStronglyHighlighted(this.props);
	        var newStrong = AnatomogramImageParts.idsThatShouldBeStronglyHighlighted(nextProps);
	        var oldWeak = this.props.idsExpressedInExperiment;
	        var newWeak = nextProps.idsExpressedInExperiment;
	
	        var toDraw = [].concat(
	        //ids that heatmap wants highlighted are the most highlighted
	        newStrong.filter(function (id) {
	            return oldStrong.indexOf(id) < 0;
	        }).map(this._highlightStrongly),
	        //ids that are expressed in the experiment are highlighted with a weaker colour, often the same as background
	        newWeak.filter(function (id) {
	            return newStrong.indexOf(id) < 0;
	        }).filter(function (id) {
	            return oldWeak.indexOf(id) < 0;
	        }.bind(this)).map(this._highlightSlightly), nextProps.idsNotHighlighted.filter(function (id) {
	            return this.props.idsNotHighlighted.indexOf(id) < 0;
	        }.bind(this)).map(this._highlightAsBackground));
	
	        this.setState({ toDraw: toDraw });
	    },
	
	    statics: {
	        idsThatShouldBeStronglyHighlighted(properties) {
	            return properties.idsHeatmapWantsHighlighted.concat(properties.idsMousedOver);
	        }
	    }
	});
	
	var AnatomogramImage = React.createClass({
	    displayName: 'AnatomogramImage',
	
	    propTypes: {
	        file: React.PropTypes.string.isRequired,
	        height: React.PropTypes.string.isRequired,
	        expressedFactors: React.PropTypes.arrayOf(React.PropTypes.string),
	        expressedFactorsPerRow: React.PropTypes.object.isRequired,
	        allSvgPathIds: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        expressedTissueColour: React.PropTypes.string.isRequired,
	        hoveredTissueColour: React.PropTypes.string.isRequired
	    },
	
	    getInitialState: function () {
	        return {
	            hoveredPathId: null,
	            hoveredRowId: null,
	            mousedOverSvgIds: []
	        };
	    },
	
	    componentWillReceiveProps: function (nextProps) {
	        this._loadAnatomogram(nextProps.file);
	    },
	
	    componentDidMount: function () {
	        this._loadAnatomogram(this.props.file);
	        this._draw();
	    },
	
	    componentDidUpdate: function () {
	        this._draw();
	    },
	
	    _draw: function () {
	        var svg = Snap(ReactDOM.findDOMNode(this.refs.anatomogram)).select("g");
	        if (svg !== null) {
	            this._drawOnSvg(svg, this.refs.imageParts.state.toDraw);
	            this.refs.imageParts.setState({ toDraw: [] });
	        }
	    },
	    _drawInitialLayout: function (svg) {
	        this._drawOnSvg(svg, this.refs.imageParts.getInitialState().toDraw);
	        this.refs.imageParts.setState({ toDraw: [] });
	    },
	
	    _drawOnSvg: function (svg, instructions) {
	        instructions.forEach(function (instruction) {
	            this._highlightOrganismParts(svg, instruction.id, instruction.colour, instruction.opacity);
	        }.bind(this));
	    },
	
	    render: function () {
	        var idsExpressedInExperiment = [],
	            idsHoveredOver = [],
	            idsHeatmapWantsHighlighted = [],
	            idsNotHighlighted = [];
	        for (var i = 0; i < this.props.allSvgPathIds.length; i++) {
	            var id = this.props.allSvgPathIds[i];
	            if (this.state.mousedOverSvgIds.indexOf(id) > -1) {
	                idsHoveredOver.push(id);
	            } else if (this._hoveredRowContainsPathId(id) || this.state.hoveredPathId === id) {
	                idsHeatmapWantsHighlighted.push(id);
	            } else if (this.props.expressedFactors.indexOf(id) > -1) {
	                idsExpressedInExperiment.push(id);
	            } else {
	                idsNotHighlighted.push(id);
	            }
	        }
	
	        return React.createElement(
	            'span',
	            null,
	            React.createElement('svg', { ref: 'anatomogram', style: { display: "table-cell", width: "230px", height: this.props.height + "px" } }),
	            React.createElement(AnatomogramImageParts, { ref: 'imageParts', key: this.props.file,
	                idsExpressedInExperiment: idsExpressedInExperiment,
	                idsHeatmapWantsHighlighted: idsHeatmapWantsHighlighted,
	                idsMousedOver: idsHoveredOver,
	                idsNotHighlighted: idsNotHighlighted,
	                expressedTissueColour: this.props.expressedTissueColour,
	                hoveredTissueColour: this.props.hoveredTissueColour })
	        );
	    },
	
	    _highlightPath: function (svgPathId) {
	        this.setState({ hoveredPathId: svgPathId });
	    },
	
	    _highlightRow: function (rowId) {
	        this.setState({ hoveredRowId: rowId });
	    },
	
	    _loadAnatomogram: function (svgFile) {
	
	        var svgCanvas = Snap(ReactDOM.findDOMNode(this.refs.anatomogram)),
	            $svgCanvas = $(ReactDOM.findDOMNode(this.refs.anatomogram)),
	            allElements = svgCanvas.selectAll("*");
	
	        if (allElements) {
	            allElements.remove();
	        }
	
	        var displayAllOrganismPartsCallback = this._drawInitialLayout;
	        var registerHoverEventsCallback = this._registerHoverEvents;
	        Snap.load(svgFile, function (fragment) {
	            var g = fragment.select("g");
	            g.transform("S1.6,0,0");
	            displayAllOrganismPartsCallback(g);
	            registerHoverEventsCallback(g);
	            svgCanvas.append(g);
	            var img = fragment.select("#ccLogo");
	            var heightTranslate = $svgCanvas.height() - 15;
	            var widthTranslate = $svgCanvas.width() / 2 - 40;
	            img.transform("t" + widthTranslate + "," + heightTranslate);
	            svgCanvas.append(img);
	        });
	    },
	
	    _hoveredRowContainsPathId: function (svgPathId) {
	        return this.state.hoveredRowId && this.props.expressedFactorsPerRow.hasOwnProperty(this.state.hoveredRowId) && this.props.expressedFactorsPerRow[this.state.hoveredRowId].indexOf(svgPathId) > -1;
	    },
	
	    _registerHoverEvents: function (svg) {
	        if (svg) {
	            // Sometimes svg is null... why?
	            var mouseoverCallback = function (svgPathId) {
	                this.props.eventEmitter.emit('gxaAnatomogramTissueMouseEnter', svgPathId);
	                this.setState(function (previousState, currentProps) {
	                    var a = [].concat(previousState.mousedOverSvgIds);
	                    a.push(svgPathId);
	                    while (a.length > 5) {
	                        a.shift();
	                    }
	                    return { mousedOverSvgIds: a };
	                });
	            }.bind(this);
	            var mouseoutCallback = function (svgPathId) {
	                this.props.eventEmitter.emit('gxaAnatomogramTissueMouseLeave', svgPathId);
	                this.setState(function (previousState, currentProps) {
	                    var a = previousState.mousedOverSvgIds.map(function (el) {
	                        return el === svgPathId ? "" : el;
	                    });
	                    return { mousedOverSvgIds: a };
	                });
	            }.bind(this);
	
	            this.props.allSvgPathIds.forEach(function (svgPathId) {
	                var svgElement = svg.select("#" + svgPathId);
	                if (svgElement) {
	                    svgElement.mouseover(function () {
	                        mouseoverCallback(svgPathId);
	                    });
	                    svgElement.mouseout(function () {
	                        mouseoutCallback(svgPathId);
	                    });
	                }
	            }, this);
	        }
	    },
	
	    _highlightOrganismParts: function (svg, svgPathId, colour, opacity) {
	        AnatomogramImage._recursivelyChangeProperties(svg.select("#" + svgPathId), colour, opacity);
	    },
	
	    statics: {
	        _recursivelyChangeProperties: function (svgElement, colour, opacity) {
	
	            if (svgElement) {
	                var innerElements = svgElement.selectAll("*");
	
	                if (innerElements.length > 0) {
	                    innerElements.forEach(function (innerElement) {
	                        AnatomogramImage._recursivelyChangeProperties(innerElement);
	                    });
	                }
	
	                svgElement.attr({ "fill": colour, "fill-opacity": opacity });
	            }
	        },
	        _recursivelySelectElements: function (svgElement) {
	            if (!svgElement) {
	                return [];
	            }
	
	            var innerElements = svgElement.selectAll("*");
	            if (innerElements.length === 0) {
	                return [svgElement];
	            } else {
	                var allElements = [];
	                innerElements.forEach(function (innerElement) {
	                    allElements = allElements.concat(AnatomogramImage._recursivelySelectElements(innerElement));
	                });
	                return allElements;
	            }
	        }
	    }
	});
	
	var Anatomogram = React.createClass({
	    displayName: 'Anatomogram',
	
	
	    propTypes: {
	        anatomogramData: React.PropTypes.object.isRequired,
	        expressedTissueColour: React.PropTypes.string.isRequired,
	        hoveredTissueColour: React.PropTypes.string.isRequired,
	        profileRows: React.PropTypes.arrayOf(React.PropTypes.shape({
	            id: React.PropTypes.string,
	            name: React.PropTypes.string.isRequired,
	            expressions: React.PropTypes.arrayOf(React.PropTypes.shape({
	                factorName: React.PropTypes.string,
	                color: React.PropTypes.string,
	                value: React.PropTypes.number, // missing represents "NA"/"NT"
	                svgPathId: React.PropTypes.string
	            })).isRequired
	        })).isRequired,
	        eventEmitter: React.PropTypes.instanceOf(EventEmitter),
	        atlasBaseURL: React.PropTypes.string.isRequired
	    },
	
	    getInitialState: function () {
	
	        var availableAnatomograms = [];
	        if (this.props.anatomogramData.maleAnatomogramFile) {
	            availableAnatomograms.push({ id: "male",
	                anatomogramFile: this.props.atlasBaseURL + "/resources/svg/" + this.props.anatomogramData.maleAnatomogramFile,
	                toggleSrcTemplate: this.props.atlasBaseURL + this.props.anatomogramData.toggleButtonMaleImageTemplate });
	        }
	        if (this.props.anatomogramData.femaleAnatomogramFile) {
	            availableAnatomograms.push({ id: "female",
	                anatomogramFile: this.props.atlasBaseURL + "/resources/svg/" + this.props.anatomogramData.femaleAnatomogramFile,
	                toggleSrcTemplate: this.props.atlasBaseURL + this.props.anatomogramData.toggleButtonFemaleImageTemplate });
	        }
	        if (this.props.anatomogramData.brainAnatomogramFile) {
	            availableAnatomograms.push({ id: "brain",
	                anatomogramFile: this.props.atlasBaseURL + "/resources/svg/" + this.props.anatomogramData.brainAnatomogramFile,
	                toggleSrcTemplate: this.props.atlasBaseURL + this.props.anatomogramData.toggleButtonBrainImageTemplate });
	        }
	
	        var allExpressedFactors = [],
	            expressedFactorsPerRow = {};
	        this.props.profileRows.forEach(function (profileRow) {
	            var expressedFactors = [];
	            profileRow.expressions.forEach(function (expression) {
	                if (! typeof expression.value !== "undefined" && expression.value) {
	                    expressedFactors.push(expression.svgPathId);
	                }
	            });
	            expressedFactorsPerRow[profileRow.name] = expressedFactors;
	            allExpressedFactors = allExpressedFactors.concat(expressedFactors);
	        });
	
	        function onlyUnique(value, index, self) {
	            return self.indexOf(value) === index;
	        }
	
	        return {
	            selectedId: availableAnatomograms[0].id,
	            availableAnatomograms: availableAnatomograms,
	            expressedFactors: allExpressedFactors.filter(onlyUnique),
	            expressedFactorsPerRow: expressedFactorsPerRow
	        };
	    },
	
	    render: function () {
	        function containsHuman(str) {
	            return str.indexOf("human") > -1;
	        }
	
	        return React.createElement(
	            'div',
	            { className: 'gxaAnatomogram', style: { display: "table", paddingTop: "4px" } },
	            React.createElement(
	                'div',
	                { style: { display: "table-row" } },
	                React.createElement(
	                    'div',
	                    { style: { display: "table-cell", verticalAlign: "top" } },
	                    React.createElement(AnatomogramSelectImageButtons, { selectedId: this.state.selectedId, availableAnatomograms: this.state.availableAnatomograms, onClick: this._handleChange })
	                ),
	                React.createElement(AnatomogramImage, {
	                    key: this.state.selectedId,
	                    ref: 'currentImage',
	                    file: this._getAnatomogramSVGFile(this.state.selectedId),
	                    height: containsHuman(this.props.anatomogramData.maleAnatomogramFile) ? "375" : "265",
	                    expressedFactors: this.state.expressedFactors,
	                    expressedFactorsPerRow: this.state.expressedFactorsPerRow,
	                    allSvgPathIds: this.props.anatomogramData.allSvgPathIds,
	                    eventEmitter: this.props.eventEmitter,
	                    expressedTissueColour: this.props.expressedTissueColour,
	                    hoveredTissueColour: this.props.hoveredTissueColour })
	            )
	        );
	    },
	    _registerListenerIfNecessary(name, fn) {
	        if (this.props.eventEmitter && this.props.eventEmitter._events && !this.props.eventEmitter._events.hasOwnProperty(name)) {
	            this.props.eventEmitter.addListener(name, fn);
	        }
	    },
	
	    componentDidMount: function () {
	        this._registerListenerIfNecessary("gxaHeatmapColumnHoverChange", this._highlightPath);
	        this._registerListenerIfNecessary("gxaHeatmapRowHoverChange", this._highlightRow);
	    },
	
	    componentDidUpdate: function () {
	        this._registerListenerIfNecessary("gxaHeatmapColumnHoverChange", this._highlightPath);
	        this._registerListenerIfNecessary("gxaHeatmapRowHoverChange", this._highlightRow);
	    },
	
	    _handleChange: function (newSelectedId) {
	        if (newSelectedId !== this.state.selectedId) {
	            this.setState({ selectedId: newSelectedId });
	        }
	    },
	
	    _highlightPath: function (svgPathId) {
	        this.refs.currentImage._highlightPath(svgPathId);
	    },
	
	    _highlightRow: function (rowId) {
	        this.refs.currentImage._highlightRow(rowId);
	    },
	
	    _getAnatomogramSVGFile: function (id) {
	        for (var i = 0; i < this.state.availableAnatomograms.length; i++) {
	            if (id === this.state.availableAnatomograms[i].id) {
	                return this.state.availableAnatomograms[i].anatomogramFile;
	            }
	        }
	    }
	
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = Anatomogram;

/***/ },
/* 1404 */
/*!**************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/anatomogram/~/jquery-hc-sticky/jquery.hc-sticky.js ***!
  \**************************************************************************************************/
[2039, 1257],
/* 1405 */
/*!*******************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts/~/anatomogram/~/jquery-ui-bundle/jquery-ui.js ***!
  \*******************************************************************************************/
[2036, 1257],
/* 1406 */
/*!********************************************************************************************************************************************!*\
  !*** ./~/imports-loader?this=>window,fix=>module.exports=0!./expression-atlas-heatmap-highcharts/~/anatomogram/~/snapsvg/dist/snap.svg.js ***!
  \********************************************************************************************************************************************/
420
]);
//# sourceMappingURL=expressionAtlasHeatmapHighcharts.bundle.js.map