var expressionAtlasHeatmapHighchartsOld =
webpackJsonp_name_([5],{

/***/ 0:
/*!**********************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/index.js ***!
  \**********************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/highchartsHeatmapRenderer.js */ 1553);


/***/ },

/***/ 1553:
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/src/highchartsHeatmapRenderer.js ***!
  \**********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var React = __webpack_require__(/*! react */ 1554);
	var ReactDOM = __webpack_require__(/*! react-dom */ 1710);
	
	var EventEmitter = __webpack_require__(/*! events */ 483);
	
	//*------------------------------------------------------------------*
	
	var HighchartsHeatmapContainer = __webpack_require__(/*! ./HighchartsHeatmapContainer.jsx */ 1711);
	
	//*------------------------------------------------------------------*
	
	/**
	 * @param {Object}      options
	 * @param {string}          options.proxyPrefix - Proxy URL with protocol: required by CTTV
	 * @param {boolean=}        options.disableGoogleAnalytics - Disable Google Analytics: required by CTTV
	 * @param {string=}         options.atlasHost - Atlas host with port (note: donâ€™t include port)
	 * @param {string}          options.params
	 * @param {boolean}         options.analyticsSearch
	 * @param {boolean=}        options.isMultiExperiment
	 * @param {boolean=}        options.showAnatomogram
	 * @param {boolean=}        options.isWidget
	 * @param {string | Object} options.target - a <div> id or a DOM element, as returned by ReactDOM.findDOMNode()
	 * @param {function}        options.fail - Callback to run if the AJAX request to the server fails. (jqXHR, textStatus)
	 */
	exports.render = function(options) {
	
	    var protocol = window.location.protocol + "//",
	        atlasHost = options.atlasHost === undefined ? "www.ebi.ac.uk" : options.atlasHost,
	        atlasPath = "/gxa";
	
	    var linksAtlasBaseURL = protocol + atlasHost + atlasPath,
	        atlasBaseURL = options.proxyPrefix ? options.proxyPrefix + "/" + atlasHost + atlasPath : linksAtlasBaseURL;
	
	    var endpointPath =  options.isMultiExperiment ? "/widgets/heatmap/baselineAnalytics" : "/widgets/heatmap/referenceExperiment";
	
	    var sourceURL = atlasBaseURL + endpointPath + "?" + options.params;
	
	    var ensemblEventEmitter = new EventEmitter();
	    ensemblEventEmitter.setMaxListeners(0);
	    var anatomogramEventEmitter = new EventEmitter();
	    anatomogramEventEmitter.setMaxListeners(0);
	
	    ReactDOM.render(
	        React.createElement(
	            HighchartsHeatmapContainer,
	            {
	                sourceURL: sourceURL,
	                atlasBaseURL: atlasBaseURL,
	                linksAtlasBaseURL: linksAtlasBaseURL,
	                showAnatomogram: options.showAnatomogram === undefined ? true : options.showAnatomogram,
	                isWidget: options.isWidget === undefined ? true : options.isWidget,
	                isMultiExperiment: options.isMultiExperiment,
	                disableGoogleAnalytics: options.disableGoogleAnalytics === undefined ? false : options.disableGoogleAnalytics,
	                fail: options.fail,
	                ensemblEventEmitter: ensemblEventEmitter,
	                anatomogramEventEmitter:anatomogramEventEmitter
	            }
	        ),
	        (typeof options.target === "string") ? document.getElementById(options.target) : options.target
	    );
	};


/***/ },

/***/ 1554:
/*!******************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/react.js ***!
  \******************************************************************/
[2242, 1555],

/***/ 1555:
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/React.js ***!
  \**********************************************************************/
[2243, 1556, 1700, 1704, 1591, 1709],

/***/ 1556:
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactDOM.js ***!
  \*************************************************************************/
[2244, 1557, 1558, 1623, 1597, 1580, 1570, 1602, 1606, 1698, 1643, 1699, 1577, 1561],

/***/ 1557:
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactCurrentOwner.js ***!
  \**********************************************************************************/
5,

/***/ 1558:
/*!**************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactDOMTextComponent.js ***!
  \**************************************************************************************/
[2245, 1559, 1574, 1578, 1580, 1591, 1573, 1572, 1622],

/***/ 1559:
/*!**************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/DOMChildrenOperations.js ***!
  \**************************************************************************************/
[2246, 1560, 1568, 1570, 1571, 1572, 1565],

/***/ 1560:
/*!***********************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/Danger.js ***!
  \***********************************************************************/
[2247, 1561, 1562, 1567, 1566, 1565],

/***/ 1561:
/*!********************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/ExecutionEnvironment.js ***!
  \********************************************************************************************/
9,

/***/ 1562:
/*!*********************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/createNodesFromMarkup.js ***!
  \*********************************************************************************************/
[2248, 1561, 1563, 1566, 1565],

/***/ 1563:
/*!********************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/createArrayFromMixed.js ***!
  \********************************************************************************************/
[2249, 1564],

/***/ 1564:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/toArray.js ***!
  \*******************************************************************************/
[2250, 1565],

/***/ 1565:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/invariant.js ***!
  \*********************************************************************************/
13,

/***/ 1566:
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/getMarkupWrap.js ***!
  \*************************************************************************************/
[2251, 1561, 1565],

/***/ 1567:
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/emptyFunction.js ***!
  \*************************************************************************************/
15,

/***/ 1568:
/*!*******************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactMultiChildUpdateTypes.js ***!
  \*******************************************************************************************/
[2252, 1569],

/***/ 1569:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/keyMirror.js ***!
  \*********************************************************************************/
[2253, 1565],

/***/ 1570:
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactPerf.js ***!
  \**************************************************************************/
18,

/***/ 1571:
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/setInnerHTML.js ***!
  \*****************************************************************************/
[2254, 1561],

/***/ 1572:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/setTextContent.js ***!
  \*******************************************************************************/
[2255, 1561, 1573, 1571],

/***/ 1573:
/*!********************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/escapeTextContentForBrowser.js ***!
  \********************************************************************************************/
21,

/***/ 1574:
/*!**************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/DOMPropertyOperations.js ***!
  \**************************************************************************************/
[2256, 1575, 1570, 1576, 1577],

/***/ 1575:
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/DOMProperty.js ***!
  \****************************************************************************/
[2257, 1565],

/***/ 1576:
/*!**********************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/quoteAttributeValueForBrowser.js ***!
  \**********************************************************************************************/
[2258, 1573],

/***/ 1577:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/warning.js ***!
  \*******************************************************************************/
[2259, 1567],

/***/ 1578:
/*!*************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactComponentBrowserEnvironment.js ***!
  \*************************************************************************************************/
[2260, 1579, 1580],

/***/ 1579:
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactDOMIDOperations.js ***!
  \*************************************************************************************/
[2261, 1559, 1574, 1580, 1570, 1565],

/***/ 1580:
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactMount.js ***!
  \***************************************************************************/
[2262, 1575, 1581, 1557, 1593, 1594, 1596, 1597, 1599, 1600, 1570, 1602, 1605, 1606, 1591, 1610, 1611, 1614, 1565, 1571, 1619, 1622, 1577],

/***/ 1581:
/*!*****************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactBrowserEventEmitter.js ***!
  \*****************************************************************************************/
[2263, 1582, 1583, 1584, 1589, 1570, 1590, 1591, 1592],

/***/ 1582:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/EventConstants.js ***!
  \*******************************************************************************/
[2264, 1569],

/***/ 1583:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/EventPluginHub.js ***!
  \*******************************************************************************/
[2265, 1584, 1585, 1586, 1587, 1588, 1565, 1577],

/***/ 1584:
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/EventPluginRegistry.js ***!
  \************************************************************************************/
[2266, 1565],

/***/ 1585:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/EventPluginUtils.js ***!
  \*********************************************************************************/
[2267, 1582, 1586, 1565, 1577],

/***/ 1586:
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactErrorUtils.js ***!
  \********************************************************************************/
34,

/***/ 1587:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/accumulateInto.js ***!
  \*******************************************************************************/
[2268, 1565],

/***/ 1588:
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/forEachAccumulated.js ***!
  \***********************************************************************************/
36,

/***/ 1589:
/*!***************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactEventEmitterMixin.js ***!
  \***************************************************************************************/
[2269, 1583],

/***/ 1590:
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ViewportMetrics.js ***!
  \********************************************************************************/
38,

/***/ 1591:
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/Object.assign.js ***!
  \******************************************************************************/
39,

/***/ 1592:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/isEventSupported.js ***!
  \*********************************************************************************/
[2270, 1561],

/***/ 1593:
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactDOMFeatureFlags.js ***!
  \*************************************************************************************/
41,

/***/ 1594:
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactElement.js ***!
  \*****************************************************************************/
[2271, 1557, 1591, 1595],

/***/ 1595:
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/canDefineProperty.js ***!
  \**********************************************************************************/
43,

/***/ 1596:
/*!********************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactEmptyComponentRegistry.js ***!
  \********************************************************************************************/
44,

/***/ 1597:
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactInstanceHandles.js ***!
  \*************************************************************************************/
[2272, 1598, 1565],

/***/ 1598:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactRootIndex.js ***!
  \*******************************************************************************/
46,

/***/ 1599:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactInstanceMap.js ***!
  \*********************************************************************************/
47,

/***/ 1600:
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactMarkupChecksum.js ***!
  \************************************************************************************/
[2273, 1601],

/***/ 1601:
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/adler32.js ***!
  \************************************************************************/
49,

/***/ 1602:
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactReconciler.js ***!
  \********************************************************************************/
[2274, 1603],

/***/ 1603:
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactRef.js ***!
  \*************************************************************************/
[2275, 1604],

/***/ 1604:
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactOwner.js ***!
  \***************************************************************************/
[2276, 1565],

/***/ 1605:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactUpdateQueue.js ***!
  \*********************************************************************************/
[2277, 1557, 1594, 1599, 1606, 1591, 1565, 1577],

/***/ 1606:
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactUpdates.js ***!
  \*****************************************************************************/
[2278, 1607, 1608, 1570, 1602, 1609, 1591, 1565],

/***/ 1607:
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/CallbackQueue.js ***!
  \******************************************************************************/
[2279, 1608, 1591, 1565],

/***/ 1608:
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/PooledClass.js ***!
  \****************************************************************************/
[2280, 1565],

/***/ 1609:
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/Transaction.js ***!
  \****************************************************************************/
[2281, 1565],

/***/ 1610:
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/emptyObject.js ***!
  \***********************************************************************************/
58,

/***/ 1611:
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/containsNode.js ***!
  \************************************************************************************/
[2282, 1612],

/***/ 1612:
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/isTextNode.js ***!
  \**********************************************************************************/
[2283, 1613],

/***/ 1613:
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/isNode.js ***!
  \******************************************************************************/
61,

/***/ 1614:
/*!******************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/instantiateReactComponent.js ***!
  \******************************************************************************************/
[2284, 1615, 1620, 1621, 1591, 1565, 1577],

/***/ 1615:
/*!****************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactCompositeComponent.js ***!
  \****************************************************************************************/
[2285, 1616, 1557, 1594, 1599, 1570, 1617, 1618, 1602, 1605, 1591, 1610, 1565, 1619, 1577],

/***/ 1616:
/*!******************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactComponentEnvironment.js ***!
  \******************************************************************************************/
[2286, 1565],

/***/ 1617:
/*!***************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactPropTypeLocations.js ***!
  \***************************************************************************************/
[2287, 1569],

/***/ 1618:
/*!*******************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactPropTypeLocationNames.js ***!
  \*******************************************************************************************/
66,

/***/ 1619:
/*!*******************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/shouldUpdateReactComponent.js ***!
  \*******************************************************************************************/
67,

/***/ 1620:
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactEmptyComponent.js ***!
  \************************************************************************************/
[2288, 1594, 1596, 1602, 1591],

/***/ 1621:
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactNativeComponent.js ***!
  \*************************************************************************************/
[2289, 1591, 1565],

/***/ 1622:
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/validateDOMNesting.js ***!
  \***********************************************************************************/
[2290, 1591, 1567, 1577],

/***/ 1623:
/*!**************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactDefaultInjection.js ***!
  \**************************************************************************************/
[2291, 1624, 1632, 1635, 1636, 1637, 1561, 1641, 1642, 1578, 1644, 1645, 1558, 1670, 1673, 1597, 1580, 1677, 1682, 1683, 1684, 1693, 1694],

/***/ 1624:
/*!***************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/BeforeInputEventPlugin.js ***!
  \***************************************************************************************/
[2292, 1582, 1625, 1561, 1626, 1628, 1630, 1631],

/***/ 1625:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/EventPropagators.js ***!
  \*********************************************************************************/
[2293, 1582, 1583, 1577, 1587, 1588],

/***/ 1626:
/*!*****************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/FallbackCompositionState.js ***!
  \*****************************************************************************************/
[2294, 1608, 1591, 1627],

/***/ 1627:
/*!***************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/getTextContentAccessor.js ***!
  \***************************************************************************************/
[2295, 1561],

/***/ 1628:
/*!******************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/SyntheticCompositionEvent.js ***!
  \******************************************************************************************/
[2296, 1629],

/***/ 1629:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/SyntheticEvent.js ***!
  \*******************************************************************************/
[2297, 1608, 1591, 1567, 1577],

/***/ 1630:
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/SyntheticInputEvent.js ***!
  \************************************************************************************/
[2298, 1629],

/***/ 1631:
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/keyOf.js ***!
  \*****************************************************************************/
79,

/***/ 1632:
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ChangeEventPlugin.js ***!
  \**********************************************************************************/
[2299, 1582, 1583, 1625, 1561, 1606, 1629, 1633, 1592, 1634, 1631],

/***/ 1633:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/getEventTarget.js ***!
  \*******************************************************************************/
81,

/***/ 1634:
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/isTextInputElement.js ***!
  \***********************************************************************************/
82,

/***/ 1635:
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ClientReactRootIndex.js ***!
  \*************************************************************************************/
83,

/***/ 1636:
/*!****************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/DefaultEventPluginOrder.js ***!
  \****************************************************************************************/
[2300, 1631],

/***/ 1637:
/*!**************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/EnterLeaveEventPlugin.js ***!
  \**************************************************************************************/
[2301, 1582, 1625, 1638, 1580, 1631],

/***/ 1638:
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/SyntheticMouseEvent.js ***!
  \************************************************************************************/
[2302, 1639, 1590, 1640],

/***/ 1639:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/SyntheticUIEvent.js ***!
  \*********************************************************************************/
[2303, 1629, 1633],

/***/ 1640:
/*!**************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/getEventModifierState.js ***!
  \**************************************************************************************/
88,

/***/ 1641:
/*!**************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/HTMLDOMPropertyConfig.js ***!
  \**************************************************************************************/
[2304, 1575, 1561],

/***/ 1642:
/*!*******************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactBrowserComponentMixin.js ***!
  \*******************************************************************************************/
[2305, 1599, 1643, 1577],

/***/ 1643:
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/findDOMNode.js ***!
  \****************************************************************************/
[2306, 1557, 1599, 1580, 1565, 1577],

/***/ 1644:
/*!*********************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactDefaultBatchingStrategy.js ***!
  \*********************************************************************************************/
[2307, 1606, 1609, 1591, 1567],

/***/ 1645:
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactDOMComponent.js ***!
  \**********************************************************************************/
[2308, 1646, 1648, 1575, 1574, 1582, 1581, 1578, 1656, 1657, 1661, 1664, 1665, 1580, 1666, 1570, 1605, 1591, 1595, 1573, 1565, 1592, 1631, 1571, 1572, 1669, 1622, 1577],

/***/ 1646:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/AutoFocusUtils.js ***!
  \*******************************************************************************/
[2309, 1580, 1643, 1647],

/***/ 1647:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/focusNode.js ***!
  \*********************************************************************************/
95,

/***/ 1648:
/*!**************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/CSSPropertyOperations.js ***!
  \**************************************************************************************/
[2310, 1649, 1561, 1570, 1650, 1652, 1653, 1655, 1577],

/***/ 1649:
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/CSSProperty.js ***!
  \****************************************************************************/
97,

/***/ 1650:
/*!*****************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/camelizeStyleName.js ***!
  \*****************************************************************************************/
[2311, 1651],

/***/ 1651:
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/camelize.js ***!
  \********************************************************************************/
99,

/***/ 1652:
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/dangerousStyleValue.js ***!
  \************************************************************************************/
[2312, 1649],

/***/ 1653:
/*!******************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/hyphenateStyleName.js ***!
  \******************************************************************************************/
[2313, 1654],

/***/ 1654:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/hyphenate.js ***!
  \*********************************************************************************/
102,

/***/ 1655:
/*!*****************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/memoizeStringOnly.js ***!
  \*****************************************************************************************/
103,

/***/ 1656:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactDOMButton.js ***!
  \*******************************************************************************/
104,

/***/ 1657:
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactDOMInput.js ***!
  \******************************************************************************/
[2314, 1579, 1658, 1580, 1606, 1591, 1565],

/***/ 1658:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/LinkedValueUtils.js ***!
  \*********************************************************************************/
[2315, 1659, 1617, 1565, 1577],

/***/ 1659:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactPropTypes.js ***!
  \*******************************************************************************/
[2316, 1594, 1618, 1567, 1660],

/***/ 1660:
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/getIteratorFn.js ***!
  \******************************************************************************/
108,

/***/ 1661:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactDOMOption.js ***!
  \*******************************************************************************/
[2317, 1662, 1664, 1591, 1577],

/***/ 1662:
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactChildren.js ***!
  \******************************************************************************/
[2318, 1608, 1594, 1567, 1663],

/***/ 1663:
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/traverseAllChildren.js ***!
  \************************************************************************************/
[2319, 1557, 1594, 1597, 1660, 1565, 1577],

/***/ 1664:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactDOMSelect.js ***!
  \*******************************************************************************/
[2320, 1658, 1580, 1606, 1591, 1577],

/***/ 1665:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactDOMTextarea.js ***!
  \*********************************************************************************/
[2321, 1658, 1579, 1606, 1591, 1565, 1577],

/***/ 1666:
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactMultiChild.js ***!
  \********************************************************************************/
[2322, 1616, 1568, 1557, 1602, 1667, 1668],

/***/ 1667:
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactChildReconciler.js ***!
  \*************************************************************************************/
[2323, 1602, 1614, 1619, 1663, 1577],

/***/ 1668:
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/flattenChildren.js ***!
  \********************************************************************************/
[2324, 1663, 1577],

/***/ 1669:
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/shallowEqual.js ***!
  \************************************************************************************/
117,

/***/ 1670:
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactEventListener.js ***!
  \***********************************************************************************/
[2325, 1671, 1561, 1608, 1597, 1580, 1606, 1591, 1633, 1672],

/***/ 1671:
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/EventListener.js ***!
  \*************************************************************************************/
[2326, 1567],

/***/ 1672:
/*!**************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/getUnboundedScrollPosition.js ***!
  \**************************************************************************************************/
120,

/***/ 1673:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactInjection.js ***!
  \*******************************************************************************/
[2327, 1575, 1583, 1616, 1674, 1620, 1581, 1621, 1570, 1598, 1606],

/***/ 1674:
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactClass.js ***!
  \***************************************************************************/
[2328, 1675, 1594, 1617, 1618, 1676, 1591, 1610, 1565, 1569, 1631, 1577],

/***/ 1675:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactComponent.js ***!
  \*******************************************************************************/
[2329, 1676, 1595, 1610, 1565, 1577],

/***/ 1676:
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactNoopUpdateQueue.js ***!
  \*************************************************************************************/
[2330, 1577],

/***/ 1677:
/*!******************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactReconcileTransaction.js ***!
  \******************************************************************************************/
[2331, 1607, 1608, 1581, 1593, 1678, 1609, 1591],

/***/ 1678:
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactInputSelection.js ***!
  \************************************************************************************/
[2332, 1679, 1611, 1647, 1681],

/***/ 1679:
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactDOMSelection.js ***!
  \**********************************************************************************/
[2333, 1561, 1680, 1627],

/***/ 1680:
/*!******************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/getNodeForCharacterOffset.js ***!
  \******************************************************************************************/
128,

/***/ 1681:
/*!****************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/getActiveElement.js ***!
  \****************************************************************************************/
129,

/***/ 1682:
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/SelectEventPlugin.js ***!
  \**********************************************************************************/
[2334, 1582, 1625, 1561, 1678, 1629, 1681, 1634, 1631, 1669],

/***/ 1683:
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ServerReactRootIndex.js ***!
  \*************************************************************************************/
131,

/***/ 1684:
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/SimpleEventPlugin.js ***!
  \**********************************************************************************/
[2335, 1582, 1671, 1625, 1580, 1685, 1629, 1686, 1687, 1638, 1690, 1691, 1639, 1692, 1567, 1688, 1565, 1631],

/***/ 1685:
/*!****************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/SyntheticClipboardEvent.js ***!
  \****************************************************************************************/
[2336, 1629],

/***/ 1686:
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/SyntheticFocusEvent.js ***!
  \************************************************************************************/
[2337, 1639],

/***/ 1687:
/*!***************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/SyntheticKeyboardEvent.js ***!
  \***************************************************************************************/
[2338, 1639, 1688, 1689, 1640],

/***/ 1688:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/getEventCharCode.js ***!
  \*********************************************************************************/
136,

/***/ 1689:
/*!****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/getEventKey.js ***!
  \****************************************************************************/
[2339, 1688],

/***/ 1690:
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/SyntheticDragEvent.js ***!
  \***********************************************************************************/
[2340, 1638],

/***/ 1691:
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/SyntheticTouchEvent.js ***!
  \************************************************************************************/
[2341, 1639, 1640],

/***/ 1692:
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/SyntheticWheelEvent.js ***!
  \************************************************************************************/
[2342, 1638],

/***/ 1693:
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/SVGDOMPropertyConfig.js ***!
  \*************************************************************************************/
[2343, 1575],

/***/ 1694:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactDefaultPerf.js ***!
  \*********************************************************************************/
[2344, 1575, 1695, 1580, 1570, 1696],

/***/ 1695:
/*!*****************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactDefaultPerfAnalysis.js ***!
  \*****************************************************************************************/
[2345, 1591],

/***/ 1696:
/*!**************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/performanceNow.js ***!
  \**************************************************************************************/
[2346, 1697],

/***/ 1697:
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/performance.js ***!
  \***********************************************************************************/
[2347, 1561],

/***/ 1698:
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactVersion.js ***!
  \*****************************************************************************/
146,

/***/ 1699:
/*!*******************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/renderSubtreeIntoContainer.js ***!
  \*******************************************************************************************/
[2348, 1580],

/***/ 1700:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactDOMServer.js ***!
  \*******************************************************************************/
[2349, 1623, 1701, 1698],

/***/ 1701:
/*!*************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactServerRendering.js ***!
  \*************************************************************************************/
[2350, 1644, 1594, 1597, 1600, 1702, 1703, 1606, 1610, 1614, 1565],

/***/ 1702:
/*!********************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactServerBatchingStrategy.js ***!
  \********************************************************************************************/
150,

/***/ 1703:
/*!************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactServerRenderingTransaction.js ***!
  \************************************************************************************************/
[2351, 1608, 1607, 1609, 1591, 1567],

/***/ 1704:
/*!********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactIsomorphic.js ***!
  \********************************************************************************/
[2352, 1662, 1675, 1674, 1705, 1594, 1706, 1659, 1698, 1591, 1708],

/***/ 1705:
/*!**********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactDOMFactories.js ***!
  \**********************************************************************************/
[2353, 1594, 1706, 1707],

/***/ 1706:
/*!**************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/ReactElementValidator.js ***!
  \**************************************************************************************/
[2354, 1594, 1617, 1618, 1557, 1595, 1660, 1565, 1577],

/***/ 1707:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/~/fbjs/lib/mapObject.js ***!
  \*********************************************************************************/
155,

/***/ 1708:
/*!**************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/onlyChild.js ***!
  \**************************************************************************/
[2355, 1594, 1565],

/***/ 1709:
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react/lib/deprecated.js ***!
  \***************************************************************************/
[2356, 1591, 1577],

/***/ 1710:
/*!**********************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react-dom/index.js ***!
  \**********************************************************************/
[2357, 1556],

/***/ 1711:
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/src/HighchartsHeatmapContainer.jsx ***!
  \************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 1554);
	
	var $ = __webpack_require__(/*! jquery */ 1712);
	__webpack_require__(/*! jQuery-ajaxTransport-XDomainRequest */ 1713);
	
	//*------------------------------------------------------------------*
	
	var HighchartsHeatmap = __webpack_require__(/*! ./HighchartsHeatmap.jsx */ 1714);
	var HighchartsUtils = __webpack_require__(/*! ./highchartsUtils.js */ 1722);
	__webpack_require__(/*! ./HighchartsHeatmapContainer.css */ 1723);
	
	var Anatomogram = __webpack_require__(/*! anatomogram */ 1725);
	
	//*------------------------------------------------------------------*
	
	var ExperimentDescription = React.createClass({
	    displayName: 'ExperimentDescription',
	
	    propTypes: {
	        linksAtlasBaseURL: React.PropTypes.string.isRequired,
	        experiment: React.PropTypes.shape({
	            URL: React.PropTypes.string.isRequired,
	            description: React.PropTypes.string.isRequired,
	            allSpecies: React.PropTypes.string.isRequired
	        }).isRequired
	    },
	
	    render: function () {
	
	        var experimentURL = this.props.linksAtlasBaseURL + this.props.experiment.URL;
	
	        return React.createElement(
	            'div',
	            { style: { width: "100%", paddingBottom: "20px" } },
	            React.createElement(
	                'div',
	                { id: 'experimentDescription' },
	                React.createElement(
	                    'a',
	                    { id: 'goto-experiment', className: 'gxaThickLink', title: 'Experiment Page', href: experimentURL },
	                    this.props.experiment.description
	                )
	            ),
	            React.createElement(
	                'div',
	                { id: 'experimentOrganisms' },
	                'Organism(s): ',
	                React.createElement(
	                    'span',
	                    { style: { "fontStyle": "italic" } },
	                    this.props.experiment.allSpecies
	                )
	            )
	        );
	    }
	
	});
	
	var HighchartsHeatmapContainer = React.createClass({
	    displayName: 'HighchartsHeatmapContainer',
	
	    propTypes: {
	        sourceURL: React.PropTypes.string.isRequired,
	        atlasBaseURL: React.PropTypes.string.isRequired,
	        linksAtlasBaseURL: React.PropTypes.string.isRequired,
	        showAnatomogram: React.PropTypes.bool.isRequired,
	        isWidget: React.PropTypes.bool.isRequired,
	        isMultiExperiment: React.PropTypes.bool.isRequired,
	        disableGoogleAnalytics: React.PropTypes.bool.isRequired,
	        fail: React.PropTypes.func,
	        ensemblEventEmitter: React.PropTypes.object.isRequired,
	        anatomogramEventEmitter: React.PropTypes.object.isRequired
	    },
	
	    render: function () {
	
	        var geneURL = this.props.linksAtlasBaseURL + "/query" + "?geneQuery=" + this.state.heatmapConfig.geneQuery + "&exactMatch=" + this.state.heatmapConfig.isExactMatch + "&organism=" + this.state.heatmapConfig.species;
	
	        var display = this.props.showAnatomogram ? "block" : "none";
	        var marginLeft = this.props.showAnatomogram ? "270px" : "0";
	
	        return React.createElement(
	            'div',
	            { ref: 'this' },
	            this.state.experimentData ? React.createElement(ExperimentDescription, { experiment: this.state.experimentData, linksAtlasBaseURL: this.props.linksAtlasBaseURL }) : null,
	            this.state.heatmapConfig ? React.createElement(
	                'div',
	                { id: 'heatmap-anatomogram', className: 'gxaHeatmapAnatomogramRow' },
	                React.createElement(
	                    'div',
	                    { ref: 'anatomogramEnsembl', className: 'gxaAside', style: { display: display } },
	                    this.props.showAnatomogram && this.state.anatomogramData && Object.keys(this.state.anatomogramData).length ? React.createElement(Anatomogram, { anatomogramData: this.state.anatomogramData,
	                        expressedTissueColour: "gray", hoveredTissueColour: "red",
	                        profileRows: this.state.profiles.rows, eventEmitter: this.props.anatomogramEventEmitter, atlasBaseURL: this.props.atlasBaseURL }) : null
	                ),
	                React.createElement(
	                    'div',
	                    { id: 'heatmap-react', className: 'gxaInnerHeatmap', style: { marginLeft: marginLeft, display: "block" } },
	                    React.createElement(HighchartsHeatmap, {
	                        profiles: this.state.profiles,
	                        anatomogramEventEmitter: this.props.anatomogramEventEmitter,
	                        ensemblEventEmitter: this.props.ensemblEventEmitter,
	                        atlasBaseURL: this.props.atlasBaseURL,
	                        xAxisCategories: this.state.xAxisCategories,
	                        yAxisCategories: this.state.yAxisCategories,
	                        yAxisCategoriesLinks: this.state.yAxisCategoriesLinks,
	                        seriesDataNA: this.state.seriesDataNA,
	                        seriesDataNAString: this.state.seriesDataNAString,
	                        seriesDataBelowCutoff: this.state.seriesDataBelowCutoff,
	                        seriesDataBelowCutoffString: this.state.seriesDataBelowCutoffString,
	                        seriesDataRanges: this.state.seriesDataRanges
	                    })
	                )
	            ) : React.createElement(
	                'div',
	                { ref: 'loadingImagePlaceholder' },
	                React.createElement('img', { src: this.props.atlasBaseURL + "/resources/images/loading.gif" })
	            ),
	            this.props.isWidget ? React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    'p',
	                    null,
	                    React.createElement(
	                        'a',
	                        { href: geneURL },
	                        'See more expression data at Expression Atlas.'
	                    ),
	                    React.createElement('br', null),
	                    'This expression view is provided by ',
	                    React.createElement(
	                        'a',
	                        { href: this.props.linksAtlasBaseURL },
	                        'Expression Atlas'
	                    ),
	                    '.',
	                    React.createElement('br', null),
	                    'Please direct any queries or feedback to ',
	                    React.createElement(
	                        'a',
	                        { href: 'mailto:arrayexpress-atlas@ebi.ac.uk' },
	                        'arrayexpress-atlas@ebi.ac.uk'
	                    )
	                )
	            ) : null
	        );
	    },
	
	    getInitialState: function () {
	        return {
	            heatmapConfig: '',
	            profiles: {
	                rows: [],
	                minExpressionLevel: 0,
	                maxExpressionLevel: 0
	            },
	            jsonCoexpressions: [],
	            geneSetProfiles: {},
	            anatomogramData: {},
	
	            xAxisCategories: {},
	            yAxisCategories: {},
	            yAxisCategoriesLinks: {},
	
	            seriesDataNA: [],
	            seriesDataNAString: "NA",
	            seriesDataBelowCutoff: [],
	            seriesDataBelowCutoffString: "Below cutoff",
	
	            seriesDataRanges: []
	        };
	    },
	
	    componentDidMount: function () {
	        var httpRequest = {
	            url: this.props.sourceURL,
	            dataType: "json",
	            method: "GET"
	        };
	
	        $.ajax(httpRequest).done(function (data) {
	            if (this.isMounted()) {
	
	                var orderedData = HighchartsUtils.rankColumns(data.profiles, data.columnHeaders);
	                var filteredDataByThreshold = HighchartsUtils.applyThresholdtoColumns(orderedData.profiles, orderedData.columnHeaders, 40);
	                var rankedExperiments = HighchartsUtils.rankExperiments(filteredDataByThreshold.rows, filteredDataByThreshold.columnHeaders.length);
	                if (this.props.isMultiExperiment) {
	                    data.profiles.rows = HighchartsUtils.applyThresholdToRows(rankedExperiments, filteredDataByThreshold.columnHeaders, 40);
	                } else {
	                    //We don't apply threshold for reference experiments
	                    data.profiles.rows = rankedExperiments;
	                }
	
	                var xAxisCategories = HighchartsUtils.getXAxisCategories(filteredDataByThreshold.columnHeaders);
	                var yAxisCategories = HighchartsUtils.getYAxisCategories(data.profiles, data.config);
	                var yAxisCategoriesLinks = HighchartsUtils.getYAxisCategoriesLinks();
	
	                var seriesDataNA = [],
	                    seriesDataNAString = "NA";
	
	                var seriesDataBelowCutoff = [],
	                    seriesDataBelowCutoffString = "Below cutoff";
	
	                var seriesDataRanges = [{
	                    label: "Low",
	                    from: 0,
	                    to: 10,
	                    seriesData: []
	                }, {
	                    label: "Medium",
	                    from: 10,
	                    to: 1000,
	                    seriesData: []
	                }, {
	                    label: "High",
	                    from: 1000,
	                    to: 100000,
	                    seriesData: []
	                }];
	
	                var experimentTypes = [];
	
	                for (var i = 0; i < data.profiles.rows.length; i++) {
	                    if (experimentTypes.indexOf(data.profiles.rows[i].experimentType) === -1) {
	                        experimentTypes.push(data.profiles.rows[i].experimentType);
	                    }
	                }
	
	                for (var i = 0; i < experimentTypes.length; i++) {
	                    var experimentTypeSeriesData = [];
	
	                    for (var j = 0; j < yAxisCategories.length; j++) {
	                        if (data.profiles.rows[j].experimentType !== experimentTypes[i]) {
	                            continue;
	                        }
	
	                        for (var k = 0; k < xAxisCategories.length; k++) {
	                            var literalValue = data.profiles.rows[j].expressions[k].value;
	
	                            if (literalValue === "") {
	                                seriesDataBelowCutoff.push([k, j, seriesDataBelowCutoffString]);
	                            } else if (literalValue === "NT") {
	                                seriesDataNA.push([k, j, seriesDataNAString]);
	                            } else {
	                                var value = parseFloat(literalValue);
	                                if (!isNaN(value)) {
	                                    experimentTypeSeriesData.push([k, j, value]);
	                                }
	                            }
	                        }
	                    }
	
	                    experimentTypeSeriesData.sort(function (a, b) {
	                        return a[2] - b[2];
	                    });
	
	                    var experimentTypeMax = experimentTypeSeriesData[experimentTypeSeriesData.length - 1][2];
	
	                    for (var k = 0; k < seriesDataRanges.length; k++) {
	                        //seriesDataRanges[k].seriesData.concat(
	                        experimentTypeSeriesData.filter(function (datum) {
	                            return datum[2] > seriesDataRanges[k].from * experimentTypeMax && datum[2] <= seriesDataRanges[k].to * experimentTypeMax;
	                        }).forEach(function (filteredDatum) {
	                            seriesDataRanges[k].seriesData.push(filteredDatum);
	                        });
	                    }
	                }
	
	                this.setState({
	                    heatmapConfig: data.config,
	                    columnHeaders: data.columnHeaders,
	                    nonExpressedColumnHeaders: data.nonExpressedColumnHeaders,
	                    profiles: data.profiles,
	                    jsonCoexpressions: data.jsonCoexpressions,
	                    geneSetProfiles: data.geneSetProfiles,
	                    anatomogramData: data.anatomogram,
	                    experimentData: data.experiment,
	
	                    xAxisCategories: xAxisCategories,
	                    yAxisCategories: yAxisCategories,
	                    yAxisCategoriesLinks: yAxisCategoriesLinks,
	
	                    seriesDataBelowCutoff: seriesDataBelowCutoff,
	                    seriesDataBelowCutoffString: seriesDataBelowCutoffString,
	                    seriesDataNA: seriesDataNA,
	                    seriesDataNAString: seriesDataNAString,
	                    seriesDataRanges: seriesDataRanges
	
	                });
	            }
	        }.bind(this)).fail(function (jqXHR, textStatus, errorThrown) {
	            if (this.props.fail) {
	                this.props.fail(jqXHR, textStatus, errorThrown);
	            } else if (textStatus === "parsererror") {
	                $(this.refs.this.getDOMNode()).html("<div class='gxaError'>Could not parse JSON response</div>");
	            } else {
	                $(this.refs.this.getDOMNode()).html(jqXHR.responseText);
	            }
	        }.bind(this));
	
	        if (!this.props.disableGoogleAnalytics) {
	            (function (i, s, o, g, r, a, m) {
	                i['GoogleAnalyticsObject'] = r;i[r] = i[r] || function () {
	                    (i[r].q = i[r].q || []).push(arguments);
	                }, i[r].l = 1 * new Date();a = s.createElement(o), m = s.getElementsByTagName(o)[0];a.async = 1;a.src = g;m.parentNode.insertBefore(a, m);
	            })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');
	
	            ga('create', 'UA-37676851-2', 'auto');
	            ga('send', 'pageview');
	        }
	    }
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = HighchartsHeatmapContainer;

/***/ },

/***/ 1712:
/*!*************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/jquery/dist/jquery.js ***!
  \*************************************************************************/
468,

/***/ 1713:
/*!********************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/jQuery-ajaxTransport-XDomainRequest/jquery.xdomainrequest.min.js ***!
  \********************************************************************************************************************/
[2528, 1712],

/***/ 1714:
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/src/HighchartsHeatmap.jsx ***!
  \***************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 1554);
	var Snap = __webpack_require__(/*! imports-loader?this=>window,fix=>module.exports=0!snapsvg/dist/snap.svg.js */ 484);
	
	var ReactHighcharts = __webpack_require__(/*! react-highcharts */ 1715);
	var Highcharts = ReactHighcharts.Highcharts;
	__webpack_require__(/*! highcharts-heatmap */ 1717)(Highcharts);
	
	//*------------------------------------------------------------------*
	
	__webpack_require__(/*! ./HighchartsHeatmap.css */ 1718);
	
	var EventEmitter = __webpack_require__(/*! events */ 483);
	
	//*------------------------------------------------------------------*
	
	var HighchartsHeatmap = React.createClass({
	    displayName: 'HighchartsHeatmap',
	
	
	    propTypes: {
	        profiles: React.PropTypes.object.isRequired,
	        atlasBaseURL: React.PropTypes.string.isRequired,
	        anatomogramEventEmitter: React.PropTypes.instanceOf(EventEmitter).isRequired,
	        ensemblEventEmitter: React.PropTypes.instanceOf(EventEmitter)
	    },
	
	    getInitialState: function () {
	        return {
	            xAxisCategories: {},
	            yAxisCategories: {},
	            yAxisCategoriesLinks: {},
	            seriesDataNA: [],
	            seriesDataNAString: "NA",
	            seriesDataBelowCutoff: [],
	            seriesDataBelowCutoffString: "Below cutoff",
	            seriesDataRanges: [{
	                label: "Low",
	                from: 0,
	                to: 10,
	                seriesData: []
	            }, {
	                label: "Medium",
	                from: 10,
	                to: 1000,
	                seriesData: []
	            }, {
	                label: "High",
	                from: 1000,
	                to: 100000,
	                seriesData: []
	            }],
	
	            legend_1: false,
	            legend_2: false,
	            legend_3: false,
	            legend_4: false
	
	        };
	    },
	
	    handleClick: function (index) {
	        if (index == 1) {
	            this.setState({ legend_1: !this.state.legend_1 });
	        } else if (index == 2) {
	            this.setState({ legend_2: !this.state.legend_2 });
	        } else if (index == 3) {
	            this.setState({ legend_3: !this.state.legend_3 });
	        } else if (index == 4) {
	            this.setState({ legend_4: !this.state.legend_4 });
	        }
	    },
	
	    _anatomogramTissueMouseEnter: function (svgPathId) {
	        Highcharts.fireEvent(this.refs.chart.getChart(), 'handleGxaAnatomogramTissueMouseEnter', { svgPathId: svgPathId });
	    },
	
	    _anatomogramTissueMouseLeave: function (svgPathId) {
	        Highcharts.fireEvent(this.refs.chart.getChart(), 'handleGxaAnatomogramTissueMouseLeave', { svgPathId: svgPathId });
	    },
	
	    _registerListeners: function () {
	        if (this.props.anatomogramEventEmitter) {
	            this.props.anatomogramEventEmitter.addListener('gxaAnatomogramTissueMouseEnter', this._anatomogramTissueMouseEnter);
	            this.props.anatomogramEventEmitter.addListener('gxaAnatomogramTissueMouseLeave', this._anatomogramTissueMouseLeave);
	        }
	        //ensemblEventEmitter only emits events, it doesn't receive them
	    },
	    _attachEventsToRows: function () {
	        Snap.selectAll('.highcharts-yaxis-labels > *').forEach(function (v) {
	            //careful - if the label doesn't fit, the element will have two children: displayed and full title
	            //here we assume the longest text is the correct title of the experiment
	            var title = v.selectAll('*').items.map(function (c) {
	                return c.node.textContent;
	            }).reduce(function (l, r) {
	                return l.length > r.length ? l : r;
	            }, "");
	            if (title) {
	                v.hover(function () {
	                    this.props.anatomogramEventEmitter.emit('gxaHeatmapRowHoverChange', title);
	                }.bind(this), function () {
	                    this.props.anatomogramEventEmitter.emit('gxaHeatmapRowHoverChange', null);
	                }.bind(this));
	            }
	        }, this);
	    },
	
	    componentDidMount: function () {
	        this._registerListeners();
	        this._attachEventsToRows();
	        var heatmap = this.refs.chart.getChart();
	        heatmap.series[0].hide();
	    },
	
	    componentDidUpdate: function () {
	        var heatmap = this.refs.chart.getChart();
	        heatmap.series[0].hide();
	
	        this.state.legend_1 ? heatmap.series[1].hide() : heatmap.series[1].show();
	        this.state.legend_2 ? heatmap.series[2].hide() : heatmap.series[2].show();
	        this.state.legend_3 ? heatmap.series[3].hide() : heatmap.series[3].show();
	        this.state.legend_4 ? heatmap.series[4].hide() : heatmap.series[4].show();
	    },
	
	    render: function () {
	        var atlasBaseURL = this.props.atlasBaseURL;
	        var yAxisCategoriesLinks = this.props.yAxisCategoriesLinks;
	        var yAxisCategories = this.props.yAxisCategories;
	
	        var highchartsOptions = {
	            plotOptions: {
	                series: {
	                    point: {
	                        events: {
	                            mouseOver: function () {
	                                this.series.chart.userOptions.anatomogramEventEmitter.emit('gxaHeatmapColumnHoverChange', this.series.xAxis.categories[this.x].id);
	                            }
	                        }
	                    },
	                    events: {
	                        mouseOut: function () {
	                            this.chart.userOptions.anatomogramEventEmitter.emit('gxaHeatmapColumnHoverChange', null);
	                        }
	                    },
	
	                    states: {
	                        hover: {
	                            color: '#eeec38' //#edab12 color cell on mouse over
	                        },
	                        select: {
	                            color: '#eeec38'
	                        }
	                    }
	                }
	            },
	            credits: {
	                enabled: false //remove highchart text in the bottom right corner
	            },
	            chart: {
	                type: 'heatmap',
	                marginTop: 82, //labels
	                marginRight: 36, //leave space for the export button to appear
	                plotBorderWidth: 1,
	                height: yAxisCategories.length * 12 + 200,
	                zoomType: 'xy',
	                events: {
	                    handleGxaAnatomogramTissueMouseEnter: function (e) {
	                        Highcharts.each(this.series, function (series) {
	                            Highcharts.each(series.points, function (point) {
	                                if (point.series.xAxis.categories[point.x].id === e.svgPathId) {
	                                    point.select(true, true);
	                                }
	                            });
	                        });
	                    },
	                    handleGxaAnatomogramTissueMouseLeave: function (e) {
	                        var points = this.getSelectedPoints();
	                        if (points.length > 0) {
	                            Highcharts.each(points, function (point) {
	                                point.select(false);
	                            });
	                        }
	                    }
	                }
	            },
	            legend: {
	                useHTML: true,
	                enabled: false,
	                itemDistance: 18,
	                symbolWidth: 12,
	                symbolHeight: 12,
	                x: 150,
	                align: 'left',
	                verticalAlign: 'bottom',
	                layout: 'horizontal',
	                itemStyle: {
	                    lineHeight: "10px",
	                    fontSize: "10px",
	                    color: '#606060',
	                    fontWeight: 'normal'
	                }
	            },
	            title: null,
	            xAxis: { //tissues
	                tickLength: 5,
	                tickColor: "rgb(192, 192, 192)",
	                lineColor: "rgb(192, 192, 192)",
	                labels: {
	                    y: -6,
	                    style: {
	                        fontSize: "9px"
	                    },
	                    autoRotation: [-45, -90],
	                    formatter: function () {
	                        return this.value.label;
	                    }
	                },
	                opposite: 'true',
	                categories: this.props.xAxisCategories
	            },
	            yAxis: { //experiments
	                useHTML: true,
	                reversed: true,
	                labels: {
	                    style: {
	                        fontSize: "10px",
	                        color: "#148ff3"
	                    },
	                    formatter: function () {
	                        return '<a href="' + atlasBaseURL + '/experiments/' + yAxisCategoriesLinks[this.value] + '">' + this.value + '</a>';
	                    }
	                },
	                categories: this.props.yAxisCategories,
	                title: null,
	                gridLineWidth: 0,
	                minorGridLineWidth: 0
	            },
	            tooltip: {
	                useHTML: true,
	                formatter: function () {
	                    return 'Sample name: <b>' + this.series.yAxis.categories[this.point.y] + '</b>  <br> Tissue: <b>' + this.series.xAxis.categories[this.point.x].label + '</b><br><b>' + '</b>' + '<span style="border:1px rgb(192, 192, 192) solid; margin-right: 2px; width:6px; height:6px; display:inline-block; background-color:' + this.point.color + ';">' + '</span> Expression level: <b></span>' + 'Expression level: <b>' + this.point.value + '</b>';
	                }
	            },
	            anatomogramEventEmitter: this.props.anatomogramEventEmitter,
	            ensemblEventEmitter: this.props.ensemblEventEmitter,
	            series: [{
	                name: this.props.seriesDataNAString,
	                color: "#f7f7f7",
	                borderWidth: 1,
	                borderColor: "#fff",
	                data: this.props.seriesDataNA
	            }, {
	                name: this.props.seriesDataBelowCutoffString,
	                color: "#eaeaea",
	                borderWidth: 1,
	                borderColor: "#fff",
	                data: this.props.seriesDataBelowCutoff
	            }, {
	                name: this.props.seriesDataRanges[0].label,
	                color: "#dff8ff",
	                borderWidth: 1,
	                borderColor: "#fff",
	                data: this.props.seriesDataRanges[0].seriesData
	            }, {
	                name: this.props.seriesDataRanges[1].label,
	                color: "#9fd2fa",
	                borderWidth: 1,
	                borderColor: "#fff",
	                data: this.props.seriesDataRanges[1].seriesData
	            }, {
	                name: this.props.seriesDataRanges[2].label,
	                color: "#45affd",
	                borderWidth: 1,
	                borderColor: "#fff",
	                data: this.props.seriesDataRanges[2].seriesData
	            }]
	        };
	
	        var clsName_1 = this.state.legend_1 ? 'legend-item legend-item-off' : 'legend-item';
	        var clsName_2 = this.state.legend_2 ? 'legend-item legend-item-off' : 'legend-item';
	        var clsName_3 = this.state.legend_3 ? 'legend-item legend-item-off' : 'legend-item';
	        var clsName_4 = this.state.legend_4 ? 'legend-item legend-item-off' : 'legend-item';
	
	        var barcharts_legend = React.createElement(
	            'div',
	            { id: 'barcharts_legend_list_items', ref: 'barcharts_legend_items' },
	            React.createElement(
	                'span',
	                null,
	                'Click to interact:'
	            ),
	            React.createElement(
	                'div',
	                { id: 'legend_1', ref: 'legend_1', className: clsName_1, onClick: this.handleClick.bind(this, 1) },
	                React.createElement('div', { className: 'legend-rectangle col_below' }),
	                React.createElement(
	                    'span',
	                    null,
	                    'Below cutoff'
	                )
	            ),
	            React.createElement(
	                'div',
	                { id: 'legend_2', className: clsName_2, onClick: this.handleClick.bind(this, 2) },
	                React.createElement('div', { className: 'legend-rectangle col_low' }),
	                React.createElement(
	                    'span',
	                    null,
	                    'Low'
	                )
	            ),
	            React.createElement(
	                'div',
	                { id: 'legend_3', className: clsName_3, onClick: this.handleClick.bind(this, 3) },
	                React.createElement('div', { className: 'legend-rectangle col_med' }),
	                React.createElement(
	                    'span',
	                    null,
	                    'Medium'
	                )
	            ),
	            React.createElement(
	                'div',
	                { id: 'legend_4', className: clsName_4, onClick: this.handleClick.bind(this, 4) },
	                React.createElement('div', { className: 'legend-rectangle col_high' }),
	                React.createElement(
	                    'span',
	                    null,
	                    'High'
	                )
	            ),
	            React.createElement(
	                'div',
	                { className: 'legend-item' },
	                React.createElement('span', { className: 'icon icon-generic', 'data-icon': 'i', 'data-toggle': 'tooltip', 'data-placement': 'bottom',
	                    title: 'This range of value indicates gene expression level accross different tissues. It is calculated in different a different way between DNA and RNA experiments' })
	            ),
	            React.createElement(
	                'div',
	                { id: 'legend_5', className: 'legend-item special' },
	                React.createElement('div', { className: 'legend-rectangle col_nd' }),
	                React.createElement(
	                    'span',
	                    null,
	                    'No data available'
	                )
	            )
	        );
	
	        return React.createElement(
	            'div',
	            null,
	            React.createElement(
	                'div',
	                { id: 'highcharts_container' },
	                React.createElement(ReactHighcharts, { config: highchartsOptions, ref: 'chart' }),
	                barcharts_legend
	            )
	        );
	    }
	
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = HighchartsHeatmap;

/***/ },

/***/ 1715:
/*!********************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react-highcharts/dist/ReactHighcharts.js ***!
  \********************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	!function(r,t){ true?module.exports=t(__webpack_require__(/*! react */ 1554),__webpack_require__(/*! highcharts */ 1716)):"function"==typeof define&&define.amd?define(["react","highcharts"],t):"object"==typeof exports?exports.ReactHighcharts=t(require("react"),require("highcharts")):r.ReactHighcharts=t(r.React,r.Highcharts)}(this,function(r,t){return function(r){function t(o){if(e[o])return e[o].exports;var n=e[o]={exports:{},id:o,loaded:!1};return r[o].call(n.exports,n,n.exports,t),n.loaded=!0,n.exports}var e={};return t.m=r,t.c=e,t.p="",t(0)}([function(r,t,e){r.exports=e(3)},function(t,e){t.exports=r},function(r,t,e){(function(t){"use strict";function o(r,t){var e={};for(var o in r)t.indexOf(o)>=0||Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o]);return e}var n=Object.assign||function(r){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(r[o]=e[o])}return r},i=e(1),c="undefined"==typeof t?window:t;r.exports=function(t,e){var a="Highcharts"+t,s=i.createClass({displayName:a,propTypes:{config:i.PropTypes.object.isRequired,isPureConfig:i.PropTypes.bool,neverReflow:i.PropTypes.bool,callback:i.PropTypes.func},defaultProps:{callback:function(){}},renderChart:function(r){var o=this;if(!r)throw new Error("Config must be specified for the "+a+" component");var i=r.chart;this.chart=new e[t](n({},r,{chart:n({},i,{renderTo:this.refs.chart})}),this.props.callback),this.props.neverReflow||c.requestAnimationFrame&&requestAnimationFrame(function(){o.chart&&o.chart.options&&o.chart.reflow()})},shouldComponentUpdate:function(r){return r.neverReflow||r.isPureConfig&&this.props.config===r.config?!0:(this.renderChart(r.config),!1)},getChart:function(){if(!this.chart)throw new Error("getChart() should not be called before the component is mounted");return this.chart},componentDidMount:function(){this.renderChart(this.props.config)},componentWillUnmount:function(){this.chart.destroy()},render:function(){var r=this.props,t=(r.callback,r.config,r.isPureConfig,r.neverReflow,o(r,["callback","config","isPureConfig","neverReflow"]));return t=n({},t,{ref:"chart"}),i.createElement("div",t)}});return s.Highcharts=e,s.withHighcharts=function(e){return r.exports(t,e)},s}}).call(t,function(){return this}())},function(r,t,e){"use strict";r.exports=e(2)("Chart",e(4))},function(r,e){r.exports=t}])});

/***/ },

/***/ 1716:
/*!***********************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/react-highcharts/~/highcharts/highcharts.js ***!
  \***********************************************************************************************/
487,

/***/ 1717:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/highcharts-heatmap/heatmap.js ***!
  \*********************************************************************************/
508,

/***/ 1718:
/*!***************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/src/HighchartsHeatmap.css ***!
  \***************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../~/css-loader!./HighchartsHeatmap.css */ 1719);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../~/style-loader/addStyles.js */ 1721)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../node_modules/css-loader/index.js!./HighchartsHeatmap.css", function() {
				var newContent = require("!!./../node_modules/css-loader/index.js!./HighchartsHeatmap.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },

/***/ 1719:
/*!**********************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/css-loader!./expression-atlas-heatmap-highcharts-old/src/HighchartsHeatmap.css ***!
  \**********************************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../~/css-loader/lib/css-base.js */ 1720)();
	// imports
	
	
	// module
	exports.push([module.id, ".gene_title {text-align:center; font-size:70%; border:0px red solid;}\n\n#container {min-width: 410px; min-height: 210px; /*avoid line overlap*/margin: 0 auto; border:0px red solid;}\n\n#barcharts_legend_list_items {color:#606060; margin-left: 180px; margin-top:-9px; border: 0px solid olive;position:absolute;}\n.col_below {background:#d7d7d7;}\n.col_low {background: #dff8ff;}\n.col_med {background: #9fd2fa;}\n.col_high {background: #45affd;}\n.col_nd {background: #fff;}\n#barcharts_legend_list_items .legend-item {cursor: pointer;  vertical-align: middle;display:inline-block; padding:4px;}\n#barcharts_legend_list_items .legend-item:hover {color:black;}\n#barcharts_legend_list_items .legend-item.legend-item-off {color:#ccc;}\n#barcharts_legend_list_items .legend-item.legend-item-off div {background-color: #f7f7f7;}\n#barcharts_legend_list_items .legend-item.special {cursor:default;margin-left:36px;color:black;}\n\n#barcharts_legend_list_items .legend-item .legend-rectangle {width: 12px;height: 12px; border:1px rgba(0, 0, 0, 0.2) solid;float:left;margin-right:4px;}\n\n\n#barcharts_legend_list_items .legend-item  .icon-generic:before {\n    font-size: 180%;\n    color: #7e7e7e;\n}\n\n#barcharts_legend_list_items .legend-item:hover .icon-generic:before {color:#353535;}\n\n/*****************************************EBI font*******************************************************/\n@font-face{font-family:'EBI-Conceptual';src:url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Conceptual/fonts/EBI-Conceptual.eot');src:url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Conceptual/fonts/EBI-Conceptual.eot?#iefix') format('embedded-opentype'),\nurl('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Conceptual/fonts/EBI-Conceptual.woff') format('woff'),\nlocal('\\263A'),\nurl('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Conceptual/fonts/EBI-Conceptual.svg#EBI-Conceptual') format('svg'),\nurl('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Conceptual/fonts/EBI-Conceptual.ttf') format('truetype');font-weight:normal;font-style:normal}\n\n\n@font-face{font-family:'EBI-Functional';src:url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Functional/fonts/EBI-Functional.eot');src:url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Functional/fonts/EBI-Functional.eot?#iefix') format('embedded-opentype'),\nurl('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Functional/fonts/EBI-Functional.woff') format('woff'),\nlocal('\\263A'),\nurl('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Functional/fonts/EBI-Functional.svg#EBI-Functional') format('svg'),\nurl('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Functional/fonts/EBI-Functional.ttf') format('truetype');font-weight:normal;font-style:normal}\n\n@font-face{font-family:'EBI-Generic';src:url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Generic/fonts/EBI-Generic.eot');src:url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Generic/fonts/EBI-Generic.eot?#iefix') format('embedded-opentype'),\nurl('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Generic/fonts/EBI-Generic.woff') format('woff'),\nlocal('\\263A'),\nurl('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Generic/fonts/EBI-Generic.svg#EBI-Generic') format('svg'),\nurl('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Generic/fonts/EBI-Generic.ttf') format('truetype');font-weight:normal;font-style:normal}\n\n\n@font-face{font-family:'EBI-Species';src:url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Species/fonts/EBI-Species.eot');src:url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Species/fonts/EBI-Species.eot?#iefix') format('embedded-opentype'),\nurl('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Species/fonts/EBI-Species.woff') format('woff'),\nlocal('\\263A'),\nurl('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Species/fonts/EBI-Species.svg#EBI-Species') format('svg'),\nurl('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-Species/fonts/EBI-Species.ttf') format('truetype');font-weight:normal;font-style:normal}\n\n@font-face{font-family:'EBI-SocialMedia';src:url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-SocialMedia/fonts/EBI-SocialMedia.eot');src:url('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-SocialMedia/fonts/EBI-SocialMedia.eot?#iefix') format('embedded-opentype'),\nurl('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-SocialMedia/fonts/EBI-SocialMedia.woff') format('woff'),\nlocal('\\263A'),\nurl('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-SocialMedia/fonts/EBI-SocialMedia.svg#EBI-Species') format('svg'),\nurl('http://www.ebi.ac.uk/web_guidelines/fonts/EBI-SocialMedia/fonts/EBI-SocialMedia.ttf') format('truetype');font-weight:normal;font-style:normal}\n\n.icon-socialmedia:before {font-family: 'EBI-SocialMedia';margin: 0 0.3em 0 0;content: attr(data-icon);color: white;font-size: 100%;}\n.icon-conceptual:before {font-family: 'EBI-Conceptual';margin: 0 0.3em 0 0;content: attr(data-icon); color: #7e7e7e;font-size: 180%;}\n\n.icon-species:before {\n    font-family: 'EBI-Species';\n    font-size: 100%;\n    color: white;\n    content: attr(data-icon);\n    margin: 0 0 0 0;\n}\n.icon {\n    text-decoration: none;\n    font-style: normal;\n}\n\n.icon-static:before, .icon-generic:before {\n    font-family: 'EBI-Generic';\n    font-size: 100%;\n    color: #BBB;\n    content: attr(data-icon);\n    margin: 0 0 0 0;\n}\n\n.icon-functional:before {\n    font-family: 'EBI-Functional';\n    font-size: 100%;\n    color: white;\n    content: attr(data-icon);\n    margin: 0 0.3em 0 0;\n}\n/*****************************************END EBI font*******************************************************/\n", ""]);
	
	// exports


/***/ },

/***/ 1720:
/*!******************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/css-loader/lib/css-base.js ***!
  \******************************************************************************/
511,

/***/ 1721:
/*!*****************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/style-loader/addStyles.js ***!
  \*****************************************************************************/
512,

/***/ 1722:
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/src/highchartsUtils.js ***!
  \************************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	function getXAxisCategories (columnHeaders) {
	    return columnHeaders.map(function (columnHeader) {
	        return {"label": columnHeader.factorValue, "id" : columnHeader.factorValueOntologyTermId};
	    });
	}
	
	var yAxisCategoriesLinks = {};
	
	function getYAxisCategories (profiles, heatmapConfig) {
	
	    return profiles.rows.map(function (profile) {
	        yAxisCategoriesLinks[profile.name] = profile.id + "?geneQuery=" + heatmapConfig.geneQuery +
	            "&serializedFilterFactors=" + encodeURIComponent(profile.serializedFilterFactors);
	        return profile.name;
	    });
	}
	
	function getYAxisCategoriesLinks () {
	    return yAxisCategoriesLinks;
	}
	
	function compareLevels(a,b) {
	    var a1 = parseFloat( a.value );
	    var b1 = parseFloat( b.value );
	
	    //Both are numbers
	    if( !isNaN(a1) && !isNaN(b1) ) return a1 > b1 ? -1: 1;
	
	    //a IS number
	    if( !isNaN(a1) )  return -1;
	
	    //b IS number
	    if( !isNaN(b1) ) return 1;
	
	    return 0;
	    // return a > b ? 1 : -1;
	}
	
	function initializeRanking(cols) {
	    var rank_array = [];
	    for(var i=0; i<cols; i++) {
	        rank_array[i] = 0;
	    }
	
	    return rank_array;
	}
	
	function rankColumns (profiles, columnHeaders) {
	    var rank_array = initializeRanking(columnHeaders.length);
	
	    for (var i=0; i < profiles.rows.length; i++) {
	        var mapped = profiles.rows[i].expressions.map(function(el, i) {
	            return { index: i, value: el.value, factorName: el.factorName, color: el.color };
	        });
	
	        //Compare the level values for each expression within each row and sort them
	        var sorted_array = mapped.sort(compareLevels);
	        // Rank levels
	        for (var j=0; j < sorted_array.length; j++) {
	            var ind = sorted_array[j].index;
	            rank_array[ind] = rank_array[ind] + j + 1;
	        }
	    }
	
	    //Avg rank_array by rows
	    var rank_avg = [];
	    for(var i=0; i<rank_array.length; i++) {
	        rank_avg[i] = rank_array[i] / profiles.rows.length;
	    }
	
	    var avg_mapped = rank_avg.map(function(el, i) {
	        return { index: i, value: el}
	    });
	
	    //Sort tissues by increasing average rank
	    var sort_tissues = avg_mapped.sort(function (a,b) {
	        return a.value-b.value;
	    });
	
	    //Modify the rows
	    for (var i=0; i< profiles.rows.length; i++) {
	        var expressions = profiles.rows[i].expressions;
	        var new_expressions = [];
	        var new_columnHeaders = [];
	
	        for (var j = 0; j < sort_tissues.length; j++) {
	            var position = sort_tissues[j].index;
	            new_expressions.push(expressions[position]);
	            new_columnHeaders.push(columnHeaders[position]);
	        }
	
	        profiles.rows[i].expressions = new_expressions;
	    }
	
	    return {
	        profiles: profiles.rows,
	        columnHeaders: new_columnHeaders
	    }
	}
	
	function applyThresholdtoColumns(rows, columns, threshold) {
	
	    var percentageExpressedBelowThreshold = [];
	    var percentageExpressedAboveThreshold = [];
	    for (var i=0; i < columns.length; i++) {
	        var count = 0;
	        for (var j=0; j < rows.length; j++) {
	            var value = rows[j].expressions[i].value;
	            if(!isNaN(value) && value != 0) {
	                count++;
	            }
	        }
	
	        var totalExpressed = {};
	        totalExpressed.total = count;
	        totalExpressed.percentage = (count / rows.length) * 100;
	        totalExpressed.index = i;
	
	        if(totalExpressed.percentage > threshold) {
	            percentageExpressedAboveThreshold.push(totalExpressed);
	        } else {
	            percentageExpressedBelowThreshold.push(totalExpressed);
	        }
	    }
	
	    //Sort by percentage
	    var percentageExpressedAboveThresholdSorted = percentageExpressedAboveThreshold.sort(function (a,b) {
	        return b.percentage-a.percentage;
	    });
	    var percentageExpressedBelowThresholdSorted = percentageExpressedBelowThreshold.sort(function (a,b) {
	        return b.percentage-a.percentage;
	    });
	
	    var percentageExpressed = percentageExpressedAboveThresholdSorted.concat(percentageExpressedBelowThresholdSorted);
	
	    //Filter and order the columns with the new percentage
	    for (var i=0; i< rows.length; i++) {
	        var expressions = rows[i].expressions;
	        var new_expressions = [];
	        var new_columnHeaders = [];
	
	        for (var j = 0; j < percentageExpressed.length; j++) {
	            var position = percentageExpressed[j].index;
	            new_expressions.push(expressions[position]);
	            new_columnHeaders.push(columns[position]);
	        }
	
	        rows[i].expressions = new_expressions;
	    }
	
	    return {
	        rows: rows,
	        columnHeaders: new_columnHeaders
	    }
	}
	
	function applyThresholdToRows(rows, columns, threshold) {
	    var percentageExpressedBelowThreshold = [];
	    var percentageExpressedAboveThreshold = [];
	
	    for (var i=0; i < rows.length; i++) {
	        var count = 0;
	        for (var j=0; j < columns.length; j++) {
	            var value = rows[i].expressions[j].value;
	            if(!isNaN(value) && value != 0) {
	                count++;
	            }
	        }
	
	        var totalExpressed = {};
	        totalExpressed.total = count;
	        totalExpressed.percentage = (count / columns.length) * 100;
	        totalExpressed.index = i;
	
	        if(totalExpressed.percentage > threshold) {
	            percentageExpressedAboveThreshold.push(totalExpressed);
	        } else {
	            percentageExpressedBelowThreshold.push(totalExpressed);
	        }
	    }
	
	    //Sort by percentage
	    var percentageExpressedAboveThresholdSorted = percentageExpressedAboveThreshold.sort(function (a,b) {
	        return b.percentage-a.percentage;
	    });
	    var percentageExpressedBelowThresholdSorted = percentageExpressedBelowThreshold.sort(function (a,b) {
	        return b.percentage-a.percentage;
	    });
	
	    var percentageExpressed = percentageExpressedAboveThresholdSorted.concat(percentageExpressedBelowThresholdSorted);
	
	    //Filter and order the rows with the new percentage
	    var new_rows = [];
	    for (var i = 0; i < percentageExpressed.length; i++) {
	        var position = percentageExpressed[i].index;
	        new_rows.push(rows[position]);
	    }
	
	    return new_rows;
	}
	
	function rankExperiments(rows, columns) {
	
	    //Initialize ranking
	    var rank_experiments = [];
	    for(i=0; i< columns; i++) {
	        rank_experiments[i] = new Array(rows.length);
	    }
	
	    for(i=0; i< columns; i++) {
	        for (j=0; j<rows.length; j++) {
	            rank_experiments[i][j] = 0;
	        }
	    }
	
	    //Sort
	    var sorted_cols = [];
	    for (var i=0; i < columns; i++) {
	
	        var cols_expressions = [];
	        for (j = 0; j < rows.length; j++) {
	            var expr = {};
	            expr.factorName = rows[j].expressions[i].factorName;
	            expr.value = rows[j].expressions[i].value;
	            expr.index = j;
	
	            cols_expressions.push(expr)
	        }
	
	        //Compare the level values for each expression within each row and sort them
	        var sorted_profiles = cols_expressions.sort(compareLevels);
	        sorted_cols.push(sorted_profiles);
	    }
	
	    // Rank levels
	    for (var j=0; j < sorted_cols.length; j++) {
	        for (var k=0; k < rows.length; k++) {
	            var ind = sorted_cols[j][k].index;
	            rank_experiments[j][ind] = rank_experiments[j][ind] + k + 1;
	        }
	    }
	
	    //Avg rank_experiments by cols
	    var exp_rank_avg = [];
	    for (var r=0; r<rows.length; r++) {
	        var sum = 0;
	        for (var cols=0; cols<rank_experiments.length; cols++) {
	            sum = sum + rank_experiments[cols][r];
	        }
	        exp_rank_avg.push(sum/rank_experiments.length);
	    }
	
	    var exp_rank_avg_mapped = exp_rank_avg.map(function(el, i) {
	        return { index: i, value: el}
	    });
	
	    //Sort experiments by increasing average rank
	    var sort_experiments = exp_rank_avg_mapped.sort(function (a,b) {
	        return a.value-b.value;
	    });
	
	    //Replace new rows
	    var new_rows = [];
	
	    for(var i=0; i<sort_experiments.length; i++) {
	        var position = sort_experiments[i].index;
	        new_rows.push(rows[position]);
	    }
	
	    return new_rows;
	}
	
	//*------------------------------------------------------------------*
	
	exports.getXAxisCategories = getXAxisCategories;
	exports.getYAxisCategories = getYAxisCategories;
	exports.getYAxisCategoriesLinks = getYAxisCategoriesLinks;
	exports.rankColumns = rankColumns;
	exports.rankExperiments = rankExperiments;
	exports.applyThresholdtoColumns = applyThresholdtoColumns;
	exports.applyThresholdToRows = applyThresholdToRows;


/***/ },

/***/ 1723:
/*!************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/src/HighchartsHeatmapContainer.css ***!
  \************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../~/css-loader!./HighchartsHeatmapContainer.css */ 1724);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../~/style-loader/addStyles.js */ 1721)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../node_modules/css-loader/index.js!./HighchartsHeatmapContainer.css", function() {
				var newContent = require("!!./../node_modules/css-loader/index.js!./HighchartsHeatmapContainer.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },

/***/ 1724:
/*!*******************************************************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/css-loader!./expression-atlas-heatmap-highcharts-old/src/HighchartsHeatmapContainer.css ***!
  \*******************************************************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../~/css-loader/lib/css-base.js */ 1720)();
	// imports
	
	
	// module
	exports.push([module.id, ".gxaInnerHeatmap {\n    position: relative;\n    overflow: hidden;\n}\n\n.gxaAside {\n    float: left;\n}\n\n.gxaInnerHeatmap:after {\n    clear: both;\n    content: \".\";\n    display: block;\n    visibility: hidden;\n}\n", ""]);
	
	// exports


/***/ },

/***/ 1725:
/*!************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/anatomogram/index.js ***!
  \************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/Anatomogram.jsx */ 1726);

/***/ },

/***/ 1726:
/*!***********************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/anatomogram/src/Anatomogram.jsx ***!
  \***********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 1554);
	var ReactDOM = __webpack_require__(/*! react-dom */ 1710);
	
	var $ = __webpack_require__(/*! jquery */ 1712);
	__webpack_require__(/*! jquery-hc-sticky */ 1727);
	__webpack_require__(/*! jquery-ui-bundle */ 1728);
	
	var Snap = __webpack_require__(/*! imports-loader?this=>window,fix=>module.exports=0!snapsvg/dist/snap.svg.js */ 1729);
	
	var EventEmitter = __webpack_require__(/*! events */ 483);
	
	//*------------------------------------------------------------------*
	
	var AnatomogramSelectImageButton = React.createClass({
	    displayName: 'AnatomogramSelectImageButton',
	
	    propTypes: {
	        anatomogramId: React.PropTypes.string.isRequired,
	        selected: React.PropTypes.bool.isRequired,
	        toggleSrcTemplate: React.PropTypes.string.isRequired,
	        onClick: React.PropTypes.func.isRequired
	    },
	
	    render: function () {
	        var selectedToggleSrc = this.props.toggleSrcTemplate + "_selected.png",
	            unselectedToggleSrc = this.props.toggleSrcTemplate + "_unselected.png";
	
	        return React.createElement(
	            'div',
	            null,
	            React.createElement('img', { ref: 'toggleButton', onClick: this._onClick, src: this.props.selected ? selectedToggleSrc : unselectedToggleSrc,
	                style: { width: "24px", height: "24px", padding: "2px" } })
	        );
	    },
	
	    componentDidMount: function () {
	        $(ReactDOM.findDOMNode(this.refs.toggleButton)).button();
	    },
	
	    _onClick: function () {
	        this.props.onClick(this.props.anatomogramId);
	    }
	});
	
	var AnatomogramSelectImageButtons = React.createClass({
	    displayName: 'AnatomogramSelectImageButtons',
	
	    propTypes: {
	        selectedId: React.PropTypes.string.isRequired,
	        availableAnatomograms: React.PropTypes.array.isRequired,
	        onClick: React.PropTypes.func.isRequired
	    },
	
	    render: function () {
	        if (this.props.availableAnatomograms.length > 1) {
	            var selectedId = this.props.selectedId,
	                onClick = this.props.onClick;
	            var anatomogramSelectImageButtons = this.props.availableAnatomograms.map(function (availableAnatomogram) {
	                return React.createElement(AnatomogramSelectImageButton, { key: availableAnatomogram.id + "_toggle",
	                    anatomogramId: availableAnatomogram.id, selected: selectedId === availableAnatomogram.id, toggleSrcTemplate: availableAnatomogram.toggleSrcTemplate, onClick: onClick });
	            });
	
	            return React.createElement(
	                'span',
	                null,
	                anatomogramSelectImageButtons
	            );
	        } else {
	            return null;
	        }
	    }
	
	});
	
	var AnatomogramImageParts = React.createClass({
	    displayName: 'AnatomogramImageParts',
	
	    propTypes: {
	        idsExpressedInExperiment: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        idsHeatmapWantsHighlighted: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        idsMousedOver: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        idsNotHighlighted: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        expressedTissueColour: React.PropTypes.string.isRequired,
	        hoveredTissueColour: React.PropTypes.string.isRequired
	    },
	
	    getInitialState: function () {
	        return { toDraw: [].concat(AnatomogramImageParts.idsThatShouldBeStronglyHighlighted(this.props).map(this._highlightStrongly), this.props.idsExpressedInExperiment.map(this._highlightSlightly), this.props.idsNotHighlighted.map(this._highlightAsBackground)) };
	    },
	
	    render: function () {
	        return React.createElement('span', null);
	    },
	
	    _highlightStrongly: function (svgPathId) {
	        return { id: svgPathId, colour: this.props.hoveredTissueColour, opacity: 0.7 };
	    },
	
	    _highlightSlightly: function (svgPathId) {
	        return { id: svgPathId, colour: this.props.expressedTissueColour, opacity: 0.7 };
	    },
	
	    _highlightAsBackground: function (svgPathId) {
	        return { id: svgPathId, colour: "gray", opacity: 0.5 };
	    },
	
	    componentWillReceiveProps: function (nextProps) {
	        var oldStrong = AnatomogramImageParts.idsThatShouldBeStronglyHighlighted(this.props);
	        var newStrong = AnatomogramImageParts.idsThatShouldBeStronglyHighlighted(nextProps);
	        var oldWeak = this.props.idsExpressedInExperiment;
	        var newWeak = nextProps.idsExpressedInExperiment;
	
	        var toDraw = [].concat(
	        //ids that heatmap wants highlighted are the most highlighted
	        newStrong.filter(function (id) {
	            return oldStrong.indexOf(id) < 0;
	        }).map(this._highlightStrongly),
	        //ids that are expressed in the experiment are highlighted with a weaker colour, often the same as background
	        newWeak.filter(function (id) {
	            return newStrong.indexOf(id) < 0;
	        }).filter(function (id) {
	            return oldWeak.indexOf(id) < 0;
	        }.bind(this)).map(this._highlightSlightly), nextProps.idsNotHighlighted.filter(function (id) {
	            return this.props.idsNotHighlighted.indexOf(id) < 0;
	        }.bind(this)).map(this._highlightAsBackground));
	
	        this.setState({ toDraw: toDraw });
	    },
	
	    statics: {
	        idsThatShouldBeStronglyHighlighted: function (properties) {
	            return properties.idsHeatmapWantsHighlighted.concat(properties.idsMousedOver);
	        }
	    }
	});
	
	var AnatomogramImage = React.createClass({
	    displayName: 'AnatomogramImage',
	
	    propTypes: {
	        file: React.PropTypes.string.isRequired,
	        height: React.PropTypes.string.isRequired,
	        expressedFactors: React.PropTypes.arrayOf(React.PropTypes.string),
	        expressedFactorsPerRow: React.PropTypes.object.isRequired,
	        allSvgPathIds: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        expressedTissueColour: React.PropTypes.string.isRequired,
	        hoveredTissueColour: React.PropTypes.string.isRequired
	    },
	
	    getInitialState: function () {
	        return {
	            hoveredPathId: null,
	            hoveredRowId: null,
	            mousedOverSvgIds: []
	        };
	    },
	
	    componentWillReceiveProps: function (nextProps) {
	        if (nextProps.file !== this.props.file) {
	            this._loadAnatomogram(nextProps.file);
	        }
	    },
	
	    componentDidMount: function () {
	        this._loadAnatomogram(this.props.file);
	        this._draw();
	    },
	
	    componentDidUpdate: function () {
	        this._draw();
	    },
	
	    _draw: function () {
	        var svg = Snap(ReactDOM.findDOMNode(this.refs.anatomogram)).select("g");
	        if (svg !== null) {
	            this._drawOnSvg(svg, this.refs.imageParts.state.toDraw);
	            this.refs.imageParts.setState({ toDraw: [] });
	        }
	    },
	    _drawInitialLayout: function (svg) {
	        this._drawOnSvg(svg, this.refs.imageParts.getInitialState().toDraw);
	        this.refs.imageParts.setState({ toDraw: [] });
	    },
	
	    _drawOnSvg: function (svg, instructions) {
	        instructions.forEach(function (instruction) {
	            this._highlightOrganismParts(svg, instruction.id, instruction.colour, instruction.opacity);
	        }.bind(this));
	    },
	
	    render: function () {
	        var idsExpressedInExperiment = [],
	            idsHoveredOver = [],
	            idsHeatmapWantsHighlighted = [],
	            idsNotHighlighted = [];
	        for (var i = 0; i < this.props.allSvgPathIds.length; i++) {
	            var id = this.props.allSvgPathIds[i];
	            if (this.state.mousedOverSvgIds.indexOf(id) > -1) {
	                idsHoveredOver.push(id);
	            } else if (this._hoveredRowContainsPathId(id) || this.state.hoveredPathId === id) {
	                idsHeatmapWantsHighlighted.push(id);
	            } else if (this.props.expressedFactors.indexOf(id) > -1) {
	                idsExpressedInExperiment.push(id);
	            } else {
	                idsNotHighlighted.push(id);
	            }
	        }
	
	        return React.createElement(
	            'span',
	            null,
	            React.createElement('svg', { ref: 'anatomogram', style: { display: "table-cell", width: "230px", height: this.props.height + "px" } }),
	            React.createElement(AnatomogramImageParts, { ref: 'imageParts', key: this.props.file,
	                idsExpressedInExperiment: idsExpressedInExperiment,
	                idsHeatmapWantsHighlighted: idsHeatmapWantsHighlighted,
	                idsMousedOver: idsHoveredOver,
	                idsNotHighlighted: idsNotHighlighted,
	                expressedTissueColour: this.props.expressedTissueColour,
	                hoveredTissueColour: this.props.hoveredTissueColour })
	        );
	    },
	
	    _highlightPath: function (svgPathId) {
	        this.setState({ hoveredPathId: svgPathId });
	    },
	
	    _highlightRow: function (rowId) {
	        this.setState({ hoveredRowId: rowId });
	    },
	
	    _loadAnatomogram: function (svgFile) {
	
	        var svgCanvas = Snap(ReactDOM.findDOMNode(this.refs.anatomogram)),
	            $svgCanvas = $(ReactDOM.findDOMNode(this.refs.anatomogram)),
	            allElements = svgCanvas.selectAll("*");
	
	        if (allElements) {
	            allElements.remove();
	        }
	
	        var displayAllOrganismPartsCallback = this._drawInitialLayout;
	        var registerHoverEventsCallback = this._registerHoverEvents;
	        Snap.load(svgFile, function (fragment) {
	            var g = fragment.select("g");
	            g.transform("S1.6,0,0");
	            displayAllOrganismPartsCallback(g);
	            registerHoverEventsCallback(g);
	            svgCanvas.append(g);
	            var img = fragment.select("#ccLogo");
	            var heightTranslate = $svgCanvas.height() - 15;
	            var widthTranslate = $svgCanvas.width() / 2 - 40;
	            img.transform("t" + widthTranslate + "," + heightTranslate);
	            svgCanvas.append(img);
	        });
	    },
	
	    _hoveredRowContainsPathId: function (svgPathId) {
	        return this.state.hoveredRowId && this.props.expressedFactorsPerRow.hasOwnProperty(this.state.hoveredRowId) && this.props.expressedFactorsPerRow[this.state.hoveredRowId].indexOf(svgPathId) > -1;
	    },
	
	    _registerHoverEvents: function (svg) {
	        if (svg) {
	            // Sometimes svg is null... why?
	            var mouseoverCallback = function (svgPathId) {
	                this.props.eventEmitter.emit('gxaAnatomogramTissueMouseEnter', svgPathId);
	                this.setState(function (previousState, currentProps) {
	                    var a = [].concat(previousState.mousedOverSvgIds);
	                    a.push(svgPathId);
	                    while (a.length > 5) {
	                        a.shift();
	                    }
	                    return { mousedOverSvgIds: a };
	                });
	            }.bind(this);
	            var mouseoutCallback = function (svgPathId) {
	                this.props.eventEmitter.emit('gxaAnatomogramTissueMouseLeave', svgPathId);
	                this.setState(function (previousState, currentProps) {
	                    var a = previousState.mousedOverSvgIds.map(function (el) {
	                        return el === svgPathId ? "" : el;
	                    });
	                    return { mousedOverSvgIds: a };
	                });
	            }.bind(this);
	
	            this.props.allSvgPathIds.forEach(function (svgPathId) {
	                var svgElement = svg.select("#" + svgPathId);
	                if (svgElement) {
	                    svgElement.mouseover(function () {
	                        mouseoverCallback(svgPathId);
	                    });
	                    svgElement.mouseout(function () {
	                        mouseoutCallback(svgPathId);
	                    });
	                }
	            }, this);
	        }
	    },
	
	    _highlightOrganismParts: function (svg, svgPathId, colour, opacity) {
	        AnatomogramImage._recursivelyChangeProperties(svg.select("#" + svgPathId), colour, opacity);
	    },
	
	    statics: {
	        _recursivelyChangeProperties: function (svgElement, colour, opacity) {
	
	            if (svgElement) {
	                var innerElements = svgElement.selectAll("*");
	
	                if (innerElements.length > 0) {
	                    innerElements.forEach(function (innerElement) {
	                        AnatomogramImage._recursivelyChangeProperties(innerElement);
	                    });
	                }
	
	                svgElement.attr({ "fill": colour, "fill-opacity": opacity });
	            }
	        },
	        _recursivelySelectElements: function (svgElement) {
	            if (!svgElement) {
	                return [];
	            }
	
	            var innerElements = svgElement.selectAll("*");
	            if (innerElements.length === 0) {
	                return [svgElement];
	            } else {
	                var allElements = [];
	                innerElements.forEach(function (innerElement) {
	                    allElements = allElements.concat(AnatomogramImage._recursivelySelectElements(innerElement));
	                });
	                return allElements;
	            }
	        }
	    }
	});
	
	var Anatomogram = React.createClass({
	    displayName: 'Anatomogram',
	
	
	    propTypes: {
	        anatomogramData: React.PropTypes.object.isRequired,
	        expressedTissueColour: React.PropTypes.string.isRequired,
	        hoveredTissueColour: React.PropTypes.string.isRequired,
	        profileRows: React.PropTypes.arrayOf(React.PropTypes.shape({
	            id: React.PropTypes.string,
	            name: React.PropTypes.string.isRequired,
	            expressions: React.PropTypes.arrayOf(React.PropTypes.shape({
	                factorName: React.PropTypes.string,
	                color: React.PropTypes.string,
	                value: React.PropTypes.number, // missing represents "NA"/"NT"
	                svgPathId: React.PropTypes.string
	            })).isRequired
	        })).isRequired,
	        eventEmitter: React.PropTypes.instanceOf(EventEmitter),
	        atlasBaseURL: React.PropTypes.string.isRequired
	    },
	
	    getInitialState: function () {
	
	        var availableAnatomograms = [];
	        if (this.props.anatomogramData.maleAnatomogramFile) {
	            availableAnatomograms.push({ id: "male",
	                anatomogramFile: this.props.atlasBaseURL + "/resources/svg/" + this.props.anatomogramData.maleAnatomogramFile,
	                toggleSrcTemplate: this.props.atlasBaseURL + this.props.anatomogramData.toggleButtonMaleImageTemplate });
	        }
	        if (this.props.anatomogramData.femaleAnatomogramFile) {
	            availableAnatomograms.push({ id: "female",
	                anatomogramFile: this.props.atlasBaseURL + "/resources/svg/" + this.props.anatomogramData.femaleAnatomogramFile,
	                toggleSrcTemplate: this.props.atlasBaseURL + this.props.anatomogramData.toggleButtonFemaleImageTemplate });
	        }
	        if (this.props.anatomogramData.brainAnatomogramFile) {
	            availableAnatomograms.push({ id: "brain",
	                anatomogramFile: this.props.atlasBaseURL + "/resources/svg/" + this.props.anatomogramData.brainAnatomogramFile,
	                toggleSrcTemplate: this.props.atlasBaseURL + this.props.anatomogramData.toggleButtonBrainImageTemplate });
	        }
	
	        var allExpressedFactors = [],
	            expressedFactorsPerRow = {};
	        this.props.profileRows.forEach(function (profileRow) {
	            var expressedFactors = [];
	            profileRow.expressions.forEach(function (expression) {
	                if (!typeof expression.value !== "undefined" && expression.value) {
	                    expressedFactors.push(expression.svgPathId);
	                }
	            });
	            expressedFactorsPerRow[profileRow.name] = expressedFactors;
	            allExpressedFactors = allExpressedFactors.concat(expressedFactors);
	        });
	
	        function onlyUnique(value, index, self) {
	            return self.indexOf(value) === index;
	        }
	
	        return {
	            selectedId: availableAnatomograms[0].id,
	            availableAnatomograms: availableAnatomograms,
	            expressedFactors: allExpressedFactors.filter(onlyUnique),
	            expressedFactorsPerRow: expressedFactorsPerRow
	        };
	    },
	
	    render: function () {
	        function containsHuman(str) {
	            return str.indexOf("human") > -1;
	        }
	
	        return React.createElement(
	            'div',
	            { className: 'gxaAnatomogram', style: { display: "table", paddingTop: "4px" } },
	            React.createElement(
	                'div',
	                { style: { display: "table-row" } },
	                React.createElement(
	                    'div',
	                    { style: { display: "table-cell", verticalAlign: "top" } },
	                    React.createElement(AnatomogramSelectImageButtons, { selectedId: this.state.selectedId, availableAnatomograms: this.state.availableAnatomograms, onClick: this._handleChange })
	                ),
	                React.createElement(AnatomogramImage, {
	                    key: this.state.selectedId,
	                    ref: 'currentImage',
	                    file: this._getAnatomogramSVGFile(this.state.selectedId),
	                    height: containsHuman(this.props.anatomogramData.maleAnatomogramFile) ? "375" : "265",
	                    expressedFactors: this.state.expressedFactors,
	                    expressedFactorsPerRow: this.state.expressedFactorsPerRow,
	                    allSvgPathIds: this.props.anatomogramData.allSvgPathIds,
	                    eventEmitter: this.props.eventEmitter,
	                    expressedTissueColour: this.props.expressedTissueColour,
	                    hoveredTissueColour: this.props.hoveredTissueColour })
	            )
	        );
	    },
	
	    _registerListenerIfNecessary: function (name, fn) {
	        if (this.props.eventEmitter && this.props.eventEmitter._events && !this.props.eventEmitter._events.hasOwnProperty(name)) {
	            this.props.eventEmitter.addListener(name, fn);
	        }
	    },
	
	    componentDidMount: function () {
	        this._registerListenerIfNecessary("gxaHeatmapColumnHoverChange", this._highlightPath);
	        this._registerListenerIfNecessary("gxaHeatmapRowHoverChange", this._highlightRow);
	    },
	
	    componentDidUpdate: function () {
	        this._registerListenerIfNecessary("gxaHeatmapColumnHoverChange", this._highlightPath);
	        this._registerListenerIfNecessary("gxaHeatmapRowHoverChange", this._highlightRow);
	    },
	
	    _handleChange: function (newSelectedId) {
	        if (newSelectedId !== this.state.selectedId) {
	            this.setState({ selectedId: newSelectedId });
	        }
	    },
	
	    _highlightPath: function (svgPathId) {
	        this.refs.currentImage._highlightPath(svgPathId);
	    },
	
	    _highlightRow: function (rowId) {
	        this.refs.currentImage._highlightRow(rowId);
	    },
	
	    _getAnatomogramSVGFile: function (id) {
	        for (var i = 0; i < this.state.availableAnatomograms.length; i++) {
	            if (id === this.state.availableAnatomograms[i].id) {
	                return this.state.availableAnatomograms[i].anatomogramFile;
	            }
	        }
	    }
	
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = Anatomogram;

/***/ },

/***/ 1727:
/*!******************************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/anatomogram/~/jquery-hc-sticky/jquery.hc-sticky.js ***!
  \******************************************************************************************************/
[2529, 1712],

/***/ 1728:
/*!***********************************************************************************************!*\
  !*** ./expression-atlas-heatmap-highcharts-old/~/anatomogram/~/jquery-ui-bundle/jquery-ui.js ***!
  \***********************************************************************************************/
[2526, 1712],

/***/ 1729:
/*!************************************************************************************************************************************************!*\
  !*** ./~/imports-loader?this=>window,fix=>module.exports=0!./expression-atlas-heatmap-highcharts-old/~/anatomogram/~/snapsvg/dist/snap.svg.js ***!
  \************************************************************************************************************************************************/
484

});
//# sourceMappingURL=expressionAtlasHeatmapHighchartsOld.bundle.js.map