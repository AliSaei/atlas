var expressionAtlasAnatomogram =
webpackJsonp_name_([2],{

/***/ 0:
/*!***********************************************!*\
  !*** ./expression-atlas-anatomogram/index.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/anatomogramRenderer.js */ 965);

/***/ },

/***/ 965:
/*!*****************************************************************!*\
  !*** ./expression-atlas-anatomogram/src/anatomogramRenderer.js ***!
  \*****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 966);
	var ReactDOM = __webpack_require__(/*! react-dom */ 1122);
	
	var EventEmitter = __webpack_require__(/*! events */ 472);
	var eventEmitter = new EventEmitter();
	
	var Anatomogram = __webpack_require__(/*! anatomogram */ 1123);
	
	//*------------------------------------------------------------------*
	
	function render(domNode, anatomogramData, profileRows, expressedColour, hoverColour, jQueryUITheme) {
	
	    if (jQueryUITheme !== "") {
	
	        var href = jQueryUITheme === "atlas" || typeof jQueryUITheme === "undefined" ?
	            window.location.protocol + "//" + window.location.host + "/gxa/resources/css/jquery-ui-1.11.4.custom/css/jquery-ui-min.css" :
	            "https://code.jquery.com/ui/1.11.1/themes/" + jQueryUITheme + "/jquery-ui.css";
	
	        var cssDoc = document.createElement("link");
	        cssDoc.setAttribute("rel", "stylesheet");
	        cssDoc.setAttribute("type", "text/css");
	        cssDoc.setAttribute("href", href);
	        document.getElementsByTagName("head")[0].appendChild(cssDoc);
	
	    }
	
	    ReactDOM.render(
	        React.createElement(
	            Anatomogram,
	            {
	                anatomogramData: anatomogramData,
	                expressedTissueColour: expressedColour,
	                hoveredTissueColour: hoverColour,
	                atlasBaseURL: "http://wwwdev.ebi.ac.uk/gxa",
	                profileRows: profileRows,
	                eventEmitter: eventEmitter
	            }
	        ),
	        domNode
	    );
	}
	
	//*------------------------------------------------------------------*
	
	exports.render = render;
	exports.eventEmitter = eventEmitter;


/***/ },

/***/ 966:
/*!*******************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/react.js ***!
  \*******************************************************/
[1884, 967],

/***/ 967:
/*!***********************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/React.js ***!
  \***********************************************************/
[1885, 968, 1112, 1116, 1003, 1121],

/***/ 968:
/*!**************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOM.js ***!
  \**************************************************************/
[1886, 969, 970, 1035, 1009, 992, 982, 1014, 1018, 1110, 1055, 1111, 989, 973],

/***/ 969:
/*!***********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactCurrentOwner.js ***!
  \***********************************************************************/
5,

/***/ 970:
/*!***************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMTextComponent.js ***!
  \***************************************************************************/
[1887, 971, 986, 990, 992, 1003, 985, 984, 1034],

/***/ 971:
/*!***************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/DOMChildrenOperations.js ***!
  \***************************************************************************/
[1888, 972, 980, 982, 983, 984, 977],

/***/ 972:
/*!************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/Danger.js ***!
  \************************************************************/
[1889, 973, 974, 979, 978, 977],

/***/ 973:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/ExecutionEnvironment.js ***!
  \*********************************************************************************/
9,

/***/ 974:
/*!**********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/createNodesFromMarkup.js ***!
  \**********************************************************************************/
[1890, 973, 975, 978, 977],

/***/ 975:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/createArrayFromMixed.js ***!
  \*********************************************************************************/
[1891, 976],

/***/ 976:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/toArray.js ***!
  \********************************************************************/
[1892, 977],

/***/ 977:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/invariant.js ***!
  \**********************************************************************/
13,

/***/ 978:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/getMarkupWrap.js ***!
  \**************************************************************************/
[1893, 973, 977],

/***/ 979:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/emptyFunction.js ***!
  \**************************************************************************/
15,

/***/ 980:
/*!********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactMultiChildUpdateTypes.js ***!
  \********************************************************************************/
[1894, 981],

/***/ 981:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/keyMirror.js ***!
  \**********************************************************************/
[1895, 977],

/***/ 982:
/*!***************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactPerf.js ***!
  \***************************************************************/
18,

/***/ 983:
/*!******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/setInnerHTML.js ***!
  \******************************************************************/
[1896, 973],

/***/ 984:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/setTextContent.js ***!
  \********************************************************************/
[1897, 973, 985, 983],

/***/ 985:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/escapeTextContentForBrowser.js ***!
  \*********************************************************************************/
21,

/***/ 986:
/*!***************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/DOMPropertyOperations.js ***!
  \***************************************************************************/
[1898, 987, 982, 988, 989],

/***/ 987:
/*!*****************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/DOMProperty.js ***!
  \*****************************************************************/
[1899, 977],

/***/ 988:
/*!***********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/quoteAttributeValueForBrowser.js ***!
  \***********************************************************************************/
[1900, 985],

/***/ 989:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/warning.js ***!
  \********************************************************************/
[1901, 979],

/***/ 990:
/*!**************************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactComponentBrowserEnvironment.js ***!
  \**************************************************************************************/
[1902, 991, 992],

/***/ 991:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMIDOperations.js ***!
  \**************************************************************************/
[1903, 971, 986, 992, 982, 977],

/***/ 992:
/*!****************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactMount.js ***!
  \****************************************************************/
[1904, 987, 993, 969, 1005, 1006, 1008, 1009, 1011, 1012, 982, 1014, 1017, 1018, 1003, 1022, 1023, 1026, 977, 983, 1031, 1034, 989],

/***/ 993:
/*!******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactBrowserEventEmitter.js ***!
  \******************************************************************************/
[1905, 994, 995, 996, 1001, 982, 1002, 1003, 1004],

/***/ 994:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/EventConstants.js ***!
  \********************************************************************/
[1906, 981],

/***/ 995:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/EventPluginHub.js ***!
  \********************************************************************/
[1907, 996, 997, 998, 999, 1000, 977, 989],

/***/ 996:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/EventPluginRegistry.js ***!
  \*************************************************************************/
[1908, 977],

/***/ 997:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/EventPluginUtils.js ***!
  \**********************************************************************/
[1909, 994, 998, 977, 989],

/***/ 998:
/*!*********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactErrorUtils.js ***!
  \*********************************************************************/
34,

/***/ 999:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/accumulateInto.js ***!
  \********************************************************************/
[1910, 977],

/***/ 1000:
/*!************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/forEachAccumulated.js ***!
  \************************************************************************/
36,

/***/ 1001:
/*!****************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactEventEmitterMixin.js ***!
  \****************************************************************************/
[1911, 995],

/***/ 1002:
/*!*********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ViewportMetrics.js ***!
  \*********************************************************************/
38,

/***/ 1003:
/*!*******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/Object.assign.js ***!
  \*******************************************************************/
39,

/***/ 1004:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/isEventSupported.js ***!
  \**********************************************************************/
[1912, 973],

/***/ 1005:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMFeatureFlags.js ***!
  \**************************************************************************/
41,

/***/ 1006:
/*!******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactElement.js ***!
  \******************************************************************/
[1913, 969, 1003, 1007],

/***/ 1007:
/*!***********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/canDefineProperty.js ***!
  \***********************************************************************/
43,

/***/ 1008:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactEmptyComponentRegistry.js ***!
  \*********************************************************************************/
44,

/***/ 1009:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactInstanceHandles.js ***!
  \**************************************************************************/
[1914, 1010, 977],

/***/ 1010:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactRootIndex.js ***!
  \********************************************************************/
46,

/***/ 1011:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactInstanceMap.js ***!
  \**********************************************************************/
47,

/***/ 1012:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactMarkupChecksum.js ***!
  \*************************************************************************/
[1915, 1013],

/***/ 1013:
/*!*************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/adler32.js ***!
  \*************************************************************/
49,

/***/ 1014:
/*!*********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactReconciler.js ***!
  \*********************************************************************/
[1916, 1015],

/***/ 1015:
/*!**************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactRef.js ***!
  \**************************************************************/
[1917, 1016],

/***/ 1016:
/*!****************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactOwner.js ***!
  \****************************************************************/
[1918, 977],

/***/ 1017:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactUpdateQueue.js ***!
  \**********************************************************************/
[1919, 969, 1006, 1011, 1018, 1003, 977, 989],

/***/ 1018:
/*!******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactUpdates.js ***!
  \******************************************************************/
[1920, 1019, 1020, 982, 1014, 1021, 1003, 977],

/***/ 1019:
/*!*******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/CallbackQueue.js ***!
  \*******************************************************************/
[1921, 1020, 1003, 977],

/***/ 1020:
/*!*****************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/PooledClass.js ***!
  \*****************************************************************/
[1922, 977],

/***/ 1021:
/*!*****************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/Transaction.js ***!
  \*****************************************************************/
[1923, 977],

/***/ 1022:
/*!************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/emptyObject.js ***!
  \************************************************************************/
58,

/***/ 1023:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/containsNode.js ***!
  \*************************************************************************/
[1924, 1024],

/***/ 1024:
/*!***********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/isTextNode.js ***!
  \***********************************************************************/
[1925, 1025],

/***/ 1025:
/*!*******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/isNode.js ***!
  \*******************************************************************/
61,

/***/ 1026:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/instantiateReactComponent.js ***!
  \*******************************************************************************/
[1926, 1027, 1032, 1033, 1003, 977, 989],

/***/ 1027:
/*!*****************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactCompositeComponent.js ***!
  \*****************************************************************************/
[1927, 1028, 969, 1006, 1011, 982, 1029, 1030, 1014, 1017, 1003, 1022, 977, 1031, 989],

/***/ 1028:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactComponentEnvironment.js ***!
  \*******************************************************************************/
[1928, 977],

/***/ 1029:
/*!****************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactPropTypeLocations.js ***!
  \****************************************************************************/
[1929, 981],

/***/ 1030:
/*!********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactPropTypeLocationNames.js ***!
  \********************************************************************************/
66,

/***/ 1031:
/*!********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/shouldUpdateReactComponent.js ***!
  \********************************************************************************/
67,

/***/ 1032:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactEmptyComponent.js ***!
  \*************************************************************************/
[1930, 1006, 1008, 1014, 1003],

/***/ 1033:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactNativeComponent.js ***!
  \**************************************************************************/
[1931, 1003, 977],

/***/ 1034:
/*!************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/validateDOMNesting.js ***!
  \************************************************************************/
[1932, 1003, 979, 989],

/***/ 1035:
/*!***************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDefaultInjection.js ***!
  \***************************************************************************/
[1933, 1036, 1044, 1047, 1048, 1049, 973, 1053, 1054, 990, 1056, 1057, 970, 1082, 1085, 1009, 992, 1089, 1094, 1095, 1096, 1105, 1106],

/***/ 1036:
/*!****************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/BeforeInputEventPlugin.js ***!
  \****************************************************************************/
[1934, 994, 1037, 973, 1038, 1040, 1042, 1043],

/***/ 1037:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/EventPropagators.js ***!
  \**********************************************************************/
[1935, 994, 995, 989, 999, 1000],

/***/ 1038:
/*!******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/FallbackCompositionState.js ***!
  \******************************************************************************/
[1936, 1020, 1003, 1039],

/***/ 1039:
/*!****************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/getTextContentAccessor.js ***!
  \****************************************************************************/
[1937, 973],

/***/ 1040:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticCompositionEvent.js ***!
  \*******************************************************************************/
[1938, 1041],

/***/ 1041:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticEvent.js ***!
  \********************************************************************/
[1939, 1020, 1003, 979, 989],

/***/ 1042:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticInputEvent.js ***!
  \*************************************************************************/
[1940, 1041],

/***/ 1043:
/*!******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/keyOf.js ***!
  \******************************************************************/
79,

/***/ 1044:
/*!***********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ChangeEventPlugin.js ***!
  \***********************************************************************/
[1941, 994, 995, 1037, 973, 1018, 1041, 1045, 1004, 1046, 1043],

/***/ 1045:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/getEventTarget.js ***!
  \********************************************************************/
81,

/***/ 1046:
/*!************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/isTextInputElement.js ***!
  \************************************************************************/
82,

/***/ 1047:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ClientReactRootIndex.js ***!
  \**************************************************************************/
83,

/***/ 1048:
/*!*****************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/DefaultEventPluginOrder.js ***!
  \*****************************************************************************/
[1942, 1043],

/***/ 1049:
/*!***************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/EnterLeaveEventPlugin.js ***!
  \***************************************************************************/
[1943, 994, 1037, 1050, 992, 1043],

/***/ 1050:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticMouseEvent.js ***!
  \*************************************************************************/
[1944, 1051, 1002, 1052],

/***/ 1051:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticUIEvent.js ***!
  \**********************************************************************/
[1945, 1041, 1045],

/***/ 1052:
/*!***************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/getEventModifierState.js ***!
  \***************************************************************************/
88,

/***/ 1053:
/*!***************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/HTMLDOMPropertyConfig.js ***!
  \***************************************************************************/
[1946, 987, 973],

/***/ 1054:
/*!********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactBrowserComponentMixin.js ***!
  \********************************************************************************/
[1947, 1011, 1055, 989],

/***/ 1055:
/*!*****************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/findDOMNode.js ***!
  \*****************************************************************/
[1948, 969, 1011, 992, 977, 989],

/***/ 1056:
/*!**********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDefaultBatchingStrategy.js ***!
  \**********************************************************************************/
[1949, 1018, 1021, 1003, 979],

/***/ 1057:
/*!***********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMComponent.js ***!
  \***********************************************************************/
[1950, 1058, 1060, 987, 986, 994, 993, 990, 1068, 1069, 1073, 1076, 1077, 992, 1078, 982, 1017, 1003, 1007, 985, 977, 1004, 1043, 983, 984, 1081, 1034, 989],

/***/ 1058:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/AutoFocusUtils.js ***!
  \********************************************************************/
[1951, 992, 1055, 1059],

/***/ 1059:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/focusNode.js ***!
  \**********************************************************************/
95,

/***/ 1060:
/*!***************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/CSSPropertyOperations.js ***!
  \***************************************************************************/
[1952, 1061, 973, 982, 1062, 1064, 1065, 1067, 989],

/***/ 1061:
/*!*****************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/CSSProperty.js ***!
  \*****************************************************************/
97,

/***/ 1062:
/*!******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/camelizeStyleName.js ***!
  \******************************************************************************/
[1953, 1063],

/***/ 1063:
/*!*********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/camelize.js ***!
  \*********************************************************************/
99,

/***/ 1064:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/dangerousStyleValue.js ***!
  \*************************************************************************/
[1954, 1061],

/***/ 1065:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/hyphenateStyleName.js ***!
  \*******************************************************************************/
[1955, 1066],

/***/ 1066:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/hyphenate.js ***!
  \**********************************************************************/
102,

/***/ 1067:
/*!******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/memoizeStringOnly.js ***!
  \******************************************************************************/
103,

/***/ 1068:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMButton.js ***!
  \********************************************************************/
104,

/***/ 1069:
/*!*******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMInput.js ***!
  \*******************************************************************/
[1956, 991, 1070, 992, 1018, 1003, 977],

/***/ 1070:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/LinkedValueUtils.js ***!
  \**********************************************************************/
[1957, 1071, 1029, 977, 989],

/***/ 1071:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactPropTypes.js ***!
  \********************************************************************/
[1958, 1006, 1030, 979, 1072],

/***/ 1072:
/*!*******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/getIteratorFn.js ***!
  \*******************************************************************/
108,

/***/ 1073:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMOption.js ***!
  \********************************************************************/
[1959, 1074, 1076, 1003, 989],

/***/ 1074:
/*!*******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactChildren.js ***!
  \*******************************************************************/
[1960, 1020, 1006, 979, 1075],

/***/ 1075:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/traverseAllChildren.js ***!
  \*************************************************************************/
[1961, 969, 1006, 1009, 1072, 977, 989],

/***/ 1076:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMSelect.js ***!
  \********************************************************************/
[1962, 1070, 992, 1018, 1003, 989],

/***/ 1077:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMTextarea.js ***!
  \**********************************************************************/
[1963, 1070, 991, 1018, 1003, 977, 989],

/***/ 1078:
/*!*********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactMultiChild.js ***!
  \*********************************************************************/
[1964, 1028, 980, 969, 1014, 1079, 1080],

/***/ 1079:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactChildReconciler.js ***!
  \**************************************************************************/
[1965, 1014, 1026, 1031, 1075, 989],

/***/ 1080:
/*!*********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/flattenChildren.js ***!
  \*********************************************************************/
[1966, 1075, 989],

/***/ 1081:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/shallowEqual.js ***!
  \*************************************************************************/
117,

/***/ 1082:
/*!************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactEventListener.js ***!
  \************************************************************************/
[1967, 1083, 973, 1020, 1009, 992, 1018, 1003, 1045, 1084],

/***/ 1083:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/EventListener.js ***!
  \**************************************************************************/
[1968, 979],

/***/ 1084:
/*!***************************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/getUnboundedScrollPosition.js ***!
  \***************************************************************************************/
120,

/***/ 1085:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactInjection.js ***!
  \********************************************************************/
[1969, 987, 995, 1028, 1086, 1032, 993, 1033, 982, 1010, 1018],

/***/ 1086:
/*!****************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactClass.js ***!
  \****************************************************************/
[1970, 1087, 1006, 1029, 1030, 1088, 1003, 1022, 977, 981, 1043, 989],

/***/ 1087:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactComponent.js ***!
  \********************************************************************/
[1971, 1088, 1007, 1022, 977, 989],

/***/ 1088:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactNoopUpdateQueue.js ***!
  \**************************************************************************/
[1972, 989],

/***/ 1089:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactReconcileTransaction.js ***!
  \*******************************************************************************/
[1973, 1019, 1020, 993, 1005, 1090, 1021, 1003],

/***/ 1090:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactInputSelection.js ***!
  \*************************************************************************/
[1974, 1091, 1023, 1059, 1093],

/***/ 1091:
/*!***********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMSelection.js ***!
  \***********************************************************************/
[1975, 973, 1092, 1039],

/***/ 1092:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/getNodeForCharacterOffset.js ***!
  \*******************************************************************************/
128,

/***/ 1093:
/*!*****************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/getActiveElement.js ***!
  \*****************************************************************************/
129,

/***/ 1094:
/*!***********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SelectEventPlugin.js ***!
  \***********************************************************************/
[1976, 994, 1037, 973, 1090, 1041, 1093, 1046, 1043, 1081],

/***/ 1095:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ServerReactRootIndex.js ***!
  \**************************************************************************/
131,

/***/ 1096:
/*!***********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SimpleEventPlugin.js ***!
  \***********************************************************************/
[1977, 994, 1083, 1037, 992, 1097, 1041, 1098, 1099, 1050, 1102, 1103, 1051, 1104, 979, 1100, 977, 1043],

/***/ 1097:
/*!*****************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticClipboardEvent.js ***!
  \*****************************************************************************/
[1978, 1041],

/***/ 1098:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticFocusEvent.js ***!
  \*************************************************************************/
[1979, 1051],

/***/ 1099:
/*!****************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticKeyboardEvent.js ***!
  \****************************************************************************/
[1980, 1051, 1100, 1101, 1052],

/***/ 1100:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/getEventCharCode.js ***!
  \**********************************************************************/
136,

/***/ 1101:
/*!*****************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/getEventKey.js ***!
  \*****************************************************************/
[1981, 1100],

/***/ 1102:
/*!************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticDragEvent.js ***!
  \************************************************************************/
[1982, 1050],

/***/ 1103:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticTouchEvent.js ***!
  \*************************************************************************/
[1983, 1051, 1052],

/***/ 1104:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticWheelEvent.js ***!
  \*************************************************************************/
[1984, 1050],

/***/ 1105:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SVGDOMPropertyConfig.js ***!
  \**************************************************************************/
[1985, 987],

/***/ 1106:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDefaultPerf.js ***!
  \**********************************************************************/
[1986, 987, 1107, 992, 982, 1108],

/***/ 1107:
/*!******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDefaultPerfAnalysis.js ***!
  \******************************************************************************/
[1987, 1003],

/***/ 1108:
/*!***************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/performanceNow.js ***!
  \***************************************************************************/
[1988, 1109],

/***/ 1109:
/*!************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/performance.js ***!
  \************************************************************************/
[1989, 973],

/***/ 1110:
/*!******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactVersion.js ***!
  \******************************************************************/
146,

/***/ 1111:
/*!********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/renderSubtreeIntoContainer.js ***!
  \********************************************************************************/
[1990, 992],

/***/ 1112:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMServer.js ***!
  \********************************************************************/
[1991, 1035, 1113, 1110],

/***/ 1113:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactServerRendering.js ***!
  \**************************************************************************/
[1992, 1056, 1006, 1009, 1012, 1114, 1115, 1018, 1022, 1026, 977],

/***/ 1114:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactServerBatchingStrategy.js ***!
  \*********************************************************************************/
150,

/***/ 1115:
/*!*************************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactServerRenderingTransaction.js ***!
  \*************************************************************************************/
[1993, 1020, 1019, 1021, 1003, 979],

/***/ 1116:
/*!*********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactIsomorphic.js ***!
  \*********************************************************************/
[1994, 1074, 1087, 1086, 1117, 1006, 1118, 1071, 1110, 1003, 1120],

/***/ 1117:
/*!***********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMFactories.js ***!
  \***********************************************************************/
[1995, 1006, 1118, 1119],

/***/ 1118:
/*!***************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactElementValidator.js ***!
  \***************************************************************************/
[1996, 1006, 1029, 1030, 969, 1007, 1072, 977, 989],

/***/ 1119:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/mapObject.js ***!
  \**********************************************************************/
155,

/***/ 1120:
/*!***************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/onlyChild.js ***!
  \***************************************************************/
[1997, 1006, 977],

/***/ 1121:
/*!****************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/deprecated.js ***!
  \****************************************************************/
[1998, 1003, 989],

/***/ 1122:
/*!***********************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react-dom/index.js ***!
  \***********************************************************/
[1999, 968],

/***/ 1123:
/*!*************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/anatomogram/index.js ***!
  \*************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/Anatomogram.jsx */ 1124);

/***/ },

/***/ 1124:
/*!************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/anatomogram/src/Anatomogram.jsx ***!
  \************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 966);
	var ReactDOM = __webpack_require__(/*! react-dom */ 1122);
	
	var $ = __webpack_require__(/*! jquery */ 1125);
	__webpack_require__(/*! jquery-hc-sticky */ 1126);
	__webpack_require__(/*! jquery-ui-bundle */ 1127);
	
	var Snap = __webpack_require__(/*! imports-loader?this=>window,fix=>module.exports=0!snapsvg/dist/snap.svg.js */ 1128);
	
	var EventEmitter = __webpack_require__(/*! events */ 472);
	
	//*------------------------------------------------------------------*
	
	var AnatomogramSelectImageButton = React.createClass({
	    displayName: 'AnatomogramSelectImageButton',
	
	    propTypes: {
	        anatomogramId: React.PropTypes.string.isRequired,
	        selected: React.PropTypes.bool.isRequired,
	        toggleSrcTemplate: React.PropTypes.string.isRequired,
	        onClick: React.PropTypes.func.isRequired
	    },
	
	    render: function () {
	        var selectedToggleSrc = this.props.toggleSrcTemplate + "_selected.png",
	            unselectedToggleSrc = this.props.toggleSrcTemplate + "_unselected.png";
	
	        return React.createElement(
	            'div',
	            null,
	            React.createElement('img', { ref: 'toggleButton', onClick: this._onClick, src: this.props.selected ? selectedToggleSrc : unselectedToggleSrc,
	                style: { width: "24px", height: "24px", padding: "2px" } })
	        );
	    },
	
	    componentDidMount: function () {
	        $(ReactDOM.findDOMNode(this.refs.toggleButton)).button();
	    },
	
	    _onClick: function () {
	        this.props.onClick(this.props.anatomogramId);
	    }
	});
	
	var AnatomogramSelectImageButtons = React.createClass({
	    displayName: 'AnatomogramSelectImageButtons',
	
	    propTypes: {
	        selectedId: React.PropTypes.string.isRequired,
	        availableAnatomograms: React.PropTypes.array.isRequired,
	        onClick: React.PropTypes.func.isRequired
	    },
	
	    render: function () {
	        if (this.props.availableAnatomograms.length > 1) {
	            var selectedId = this.props.selectedId,
	                onClick = this.props.onClick;
	            var anatomogramSelectImageButtons = this.props.availableAnatomograms.map(function (availableAnatomogram) {
	                return React.createElement(AnatomogramSelectImageButton, { key: availableAnatomogram.id + "_toggle",
	                    anatomogramId: availableAnatomogram.id, selected: selectedId === availableAnatomogram.id, toggleSrcTemplate: availableAnatomogram.toggleSrcTemplate, onClick: onClick });
	            });
	
	            return React.createElement(
	                'span',
	                null,
	                anatomogramSelectImageButtons
	            );
	        } else {
	            return null;
	        }
	    }
	
	});
	
	var AnatomogramImageParts = React.createClass({
	    displayName: 'AnatomogramImageParts',
	
	    propTypes: {
	        idsExpressedInExperiment: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        idsHeatmapWantsHighlighted: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        idsMousedOver: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        idsNotHighlighted: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        expressedTissueColour: React.PropTypes.string.isRequired,
	        hoveredTissueColour: React.PropTypes.string.isRequired
	    },
	
	    getInitialState: function () {
	        return { toDraw: [].concat(AnatomogramImageParts.idsThatShouldBeStronglyHighlighted(this.props).map(this._highlightStrongly), this.props.idsExpressedInExperiment.map(this._highlightSlightly), this.props.idsNotHighlighted.map(this._highlightAsBackground)) };
	    },
	
	    render: function () {
	        return React.createElement('span', null);
	    },
	
	    _highlightStrongly: function (svgPathId) {
	        return { id: svgPathId, colour: this.props.hoveredTissueColour, opacity: 0.7 };
	    },
	
	    _highlightSlightly: function (svgPathId) {
	        return { id: svgPathId, colour: this.props.expressedTissueColour, opacity: 0.7 };
	    },
	
	    _highlightAsBackground: function (svgPathId) {
	        return { id: svgPathId, colour: "gray", opacity: 0.5 };
	    },
	
	    componentWillReceiveProps: function (nextProps) {
	        var oldStrong = AnatomogramImageParts.idsThatShouldBeStronglyHighlighted(this.props);
	        var newStrong = AnatomogramImageParts.idsThatShouldBeStronglyHighlighted(nextProps);
	        var oldWeak = this.props.idsExpressedInExperiment;
	        var newWeak = nextProps.idsExpressedInExperiment;
	
	        var toDraw = [].concat(
	        //ids that heatmap wants highlighted are the most highlighted
	        newStrong.filter(function (id) {
	            return oldStrong.indexOf(id) < 0;
	        }).map(this._highlightStrongly),
	        //ids that are expressed in the experiment are highlighted with a weaker colour, often the same as background
	        newWeak.filter(function (id) {
	            return newStrong.indexOf(id) < 0;
	        }).filter(function (id) {
	            return oldWeak.indexOf(id) < 0;
	        }.bind(this)).map(this._highlightSlightly), nextProps.idsNotHighlighted.filter(function (id) {
	            return this.props.idsNotHighlighted.indexOf(id) < 0;
	        }.bind(this)).map(this._highlightAsBackground));
	
	        this.setState({ toDraw: toDraw });
	    },
	
	    statics: {
	        idsThatShouldBeStronglyHighlighted(properties) {
	            return properties.idsHeatmapWantsHighlighted.concat(properties.idsMousedOver);
	        }
	    }
	});
	
	var AnatomogramImage = React.createClass({
	    displayName: 'AnatomogramImage',
	
	    propTypes: {
	        file: React.PropTypes.string.isRequired,
	        height: React.PropTypes.string.isRequired,
	        expressedFactors: React.PropTypes.arrayOf(React.PropTypes.string),
	        expressedFactorsPerRow: React.PropTypes.object.isRequired,
	        allSvgPathIds: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        expressedTissueColour: React.PropTypes.string.isRequired,
	        hoveredTissueColour: React.PropTypes.string.isRequired
	    },
	
	    getInitialState: function () {
	        return {
	            hoveredPathId: null,
	            hoveredRowId: null,
	            mousedOverSvgIds: []
	        };
	    },
	
	    componentWillReceiveProps: function (nextProps) {
	        if (nextProps.file !== this.props.file) {
	            this._loadAnatomogram(nextProps.file);
	        }
	    },
	
	    componentDidMount: function () {
	        this._loadAnatomogram(this.props.file);
	        this._draw();
	    },
	
	    componentDidUpdate: function () {
	        this._draw();
	    },
	
	    _draw: function () {
	        var svg = Snap(ReactDOM.findDOMNode(this.refs.anatomogram)).select("g");
	        if (svg !== null) {
	            this._drawOnSvg(svg, this.refs.imageParts.state.toDraw);
	            this.refs.imageParts.setState({ toDraw: [] });
	        }
	    },
	    _drawInitialLayout: function (svg) {
	        this._drawOnSvg(svg, this.refs.imageParts.getInitialState().toDraw);
	        this.refs.imageParts.setState({ toDraw: [] });
	    },
	
	    _drawOnSvg: function (svg, instructions) {
	        instructions.forEach(function (instruction) {
	            this._highlightOrganismParts(svg, instruction.id, instruction.colour, instruction.opacity);
	        }.bind(this));
	    },
	
	    render: function () {
	        var idsExpressedInExperiment = [],
	            idsHoveredOver = [],
	            idsHeatmapWantsHighlighted = [],
	            idsNotHighlighted = [];
	        for (var i = 0; i < this.props.allSvgPathIds.length; i++) {
	            var id = this.props.allSvgPathIds[i];
	            if (this.state.mousedOverSvgIds.indexOf(id) > -1) {
	                idsHoveredOver.push(id);
	            } else if (this._hoveredRowContainsPathId(id) || this.state.hoveredPathId === id) {
	                idsHeatmapWantsHighlighted.push(id);
	            } else if (this.props.expressedFactors.indexOf(id) > -1) {
	                idsExpressedInExperiment.push(id);
	            } else {
	                idsNotHighlighted.push(id);
	            }
	        }
	
	        return React.createElement(
	            'span',
	            null,
	            React.createElement('svg', { ref: 'anatomogram', style: { display: "table-cell", width: "230px", height: this.props.height + "px" } }),
	            React.createElement(AnatomogramImageParts, { ref: 'imageParts', key: this.props.file,
	                idsExpressedInExperiment: idsExpressedInExperiment,
	                idsHeatmapWantsHighlighted: idsHeatmapWantsHighlighted,
	                idsMousedOver: idsHoveredOver,
	                idsNotHighlighted: idsNotHighlighted,
	                expressedTissueColour: this.props.expressedTissueColour,
	                hoveredTissueColour: this.props.hoveredTissueColour })
	        );
	    },
	
	    _highlightPath: function (svgPathId) {
	        this.setState({ hoveredPathId: svgPathId });
	    },
	
	    _highlightRow: function (rowId) {
	        this.setState({ hoveredRowId: rowId });
	    },
	
	    _loadAnatomogram: function (svgFile) {
	
	        var svgCanvas = Snap(ReactDOM.findDOMNode(this.refs.anatomogram)),
	            $svgCanvas = $(ReactDOM.findDOMNode(this.refs.anatomogram)),
	            allElements = svgCanvas.selectAll("*");
	
	        if (allElements) {
	            allElements.remove();
	        }
	
	        var displayAllOrganismPartsCallback = this._drawInitialLayout;
	        var registerHoverEventsCallback = this._registerHoverEvents;
	        Snap.load(svgFile, function (fragment) {
	            var g = fragment.select("g");
	            g.transform("S1.6,0,0");
	            displayAllOrganismPartsCallback(g);
	            registerHoverEventsCallback(g);
	            svgCanvas.append(g);
	            var img = fragment.select("#ccLogo");
	            var heightTranslate = $svgCanvas.height() - 15;
	            var widthTranslate = $svgCanvas.width() / 2 - 40;
	            img.transform("t" + widthTranslate + "," + heightTranslate);
	            svgCanvas.append(img);
	        });
	    },
	
	    _hoveredRowContainsPathId: function (svgPathId) {
	        return this.state.hoveredRowId && this.props.expressedFactorsPerRow.hasOwnProperty(this.state.hoveredRowId) && this.props.expressedFactorsPerRow[this.state.hoveredRowId].indexOf(svgPathId) > -1;
	    },
	
	    _registerHoverEvents: function (svg) {
	        if (svg) {
	            // Sometimes svg is null... why?
	            var mouseoverCallback = function (svgPathId) {
	                this.props.eventEmitter.emit('gxaAnatomogramTissueMouseEnter', svgPathId);
	                this.setState(function (previousState, currentProps) {
	                    var a = [].concat(previousState.mousedOverSvgIds);
	                    a.push(svgPathId);
	                    while (a.length > 5) {
	                        a.shift();
	                    }
	                    return { mousedOverSvgIds: a };
	                });
	            }.bind(this);
	            var mouseoutCallback = function (svgPathId) {
	                this.props.eventEmitter.emit('gxaAnatomogramTissueMouseLeave', svgPathId);
	                this.setState(function (previousState, currentProps) {
	                    var a = previousState.mousedOverSvgIds.map(function (el) {
	                        return el === svgPathId ? "" : el;
	                    });
	                    return { mousedOverSvgIds: a };
	                });
	            }.bind(this);
	
	            this.props.allSvgPathIds.forEach(function (svgPathId) {
	                var svgElement = svg.select("#" + svgPathId);
	                if (svgElement) {
	                    svgElement.mouseover(function () {
	                        mouseoverCallback(svgPathId);
	                    });
	                    svgElement.mouseout(function () {
	                        mouseoutCallback(svgPathId);
	                    });
	                }
	            }, this);
	        }
	    },
	
	    _highlightOrganismParts: function (svg, svgPathId, colour, opacity) {
	        AnatomogramImage._recursivelyChangeProperties(svg.select("#" + svgPathId), colour, opacity);
	    },
	
	    statics: {
	        _recursivelyChangeProperties: function (svgElement, colour, opacity) {
	
	            if (svgElement) {
	                var innerElements = svgElement.selectAll("*");
	
	                if (innerElements.length > 0) {
	                    innerElements.forEach(function (innerElement) {
	                        AnatomogramImage._recursivelyChangeProperties(innerElement);
	                    });
	                }
	
	                svgElement.attr({ "fill": colour, "fill-opacity": opacity });
	            }
	        },
	        _recursivelySelectElements: function (svgElement) {
	            if (!svgElement) {
	                return [];
	            }
	
	            var innerElements = svgElement.selectAll("*");
	            if (innerElements.length === 0) {
	                return [svgElement];
	            } else {
	                var allElements = [];
	                innerElements.forEach(function (innerElement) {
	                    allElements = allElements.concat(AnatomogramImage._recursivelySelectElements(innerElement));
	                });
	                return allElements;
	            }
	        }
	    }
	});
	
	var Anatomogram = React.createClass({
	    displayName: 'Anatomogram',
	
	
	    propTypes: {
	        anatomogramData: React.PropTypes.object.isRequired,
	        expressedTissueColour: React.PropTypes.string.isRequired,
	        hoveredTissueColour: React.PropTypes.string.isRequired,
	        profileRows: React.PropTypes.arrayOf(React.PropTypes.shape({
	            id: React.PropTypes.string,
	            name: React.PropTypes.string.isRequired,
	            expressions: React.PropTypes.arrayOf(React.PropTypes.shape({
	                factorName: React.PropTypes.string,
	                color: React.PropTypes.string,
	                value: React.PropTypes.number, // missing represents "NA"/"NT"
	                svgPathId: React.PropTypes.string
	            })).isRequired
	        })).isRequired,
	        eventEmitter: React.PropTypes.instanceOf(EventEmitter),
	        atlasBaseURL: React.PropTypes.string.isRequired
	    },
	
	    getInitialState: function () {
	
	        var availableAnatomograms = [];
	        if (this.props.anatomogramData.maleAnatomogramFile) {
	            availableAnatomograms.push({ id: "male",
	                anatomogramFile: this.props.atlasBaseURL + "/resources/svg/" + this.props.anatomogramData.maleAnatomogramFile,
	                toggleSrcTemplate: this.props.atlasBaseURL + this.props.anatomogramData.toggleButtonMaleImageTemplate });
	        }
	        if (this.props.anatomogramData.femaleAnatomogramFile) {
	            availableAnatomograms.push({ id: "female",
	                anatomogramFile: this.props.atlasBaseURL + "/resources/svg/" + this.props.anatomogramData.femaleAnatomogramFile,
	                toggleSrcTemplate: this.props.atlasBaseURL + this.props.anatomogramData.toggleButtonFemaleImageTemplate });
	        }
	        if (this.props.anatomogramData.brainAnatomogramFile) {
	            availableAnatomograms.push({ id: "brain",
	                anatomogramFile: this.props.atlasBaseURL + "/resources/svg/" + this.props.anatomogramData.brainAnatomogramFile,
	                toggleSrcTemplate: this.props.atlasBaseURL + this.props.anatomogramData.toggleButtonBrainImageTemplate });
	        }
	
	        var allExpressedFactors = [],
	            expressedFactorsPerRow = {};
	        this.props.profileRows.forEach(function (profileRow) {
	            var expressedFactors = [];
	            profileRow.expressions.forEach(function (expression) {
	                if (! typeof expression.value !== "undefined" && expression.value) {
	                    expressedFactors.push(expression.svgPathId);
	                }
	            });
	            expressedFactorsPerRow[profileRow.name] = expressedFactors;
	            allExpressedFactors = allExpressedFactors.concat(expressedFactors);
	        });
	
	        function onlyUnique(value, index, self) {
	            return self.indexOf(value) === index;
	        }
	
	        return {
	            selectedId: availableAnatomograms[0].id,
	            availableAnatomograms: availableAnatomograms,
	            expressedFactors: allExpressedFactors.filter(onlyUnique),
	            expressedFactorsPerRow: expressedFactorsPerRow
	        };
	    },
	
	    render: function () {
	        function containsHuman(str) {
	            return str.indexOf("human") > -1;
	        }
	
	        return React.createElement(
	            'div',
	            { className: 'gxaAnatomogram', style: { display: "table", paddingTop: "4px" } },
	            React.createElement(
	                'div',
	                { style: { display: "table-row" } },
	                React.createElement(
	                    'div',
	                    { style: { display: "table-cell", verticalAlign: "top" } },
	                    React.createElement(AnatomogramSelectImageButtons, { selectedId: this.state.selectedId, availableAnatomograms: this.state.availableAnatomograms, onClick: this._handleChange })
	                ),
	                React.createElement(AnatomogramImage, {
	                    key: this.state.selectedId,
	                    ref: 'currentImage',
	                    file: this._getAnatomogramSVGFile(this.state.selectedId),
	                    height: containsHuman(this.props.anatomogramData.maleAnatomogramFile) ? "375" : "265",
	                    expressedFactors: this.state.expressedFactors,
	                    expressedFactorsPerRow: this.state.expressedFactorsPerRow,
	                    allSvgPathIds: this.props.anatomogramData.allSvgPathIds,
	                    eventEmitter: this.props.eventEmitter,
	                    expressedTissueColour: this.props.expressedTissueColour,
	                    hoveredTissueColour: this.props.hoveredTissueColour })
	            )
	        );
	    },
	    _registerListenerIfNecessary(name, fn) {
	        if (this.props.eventEmitter && this.props.eventEmitter._events && !this.props.eventEmitter._events.hasOwnProperty(name)) {
	            this.props.eventEmitter.addListener(name, fn);
	        }
	    },
	
	    componentDidMount: function () {
	        this._registerListenerIfNecessary("gxaHeatmapColumnHoverChange", this._highlightPath);
	        this._registerListenerIfNecessary("gxaHeatmapRowHoverChange", this._highlightRow);
	    },
	
	    componentDidUpdate: function () {
	        this._registerListenerIfNecessary("gxaHeatmapColumnHoverChange", this._highlightPath);
	        this._registerListenerIfNecessary("gxaHeatmapRowHoverChange", this._highlightRow);
	    },
	
	    _handleChange: function (newSelectedId) {
	        if (newSelectedId !== this.state.selectedId) {
	            this.setState({ selectedId: newSelectedId });
	        }
	    },
	
	    _highlightPath: function (svgPathId) {
	        this.refs.currentImage._highlightPath(svgPathId);
	    },
	
	    _highlightRow: function (rowId) {
	        this.refs.currentImage._highlightRow(rowId);
	    },
	
	    _getAnatomogramSVGFile: function (id) {
	        for (var i = 0; i < this.state.availableAnatomograms.length; i++) {
	            if (id === this.state.availableAnatomograms[i].id) {
	                return this.state.availableAnatomograms[i].anatomogramFile;
	            }
	        }
	    }
	
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = Anatomogram;

/***/ },

/***/ 1125:
/*!****************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/anatomogram/~/jquery/dist/jquery.js ***!
  \****************************************************************************/
457,

/***/ 1126:
/*!*******************************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/anatomogram/~/jquery-hc-sticky/jquery.hc-sticky.js ***!
  \*******************************************************************************************/
[2122, 1125],

/***/ 1127:
/*!************************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/anatomogram/~/jquery-ui-bundle/jquery-ui.js ***!
  \************************************************************************************/
[2119, 1125],

/***/ 1128:
/*!******************************************************************************************************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/imports-loader?this=>window,fix=>module.exports=0!./expression-atlas-anatomogram/~/anatomogram/~/snapsvg/dist/snap.svg.js ***!
  \******************************************************************************************************************************************************************/
473

});
//# sourceMappingURL=expressionAtlasAnatomogram.bundle.js.map