var expressionAtlasAnatomogram =
webpackJsonp_name_([2],{

/***/ 0:
/*!***********************************************!*\
  !*** ./expression-atlas-anatomogram/index.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/anatomogramRenderer.js */ 968);

/***/ },

/***/ 968:
/*!*****************************************************************!*\
  !*** ./expression-atlas-anatomogram/src/anatomogramRenderer.js ***!
  \*****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 969);
	var ReactDOM = __webpack_require__(/*! react-dom */ 1125);
	
	var EventEmitter = __webpack_require__(/*! events */ 484);
	var eventEmitter = new EventEmitter();
	
	var Anatomogram = __webpack_require__(/*! anatomogram */ 1126);
	
	//*------------------------------------------------------------------*
	
	function render(domNode, anatomogramData, profileRows, expressedColour, hoverColour, jQueryUITheme) {
	
	    if (jQueryUITheme !== "") {
	
	        var href = jQueryUITheme === "atlas" || typeof jQueryUITheme === "undefined" ?
	            window.location.protocol + "//" + window.location.host + "/gxa/resources/css/jquery-ui-1.11.4.custom/css/jquery-ui-min.css" :
	            "https://code.jquery.com/ui/1.11.1/themes/" + jQueryUITheme + "/jquery-ui.css";
	
	        var cssDoc = document.createElement("link");
	        cssDoc.setAttribute("rel", "stylesheet");
	        cssDoc.setAttribute("type", "text/css");
	        cssDoc.setAttribute("href", href);
	        document.getElementsByTagName("head")[0].appendChild(cssDoc);
	
	    }
	
	    ReactDOM.render(
	        React.createElement(
	            Anatomogram,
	            {
	                anatomogramData: anatomogramData,
	                expressedTissueColour: expressedColour,
	                hoveredTissueColour: hoverColour,
	                atlasBaseURL: "http://wwwdev.ebi.ac.uk/gxa",
	                profileRows: profileRows,
	                eventEmitter: eventEmitter
	            }
	        ),
	        domNode
	    );
	}
	
	//*------------------------------------------------------------------*
	
	exports.render = render;
	exports.eventEmitter = eventEmitter;


/***/ },

/***/ 969:
/*!*******************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/react.js ***!
  \*******************************************************/
[2198, 970],

/***/ 970:
/*!***********************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/React.js ***!
  \***********************************************************/
[2199, 971, 1115, 1119, 1006, 1124],

/***/ 971:
/*!**************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOM.js ***!
  \**************************************************************/
[2200, 972, 973, 1038, 1012, 995, 985, 1017, 1021, 1113, 1058, 1114, 992, 976],

/***/ 972:
/*!***********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactCurrentOwner.js ***!
  \***********************************************************************/
5,

/***/ 973:
/*!***************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMTextComponent.js ***!
  \***************************************************************************/
[2201, 974, 989, 993, 995, 1006, 988, 987, 1037],

/***/ 974:
/*!***************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/DOMChildrenOperations.js ***!
  \***************************************************************************/
[2202, 975, 983, 985, 986, 987, 980],

/***/ 975:
/*!************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/Danger.js ***!
  \************************************************************/
[2203, 976, 977, 982, 981, 980],

/***/ 976:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/ExecutionEnvironment.js ***!
  \*********************************************************************************/
9,

/***/ 977:
/*!**********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/createNodesFromMarkup.js ***!
  \**********************************************************************************/
[2204, 976, 978, 981, 980],

/***/ 978:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/createArrayFromMixed.js ***!
  \*********************************************************************************/
[2205, 979],

/***/ 979:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/toArray.js ***!
  \********************************************************************/
[2206, 980],

/***/ 980:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/invariant.js ***!
  \**********************************************************************/
13,

/***/ 981:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/getMarkupWrap.js ***!
  \**************************************************************************/
[2207, 976, 980],

/***/ 982:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/emptyFunction.js ***!
  \**************************************************************************/
15,

/***/ 983:
/*!********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactMultiChildUpdateTypes.js ***!
  \********************************************************************************/
[2208, 984],

/***/ 984:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/keyMirror.js ***!
  \**********************************************************************/
[2209, 980],

/***/ 985:
/*!***************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactPerf.js ***!
  \***************************************************************/
18,

/***/ 986:
/*!******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/setInnerHTML.js ***!
  \******************************************************************/
[2210, 976],

/***/ 987:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/setTextContent.js ***!
  \********************************************************************/
[2211, 976, 988, 986],

/***/ 988:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/escapeTextContentForBrowser.js ***!
  \*********************************************************************************/
21,

/***/ 989:
/*!***************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/DOMPropertyOperations.js ***!
  \***************************************************************************/
[2212, 990, 985, 991, 992],

/***/ 990:
/*!*****************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/DOMProperty.js ***!
  \*****************************************************************/
[2213, 980],

/***/ 991:
/*!***********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/quoteAttributeValueForBrowser.js ***!
  \***********************************************************************************/
[2214, 988],

/***/ 992:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/warning.js ***!
  \********************************************************************/
[2215, 982],

/***/ 993:
/*!**************************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactComponentBrowserEnvironment.js ***!
  \**************************************************************************************/
[2216, 994, 995],

/***/ 994:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMIDOperations.js ***!
  \**************************************************************************/
[2217, 974, 989, 995, 985, 980],

/***/ 995:
/*!****************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactMount.js ***!
  \****************************************************************/
[2218, 990, 996, 972, 1008, 1009, 1011, 1012, 1014, 1015, 985, 1017, 1020, 1021, 1006, 1025, 1026, 1029, 980, 986, 1034, 1037, 992],

/***/ 996:
/*!******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactBrowserEventEmitter.js ***!
  \******************************************************************************/
[2219, 997, 998, 999, 1004, 985, 1005, 1006, 1007],

/***/ 997:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/EventConstants.js ***!
  \********************************************************************/
[2220, 984],

/***/ 998:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/EventPluginHub.js ***!
  \********************************************************************/
[2221, 999, 1000, 1001, 1002, 1003, 980, 992],

/***/ 999:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/EventPluginRegistry.js ***!
  \*************************************************************************/
[2222, 980],

/***/ 1000:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/EventPluginUtils.js ***!
  \**********************************************************************/
[2223, 997, 1001, 980, 992],

/***/ 1001:
/*!*********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactErrorUtils.js ***!
  \*********************************************************************/
34,

/***/ 1002:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/accumulateInto.js ***!
  \********************************************************************/
[2224, 980],

/***/ 1003:
/*!************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/forEachAccumulated.js ***!
  \************************************************************************/
36,

/***/ 1004:
/*!****************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactEventEmitterMixin.js ***!
  \****************************************************************************/
[2225, 998],

/***/ 1005:
/*!*********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ViewportMetrics.js ***!
  \*********************************************************************/
38,

/***/ 1006:
/*!*******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/Object.assign.js ***!
  \*******************************************************************/
39,

/***/ 1007:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/isEventSupported.js ***!
  \**********************************************************************/
[2226, 976],

/***/ 1008:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMFeatureFlags.js ***!
  \**************************************************************************/
41,

/***/ 1009:
/*!******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactElement.js ***!
  \******************************************************************/
[2227, 972, 1006, 1010],

/***/ 1010:
/*!***********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/canDefineProperty.js ***!
  \***********************************************************************/
43,

/***/ 1011:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactEmptyComponentRegistry.js ***!
  \*********************************************************************************/
44,

/***/ 1012:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactInstanceHandles.js ***!
  \**************************************************************************/
[2228, 1013, 980],

/***/ 1013:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactRootIndex.js ***!
  \********************************************************************/
46,

/***/ 1014:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactInstanceMap.js ***!
  \**********************************************************************/
47,

/***/ 1015:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactMarkupChecksum.js ***!
  \*************************************************************************/
[2229, 1016],

/***/ 1016:
/*!*************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/adler32.js ***!
  \*************************************************************/
49,

/***/ 1017:
/*!*********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactReconciler.js ***!
  \*********************************************************************/
[2230, 1018],

/***/ 1018:
/*!**************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactRef.js ***!
  \**************************************************************/
[2231, 1019],

/***/ 1019:
/*!****************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactOwner.js ***!
  \****************************************************************/
[2232, 980],

/***/ 1020:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactUpdateQueue.js ***!
  \**********************************************************************/
[2233, 972, 1009, 1014, 1021, 1006, 980, 992],

/***/ 1021:
/*!******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactUpdates.js ***!
  \******************************************************************/
[2234, 1022, 1023, 985, 1017, 1024, 1006, 980],

/***/ 1022:
/*!*******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/CallbackQueue.js ***!
  \*******************************************************************/
[2235, 1023, 1006, 980],

/***/ 1023:
/*!*****************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/PooledClass.js ***!
  \*****************************************************************/
[2236, 980],

/***/ 1024:
/*!*****************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/Transaction.js ***!
  \*****************************************************************/
[2237, 980],

/***/ 1025:
/*!************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/emptyObject.js ***!
  \************************************************************************/
58,

/***/ 1026:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/containsNode.js ***!
  \*************************************************************************/
[2238, 1027],

/***/ 1027:
/*!***********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/isTextNode.js ***!
  \***********************************************************************/
[2239, 1028],

/***/ 1028:
/*!*******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/isNode.js ***!
  \*******************************************************************/
61,

/***/ 1029:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/instantiateReactComponent.js ***!
  \*******************************************************************************/
[2240, 1030, 1035, 1036, 1006, 980, 992],

/***/ 1030:
/*!*****************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactCompositeComponent.js ***!
  \*****************************************************************************/
[2241, 1031, 972, 1009, 1014, 985, 1032, 1033, 1017, 1020, 1006, 1025, 980, 1034, 992],

/***/ 1031:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactComponentEnvironment.js ***!
  \*******************************************************************************/
[2242, 980],

/***/ 1032:
/*!****************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactPropTypeLocations.js ***!
  \****************************************************************************/
[2243, 984],

/***/ 1033:
/*!********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactPropTypeLocationNames.js ***!
  \********************************************************************************/
66,

/***/ 1034:
/*!********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/shouldUpdateReactComponent.js ***!
  \********************************************************************************/
67,

/***/ 1035:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactEmptyComponent.js ***!
  \*************************************************************************/
[2244, 1009, 1011, 1017, 1006],

/***/ 1036:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactNativeComponent.js ***!
  \**************************************************************************/
[2245, 1006, 980],

/***/ 1037:
/*!************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/validateDOMNesting.js ***!
  \************************************************************************/
[2246, 1006, 982, 992],

/***/ 1038:
/*!***************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDefaultInjection.js ***!
  \***************************************************************************/
[2247, 1039, 1047, 1050, 1051, 1052, 976, 1056, 1057, 993, 1059, 1060, 973, 1085, 1088, 1012, 995, 1092, 1097, 1098, 1099, 1108, 1109],

/***/ 1039:
/*!****************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/BeforeInputEventPlugin.js ***!
  \****************************************************************************/
[2248, 997, 1040, 976, 1041, 1043, 1045, 1046],

/***/ 1040:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/EventPropagators.js ***!
  \**********************************************************************/
[2249, 997, 998, 992, 1002, 1003],

/***/ 1041:
/*!******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/FallbackCompositionState.js ***!
  \******************************************************************************/
[2250, 1023, 1006, 1042],

/***/ 1042:
/*!****************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/getTextContentAccessor.js ***!
  \****************************************************************************/
[2251, 976],

/***/ 1043:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticCompositionEvent.js ***!
  \*******************************************************************************/
[2252, 1044],

/***/ 1044:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticEvent.js ***!
  \********************************************************************/
[2253, 1023, 1006, 982, 992],

/***/ 1045:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticInputEvent.js ***!
  \*************************************************************************/
[2254, 1044],

/***/ 1046:
/*!******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/keyOf.js ***!
  \******************************************************************/
79,

/***/ 1047:
/*!***********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ChangeEventPlugin.js ***!
  \***********************************************************************/
[2255, 997, 998, 1040, 976, 1021, 1044, 1048, 1007, 1049, 1046],

/***/ 1048:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/getEventTarget.js ***!
  \********************************************************************/
81,

/***/ 1049:
/*!************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/isTextInputElement.js ***!
  \************************************************************************/
82,

/***/ 1050:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ClientReactRootIndex.js ***!
  \**************************************************************************/
83,

/***/ 1051:
/*!*****************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/DefaultEventPluginOrder.js ***!
  \*****************************************************************************/
[2256, 1046],

/***/ 1052:
/*!***************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/EnterLeaveEventPlugin.js ***!
  \***************************************************************************/
[2257, 997, 1040, 1053, 995, 1046],

/***/ 1053:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticMouseEvent.js ***!
  \*************************************************************************/
[2258, 1054, 1005, 1055],

/***/ 1054:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticUIEvent.js ***!
  \**********************************************************************/
[2259, 1044, 1048],

/***/ 1055:
/*!***************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/getEventModifierState.js ***!
  \***************************************************************************/
88,

/***/ 1056:
/*!***************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/HTMLDOMPropertyConfig.js ***!
  \***************************************************************************/
[2260, 990, 976],

/***/ 1057:
/*!********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactBrowserComponentMixin.js ***!
  \********************************************************************************/
[2261, 1014, 1058, 992],

/***/ 1058:
/*!*****************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/findDOMNode.js ***!
  \*****************************************************************/
[2262, 972, 1014, 995, 980, 992],

/***/ 1059:
/*!**********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDefaultBatchingStrategy.js ***!
  \**********************************************************************************/
[2263, 1021, 1024, 1006, 982],

/***/ 1060:
/*!***********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMComponent.js ***!
  \***********************************************************************/
[2264, 1061, 1063, 990, 989, 997, 996, 993, 1071, 1072, 1076, 1079, 1080, 995, 1081, 985, 1020, 1006, 1010, 988, 980, 1007, 1046, 986, 987, 1084, 1037, 992],

/***/ 1061:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/AutoFocusUtils.js ***!
  \********************************************************************/
[2265, 995, 1058, 1062],

/***/ 1062:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/focusNode.js ***!
  \**********************************************************************/
95,

/***/ 1063:
/*!***************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/CSSPropertyOperations.js ***!
  \***************************************************************************/
[2266, 1064, 976, 985, 1065, 1067, 1068, 1070, 992],

/***/ 1064:
/*!*****************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/CSSProperty.js ***!
  \*****************************************************************/
97,

/***/ 1065:
/*!******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/camelizeStyleName.js ***!
  \******************************************************************************/
[2267, 1066],

/***/ 1066:
/*!*********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/camelize.js ***!
  \*********************************************************************/
99,

/***/ 1067:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/dangerousStyleValue.js ***!
  \*************************************************************************/
[2268, 1064],

/***/ 1068:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/hyphenateStyleName.js ***!
  \*******************************************************************************/
[2269, 1069],

/***/ 1069:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/hyphenate.js ***!
  \**********************************************************************/
102,

/***/ 1070:
/*!******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/memoizeStringOnly.js ***!
  \******************************************************************************/
103,

/***/ 1071:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMButton.js ***!
  \********************************************************************/
104,

/***/ 1072:
/*!*******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMInput.js ***!
  \*******************************************************************/
[2270, 994, 1073, 995, 1021, 1006, 980],

/***/ 1073:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/LinkedValueUtils.js ***!
  \**********************************************************************/
[2271, 1074, 1032, 980, 992],

/***/ 1074:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactPropTypes.js ***!
  \********************************************************************/
[2272, 1009, 1033, 982, 1075],

/***/ 1075:
/*!*******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/getIteratorFn.js ***!
  \*******************************************************************/
108,

/***/ 1076:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMOption.js ***!
  \********************************************************************/
[2273, 1077, 1079, 1006, 992],

/***/ 1077:
/*!*******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactChildren.js ***!
  \*******************************************************************/
[2274, 1023, 1009, 982, 1078],

/***/ 1078:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/traverseAllChildren.js ***!
  \*************************************************************************/
[2275, 972, 1009, 1012, 1075, 980, 992],

/***/ 1079:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMSelect.js ***!
  \********************************************************************/
[2276, 1073, 995, 1021, 1006, 992],

/***/ 1080:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMTextarea.js ***!
  \**********************************************************************/
[2277, 1073, 994, 1021, 1006, 980, 992],

/***/ 1081:
/*!*********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactMultiChild.js ***!
  \*********************************************************************/
[2278, 1031, 983, 972, 1017, 1082, 1083],

/***/ 1082:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactChildReconciler.js ***!
  \**************************************************************************/
[2279, 1017, 1029, 1034, 1078, 992],

/***/ 1083:
/*!*********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/flattenChildren.js ***!
  \*********************************************************************/
[2280, 1078, 992],

/***/ 1084:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/shallowEqual.js ***!
  \*************************************************************************/
117,

/***/ 1085:
/*!************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactEventListener.js ***!
  \************************************************************************/
[2281, 1086, 976, 1023, 1012, 995, 1021, 1006, 1048, 1087],

/***/ 1086:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/EventListener.js ***!
  \**************************************************************************/
[2282, 982],

/***/ 1087:
/*!***************************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/getUnboundedScrollPosition.js ***!
  \***************************************************************************************/
120,

/***/ 1088:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactInjection.js ***!
  \********************************************************************/
[2283, 990, 998, 1031, 1089, 1035, 996, 1036, 985, 1013, 1021],

/***/ 1089:
/*!****************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactClass.js ***!
  \****************************************************************/
[2284, 1090, 1009, 1032, 1033, 1091, 1006, 1025, 980, 984, 1046, 992],

/***/ 1090:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactComponent.js ***!
  \********************************************************************/
[2285, 1091, 1010, 1025, 980, 992],

/***/ 1091:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactNoopUpdateQueue.js ***!
  \**************************************************************************/
[2286, 992],

/***/ 1092:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactReconcileTransaction.js ***!
  \*******************************************************************************/
[2287, 1022, 1023, 996, 1008, 1093, 1024, 1006],

/***/ 1093:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactInputSelection.js ***!
  \*************************************************************************/
[2288, 1094, 1026, 1062, 1096],

/***/ 1094:
/*!***********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMSelection.js ***!
  \***********************************************************************/
[2289, 976, 1095, 1042],

/***/ 1095:
/*!*******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/getNodeForCharacterOffset.js ***!
  \*******************************************************************************/
128,

/***/ 1096:
/*!*****************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/getActiveElement.js ***!
  \*****************************************************************************/
129,

/***/ 1097:
/*!***********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SelectEventPlugin.js ***!
  \***********************************************************************/
[2290, 997, 1040, 976, 1093, 1044, 1096, 1049, 1046, 1084],

/***/ 1098:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ServerReactRootIndex.js ***!
  \**************************************************************************/
131,

/***/ 1099:
/*!***********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SimpleEventPlugin.js ***!
  \***********************************************************************/
[2291, 997, 1086, 1040, 995, 1100, 1044, 1101, 1102, 1053, 1105, 1106, 1054, 1107, 982, 1103, 980, 1046],

/***/ 1100:
/*!*****************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticClipboardEvent.js ***!
  \*****************************************************************************/
[2292, 1044],

/***/ 1101:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticFocusEvent.js ***!
  \*************************************************************************/
[2293, 1054],

/***/ 1102:
/*!****************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticKeyboardEvent.js ***!
  \****************************************************************************/
[2294, 1054, 1103, 1104, 1055],

/***/ 1103:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/getEventCharCode.js ***!
  \**********************************************************************/
136,

/***/ 1104:
/*!*****************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/getEventKey.js ***!
  \*****************************************************************/
[2295, 1103],

/***/ 1105:
/*!************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticDragEvent.js ***!
  \************************************************************************/
[2296, 1053],

/***/ 1106:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticTouchEvent.js ***!
  \*************************************************************************/
[2297, 1054, 1055],

/***/ 1107:
/*!*************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SyntheticWheelEvent.js ***!
  \*************************************************************************/
[2298, 1053],

/***/ 1108:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/SVGDOMPropertyConfig.js ***!
  \**************************************************************************/
[2299, 990],

/***/ 1109:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDefaultPerf.js ***!
  \**********************************************************************/
[2300, 990, 1110, 995, 985, 1111],

/***/ 1110:
/*!******************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDefaultPerfAnalysis.js ***!
  \******************************************************************************/
[2301, 1006],

/***/ 1111:
/*!***************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/performanceNow.js ***!
  \***************************************************************************/
[2302, 1112],

/***/ 1112:
/*!************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/performance.js ***!
  \************************************************************************/
[2303, 976],

/***/ 1113:
/*!******************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactVersion.js ***!
  \******************************************************************/
146,

/***/ 1114:
/*!********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/renderSubtreeIntoContainer.js ***!
  \********************************************************************************/
[2304, 995],

/***/ 1115:
/*!********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMServer.js ***!
  \********************************************************************/
[2305, 1038, 1116, 1113],

/***/ 1116:
/*!**************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactServerRendering.js ***!
  \**************************************************************************/
[2306, 1059, 1009, 1012, 1015, 1117, 1118, 1021, 1025, 1029, 980],

/***/ 1117:
/*!*********************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactServerBatchingStrategy.js ***!
  \*********************************************************************************/
150,

/***/ 1118:
/*!*************************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactServerRenderingTransaction.js ***!
  \*************************************************************************************/
[2307, 1023, 1022, 1024, 1006, 982],

/***/ 1119:
/*!*********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactIsomorphic.js ***!
  \*********************************************************************/
[2308, 1077, 1090, 1089, 1120, 1009, 1121, 1074, 1113, 1006, 1123],

/***/ 1120:
/*!***********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactDOMFactories.js ***!
  \***********************************************************************/
[2309, 1009, 1121, 1122],

/***/ 1121:
/*!***************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/ReactElementValidator.js ***!
  \***************************************************************************/
[2310, 1009, 1032, 1033, 972, 1010, 1075, 980, 992],

/***/ 1122:
/*!**********************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/~/fbjs/lib/mapObject.js ***!
  \**********************************************************************/
155,

/***/ 1123:
/*!***************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/onlyChild.js ***!
  \***************************************************************/
[2311, 1009, 980],

/***/ 1124:
/*!****************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react/lib/deprecated.js ***!
  \****************************************************************/
[2312, 1006, 992],

/***/ 1125:
/*!***********************************************************!*\
  !*** ./expression-atlas-anatomogram/~/react-dom/index.js ***!
  \***********************************************************/
[2313, 971],

/***/ 1126:
/*!*************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/anatomogram/index.js ***!
  \*************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	module.exports = __webpack_require__(/*! ./src/Anatomogram.jsx */ 1127);

/***/ },

/***/ 1127:
/*!************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/anatomogram/src/Anatomogram.jsx ***!
  \************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	//*------------------------------------------------------------------*
	
	var React = __webpack_require__(/*! react */ 969);
	var ReactDOM = __webpack_require__(/*! react-dom */ 1125);
	
	var $ = __webpack_require__(/*! jquery */ 1128);
	__webpack_require__(/*! jquery-hc-sticky */ 1129);
	__webpack_require__(/*! jquery-ui-bundle */ 1130);
	
	var Snap = __webpack_require__(/*! imports-loader?this=>window,fix=>module.exports=0!snapsvg/dist/snap.svg.js */ 1131);
	
	var EventEmitter = __webpack_require__(/*! events */ 484);
	
	//*------------------------------------------------------------------*
	
	var AnatomogramSelectImageButton = React.createClass({
	    displayName: 'AnatomogramSelectImageButton',
	
	    propTypes: {
	        anatomogramId: React.PropTypes.string.isRequired,
	        selected: React.PropTypes.bool.isRequired,
	        toggleSrcTemplate: React.PropTypes.string.isRequired,
	        onClick: React.PropTypes.func.isRequired
	    },
	
	    render: function () {
	        var selectedToggleSrc = this.props.toggleSrcTemplate + "_selected.png",
	            unselectedToggleSrc = this.props.toggleSrcTemplate + "_unselected.png";
	
	        return React.createElement(
	            'div',
	            null,
	            React.createElement('img', { ref: 'toggleButton', onClick: this._onClick, src: this.props.selected ? selectedToggleSrc : unselectedToggleSrc,
	                style: { width: "24px", height: "24px", padding: "2px" } })
	        );
	    },
	
	    componentDidMount: function () {
	        $(ReactDOM.findDOMNode(this.refs.toggleButton)).button();
	    },
	
	    _onClick: function () {
	        this.props.onClick(this.props.anatomogramId);
	    }
	});
	
	var AnatomogramSelectImageButtons = React.createClass({
	    displayName: 'AnatomogramSelectImageButtons',
	
	    propTypes: {
	        selectedId: React.PropTypes.string.isRequired,
	        availableAnatomograms: React.PropTypes.array.isRequired,
	        onClick: React.PropTypes.func.isRequired
	    },
	
	    render: function () {
	        if (this.props.availableAnatomograms.length > 1) {
	            var selectedId = this.props.selectedId,
	                onClick = this.props.onClick;
	            var anatomogramSelectImageButtons = this.props.availableAnatomograms.map(function (availableAnatomogram) {
	                return React.createElement(AnatomogramSelectImageButton, { key: availableAnatomogram.id + "_toggle",
	                    anatomogramId: availableAnatomogram.id, selected: selectedId === availableAnatomogram.id, toggleSrcTemplate: availableAnatomogram.toggleSrcTemplate, onClick: onClick });
	            });
	
	            return React.createElement(
	                'span',
	                null,
	                anatomogramSelectImageButtons
	            );
	        } else {
	            return null;
	        }
	    }
	
	});
	
	var AnatomogramImageParts = React.createClass({
	    displayName: 'AnatomogramImageParts',
	
	    propTypes: {
	        idsExpressedInExperiment: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        idsHeatmapWantsHighlighted: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        idsMousedOver: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        idsNotHighlighted: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        expressedTissueColour: React.PropTypes.string.isRequired,
	        hoveredTissueColour: React.PropTypes.string.isRequired
	    },
	
	    getInitialState: function () {
	        return { toDraw: [].concat(AnatomogramImageParts.idsThatShouldBeStronglyHighlighted(this.props).map(this._highlightStrongly), this.props.idsExpressedInExperiment.map(this._highlightSlightly), this.props.idsNotHighlighted.map(this._highlightAsBackground)) };
	    },
	
	    render: function () {
	        return React.createElement('span', null);
	    },
	
	    _highlightStrongly: function (svgPathId) {
	        return { id: svgPathId, colour: this.props.hoveredTissueColour, opacity: 0.7 };
	    },
	
	    _highlightSlightly: function (svgPathId) {
	        return { id: svgPathId, colour: this.props.expressedTissueColour, opacity: 0.7 };
	    },
	
	    _highlightAsBackground: function (svgPathId) {
	        return { id: svgPathId, colour: "gray", opacity: 0.5 };
	    },
	
	    componentWillReceiveProps: function (nextProps) {
	        var oldStrong = AnatomogramImageParts.idsThatShouldBeStronglyHighlighted(this.props);
	        var newStrong = AnatomogramImageParts.idsThatShouldBeStronglyHighlighted(nextProps);
	        var oldWeak = this.props.idsExpressedInExperiment;
	        var newWeak = nextProps.idsExpressedInExperiment;
	
	        var toDraw = [].concat(
	        //ids that heatmap wants highlighted are the most highlighted
	        newStrong.filter(function (id) {
	            return oldStrong.indexOf(id) < 0;
	        }).map(this._highlightStrongly),
	        //ids that are expressed in the experiment are highlighted with a weaker colour, often the same as background
	        newWeak.filter(function (id) {
	            return newStrong.indexOf(id) < 0;
	        }).filter(function (id) {
	            return oldWeak.indexOf(id) < 0;
	        }.bind(this)).map(this._highlightSlightly), nextProps.idsNotHighlighted.filter(function (id) {
	            return this.props.idsNotHighlighted.indexOf(id) < 0;
	        }.bind(this)).map(this._highlightAsBackground));
	
	        this.setState({ toDraw: toDraw });
	    },
	
	    statics: {
	        idsThatShouldBeStronglyHighlighted: function (properties) {
	            return properties.idsHeatmapWantsHighlighted.concat(properties.idsMousedOver);
	        }
	    }
	});
	
	var AnatomogramImage = React.createClass({
	    displayName: 'AnatomogramImage',
	
	    propTypes: {
	        file: React.PropTypes.string.isRequired,
	        height: React.PropTypes.string.isRequired,
	        expressedFactors: React.PropTypes.arrayOf(React.PropTypes.string),
	        expressedFactorsPerRow: React.PropTypes.object.isRequired,
	        allSvgPathIds: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,
	        expressedTissueColour: React.PropTypes.string.isRequired,
	        hoveredTissueColour: React.PropTypes.string.isRequired
	    },
	
	    getInitialState: function () {
	        return {
	            hoveredPathId: null,
	            hoveredRowId: null,
	            mousedOverSvgIds: []
	        };
	    },
	
	    componentWillReceiveProps: function (nextProps) {
	        if (nextProps.file !== this.props.file) {
	            this._loadAnatomogram(nextProps.file);
	        }
	    },
	
	    componentDidMount: function () {
	        this._loadAnatomogram(this.props.file);
	        this._draw();
	    },
	
	    componentDidUpdate: function () {
	        this._draw();
	    },
	
	    _draw: function () {
	        var svg = Snap(ReactDOM.findDOMNode(this.refs.anatomogram)).select("g");
	        if (svg !== null) {
	            this._drawOnSvg(svg, this.refs.imageParts.state.toDraw);
	            this.refs.imageParts.setState({ toDraw: [] });
	        }
	    },
	    _drawInitialLayout: function (svg) {
	        this._drawOnSvg(svg, this.refs.imageParts.getInitialState().toDraw);
	        this.refs.imageParts.setState({ toDraw: [] });
	    },
	
	    _drawOnSvg: function (svg, instructions) {
	        instructions.forEach(function (instruction) {
	            this._highlightOrganismParts(svg, instruction.id, instruction.colour, instruction.opacity);
	        }.bind(this));
	    },
	
	    render: function () {
	        var idsExpressedInExperiment = [],
	            idsHoveredOver = [],
	            idsHeatmapWantsHighlighted = [],
	            idsNotHighlighted = [];
	        for (var i = 0; i < this.props.allSvgPathIds.length; i++) {
	            var id = this.props.allSvgPathIds[i];
	            if (this.state.mousedOverSvgIds.indexOf(id) > -1) {
	                idsHoveredOver.push(id);
	            } else if (this._hoveredRowContainsPathId(id) || this.state.hoveredPathId === id) {
	                idsHeatmapWantsHighlighted.push(id);
	            } else if (this.props.expressedFactors.indexOf(id) > -1) {
	                idsExpressedInExperiment.push(id);
	            } else {
	                idsNotHighlighted.push(id);
	            }
	        }
	
	        return React.createElement(
	            'span',
	            null,
	            React.createElement('svg', { ref: 'anatomogram', style: { display: "table-cell", width: "230px", height: this.props.height + "px" } }),
	            React.createElement(AnatomogramImageParts, { ref: 'imageParts', key: this.props.file,
	                idsExpressedInExperiment: idsExpressedInExperiment,
	                idsHeatmapWantsHighlighted: idsHeatmapWantsHighlighted,
	                idsMousedOver: idsHoveredOver,
	                idsNotHighlighted: idsNotHighlighted,
	                expressedTissueColour: this.props.expressedTissueColour,
	                hoveredTissueColour: this.props.hoveredTissueColour })
	        );
	    },
	
	    _highlightPath: function (svgPathId) {
	        this.setState({ hoveredPathId: svgPathId });
	    },
	
	    _highlightRow: function (rowId) {
	        this.setState({ hoveredRowId: rowId });
	    },
	
	    _loadAnatomogram: function (svgFile) {
	
	        var svgCanvas = Snap(ReactDOM.findDOMNode(this.refs.anatomogram)),
	            $svgCanvas = $(ReactDOM.findDOMNode(this.refs.anatomogram)),
	            allElements = svgCanvas.selectAll("*");
	
	        if (allElements) {
	            allElements.remove();
	        }
	
	        var displayAllOrganismPartsCallback = this._drawInitialLayout;
	        var registerHoverEventsCallback = this._registerHoverEvents;
	        Snap.load(svgFile, function (fragment) {
	            var g = fragment.select("g");
	            g.transform("S1.6,0,0");
	            displayAllOrganismPartsCallback(g);
	            registerHoverEventsCallback(g);
	            svgCanvas.append(g);
	            var img = fragment.select("#ccLogo");
	            var heightTranslate = $svgCanvas.height() - 15;
	            var widthTranslate = $svgCanvas.width() / 2 - 40;
	            img.transform("t" + widthTranslate + "," + heightTranslate);
	            svgCanvas.append(img);
	        });
	    },
	
	    _hoveredRowContainsPathId: function (svgPathId) {
	        return this.state.hoveredRowId && this.props.expressedFactorsPerRow.hasOwnProperty(this.state.hoveredRowId) && this.props.expressedFactorsPerRow[this.state.hoveredRowId].indexOf(svgPathId) > -1;
	    },
	
	    _registerHoverEvents: function (svg) {
	        if (svg) {
	            // Sometimes svg is null... why?
	            var mouseoverCallback = function (svgPathId) {
	                this.props.eventEmitter.emit('gxaAnatomogramTissueMouseEnter', svgPathId);
	                this.setState(function (previousState, currentProps) {
	                    var a = [].concat(previousState.mousedOverSvgIds);
	                    a.push(svgPathId);
	                    while (a.length > 5) {
	                        a.shift();
	                    }
	                    return { mousedOverSvgIds: a };
	                });
	            }.bind(this);
	            var mouseoutCallback = function (svgPathId) {
	                this.props.eventEmitter.emit('gxaAnatomogramTissueMouseLeave', svgPathId);
	                this.setState(function (previousState, currentProps) {
	                    var a = previousState.mousedOverSvgIds.map(function (el) {
	                        return el === svgPathId ? "" : el;
	                    });
	                    return { mousedOverSvgIds: a };
	                });
	            }.bind(this);
	
	            this.props.allSvgPathIds.forEach(function (svgPathId) {
	                var svgElement = svg.select("#" + svgPathId);
	                if (svgElement) {
	                    svgElement.mouseover(function () {
	                        mouseoverCallback(svgPathId);
	                    });
	                    svgElement.mouseout(function () {
	                        mouseoutCallback(svgPathId);
	                    });
	                }
	            }, this);
	        }
	    },
	
	    _highlightOrganismParts: function (svg, svgPathId, colour, opacity) {
	        AnatomogramImage._recursivelyChangeProperties(svg.select("#" + svgPathId), colour, opacity);
	    },
	
	    statics: {
	        _recursivelyChangeProperties: function (svgElement, colour, opacity) {
	
	            if (svgElement) {
	                var innerElements = svgElement.selectAll("*");
	
	                if (innerElements.length > 0) {
	                    innerElements.forEach(function (innerElement) {
	                        AnatomogramImage._recursivelyChangeProperties(innerElement);
	                    });
	                }
	
	                svgElement.attr({ "fill": colour, "fill-opacity": opacity });
	            }
	        },
	        _recursivelySelectElements: function (svgElement) {
	            if (!svgElement) {
	                return [];
	            }
	
	            var innerElements = svgElement.selectAll("*");
	            if (innerElements.length === 0) {
	                return [svgElement];
	            } else {
	                var allElements = [];
	                innerElements.forEach(function (innerElement) {
	                    allElements = allElements.concat(AnatomogramImage._recursivelySelectElements(innerElement));
	                });
	                return allElements;
	            }
	        }
	    }
	});
	
	var Anatomogram = React.createClass({
	    displayName: 'Anatomogram',
	
	
	    propTypes: {
	        anatomogramData: React.PropTypes.object.isRequired,
	        expressedTissueColour: React.PropTypes.string.isRequired,
	        hoveredTissueColour: React.PropTypes.string.isRequired,
	        profileRows: React.PropTypes.arrayOf(React.PropTypes.shape({
	            id: React.PropTypes.string,
	            name: React.PropTypes.string.isRequired,
	            expressions: React.PropTypes.arrayOf(React.PropTypes.shape({
	                factorName: React.PropTypes.string,
	                color: React.PropTypes.string,
	                value: React.PropTypes.number, // missing represents "NA"/"NT"
	                svgPathId: React.PropTypes.string
	            })).isRequired
	        })).isRequired,
	        eventEmitter: React.PropTypes.instanceOf(EventEmitter),
	        atlasBaseURL: React.PropTypes.string.isRequired
	    },
	
	    getInitialState: function () {
	
	        var availableAnatomograms = [];
	        if (this.props.anatomogramData.maleAnatomogramFile) {
	            availableAnatomograms.push({ id: "male",
	                anatomogramFile: this.props.atlasBaseURL + "/resources/svg/" + this.props.anatomogramData.maleAnatomogramFile,
	                toggleSrcTemplate: this.props.atlasBaseURL + this.props.anatomogramData.toggleButtonMaleImageTemplate });
	        }
	        if (this.props.anatomogramData.femaleAnatomogramFile) {
	            availableAnatomograms.push({ id: "female",
	                anatomogramFile: this.props.atlasBaseURL + "/resources/svg/" + this.props.anatomogramData.femaleAnatomogramFile,
	                toggleSrcTemplate: this.props.atlasBaseURL + this.props.anatomogramData.toggleButtonFemaleImageTemplate });
	        }
	        if (this.props.anatomogramData.brainAnatomogramFile) {
	            availableAnatomograms.push({ id: "brain",
	                anatomogramFile: this.props.atlasBaseURL + "/resources/svg/" + this.props.anatomogramData.brainAnatomogramFile,
	                toggleSrcTemplate: this.props.atlasBaseURL + this.props.anatomogramData.toggleButtonBrainImageTemplate });
	        }
	
	        var allExpressedFactors = [],
	            expressedFactorsPerRow = {};
	        this.props.profileRows.forEach(function (profileRow) {
	            var expressedFactors = [];
	            profileRow.expressions.forEach(function (expression) {
	                if (! typeof expression.value !== "undefined" && expression.value) {
	                    expressedFactors.push(expression.svgPathId);
	                }
	            });
	            expressedFactorsPerRow[profileRow.name] = expressedFactors;
	            allExpressedFactors = allExpressedFactors.concat(expressedFactors);
	        });
	
	        function onlyUnique(value, index, self) {
	            return self.indexOf(value) === index;
	        }
	
	        return {
	            selectedId: availableAnatomograms[0].id,
	            availableAnatomograms: availableAnatomograms,
	            expressedFactors: allExpressedFactors.filter(onlyUnique),
	            expressedFactorsPerRow: expressedFactorsPerRow
	        };
	    },
	
	    render: function () {
	        function containsHuman(str) {
	            return str.indexOf("human") > -1;
	        }
	
	        return React.createElement(
	            'div',
	            { className: 'gxaAnatomogram', style: { display: "table", paddingTop: "4px" } },
	            React.createElement(
	                'div',
	                { style: { display: "table-row" } },
	                React.createElement(
	                    'div',
	                    { style: { display: "table-cell", verticalAlign: "top" } },
	                    React.createElement(AnatomogramSelectImageButtons, { selectedId: this.state.selectedId, availableAnatomograms: this.state.availableAnatomograms, onClick: this._handleChange })
	                ),
	                React.createElement(AnatomogramImage, {
	                    key: this.state.selectedId,
	                    ref: 'currentImage',
	                    file: this._getAnatomogramSVGFile(this.state.selectedId),
	                    height: containsHuman(this.props.anatomogramData.maleAnatomogramFile) ? "375" : "265",
	                    expressedFactors: this.state.expressedFactors,
	                    expressedFactorsPerRow: this.state.expressedFactorsPerRow,
	                    allSvgPathIds: this.props.anatomogramData.allSvgPathIds,
	                    eventEmitter: this.props.eventEmitter,
	                    expressedTissueColour: this.props.expressedTissueColour,
	                    hoveredTissueColour: this.props.hoveredTissueColour })
	            )
	        );
	    },
	
	    _registerListenerIfNecessary: function (name, fn) {
	        if (this.props.eventEmitter && this.props.eventEmitter._events && !this.props.eventEmitter._events.hasOwnProperty(name)) {
	            this.props.eventEmitter.addListener(name, fn);
	        }
	    },
	
	    componentDidMount: function () {
	        this._registerListenerIfNecessary("gxaHeatmapColumnHoverChange", this._highlightPath);
	        this._registerListenerIfNecessary("gxaHeatmapRowHoverChange", this._highlightRow);
	    },
	
	    componentDidUpdate: function () {
	        this._registerListenerIfNecessary("gxaHeatmapColumnHoverChange", this._highlightPath);
	        this._registerListenerIfNecessary("gxaHeatmapRowHoverChange", this._highlightRow);
	    },
	
	    _handleChange: function (newSelectedId) {
	        if (newSelectedId !== this.state.selectedId) {
	            this.setState({ selectedId: newSelectedId });
	        }
	    },
	
	    _highlightPath: function (svgPathId) {
	        this.refs.currentImage._highlightPath(svgPathId);
	    },
	
	    _highlightRow: function (rowId) {
	        this.refs.currentImage._highlightRow(rowId);
	    },
	
	    _getAnatomogramSVGFile: function (id) {
	        for (var i = 0; i < this.state.availableAnatomograms.length; i++) {
	            if (id === this.state.availableAnatomograms[i].id) {
	                return this.state.availableAnatomograms[i].anatomogramFile;
	            }
	        }
	    }
	
	});
	
	//*------------------------------------------------------------------*
	
	module.exports = Anatomogram;

/***/ },

/***/ 1128:
/*!****************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/anatomogram/~/jquery/dist/jquery.js ***!
  \****************************************************************************/
469,

/***/ 1129:
/*!*******************************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/anatomogram/~/jquery-hc-sticky/jquery.hc-sticky.js ***!
  \*******************************************************************************************/
[2455, 1128],

/***/ 1130:
/*!************************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/anatomogram/~/jquery-ui-bundle/jquery-ui.js ***!
  \************************************************************************************/
[2452, 1128],

/***/ 1131:
/*!******************************************************************************************************************************************************************!*\
  !*** ./expression-atlas-anatomogram/~/imports-loader?this=>window,fix=>module.exports=0!./expression-atlas-anatomogram/~/anatomogram/~/snapsvg/dist/snap.svg.js ***!
  \******************************************************************************************************************************************************************/
485

});
//# sourceMappingURL=expressionAtlasAnatomogram.bundle.js.map