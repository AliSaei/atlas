{"version":3,"sources":["webpack:///./atlas_bundles/heatmap/~/anatomogram/index.js?e077","webpack:///./atlas_bundles/heatmap/~/anatomogram/src/AnatomogramFactory.jsx?6e4e","webpack:///./atlas_bundles/heatmap/~/anatomogram/src/Anatomogram.jsx?0e66","webpack:///./atlas_bundles/heatmap/~/anatomogram/src/AnatomogramImage.jsx?fd29","webpack:///./atlas_bundles/heatmap/~/anatomogram/src/SelectionIcon.jsx?e278","webpack:///./atlas_bundles/heatmap/~/anatomogram/src/imagesAvailable.js?be71","webpack:///./atlas_bundles/heatmap/~/anatomogram/resources/icons ^\\.\\/.*selected\\.png$?1309","webpack:///./atlas_bundles/heatmap/~/anatomogram/resources/svg ^\\.\\/.*$?fbed","webpack:///./atlas_bundles/heatmap/src/Heatmap.jsx?38e7","webpack:///./atlas_bundles/heatmap/~/expression-atlas-download-profiles-button/index.js?dce0","webpack:///./atlas_bundles/heatmap/~/expression-atlas-download-profiles-button/src/DownloadProfilesButton.jsx?a405","webpack:///./atlas_bundles/heatmap/~/expression-atlas-download-profiles-button/src/Disclaimers.jsx?5b75","webpack:///./atlas_bundles/heatmap/~/atlas-modernizr/modernizr-csstransforms.min.js?79f0","webpack:///./atlas_bundles/heatmap/~/fancybox/dist/css/jquery.fancybox.css?6e0b*","webpack:///./atlas_bundles/heatmap/~/fancybox/dist/css/jquery.fancybox.css?5f49","webpack:///./atlas_bundles/heatmap/~/fancybox/dist/img/fancybox_sprite.png?ebfd","webpack:///./atlas_bundles/heatmap/~/fancybox/dist/img/fancybox_loading.gif?d15a","webpack:///./atlas_bundles/heatmap/~/fancybox/dist/img/blank.gif?59b2","webpack:///./atlas_bundles/heatmap/~/fancybox/dist/img/fancybox_overlay.png?c18e","webpack:///./atlas_bundles/heatmap/~/fancybox/dist/img/fancybox_sprite@2x.png?d77e","webpack:///./atlas_bundles/heatmap/~/fancybox/dist/img/fancybox_loading@2x.gif?4d32","webpack:///./atlas_bundles/heatmap/~/jquery-toolbar/jquery.toolbar.css?9127*","webpack:///./atlas_bundles/heatmap/~/jquery-toolbar/jquery.toolbar.css?bc5a","webpack:///./atlas_bundles/heatmap/~/expression-atlas-heatmap-baseline-cell-variance/index.js?0a72","webpack:///./atlas_bundles/heatmap/~/expression-atlas-heatmap-baseline-cell-variance/src/HeatmapBaselineCellVariance.jsx?23f9","webpack:///./atlas_bundles/heatmap/~/react-highcharts/dist/ReactHighcharts.js?1373","webpack:///./atlas_bundles/heatmap/~/highcharts/highcharts.js?8018","webpack:///./atlas_bundles/heatmap/~/highcharts-more/more.js?a45b","webpack:///./atlas_bundles/heatmap/~/expression-atlas-legend/index.js?ea57","webpack:///./atlas_bundles/heatmap/~/expression-atlas-legend/src/LegendDifferential.jsx?b760","webpack:///./atlas_bundles/heatmap/~/expression-atlas-legend/src/LegendRow.jsx?2fb2","webpack:///./atlas_bundles/heatmap/~/expression-atlas-legend/src/gxaGradient.css?5145*","webpack:///./atlas_bundles/heatmap/~/expression-atlas-legend/src/gxaGradient.css?ca94","webpack:///./atlas_bundles/heatmap/~/expression-atlas-help-tooltips/index.js?70ee","webpack:///./atlas_bundles/heatmap/~/expression-atlas-help-tooltips/src/helpTooltipsModule.js?ebeb","webpack:///./atlas_bundles/heatmap/~/expression-atlas-help-tooltips/src/gxaHelpTooltip.css?5966*","webpack:///./atlas_bundles/heatmap/~/expression-atlas-help-tooltips/src/gxaHelpTooltip.css?68d3","webpack:///./atlas_bundles/heatmap/~/expression-atlas-legend/src/gxaLegend.css?9c83*","webpack:///./atlas_bundles/heatmap/~/expression-atlas-legend/src/gxaLegend.css?c418","webpack:///./atlas_bundles/heatmap/~/expression-atlas-legend/src/LegendBaseline.jsx?069c","webpack:///./atlas_bundles/heatmap/~/expression-atlas-cell-differential/index.js?1bae","webpack:///./atlas_bundles/heatmap/~/expression-atlas-cell-differential/src/CellDifferential.jsx?ba6d","webpack:///./atlas_bundles/heatmap/~/expression-atlas-cell-differential/src/gxaShowHideCell.css?349e*","webpack:///./atlas_bundles/heatmap/~/expression-atlas-cell-differential/src/gxaShowHideCell.css?a199","webpack:///./atlas_bundles/heatmap/~/expression-atlas-cell-differential/src/gxaDifferentialCellTooltip.css?f42c*","webpack:///./atlas_bundles/heatmap/~/expression-atlas-cell-differential/src/gxaDifferentialCellTooltip.css?1256","webpack:///./atlas_bundles/heatmap/~/expression-atlas-display-levels-button/index.js?09ca","webpack:///./atlas_bundles/heatmap/~/expression-atlas-display-levels-button/src/DisplayLevelsButton.jsx?f357","webpack:///./atlas_bundles/heatmap/~/expression-atlas-contrast-tooltips/index.js?db30","webpack:///./atlas_bundles/heatmap/~/expression-atlas-contrast-tooltips/src/contrastTooltipModule.js?957c","webpack:///./atlas_bundles/heatmap/~/expression-atlas-contrast-tooltips/src/ContrastTooltip.jsx?bab1","webpack:///./atlas_bundles/heatmap/~/expression-atlas-contrast-tooltips/src/gxaContrastTooltip.css?87c3*","webpack:///./atlas_bundles/heatmap/~/expression-atlas-contrast-tooltips/src/gxaContrastTooltip.css?0248","webpack:///./atlas_bundles/heatmap/src/genePropertiesTooltipModule.js?e43f","webpack:///./atlas_bundles/heatmap/src/genePropertiesTooltipModule.css?31e3*","webpack:///./atlas_bundles/heatmap/src/genePropertiesTooltipModule.css?65d5","webpack:///./atlas_bundles/heatmap/src/factorTooltipModule.js?1b06","webpack:///./atlas_bundles/heatmap/src/FactorTooltip.jsx?ff1e","webpack:///./atlas_bundles/heatmap/src/factorTooltipModule.css?24a6*","webpack:///./atlas_bundles/heatmap/src/factorTooltipModule.css?4670","webpack:///./atlas_bundles/heatmap/src/stickyHeaderModule.js?ac74","webpack:///./atlas_bundles/heatmap/src/stickyHeaderModule.css?20c9*","webpack:///./atlas_bundles/heatmap/src/stickyHeaderModule.css?1557","webpack:///./atlas_bundles/heatmap/src/Heatmap.css?fd58*","webpack:///./atlas_bundles/heatmap/src/Heatmap.css?306b","webpack:///./atlas_bundles/heatmap/src/experimentTypes.js?1452","webpack:///./atlas_bundles/heatmap/index.js","webpack:///./atlas_bundles/heatmap/src/heatmapAnatomogramRenderer.js","webpack:///./atlas_bundles/heatmap/src/HeatmapAnatomogramContainer.jsx","webpack:///./atlas_bundles/heatmap/~/urijs/src/URI.js","webpack:///./atlas_bundles/heatmap/~/urijs/src/IPv6.js","webpack:///./atlas_bundles/heatmap/~/urijs/src/SecondLevelDomains.js","webpack:///./atlas_bundles/heatmap/src/ExperimentsList.jsx","webpack:///./atlas_bundles/heatmap/src/HeatmapAnatomogramContainer.css?9b4c","webpack:///./atlas_bundles/heatmap/src/HeatmapAnatomogramContainer.css"],"names":["module","exports","require","React","Anatomogram","getSvgsForSpecies","GetSvgsForSpecies","_availableAnatomograms","species","pathToFolderWithBundledResources","allSvgPathIds","filter","some","e","ids","indexOf","id","callEmitterWhenMousedOverTissuesChange","eventEmitter","forEachXNotInYsEmit","xs","ys","eventName","forEach","emit","emitEvents","nextIds","previousIds","createAnatomogram","args","availableAnatomograms","anatomogramData","length","expressedTissueColour","hoveredTissueColour","whenMousedOverIdsChange","idsExpressedInExperiment","ontologyIdsForTissuesExpressedInAllRows","idsToBeHighlighted","arraysEqual","a","b","i","makeWrapper","ComponentClass","createClass","displayName","propTypes","ontologyIdsToHighlight","PropTypes","arrayOf","string","isRequired","onOntologyIdIsUnderFocus","func","componentProps","object","shouldComponentUpdate","nextProps","props","render","wrapComponentWithAnatomogram","anatomogramConfig","componentClass","Wrapped","getInitialState","ontologyIdsForComponentContentUnderFocus","ontologyIdsForAnatomogramContentUnderFocus","Object","assign","state","setState","selectedIdOrIds","AnatomogramImage","SelectionIcon","shape","type","path","height","number","selectedType","display","paddingTop","verticalAlign","_anatomogramSelectImageButtons","_selectedAnatomogram","map","availableAnatomogram","_afterUserSelectedAnatomogram","newSelectedType","concat","ReactDOM","Snap","ArraysEqual","AnatomogramImageParts","idsHeatmapWantsHighlighted","idsMousedOver","idsNotHighlighted","getDefaultProps","oldIds","toDraw","_idsThatShouldBeStronglyHighlighted","_highlightStrongly","_highlightSlightly","_highlightAsBackground","svgPathId","colour","opacity","componentWillUnmount","componentWillReceiveProps","oldStrong","newStrong","oldWeak","newWeak","includes","properties","file","propName","componentName","Error","mousedOverSvgIds","_loadAnatomogram","componentDidMount","_draw","componentDidUpdate","svg","findDOMNode","_anatomogram","select","_drawOnSvg","_imageParts","_drawInitialLayout","instructions","_highlightOrganismParts","instruction","idsHoveredOver","push","c","width","_highlightPath","hoveredPathId","svgFile","svgCanvas","allElements","selectAll","remove","displayAllOrganismPartsCallback","registerHoverEventsCallback","_registerHoverEvents","load","fragment","g","transform","append","img","heightTranslate","Number","parseInt","style","widthTranslate","MaxOverlappingTissues","mouseoverCallback","previousState","slice","mouseoutCallback","el","attachCallbacks","svgElement","mouseover","mouseout","node","getAttribute","_recursivelyChangeProperties","innerElement","attr","ResolvePathToIcon","anatomogramType","oneOf","selected","bool","onClick","Url","Path","SvgsForSpecies","IdsForSvgs","resolve","basename","ResolvePathToSvg","svgEntry","keys","ReactDOMServer","RadioGroup","Slider","DownloadProfilesButton","shallowCompare","$","HeatmapBaselineCellVariance","Legend","LegendBaseline","LegendDifferential","CellDifferential","DisplayLevelsButton","NumberFormat","default","HelpTooltips","ContrastTooltips","GenePropertiesTooltipModule","FactorTooltipModule","StickyHeaderModule","Heatmap","isBaseline","isProteomics","isDifferential","isMultiExperiment","heatmapTooltip","heatmapConfig","columnHeaders","oneOfType","assayGroupId","factorValue","factorValueOntologyTermId","referenceAssayGroup","assayAccessions","replicates","testAssayGroup","profiles","jsonCoexpressions","geneId","geneName","jsonProfiles","geneSetProfiles","prefFormDisplayLevels","anatomogramEventEmitter","googleAnalytics","atlasBaseURL","linksAtlasBaseURL","selectGeneIdCallback","selectedGeneId","selectColumnIdCallback","selectedColumnId","googleAnalyticsCallback","displayLevels","val","coexpressionsDisplayed","showGeneSetProfiles","hoveredColumnId","hoveredGeneId","selectedRadioButton","userInteractedWithTheHeatmap","_coexpressionsCurrentlyShown","ans","k","_getProfiles","newRows","rows","thisRow","coexpressionsForThisRow","o","bind","j","apply","create","value","_hoverColumn","columnId","_hoverRow","rowId","hoveredRowId","selectColumn","selectGene","toggleGeneSets","toggleDisplayLevels","newDisplayLevels","window","resize","toggleRadioButton","newSelected","isMicroarray","hasOwnProperty","designElement","hasQuartiles","expressions","quartiles","undefined","isSingleGeneResult","_stateChangeRepresentsInteraction","s1","s2","ks","_propsChangeRepresentsInteraction","nextState","componentWillUpdate","table","refs","heatmapTable","stickyIntersect","stickyColumn","stickyHeadRow","stickyHeader","stickyWrap","countAndLegend","setWidthsAndReposition","hcSticky","bottomEnd","calculateAllowance","scroll","stickyReposition","on","setWidthAndHeight","_getMaxExpressionLevel","maxExpressionLevel","Infinity","profileRows","isNaN","_getMinExpressionLevel","minExpressionLevel","legendType","ps","parseFloat","minDownLevel","maxDownLevel","minUpLevel","maxUpLevel","_getCoexpressionsAvailable","name","amount","_showCoexpressionsFor","JSON","parse","stringify","_showGeneCount","shownRows","totalRows","searchResultTotal","_constructDownloadProfilesURL","downloadProfilesURL","match","paddingMargin","disclaimer","multipleColumnHeaders","HeatmapTableHeader","currentlyShowingCoexpressions","renderContrastFactorHeaders","renderFactorHeaders","mainHeaderNames","experimentAccession","hoverColumnCallback","renderContrastHeaders","showGeneProfile","showExperimentProfile","radioId","restrictLabelSize","label","maxSize","result","substring","lastIndexOf","assayGroupFactors","assayGroupFactor","FactorHeader","hover","onMouseEnter","enableEnsemblLauncher","onMouseLeave","_closeTooltip","tooltip","_anatomogramTissueMouseEnter","headerCell","addClass","_anatomogramTissueMouseLeave","removeClass","init","accessKey","addListener","showSelectTextOnHover","position","right","left","float","color","showTickWhenSelected","thClass","divClass","factorName","Modernizr","csstransforms","contrasts","contrastHeaders","contrast","plotsThisContrast","maPlot","resources","gseaGo","gseaInterpro","gseaReactome","arrayDesignAccession","ContrastHeader","contrastId","showPlotsButton","renderToolBarContent","plotsToolBarContent","$plotsButton","plotsButton","hide","show","tooltipClass","button","toolbar","content","event","hideOnClick","contentNode","$contentNode","maPlotURL","maPlotImgSrcURL","gseaGoPlotURL","gseaGoPlotImgSrcURL","gseaInterproPlotURL","gseaInterproImgSrcURL","gseaReactomePlotURL","gseaReactomePlotImgSrcURL","showMaPlotButton","clickButton","showGseaGoPlot","showGseaInterproPlot","showGseaReactomePlot","html","renderToStaticMarkup","find","each","index","fancybox","padding","openEffect","closeEffect","stopPropagation","thStyle","minWidth","textStyle","top","plotsImgSrcURL","textAlign","paddingRight","bottom","contrastName","TopLeftCorner","displayLevelsBaseline","LRG","LevelsRadioGroup","tooltipSpan","__args__","call","arguments","inputElements","ix","allValues","handleChange","selectedRadio","HeatmapTableRows","profileRowType","profile","geneProfileKey","experimentType","serializedFilterFactors","renderExpressionCells","hoverRowCallback","geneProfilesRows","GeneProfileRow","levels","_geneNameLinked","experimentURL","geneQuery","encodeURIComponent","geneURL","titleTooltip","experimentOrGeneURL","geneNameLinkClicked","displayLevelsRadio","cellType","expression","foldChange","pValue","tStat","cells","className","rowClassName","CellBaseline","_noExpression","_isUnknownExpression","_onMouseEnter","_onMouseLeave","visibility","_unknownCell","baselineExpression","addQuestionMarkTooltip","hasQuestionMark","unknownElement","children","unknownCell","_hasKnownExpression","propsvalue","CellMultiExperiment","_isNAExpression","_tissueNotStudiedInExperiment","HeatmapBottomOptions","coexpressionsAvailable","showCoexpressionsFor","options","CoexpressionOption","numCoexpressionsAvailable","showCoexpressionsCallback","visible","_chooseValue","_turnOnWithDefaultValue","_showOfferToDisplay","_showSlider","marks","trigger","Modal","Button","Glyphicon","Disclaimers","onDownloadCallbackForAnalytics","showModal","_closeModal","_disclaimer","title","_afterDownloadButtonClicked","_commenceDownload","location","href","_commenceDownloadAndCloseModal","BlueprintText","ZebrafishText","Highcharts","min","lower","median","upper","max","chartWidth","chartHeight","chartMargin","highchartsOptions","credits","enabled","chart","margin","text","legend","xAxis","yAxis","labels","align","x","y","plotOptions","boxplot","fillColor","lineWidth","medianColor","medianWidth","stemColor","stemDashStyle","stemWidth","whiskerColor","whiskerLength","whiskerWidth","series","data","headerFormat","fontSize","boxPlotStyle","LegendRow","legendHelp","lowValueColour","highValueColour","lowExpressionLevel","element","highExpressionLevel","spanStyle","backgroundImage","buildHelpAnchor","class","getHelpFileName","pageName","initTooltips","parentElementId","anchor","helpSelector","click","preventDefault","callback","tooltipHelpHtmlId","parent","get","response","status","xhr","tooltipContent","statusText","dataHelpLoc","legendHelpDiv","_hasValue","_getStyle","backgroundColor","_initTooltip","buildHeatmapCellTooltip","tStatistic","scientificNotation","Math","floor","open","ui","css","hideText","showText","onClickCallback","_buttonText","_updateButtonText","ContrastTooltip","initTooltip","contextRoot","collision","close","ajax","url","success","renderToString","createElement","experimentDescription","contrastDescription","testReplicates","referenceReplicates","fail","console","log","contrastPropertyType","propertyName","referenceValue","testValue","propertyRow","property","isFactor","whiteSpace","fontWeight","my","at","identifier","FactorTooltip","tableHeader","$t","$stickyIntersect","$stickyColumn","$stickyHeadRow","$stickyWrap","$tableHeader","createStickyAllowanceCallback","createStickyRepositionCallback","createSetStickyWidthHeight","createSetStickyWidthHeightAndRepositionCallback","eq","end","outerWidth","stickyAllowanceCallback","$w","add","offset","allowance","scrollLeft","scrollTop","outerHeight","setWidthAndHeightCallback","stickyRepositionCallback","rowHeight","BASELINE","PROTEOMICS_BASELINE","DIFFERENTIAL","MULTIEXPERIMENT","EventEmitter","HeatmapAnatomogramContainer","ExperimentTypes","atlasHost","atlasPath","proxyPrefix","selfHosted","endpointPath","sourceURL","params","setMaxListeners","key","showAnatomogram","isWidget","disableGoogleAnalytics","target","document","getElementById","URI","ExperimentsList","ExperimentDescription","experiment","URL","description","paddingBottom","AsynchronouslyLoadedHeatmapAnatomogramContainer","referenceToAnatomogramContainer","_ontologyIdsForTissuesExpressedInAllRows","_expressedFactors","expressedFactorsPerRow","vs","uniq","self","_expressedFactorsPerRow","reduce","row","_ontologyIdsForTissuesExpressedInRow","rowTitle","anatomogramExpressedTissueColour","anatomogramHoveredTissueColour","homoSapiensCellLine","search","source","Component","wrapComponent","facetsEventEmitter","experimentData","_updateStateAsynchronously","config","anatomogram","handleError","jqXHR","textStatus","errorThrown","this","responseText","handleSuccess","error","httpRequest","dataType","method","serverRequest","s","r","m","q","l","Date","getElementsByTagName","async","src","parentNode","insertBefore","ga","$anatomogram","anatomogramEnsembl","responsive","abort","BootstrapButton","array","_getRowsToDisplay","sort","_lexicalSort","displayAll","_displayAll","thisProfile","thatProfile","_renderListItem","_renderListItems","listStyleType","paddingLeft"],"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EAAgE,SAAS,+BAA+B,kBAAkB,eAAe,eAAe,YAAY,iBAAiB,aAAa,aAAa,iCAAiC,YAAY,mBAAmB,KAAK,mBAAmB,sEAAsE,SAAS,QAAQ,wBAAwB,sCAAsC,yBAAyB,0HAA0H,eAAe,sBAAsB,yBAAyB,WAAW,0EAA0E,cAAc,wBAAwB,IAAI,UAAU,IAAI,yBAAyB,EAAE,iFAAiF,2CAA2C,EAAE,mCAAmC,sGAAsG,qBAAqB,kGAAkG,kBAAkB,8BAA8B,oCAAoC,iCAAiC,qBAAqB,mBAAmB,iBAAiB,aAAa,IAAI,YAAY,4BAA4B,EAAE,yBAAyB,oBAAoB,YAAY,IAAI,iBAAiB,aAAa,6BAA6B,eAAe,YAAY,GAAG,E;;;;;;;;;;ACAh/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,EAAC,gEAAgE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,yBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;;AAEA;AACA,sDAAqD;;AAErD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAqB,U;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA4B;AAC5B;;AAEA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,gCAA+B,mBAAmB;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;;AAET;AACA;AACA,sBAAqB,QAAQ;AAC7B,sBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA6C;AAC7C;;AAEA,cAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA2B,mBAAmB;AAC9C,iDAAgD;AAChD;AACA;AACA,sBAAqB,gEAAgE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAM;;;AAGN;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA8D;;AAE9D;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,cAAc;AAC7B,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa,sCAAsC;AACnD;AACA;;AAEA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,SAAS;AAC1B,kBAAiB,OAAO;AACxB,kBAAiB,OAAO;AACxB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,wCAAwC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;;AAGb;AACA;AACA,uDAAsD;AACtD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4BAA2B;;AAE3B;AACA,0DAAyD;AACzD;AACA;;AAEA;AACA,4BAA2B,SAAS;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAa;AACb;;AAEA;AACA,wCAAuC;AACvC,kCAAiC;AACjC,qCAAoC,MAAM,EAAE;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,YAAY;AAC/B,8BAA6B;AAC7B;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,YAAY;AAC/B,iCAAgC;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0DAAyD;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA6C;AAC7C,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0DAAyD,EAAE;;AAE3D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAc,SAAS;AACvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;;AAEA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB;AACA,gCAA+B;AAC/B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4CAA2C;AAC3C;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB;AACvB;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB;AACjB;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAa;AACb;AACA;;AAEA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,SAAS;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,+CAA+C;;AAExE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,sC;AACA,wC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oCAAmC;AACnC;AACA;AACA,mBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAsB,SAAS;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB,YAAY;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,wBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;;AAET;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,yDAAwD,YAAY,iBAAiB,YAAY,MAAM,QAAQ;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,2DAA0D,UAAU;AACpE,+CAA8C,YAAY,iBAAiB,YAAY,MAAM,QAAQ;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAoC,IAAI,eAAe,IAAI,eAAe,IAAI;AAC9E;AACA;AACA;AACA,UAAS;AACT;AACA,mCAAkC,EAAE,cAAc,EAAE,cAAc,EAAE;AACpE;AACA;AACA;AACA,UAAS;AACT;AACA,oCAAmC,IAAI,eAAe,IAAI,eAAe,IAAI;AAC7E;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA,cAAa;AACb;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;;AAEjB,cAAa;AACb,4BAA2B,OAAO;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA,wBAAuB;AACvB;AACA,gCAA+B;AAC/B;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAuC;AACvC;AACA;AACA,0BAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;;AAEzB;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAiC;AACjC,cAAa;;AAEb,oCAAmC;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA,0BAAyB;AACzB;AACA,kBAAiB;AACjB;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,cAAc;AACjC,oBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAa;;AAEb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,sBAAqB,OAAO;AAC5B,sBAAqB,cAAc;AACnC,sBAAqB,SAAS;AAC9B,sBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA,6BAA4B;AAC5B;AACA;;AAEA,yDAAwD;;AAExD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAiD;AACjD;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,iGAAgG;AAChG;AACA,wDAAuD;AACvD;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wHAAuH;AACvH;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,qBAAqB;AAClC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;;AAGT;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B,oBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA,iDAAgD;AAChD;AACA,gCAA+B;AAC/B;;AAEA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,sDAAqD;AACrD,sDAAqD;;AAErD;AACA;AACA;AACA,0BAAyB,sBAAsB;AAC/C;AACA;;;AAGA;AACA;AACA;AACA,2BAA0B,uBAAuB;;AAEjD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0BAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA,sBAAqB;;AAErB;AACA;AACA;AACA,iCAAgC;AAChC;;;AAGA;AACA,kBAAiB;;AAEjB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,+BAA8B,4CAA4C;AAC1E,UAAS;;AAET;AACA;AACA;AACA;AACA,+BAA8B,qBAAqB;AACnD,UAAS;;AAET;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,uCAAsC,WAAW,EAAE;AACnD;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA,oBAAmB,iBAAiB;AACpC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA0B;;AAE1B;AACA;AACA;;AAEA;AACA;AACA,4BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,UAAS;;AAET;AACA;AACA,wBAAuB,mBAAmB;AAC1C;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA2C;AAC3C;AACA;AACA;AACA,UAAS;;;AAGT;AACA,uCAAsC;AACtC;AACA;AACA,yBAAwB,EAAE;AAC1B;AACA;AACA;;AAEA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC;;AAEhC;AACA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA,UAAS;AACT;AACA,uDAAsD,gDAAgD;AACtG,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAuC;AACvC;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA2B,oCAAoC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAuF;AACvF;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,qCAAoC;AACpC,iCAAgC;AAChC;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6DAA4D;AAC5D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,6BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kDAAiD,sBAAsB;AACvE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,cAAa;;AAEb;AACA;;AAEA;AACA,sDAAqD;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB;AACjB;AACA;;;AAGA;AACA;AACA;AACA,kBAAiB;;;AAGjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gDAA+C;AAC/C;AACA,2CAA0C;AAC1C;AACA,kFAAiF;AACjF;AACA;AACA,sEAAqE;AACrE;AACA,6CAA4C,oBAAoB;AAChE;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,+CAA8C;AAC9C;AACA;AACA;AACA,kCAAiC;AACjC,uDAAsD;AACtD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qDAAoD,mBAAmB;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAiC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8DAA6D;AAC7D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kEAAiE;AACjE;AACA;AACA;;AAEA;AACA,4DAA2D;AAC3D,8CAA6C;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAAyC;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAiD;AACjD,iEAAgE;AAChE;AACA;AACA;AACA;AACA,uEAAsE;AACtE;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA,sDAAqD;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;;;AAIT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA,sBAAqB;AACrB;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,SAAS;AAC5B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,8BAA6B,oBAAoB;AACjD,UAAS;;AAET;AACA;AACA,oBAAmB,MAAM;AACzB,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;;AAGT;AACA;AACA,oBAAmB,MAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,2BAA2B;AACxC;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA,2CAA0C,mBAAmB;AAC7D;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,uBAAsB;AACtB;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;;AAEA;;AAEA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO,2DAA2D,KAAK;AAC1F;AACA;AACA;AACA;AACA,+CAA8C,yBAAyB;AACvE,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;;AAGA;AACA,cAAa;;AAEb;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA,0BAAyB;;AAEzB,qDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA,+BAA8B,sBAAsB;;AAEpD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,sBAAqB;AACrB;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8GAA6G;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,mGAAmG;AACpH;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,mGAAmG;AACpH;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,mGAAmG;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;AACA,UAAS;;;;;;AAMT;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6CAA4C;AAC5C;AACA,oDAAmD;AACnD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B;AACA,oBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAmC;AACnC;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAAyC;AACzC;AACA;AACA;AACA;;AAEA;AACA,sCAAqC;AACrC;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2BAA0B,wBAAwB;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAuB,OAAO;AAC9B,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,0BAAyB,iCAAiC;AAC1D;AACA;AACA,gCAA+B;AAC/B,uCAAsC,cAAc,EAAE;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA,OAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B;AACA;AACA,qBAAoB,OAAO;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,iCAAiC;AACpE;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb,2BAA0B;AAC1B;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;;AAEA;AACA,oCAAmC;AACnC;AACA;AACA,kBAAiB;AACjB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4DAA2D;;;AAG3D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB;;AAErB;AACA,4GAA2G;AAC3G;AACA;AACA;AACA;AACA,0BAAyB;AACzB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA,kDAAiD;AACjD;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,mCAAkC;AAClC;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB,sBAAqB,E;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4CAA2C;AAC3C,kCAAiC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,0BAA0B;;AAE3D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA,8BAA6B;;AAE7B;AACA,sBAAqB;AACrB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,oDAAmD;AACnD;;AAEA;AACA;AACA,oCAAmC,MAAM,UAAU,WAAW;AAC9D;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA2B;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB,6BAA6B;AAC9C;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,uCAAsC;AACtC;AACA;AACA,kBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6CAA4C;AAC5C;AACA;AACA;AACA;AACA;;AAEA,cAAa;AACb;AACA;AACA;AACA,2BAA0B,6CAA6C;AACvE;;AAEA;;AAEA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA2B,QAAQ;;AAEnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA,4BAA2B;AAC3B;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,oDAAmD;;AAEnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,uCAAsC;AACtC;AACA,cAAa,+BAA+B;AAC5C;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,4CAA2C;;AAE3C;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA,uCAAsC;AACtC,+BAA8B;AAC9B;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA,+BAA8B;;AAE9B;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb,2CAA0C;AAC1C,cAAa;;AAEb;AACA;AACA,mCAAkC;AAClC;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,iCAAgC;;AAEhC;AACA;;;AAGA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oDAAmD,uBAAuB;AAC1E;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAsB,4BAA4B,uBAAuB,EAAE;AAC3E;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA,UAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA,sBAAqB;AACrB;AACA,cAAa;;AAEb,UAAS;;;AAGT;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA,cAAa;;AAEb;;AAEA;;AAEA;;;AAGA,cAAa;AACb,iEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,MAAM;AACzB;AACA;AACA,kDAAiD,2BAA2B;AAC5E;;AAEA;;AAEA,yBAAwB;AACxB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA,cAAa,OAAO;AACpB;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA,oBAAmB,MAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA,iCAAgC,aAAa;AAC7C,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA2B;AAC3B;;AAEA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA,wBAAuB,WAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,uEAAsE;;AAEtE;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAwC;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAsC;AACtC;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAmC,wBAAwB;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA,+BAA8B;;AAE9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAkE;AAClE,mCAAkC;;AAElC;AACA,cAAa;AACb,6BAA4B,YAAY;AACxC;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,iCAAiC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA,2EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,aAAa;AAC5D;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,0BAAyB;AACzB,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8GAA6G;;AAE7G;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,iCAAgC;AAChC,4CAA2C;AAC3C;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,mBAAmB;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAqC,UAAU;AAC/C,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;;AAEA,cAAa,kBAAkB;AAC/B;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;;AAEA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA,4BAA2B;AAC3B,gBAAe;AACf;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,yEAAwE,mBAAmB;AAC3F;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kDAAiD;AACjD;AACA;AACA,8CAA6C;;AAE7C;;;AAGA;AACA;AACA;;AAEA,0FAAyF;;;AAGzF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA0C;;AAE1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8CAA6C;AAC7C;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oDAAmD;AACnD,+BAA8B;AAC9B;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA,6CAA4C;;AAE5C;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,cAAa;AACb;;AAEA,cAAa,gCAAgC;AAC7C;;AAEA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,qIAAoI;AACpI;AACA;AACA;AACA;;AAEA;AACA,+CAA8C;AAC9C;;AAEA,kBAAiB,OAAO;AACxB,6EAA4E;AAC5E;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAA+F;AAC/F;AACA;AACA,kCAAiC;AACjC,iEAAgE;AAChE;;AAEA;AACA;;AAEA;;AAEA;AACA,sBAAqB;;AAErB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA4B;;AAE5B;AACA;AACA,uDAAsD;AACtD,uCAAsC;AACtC;AACA;;AAEA;AACA,cAAa;AACb,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA6C;AAC7C;;AAEA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qEAAoE;;AAEpE;AACA;AACA,gCAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA,kBAAiB,wEAAwE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,mFAAkF,YAAY;AAC9F;AACA;AACA;AACA;;AAEA,mDAAkD;AAClD,4FAA2F;AAC3F;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0CAAyC;;AAEzC,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;;AAEA;AACA,sCAAqC;AACrC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA,wHAAuH;AACvH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gEAA+D;AAC/D;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;;AAEA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,2FAA0F;AAC1F,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4FAA2F;AAC3F;;AAEA,mCAAkC;AAClC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;;AAGA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oDAAmD;;;AAGnD;AACA;AACA;;AAEA;AACA,qGAAoG;AACpG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,sBAAqB,QAAQ;AAC7B;AACA;AACA,4BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,8CAA6C;AAC7C;AACA,6CAA4C;AAC5C,0BAAyB;AACzB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;AACA,cAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B,oBAAmB,eAAe;AAClC;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA,yCAAwC;;AAExC;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA,yEAAwE;;AAExE;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2DAA0D;AAC1D,2CAA0C;AAC1C,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,sBAAqB,OAAO;AAC5B,sBAAqB,MAAM;AAC3B;AACA;AACA;AACA;AACA,wGAAuG;;AAEvG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,0FAAyF;;AAEzF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA,cAAa,+BAA+B;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0GAAyG;;AAEzG,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4DAA2D;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA,cAAa;AACb;AACA,wBAAuB;;AAEvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,uBAAuB;;AAElE;AACA,8BAA6B;AAC7B,4CAA2C,0BAA0B;AACrE;;AAEA;AACA,kDAAiD;AACjD;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,4BAA2B,kCAAkC;AAC7D;AACA;AACA,4BAA2B,8BAA8B;AACzD;AACA;AACA,4BAA2B,mCAAmC;AAC9D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,+CAA8C;AAC9C;AACA,kBAAiB;;AAEjB;;;AAGA;AACA;AACA,0BAAyB,wBAAwB;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA;AACA;;;AAGA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+C;AACA;AACA;AACA;AACA,0BAAyB,I;AACzB;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,qDAAoD,cAAc;AAClE;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8EAA6E;AAC7E;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAgC;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA,4CAA2C;AAC3C;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,qI;AACA,kIAAiI;AACjI;AACA;AACA;AACA,yDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA,0CAAyC;AACzC;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,kBAAiB;AACjB,4CAA2C,cAAc;AACzD;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA,cAAa;;AAEb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA,0BAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;;;AAGb,wFAAuF;AACvF,UAAS;;AAET;AACA;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,kBAAiB;AACjB,+EAA8E;AAC9E;;AAEA;AACA,+GAA8G;AAC9G,kBAAiB;AACjB,sFAAqF;AACrF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA,uEAAsE;;AAEtE,gDAA+C;AAC/C;AACA;AACA;;AAEA,gDAA+C;AAC/C;AACA;AACA;;AAEA,8CAA6C;AAC7C;AACA;AACA;;AAEA,6CAA4C;AAC5C;AACA;AACA;;AAEA,+CAA8C;AAC9C;AACA;AACA;AACA;;AAEA,8CAA6C;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;;;AAGA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,kBAAkB;AACrC;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,4BAA4B;AACzC;AACA,cAAa,OAAO;AACpB;AACA;;AAEA,iCAAgC,wBAAwB;AACxD;AACA,4BAA2B,oBAAoB;AAC/C;AACA,4FAA2F;AAC3F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAwB;;AAExB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,uBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAuE;AACvE,kBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAqB;AACrB;AACA,sBAAqB;AACrB;AACA,sBAAqB;AACrB;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,sBAAqB;AACrB;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,sBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kEAAiE;;AAEjE;AACA;;AAEA;AACA,0EAAyE;;AAEzE;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,uCAAsC;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA,6DAA4D;AAC5D,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAsD,UAAU,KAAK,8BAA8B;AACnG;;AAEA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4CAA2C;AAC3C,uEAAsE;AACtE;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sHAAqH;AACrH,+FAA8F;AAC9F,2DAA0D;AAC1D;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,kBAAiB;AACjB;AACA;AACA;AACA,oEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD;AAClD,6CAA4C,qCAAqC;AACjF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2GAA0G;AAC1G;AACA;AACA,sFAAqF;AACrF;AACA;AACA,kBAAiB;AACjB,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA,8BAA6B,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;;AAEA;AACA,cAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gEAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8FAA6F,iCAAiC,gBAAgB;AAC9I;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA,sBAAqB;AACrB;AACA;AACA,mEAAkE,mBAAmB;AACrF,0BAAyB;AACzB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAwB;AACxB,uCAAsC,wBAAwB;AAC9D,0DAAyD;AACzD;AACA;AACA;AACA,UAAS;;AAET;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;;;AAIT;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,6DAA4D;AAC5D;AACA,oDAAmD;AACnD;AACA,UAAS;;AAET;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,mCAAkC;;AAElC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA,uFAAsF;AACtF;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sBAAqB;;AAErB;AACA,4CAA2C;AAC3C;AACA;;AAEA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAkF;AAClF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kCAAiC;;AAEjC;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,qCAAoC;AACpC,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,iCAAgC;;AAEhC;AACA,cAAa,6BAA6B;;;AAG1C;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAiB;AACjB;AACA;AACA;;AAEA,cAAa;AACb;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;;AAEA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C,kBAAiB;AACjB,cAAa;AACb;AACA;AACA,6CAA4C;AAC5C;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,oBAAoB;AAClD;AACA;;AAEA;AACA,iCAAgC,oCAAoC,EAAE;AACtE;AACA;AACA,kCAAiC,sBAAsB;AACvD;;AAEA;;AAEA;AACA,8DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,kBAAiB;AACjB;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C,yCAAwC,0BAA0B;AAClE;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAsB;;AAEtB;AACA;AACA;AACA,4BAA2B,YAAY;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,gFAA+E;;AAE/E;AACA;;AAEA;AACA;AACA;;AAEA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kHAAiH;;AAEjH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA2B,YAAY;AACvC;AACA;AACA,4BAA2B,YAAY;AACvC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;;AAEA,kBAAiB;AACjB;AACA,oCAAmC,2CAA2C;AAC9E;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;;AAErB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,yDAAwD,YAAY;AACpE;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;;AAEA;AACA;;AAEA;;AAEA,cAAa;AACb;AACA;AACA;AACA;AACA,kBAAiB;AACjB,qCAAoC;AACpC;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,sBAAqB;AACrB;AACA;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,sBAAqB;;AAErB;;AAEA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb,UAAS;;AAET;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,gBAAe,cAAc;AAC7B,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAqB,MAAM;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA,oDAAmD;;AAEnD;AACA,0DAAyD;AACzD,iEAAgE;AAChE;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,4BAA2B,MAAM,OAAO,GAAG;;AAE3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA,0DAAyD;AACzD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA,gCAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA,+CAA8C;AAC9C;AACA,uDAAsD;AACtD,6GAA4G;AAC5G;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,+DAA8D;AAC9D;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA,uBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,mBAAmB;AAC1C;AACA,4BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,yEAAwE;AACxE,yEAAwE;AACxE;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,cAAa;;AAEb;AACA;;AAEA;AACA,8CAA6C;AAC7C,cAAa;AACb,UAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA,iCAAgC,OAAO;AACvC,oCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA,cAAa;AACb;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA0B,kFAAkF;AAC5G;AACA;AACA,sBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,wFAAwF;AAClH;AACA;AACA,sBAAqB;;AAErB;AACA;AACA;AACA;;AAEA;AACA,4CAA2C;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uFAAsF;AACtF;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sDAAqD;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa;AACb;AACA,0DAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;;AAEA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+GAA8G;AAC9G;AACA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,cAAa;;AAEb,wCAAuC;AACvC,qCAAoC;;AAEpC,kCAAiC;AACjC;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb,6CAA4C;AAC5C;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,OAAO;AACxB;AACA,gDAA+C,qDAAqD;AACpG;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,kBAAiB;AACjB;AACA;AACA,2CAA0C,gEAAgE;AAC1G;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;;AAEb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,wEAAuE;AACvE;AACA;AACA,iHAAgH;AAChH;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA2B,YAAY;AACvC;AACA;;AAEA,kBAAiB;AACjB;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mEAAkE;;AAElE;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA,iEAAgE;;AAEhE;;AAEA,uCAAsC;AACtC;AACA;AACA,oDAAmD;AACnD;AACA,kBAAiB;AACjB,oCAAmC;AACnC;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA,4BAA2B,YAAY;AACvC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,UAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8GAA6G;AAC7G;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAsD;AACtD;AACA;AACA,cAAa;;AAEb;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,OAAO;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,6DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oDAAmD;AACnD;AACA;AACA;;AAEA,oCAAmC;AACnC;AACA;;AAEA;AACA;AACA;;;AAGA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,qBAAoB,OAAO;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAwB,cAAc;AACtC;AACA,+DAA8D,yBAAyB;AACvF;AACA,2DAA0D,oCAAoC;AAC9F,cAAa;;AAEb;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;;AAEA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mEAAkE;AAClE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2DAA0D;;AAE1D,oDAAmD;AACnD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,sDAAqD;AACrD,gEAA+D;AAC/D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAsD;AACtD;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB,cAAa;;AAEb;AACA;;AAEA,yCAAwC;;AAExC;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,gDAA+C;AAC/C,oCAAmC,gBAAgB;AACnD;AACA;AACA;AACA,sBAAqB,gCAAgC;AACrD,0CAAyC;AACzC,wCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA,0BAAyB,OAAO;AAChC,wCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,mCAAkC;AAClC;AACA,kBAAiB;AACjB,gCAA+B,gBAAgB;AAC/C,qDAAoD;AACpD,mCAAkC;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iDAAgD;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA,sCAAqC;AACrC;AACA;AACA;;AAEA;;AAEA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA,sBAAqB,8CAA8C;AACnE;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,0CAAyC;AACzC;;AAEA;AACA;AACA;AACA,4BAA2B,gBAAgB;AAC3C,8DAA6D;AAC7D;AACA;AACA;AACA;AACA,mDAAkD;AAClD;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAuB,iBAAiB;;AAExC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uDAAsD;AACtD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,+HAA8H;;AAE9H;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,oFAAmF;AACnF,mGAAkG;AAClG;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,oDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,kCAAiC,wBAAwB;AACzD;AACA;AACA,kCAAiC,KAAK;AACtC,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAqB;AACrB,2DAA0D;AAC1D;AACA;AACA;;AAEA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAuC;;AAEvC;AACA;AACA;;AAEA,cAAa,OAAO;;AAEpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yGAAwG;;AAExG;;AAEA,yFAAwF;;AAExF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mEAAkE;AAClE;;AAEA;AACA,8IAA6I;AAC7I;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAgC,sBAAsB;AACtD,iDAAgD;AAChD;AACA;AACA;AACA,0DAAyD;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mFAAkF;;AAElF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,sBAAsB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iCAAgC;;AAEhC;AACA,gCAA+B;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB;AACjB;;AAEA,kBAAiB;;AAEjB;AACA;;AAEA,sBAAqB,kCAAkC;;AAEvD;;AAEA,sBAAqB;;AAErB,0CAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA,0BAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA;;AAEA;;AAEA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAmC,eAAe;;AAElD,kBAAiB,0CAA0C;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA,4DAA2D;AAC3D;;AAEA;AACA;AACA;AACA;AACA,qDAAoD;AACpD;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA,kDAAiD;AACjD;AACA;AACA,cAAa;;AAEb;AACA,yBAAwB;;AAExB;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA,yBAAwB,yBAAyB;AACjD;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA,yDAAwD;AACxD,uEAAsE;AACtE;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sBAAqB;;AAErB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAM;;AAEN;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD;;AAEjD;AACA;AACA,kCAAiC,kCAAkC;AACnE;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB,qCAAoC;AACpC;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA,gEAA+D;;AAE/D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,UAAS;AACT;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,oBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,0CAAyC;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAoF;AACpF,qFAAoF;AACpF;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B,oBAAmB,eAAe;AAClC;AACA;AACA,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA,6CAA4C;;AAE5C,gDAA+C,mBAAmB;AAClE;;AAEA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB,yCAAwC;;AAExC;AACA,8DAA6D;AAC7D;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D;AAC1D;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,0CAAyC,gBAAgB;AACzD;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B,oBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,mDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAA+E;AAC/E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qEAAoE;AACpE;AACA;;AAEA,4DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAqC;AACrC;AACA,cAAa;AACb,iDAAgD,mBAAmB;AACnE;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B,oBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B;AACA,oBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mEAAkE;AAClE,mDAAkD;;AAElD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAoC;AACpC,yCAAwC;AACxC;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mEAAkE;AAClE;AACA;AACA;AACA;AACA,2DAA0D,iBAAiB;;AAE3E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,QAAQ;AAC3B,oBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,cAAa,GAAG,0BAA0B;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,kDAAiD,oBAAoB;;AAErE;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAiD;AACjD;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,0BAAyB,yBAAyB;AAClD,UAAS;;AAET;AACA;AACA,oBAAmB,MAAM;AACzB,oBAAmB,QAAQ;AAC3B;AACA;AACA,0BAAyB,yBAAyB;AAClD;;AAEA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA2B,mBAAmB;AAC9C;AACA;;AAEA;AACA;AACA,mDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mD;AACA,kC;AACA;AACA;AACA,0BAAyB;;;AAGzB;AACA;AACA;AACA,sBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uC;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,kBAAiB;;AAEjB,c;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,sBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAuB,mBAAmB;AAC1C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,kEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mFAAkF;;AAElF;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mEAAkE;;AAElE;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,4BAA2B;AAC3B;AACA,mCAAkC,cAAc;;AAEhD,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gDAA+C;AAC/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,wDAAuD;AACvD,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAA+D;AAC/D;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,4FAA2F;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,4CAA4C;AACrE;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yDAAwD;AACxD;AACA;;AAEA;AACA,gCAA+B;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA2C;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAgF;AAChF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb,UAAS;;AAET;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAqB;;AAErB;;AAEA,mCAAkC;AAClC;AACA,4IAA2I;;AAE3I,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB;AACjB,uDAAsD;AACtD;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;;AAEA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;;AAEA,kBAAiB,OAAO;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA,sBAAqB;;AAErB;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,gDAA+C,YAAY,6CAA6C,IAAI,YAAY;AACxH,kCAAiC,QAAQ,gBAAgB,QAAQ;AACjE;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC;AACpC;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,kFAAiF;;AAEjF;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,8EAA6E;;AAE7E;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,SAAS;;AAEhC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,iCAAgC;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb,UAAS;;;AAGT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAsC,wBAAwB,EAAE;AAChE;AACA;AACA,8CAA6C;AAC7C;AACA;AACA,wFAAuF,aAAa,GAAG,gBAAgB;AACvH,sBAAqB;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+FAA8F;AAC9F,kHAAiH;;;AAGjH;AACA;AACA;;AAEA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;;AAEA,0BAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,iCAAgC;AAChC,sEAAqE;AACrE;AACA;AACA,iDAAgD,iCAAiC;AACjF;AACA;AACA,4BAA2B;AAC3B;AACA,sBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;;AAGA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,6BAA4B,WAAW;AACvC,sCAAqC;AACrC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wDAAuD;;AAEvD;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oDAAmD;AACnD,oHAAmH;AACnH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8EAA6E,eAAe;AAC5F;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAA+B,YAAY;;AAE3C;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAuC,qBAAqB;AAC5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kEAAiE;AACjE;AACA,0BAAyB,uEAAuE;AAChG;AACA,gEAA+D;AAC/D;AACA;AACA,0BAAyB;AACzB;AACA;AACA,gEAA+D;AAC/D;AACA;AACA;;AAEA,yCAAwC,oCAAoC;AAC5E,iDAAgD;AAChD;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,YAAY;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,mDAAmD;AACjF;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAAyB;AACzB;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;;AAEb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAmD,mBAAmB;AACtE;;AAEA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA,0BAAyB;AACzB;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,yCAAwC,WAAW;AACnD;AACA;AACA,cAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA2C;AAC3C;;AAEA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,8DAA6D;AAC7D;;AAEA;AACA,4CAA2C;AAC3C;;AAEA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D;AAC7D;;AAEA;AACA;AACA;AACA,gGAA+F;AAC/F;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oFAAmF;AACnF,sHAAqH;AACrH;AACA;AACA;AACA,8HAA6H;AAC7H;AACA;AACA,8BAA6B;AAC7B,0BAAyB;AACzB;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA,wBAAuB,SAAS;AAChC;;AAEA,gCAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA,sDAAqD;AACrD;AACA,yEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,kCAAiC,iBAAiB;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6EAA4E;AAC5E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;AACA,kFAAiF;AACjF;AACA;AACA;AACA;;AAEA;AACA,0BAAyB,yBAAyB;AAClD;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,+BAA8B,iBAAiB;AAC/C,cAAa,OAAO;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2CAA0C;AAC1C;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,MAAK;;AAEL;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,4CAA2C,uBAAuB;AAClE;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA,mEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD;;AAEpD;AACA;AACA;AACA,qEAAoE,iBAAiB;AACrF;AACA;;AAEA,6CAA4C;AAC5C,cAAa;;AAEb;AACA;AACA;AACA,mCAAkC,iBAAiB;AACnD;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qEAAoE,yBAAyB;AAC7F;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gCAA+B;;AAE/B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,qEAAoE;AACpE;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA,2CAA0C;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB;AACrB,wEAAuE;AACvE;AACA;AACA,0BAAyB;AACzB;AACA;;AAEA;AACA,uHAAsH;AACtH,8DAA6D;AAC7D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB,cAAa;AACb,4BAA2B,QAAQ;AACnC;;AAEA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,OAAO;AAC3B,sBAAqB,MAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC;;AAErC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uHAAsH;AACtH;;AAEA,iDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mIAAkI;AAClI;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;;;AAGb;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;;AAGT;AACA;AACA;AACA,6BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,EAAC;;;;;;;;;;;AC94mBD;AACA;;AAEA;;AAEA;AACA;AACA,cAAa,wEAAwE,cAAc,kBAAkB,iBAAiB,8TAA8T,eAAe,qBAAqB;AACxe,kBAAiB,UAAU,2BAA2B,cAAc,WAAW,0DAA0D,0EAA0E,yBAAyB,0BAA0B,+BAA+B,4BAA4B,0DAA0D,EAAE,iBAAiB,6CAA6C,2BAA2B;AACtd,kBAAiB,gBAAgB,oBAAoB,+BAA+B,8EAA8E,EAAE,mCAAmC,8BAA8B,gBAAgB,mBAAmB,gBAAgB,uCAAuC,IAAI,uCAAuC,QAAQ,0BAA0B;AAC5Y,wDAAuD,WAAW,UAAU,wBAAwB,wBAAwB,kCAAkC,yDAAyD,wBAAwB,uCAAuC,wBAAwB,yBAAyB,2BAA2B,wBAAwB,kEAAkE,+BAA+B,sBAAsB;AACjf,oCAAmC,yDAAyD,2BAA2B,4CAA4C,yEAAyE,+DAA+D,EAAE,+BAA+B,gCAAgC;AAC5W,wEAAuE,mCAAmC,6FAA6F,wBAAwB,yBAAyB,kBAAkB,6EAA6E,mEAAmE,mEAAmE;AAC7d,IAAG,mIAAmI,6BAA6B,sDAAsD,OAAO,gEAAgE,iCAAiC,uIAAuI;AACxc,kLAAiL,6BAA6B,SAAS,mLAAmL,sEAAsE,GAAG,SAAS;AAC5d,IAAG,yDAAyD,6KAA6K,uBAAuB,8HAA8H,qBAAqB,0BAA0B,GAAG,SAAS,6BAA6B;AACtd,sBAAqB,OAAO,6CAA6C,2BAA2B,2BAA2B,2BAA2B,MAAM,6CAA6C,YAAY,gBAAgB,MAAM,+EAA+E,sIAAsI,iBAAiB,eAAe,eAAe;AACnf,IAAG,oEAAoE,YAAY,cAAc,sBAAsB,mDAAmD,mEAAmE,wBAAwB,6EAA6E,EAAE,iCAAiC,kEAAkE,EAAE,sCAAsC,gBAAgB;AAC/e,uCAAsC,EAAE,mDAAmD,yGAAyG,kGAAkG,WAAW;AACjT,8DAA6D,QAAQ,mDAAmD,SAAS,EAAE,0CAA0C,gBAAgB,0GAA0G,SAAS,EAAE,sBAAsB,gDAAgD,iCAAiC,aAAa,iBAAiB,YAAY,MAAM,UAAU,WAAW,WAAW,WAAW;AACpf,4BAA2B,4DAA4D,SAAS,OAAO,UAAU,EAAE,sBAAsB,sHAAsH,qBAAqB,+DAA+D,mFAAmF,2BAA2B,yBAAyB,sBAAsB;AAChf,gBAAe,oCAAoC,uBAAuB,+BAA+B,+EAA+E,EAAE,4CAA4C,cAAc,EAAE,yBAAyB,wEAAwE,eAAe,4BAA4B,IAAI,qDAAqD,8BAA8B,KAAK;AAC9d,iBAAgB,kEAAkE,8BAA8B,EAAE,iBAAiB,gCAAgC,0CAA0C,IAAI,iBAAiB,iBAAiB,SAAS,iBAAiB,0CAA0C,wCAAwC,SAAS,2BAA2B;AACnY,yBAAwB,oCAAoC,QAAQ,IAAI,YAAY,8CAA8C,WAAW,iBAAiB,mBAAmB,iBAAiB,6BAA6B,UAAU,MAAM,+BAA+B,4CAA4C,YAAY,YAAY,yDAAyD,QAAQ,IAAI,YAAY,8CAA8C,6BAA6B;AAC9e,MAAK,UAAU,iBAAiB,WAAW,MAAM,+BAA+B,4CAA4C,WAAW,WAAW,yDAAyD,UAAU,kBAAkB,2BAA2B,wDAAwD,6CAA6C,EAAE,iCAAiC,iCAAiC,wEAAwE;AACnf,aAAY,yBAAyB,sCAAsC,4BAA4B,EAAE,6BAA6B,wCAAwC,2CAA2C,qBAAqB,uBAAuB,iDAAiD,yCAAyC,kBAAkB,IAAI,YAAY,mDAAmD,WAAW,MAAM;AACrc,wGAAuG,EAAE,0OAA0O,EAAE,IAAI,kBAAkB,YAAY,gHAAgH,QAAQ,SAAS;AACxf,UAAS,gBAAgB,iBAAiB,EAAE,GAAG,6BAA6B,qBAAqB,cAAc,+GAA+G,2CAA2C,sBAAsB,0BAA0B;AACzT,oBAAmB,wKAAwK,gBAAgB,mBAAmB,aAAa,6GAA6G,aAAa,aAAa,EAAE,uBAAuB,+EAA+E,uBAAuB;AACjf,kDAAiD,yDAAyD,0HAA0H,eAAe,EAAE,aAAa,gCAAgC,4CAA4C,wGAAwG,oCAAoC,qBAAqB;AAC/e,MAAK,6BAA6B,gBAAgB,YAAY,2CAA2C,aAAa,8BAA8B,uBAAuB,iBAAiB,mBAAmB,uHAAuH,8BAA8B,qCAAqC,uBAAuB,oCAAoC,mBAAmB,sBAAsB;AAC7e,qBAAoB,oCAAoC,oBAAoB,sBAAsB,sDAAsD,OAAO,iBAAiB,yBAAyB,iCAAiC,YAAY,qBAAqB,YAAY,mBAAmB,WAAW,sBAAsB,SAAS,cAAc,aAAa,sBAAsB,SAAS,eAAe,UAAU,OAAO,oCAAoC,EAAE,sBAAsB;AAC1e,qEAAoE,wCAAwC,wCAAwC,2DAA2D,uCAAuC,sCAAsC,yCAAyC,0BAA0B,gBAAgB,qDAAqD,EAAE,EAAE,uBAAuB;AAC/b,kFAAiF,uBAAuB,YAAY,cAAc,KAAK,KAAK,KAAK,mBAAmB;AACpK;AACA,+DAA8D,IAAI,yBAAyB,IAAI,oBAAoB,IAAI,yBAAyB,IAAI,EAAE,KAAK,+BAA+B,gCAAgC,yCAAyC,oCAAoC,wCAAwC,EAAE,oBAAoB,EAAE,wBAAwB,0DAA0D,iCAAiC,YAAY,iBAAiB,YAAY,MAAM,UAAU,WAAW,WAAW,WAAW;AACpjB,mBAAkB,EAAE,wBAAwB,iEAAiE,qBAAqB,iIAAiI,2GAA2G,EAAE,wBAAwB,4EAA4E,UAAU,SAAS,OAAO,kBAAkB;AAChgB,yBAAwB,yEAAyE,qGAAqG,yCAAyC,4BAA4B,MAAM,cAAc,mBAAmB,IAAI,KAAK,OAAO,yBAAyB,cAAc,oGAAoG,iBAAiB;AAC9d,KAAI,kBAAkB,uBAAuB,kHAAkH,uIAAuI,KAAK,qFAAqF,KAAK,yCAAyC,wCAAwC,8BAA8B;AACpf,cAAa,uDAAuD,+BAA+B,4DAA4D,+DAA+D,yBAAyB,8DAA8D,kCAAkC,QAAQ,IAAI,4BAA4B;AAC/X,IAAG,qCAAqC,eAAe,eAAe,qBAAqB,yFAAyF,uBAAuB,oDAAoD,yHAAyH,WAAW,8BAA8B,gCAAgC,uBAAuB;AACxd,sCAAqC,EAAE,yBAAyB,uFAAuF,QAAQ,IAAI,0IAA0I,SAAS,+CAA+C,EAAE,uBAAuB,QAAQ,YAAY,EAAE,uBAAuB,uDAAuD;AACle,gBAAe,oFAAoF,EAAE,sBAAsB,YAAY,qBAAqB,oBAAoB,kCAAkC,SAAS,2BAA2B,kDAAkD,OAAO,MAAM,SAAS,UAAU,eAAe,QAAQ,GAAG,QAAQ,UAAU,QAAQ,EAAE,4CAA4C,EAAE,OAAO,oBAAoB;AACvc,6CAA4C,YAAY,EAAE,sBAAsB,4KAA4K,+DAA+D,0BAA0B,8EAA8E,0CAA0C,SAAS,2BAA2B;AACjf,kDAAiD,iCAAiC,SAAS,4BAA4B,qFAAqF,mBAAmB,IAAI,0MAA0M,aAAa,qBAAqB,6BAA6B;AAC5e,aAAY,8BAA8B,gCAAgC,MAAM,KAAK,oBAAoB,sBAAsB,mCAAmC,yCAAyC,eAAe,IAAI,+FAA+F,wBAAwB,UAAU,6CAA6C,qCAAqC,gCAAgC;AACjd,GAAE,gDAAgD,SAAS,qBAAqB,2BAA2B,sHAAsH,EAAE,qCAAqC,6FAA6F,kGAAkG,0BAA0B,gBAAgB;AACjf,2HAA0H,iCAAiC,iBAAiB,qLAAqL,EAAE,gBAAgB,wBAAwB,2CAA2C,YAAY,IAAI;AACtc,uCAAsC,EAAE,uGAAuG,uDAAuD,IAAI,YAAY,gBAAgB,uHAAuH,YAAY,iCAAiC,QAAQ,8DAA8D,6BAA6B;AAC7e,gCAA+B,qDAAqD,oBAAoB,kCAAkC,iCAAiC,0CAA0C,0BAA0B,wFAAwF,GAAG,8BAA8B,gGAAgG,cAAc,EAAE,mBAAmB;AAC3e,WAAU,UAAU,cAAc,cAAc,qDAAqD,oCAAoC,mCAAmC,uHAAuH,kEAAkE,kBAAkB,qBAAqB,UAAU,UAAU,SAAS,SAAS,qDAAqD;AACve,qZAAoZ;AACpZ,aAAY,0BAA0B,SAAS,EAAE,4BAA4B,iBAAiB,aAAa,qFAAqF,cAAc,eAAe,IAAI,kBAAkB,EAAE,iCAAiC,WAAW,qBAAqB,iBAAiB,8FAA8F,gBAAgB,iCAAiC,EAAE;AACxd,KAAI,EAAE,iBAAiB,8EAA8E,yFAAyF,6BAA6B,aAAa,eAAe,cAAc,eAAe,IAAI,mDAAmD,0CAA0C,mDAAmD,EAAE,qEAAqE;AAC/e,wCAAuC,qBAAqB,0BAA0B,2EAA2E,2FAA2F,sCAAsC,4BAA4B,EAAE,mCAAmC,oBAAoB,mBAAmB,6BAA6B;AACva,4BAA2B,8FAA8F,EAAE,mBAAmB,SAAS,EAAE,IAAI;;;;;;;;;;;ACvD7J;;AAEA;;AAEAnM,SAAQsM,kBAAR,GAA6B,mBAAArM,CAAQ,wCAAR,CAA7B;AACAD,SAAQqM,cAAR,GAAyB,mBAAApM,CAAQ,oCAAR,CAAzB,C;;;;;;;;;;ACLA;;AAEA;;AAEA,KAAIC,QAAQ,mBAAAD,CAAQ,iBAAR,CAAZ;AACA,KAAIyF,WAAW,mBAAAzF,CAAQ,qBAAR,CAAf;;AAEA;;AAEA,KAAI2jB,YAAY,mBAAA3jB,CAAQ,2BAAR,CAAhB;AACA,KAAI0M,eAAe,mBAAA1M,CAAQ,0CAAR,CAAnB;;AAEA;;AAEA,oBAAAA,CAAQ,2BAAR;;AAEA;;AAEA,KAAIqM,qBAAqBpM,MAAM0C,WAAN,CAAkB;AAAA;;;AAEvCE,gBAAW;AACP2L,uBAAcvO,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC,UAD9B;AAEP2Q,uBAAc5T,MAAM8C,SAAN,CAAgB8B,MAAhB,CAAuB3B,UAF9B;AAGP4Q,uBAAc7T,MAAM8C,SAAN,CAAgB8B,MAAhB,CAAuB3B,UAH9B;AAIP6Q,qBAAY9T,MAAM8C,SAAN,CAAgB8B,MAAhB,CAAuB3B,UAJ5B;AAKP8Q,qBAAY/T,MAAM8C,SAAN,CAAgB8B,MAAhB,CAAuB3B;AAL5B,MAF4B;;AAUvCQ,aAAQ,kBAAY;AAChB,gBACI;AAAA;AAAA,eAAK,WAAU,WAAf;AACI;AAAA;AAAA,mBAAK,OAAO,EAACqB,SAAS,cAAV,EAAZ;AACKwO,uBAAM,KAAK9P,KAAL,CAAWoQ,YAAjB,KAAkCN,MAAM,KAAK9P,KAAL,CAAWqQ,YAAjB,CAAlC,GACG,IADH,GAEG,oBAAC,SAAD,IAAW,oBAAoB;AAAA;AAAA;AAAO,8BAAKrQ,KAAL,CAAWoQ;AAAlB,sBAA/B;AACW,0CAAqB;AAAA;AAAA;AAAO,8BAAKpQ,KAAL,CAAWqQ;AAAlB,sBADhC;AAEW,qCAAe,SAF1B;AAGW,sCAAgB,SAH3B,GAHR;AAQKP,uBAAM,KAAK9P,KAAL,CAAWsQ,UAAjB,KAAgCR,MAAM,KAAK9P,KAAL,CAAWuQ,UAAjB,CAAhC,GACG,IADH,GAEG,oBAAC,SAAD,IAAW,oBAAoB;AAAA;AAAA;AAAO,8BAAKvQ,KAAL,CAAWsQ;AAAlB,sBAA/B;AACW,0CAAqB;AAAA;AAAA;AAAO,8BAAKtQ,KAAL,CAAWuQ;AAAlB,sBADhC;AAEW,qCAAe,SAF1B;AAGW,sCAAgB,SAH3B;AAVR,cADJ;AAiBI,0CAAK,KAAI,YAAT,EAAsB,iBAAc,wBAApC,EAA6D,WAAU,eAAvE;AAjBJ,UADJ;AAqBH,MAhCsC;;AAkCvCxM,wBAAmB,6BAAY;AAC3BkF,sBAAa,KAAKjJ,KAAL,CAAW+K,YAAxB,EAAsC,YAAtC,EAAoD/I,SAASmC,WAAT,CAAqB,KAAKuK,IAAL,CAAUyR,UAA/B,CAApD;AACH;AApCsC,EAAlB,CAAzB;;AAuCA;;AAEA9jB,QAAOC,OAAP,GAAiBsM,kBAAjB,C;;;;;;;;;;;;AC3DA,KAAMpM,QAAQ,mBAAAD,CAAQ,iBAAR,CAAd;;AAEA,oBAAAA,CAAQ,6BAAR;;AAEA,KAAM2jB,YAAY1jB,MAAM0C,WAAN,CAAkB;AAAA;;;AAEhCE,gBAAW;AACPghB,yBAAgB5jB,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC,UADhC;AAEP4gB,0BAAiB7jB,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC,UAFjC;AAGP6gB,6BAAoB9jB,MAAM8C,SAAN,CAAgBihB,OAAhB,CAAwB9gB,UAHrC;AAIP+gB,8BAAqBhkB,MAAM8C,SAAN,CAAgBihB,OAAhB,CAAwB9gB;AAJtC,MAFqB;;AAShCQ,aAAQ,kBAAY;AAChB,aAAMwgB,YAAY;AACdC,6DAA8C,KAAK1gB,KAAL,CAAWogB,cAAzD,UAA4E,KAAKpgB,KAAL,CAAWqgB,eAAvF;AADc,UAAlB;;AAIA,gBACE,KAAKrgB,KAAL,CAAWsgB,kBAAX,IAAiC,KAAKtgB,KAAL,CAAWwgB,mBAA5C,GACE;AAAA;AAAA,eAAK,OAAO,EAAClf,SAAS,WAAV,EAAZ;AACI;AAAA;AAAA,mBAAK,WAAU,sCAAf;AAAuD,sBAAKtB,KAAL,CAAWsgB;AAAlE,cADJ;AAEI;AAAA;AAAA,mBAAK,OAAO,EAAChf,SAAS,YAAV,EAAZ;AACI,+CAAM,WAAU,mBAAhB,EAAoC,OAAOmf,SAA3C;AADJ,cAFJ;AAKI;AAAA;AAAA,mBAAK,WAAU,sCAAf;AAAuD,sBAAKzgB,KAAL,CAAWwgB;AAAlE;AALJ,UADF,GAQE,IATJ;AAWH;AAzB+B,EAAlB,CAAlB;;AA4BAnkB,QAAOC,OAAP,GAAiB4jB,SAAjB,C;;;;;;;;;;AChCA;;AAEA;AACA;AACA;AACA;AACA,0FAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,iCAAgC,UAAU,EAAE;AAC5C,E;;;;;;;;;;ACpBA;AACA;;;AAGA;AACA,+CAA8C,qBAAqB,6BAA6B,mBAAmB,mBAAmB,8BAA8B,4BAA4B,GAAG,uBAAuB,0BAA0B,sBAAsB,6BAA6B,0BAA0B,GAAG,0BAA0B,wBAAwB,GAAG,0BAA0B,uBAAuB,GAAG;;AAE7a;;;;;;;;;;;ACPA;;AAEA;;AAEA7jB,QAAOC,OAAP,GAAiB,mBAAAC,CAAQ,uCAAR,CAAjB,C;;;;;;;;;;ACJA;;AAEA;;;;AAEA,KAAIiM,IAAI,mBAAAjM,CAAQ,kBAAR,CAAR;AACA,oBAAAA,CAAQ,4BAAR;;AAEA;;AAEA,oBAAAA,CAAQ,gCAAR;;AAEA;;AAEA,UAASokB,eAAT,GAA2B;AACvB,YAAOnY,EAAE,MAAF,EAAU;AACboY,gBAAO,WADM;AAEbrD,eAAM,GAFO;AAGbJ,gBAAO,EAHM;AAIbsB,eAAM;AAJO,MAAV,CAAP;AAMH;;AAED,UAASoC,eAAT,CAAyBC,QAAzB,EAAkC;AAC9B,YAAO,mBAAmBA,QAAnB,GAA8B,YAArC;AACH;;AAED,UAASC,YAAT,CAAsBhW,YAAtB,EAAoC+V,QAApC,EAA8CE,eAA9C,EAA+D;;AAE3D,SAAIC,SAASN,iBAAb;;AAEA,SAAIO,eAAgB,QAAOF,eAAP,yCAAOA,eAAP,OAA2B,QAA5B,GAAwCA,eAAxC,GAA2DA,mBAAmB,EAApB,GAA0B,iBAA1B,GAA8C,MAAMA,eAAN,GAAwB,kBAAnJ;;AAEAxY,OAAE0Y,YAAF,EACKpb,MADL,CACYmb,MADZ,EAEKE,KAFL,CAEW,UAAUjkB,CAAV,EAAa;AAChBA,WAAEkkB,cAAF;AACH,MAJL,EAKKlO,OALL,CAMI;AACIwC,uBAAc,gBADlB;AAEIG,kBAAS,iBAAUwL,QAAV,EAAoB;AACzB,iBAAIC,oBAAoB9Y,EAAE,IAAF,EAAQ+Y,MAAR,GAAiBpa,IAAjB,CAAsB,eAAtB,CAAxB;;AAEAqB,eAAEgZ,GAAF,CAAMzW,eAAe,kBAAf,GAAoC8V,gBAAgBC,QAAhB,CAA1C,EACI,UAAUW,QAAV,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiC;AAC7B,qBAAIC,cAAJ;;AAEA,qBAAIF,WAAW,OAAf,EAAwB;AACpBE,sCAAiB,mCAAmCD,IAAID,MAAvC,GAAgD,GAAhD,GAAsDC,IAAIE,UAA3E;AACAR,8BAASO,cAAT;AACA;AACH;;AAEDA,kCAAiBpZ,EAAEiZ,QAAF,EAAYzkB,MAAZ,CAAmBskB,iBAAnB,EAAsC7C,IAAtC,EAAjB;AACA,qBAAI,CAACmD,cAAL,EAAqB;AACjBA,sCAAiB,mCAAmCN,iBAAnC,GAAuD,gBAAvD,GAA0ET,gBAAgBC,QAAhB,CAA3F;AACH;;AAEDO,0BAASO,cAAT;AACH,cAhBL;AAkBH;AAvBL,MANJ;AAiCH;;AAED;;AAEAvlB,QAAOC,OAAP,GAAiB,UAAUyO,YAAV,EAAwB+V,QAAxB,EAAkCE,eAAlC,EAAmD;AAChED,kBAAahW,YAAb,EAA2B+V,QAA3B,EAAqCE,eAArC;AACH,EAFD,C;;;;;;;;;;ACrEA;;AAEA;AACA;AACA;AACA;AACA,0FAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,iCAAgC,UAAU,EAAE;AAC5C,E;;;;;;;;;;ACpBA;AACA;;;AAGA;AACA,4CAA2C,wBAAwB,mCAAmC,mCAAmC,mBAAmB,4BAA4B,uDAAuD,GAAG,iBAAiB,wBAAwB,0BAA0B,uDAAuD,wBAAwB,GAAG;;AAEvY;;;;;;;;;;;ACPA;;AAEA;AACA;AACA;AACA;AACA,0FAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,iCAAgC,UAAU,EAAE;AAC5C,E;;;;;;;;;;ACpBA;AACA;;;AAGA;AACA,2CAA0C,4BAA4B,0BAA0B,wBAAwB,GAAG,gBAAgB,4BAA4B,yBAAyB,GAAG;;AAEnM;;;;;;;;;;;ACPA;;AAEA;;AAEA,KAAIxkB,QAAQ,mBAAAD,CAAQ,iBAAR,CAAZ;AACA,KAAIyF,WAAW,mBAAAzF,CAAQ,qBAAR,CAAf;;AAEA;;AAEA,KAAI2jB,YAAY,mBAAA3jB,CAAQ,2BAAR,CAAhB;AACA,KAAIwM,eAAe,mBAAAxM,CAAQ,0CAAR,EAA0CyM,OAA7D;AACA,KAAIC,eAAe,mBAAA1M,CAAQ,0CAAR,CAAnB;;AAEA;;AAEA,oBAAAA,CAAQ,2BAAR;;AAEA;;AAEA,KAAIoM,iBAAiBnM,MAAM0C,WAAN,CAAkB;AAAA;;;AAEnCE,gBAAW;AACP2L,uBAAcvO,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC,UAD9B;AAEPuQ,6BAAoBxT,MAAM8C,SAAN,CAAgB8B,MAAhB,CAAuB3B,UAFpC;AAGPkQ,6BAAoBnT,MAAM8C,SAAN,CAAgB8B,MAAhB,CAAuB3B,UAHpC;AAIPiK,4BAAmBlN,MAAM8C,SAAN,CAAgBkI,IAAhB,CAAqB/H;AAJjC,MAFwB;;AASnCQ,aAAQ,kBAAY;AAAA;;AAChB,aAAI6hB,cAAc,KAAK9hB,KAAL,CAAW0J,iBAAX,GAA+B,yBAA/B,GAA2D,gBAA7E;;AAEA;AACA,gBACI;AAAA;AAAA,eAAK,WAAU,0BAAf;AACI;AAAA;AAAA,mBAAK,OAAO,EAACpI,SAAS,cAAV,EAAZ;AACI,qCAAC,SAAD,IAAW,oBAAoByH,aAAamS,kBAAb,CAAgC,KAAKlb,KAAL,CAAWgQ,kBAA3C,CAA/B;AACW,0CAAqBjH,aAAamS,kBAAb,CAAgC,KAAKlb,KAAL,CAAW2P,kBAA3C,CADhC;AAEW,qCAAe,SAF1B;AAGW,sCAAgB,SAH3B;AADJ,cADJ;AAOI,0CAAK,KAAK,4BAAiB;AAAE,2BAAKoS,aAAL,GAAqBA,aAArB;AAAqC,kBAAlE,EAAoE,iBAAeD,WAAnF,EAAgG,WAAU,eAA1G;AAPJ,UADJ;AAWH,MAxBkC;;AA0BnC/d,wBAAmB,6BAAY;AAC3BkF,sBAAa,KAAKjJ,KAAL,CAAW+K,YAAxB,EAAsC,YAAtC,EAAoD/I,SAASmC,WAAT,CAAqB,KAAK4d,aAA1B,CAApD;AACH;AA5BkC,EAAlB,CAArB;;AA+BA;;AAEA1lB,QAAOC,OAAP,GAAiBqM,cAAjB,C;;;;;;;;;;;;;;;;;;;;;;;;ACpDAtM,QAAOC,OAAP,GAAiB,mBAAAC,CAAQ,sCAAR,CAAjB,C;;;;;;;;;;;;ACAA,KAAMC,QAAQ,mBAAAD,CAAQ,iBAAR,CAAd;AACA,KAAMyF,WAAW,mBAAAzF,CAAQ,qBAAR,CAAjB;AACA,KAAM4L,iBAAiB,mBAAA5L,CAAQ,4BAAR,CAAvB;AACA,KAAMiM,IAAI,mBAAAjM,CAAQ,kBAAR,CAAV;AACA,oBAAAA,CAAQ,4BAAR;;AAEA,KAAMwM,eAAe,mBAAAxM,CAAQ,0CAAR,EAA0CyM,OAA/D;;AAEA,oBAAAzM,CAAQ,iCAAR;AACA,oBAAAA,CAAQ,4CAAR;;AAEA,KAAMsM,mBAAmBrM,MAAM0C,WAAN,CAAkB;AAAA;;;AAEvCE,gBAAW;AACP4gB,mBAAUxjB,MAAM8C,SAAN,CAAgB8B,MADnB;AAEP2B,iBAAQvG,MAAM8C,SAAN,CAAgBE,MAFjB;AAGP6a,qBAAY7d,MAAM8C,SAAN,CAAgB8B,MAHrB;AAIPkZ,iBAAQ9d,MAAM8C,SAAN,CAAgB8B,MAJjB;AAKPmZ,gBAAO/d,MAAM8C,SAAN,CAAgB8B,MALhB;AAMPkK,wBAAe9O,MAAM8C,SAAN,CAAgBkI,IAAhB,CAAqB/H;AAN7B,MAF4B;;AAWvCuiB,cAXuC,uBAW3B;AACR,gBAAO,CAAC,CAAC,KAAKhiB,KAAL,CAAWqa,UAApB;AACH,MAbsC;AAevC4H,cAfuC,uBAe3B;AACR,gBAAO,KAAKjiB,KAAL,CAAWggB,QAAX,GAAsB,EAAEA,UAAa,KAAKhgB,KAAL,CAAWggB,QAAxB,OAAF,EAAtB,GAAiE,EAAxE;AACH,MAjBsC;AAmBvC/f,WAnBuC,oBAmB9B;AACL,aAAI,CAAC,KAAK+hB,SAAL,EAAL,EAAuB;AACnB,oBAAO,+BAAP;AACH;;AAED,gBACI;AAAA;AAAA,eAAI,OAAO,EAACE,iBAAiB,KAAKliB,KAAL,CAAW+C,MAA7B,EAAqCvB,uBAArC,EAAX;AACI;AAAA;AAAA,mBAAK,OAAO,KAAKygB,SAAL,EAAZ,EAA8B,WAAW,KAAKjiB,KAAL,CAAWsL,aAAX,gCAAzC;AACK,sBAAKtL,KAAL,CAAWqa;AADhB;AADJ,UADJ;AAOH,MA/BsC;AAiCvCtW,sBAjCuC,+BAiCnB;AAChB,aAAI,KAAKie,SAAL,EAAJ,EAAsB;AAClB,kBAAKG,YAAL,CAAkBngB,SAASmC,WAAT,CAAqB,IAArB,CAAlB;AACH;AACJ,MArCsC;AAuCvCge,iBAvCuC,wBAuC1B5B,OAvC0B,EAuCjB;AAAA;;AAElB,kBAAS6B,uBAAT,CAAkC9H,MAAlC,EAA0C+H,UAA1C,EAAsDhI,UAAtD,EAAkE;AAC9D,oBACQ;AAAA;AAAA;AACI;AAAA;AAAA;AACI;AAAA;AAAA;AACKC,kCAAS;AAAA;AAAA;AAAA;AAAa;AAAA;AAAA;AAAA;AAAA,8BAAb;AAAA;AAAA,0BAAT,GAA8C,IADnD;AAEK+H,sCAAa;AAAA;AAAA;AAAI;AAAA;AAAA;AAAA;AAAA,8BAAJ;AAAA;AAAA,0BAAb,GAA6C,IAFlD;AAGI;AAAA;AAAA;AAAA;AAAO;AAAA;AAAA;AAAA;AAAA,8BAAP;AAAA;AAAA;AAHJ;AADJ,kBADJ;AAQI;AAAA;AAAA;AACI;AAAA;AAAA;AACK/H,kCAAS;AAAA;AAAA;AAAKvR,0CAAauZ,kBAAb,CAAgChI,MAAhC;AAAL,0BAAT,GAA8D,IADnE;AAEK+H,sCAAa;AAAA;AAAA;AAAKE,kCAAKC,KAAL,CAAWH,aAAa,GAAxB,IAA+B;AAApC,0BAAb,GAA6D,IAFlE;AAGI;AAAA;AAAA;AAAKhI;AAAL;AAHJ;AADJ;AARJ,cADR;AAkBH;;AAED7R,WAAE+X,OAAF,EAAWpZ,IAAX,cAA6B+L,OAA7B,CAAqC;AACjCuP,mBAAM,cAAC3M,KAAD,EAAQ4M,EAAR,EAAe;AACjBA,oBAAGxP,OAAH,CAAWyP,GAAX,eAA6B,MAAK3iB,KAAL,CAAW+C,MAAxC;AACH,cAHgC;;AAKjC2S,uDALiC;;AAOjCG,sBAAS,mBAAM;AACX,wBAAO1N,eAAe6O,oBAAf,CACHoL,wBAAwB,MAAKpiB,KAAL,CAAWsa,MAAnC,EAA2C,MAAKta,KAAL,CAAWua,KAAtD,EAA6D,MAAKva,KAAL,CAAWqa,UAAxE,CADG,CAAP;AAEH;AAVgC,UAArC;AAYH;AA1EsC,EAAlB,CAAzB;;AA6EAhe,QAAOC,OAAP,GAAiBuM,gBAAjB,C;;;;;;;;;;;;;;;;;;;;;;ACxFA;;AAEA;AACA;AACA;AACA;AACA,0FAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,iCAAgC,UAAU,EAAE;AAC5C,E;;;;;;;;;;ACpBA;AACA;;;AAGA;AACA,yCAAwC,8BAA8B,0BAA0B,yBAAyB,kBAAkB,mBAAmB,GAAG,kBAAkB,oBAAoB,yBAAyB,GAAG;;AAEnO;;;;;;;;;;;ACPA;;AAEA;AACA;AACA;AACA;AACA,0FAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,iCAAgC,UAAU,EAAE;AAC5C,E;;;;;;;;;;ACpBA;AACA;;;AAGA;AACA,wDAAuD,iBAAiB,kBAAkB,gCAAgC,2BAA2B,mBAAmB,uDAAuD,GAAG,uCAAuC,gBAAgB,iEAAiE,kCAAkC,gCAAgC,GAAG,oCAAoC,yCAAyC,oCAAoC,GAAG,oEAAoE,yBAAyB,0BAA0B,6BAA6B,mBAAmB,kBAAkB,GAAG,qCAAqC,uBAAuB,GAAG,uCAAuC,yBAAyB,GAAG;;AAEj1B;;;;;;;;;;;;;ACPAxM,QAAOC,OAAP,GAAiB,mBAAAC,CAAQ,yCAAR,CAAjB,C;;;;;;;;;;;;ACAA,KAAIC,QAAQ,mBAAAD,CAAQ,iBAAR,CAAZ;AACA,KAAIyF,WAAW,mBAAAzF,CAAQ,qBAAR,CAAf;;AAEA,KAAIiM,IAAI,mBAAAjM,CAAQ,kBAAR,CAAR;AACA,oBAAAA,CAAQ,4BAAR;;AAEA,KAAIuM,sBAAsBtM,MAAM0C,WAAN,CAAkB;AAAA;;;AAExCE,gBAAW;AACPwjB,mBAAUpmB,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC,UAD1B;AAEPojB,mBAAUrmB,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC,UAF1B;AAGPqjB,0BAAiBtmB,MAAM8C,SAAN,CAAgBK,IAAhB,CAAqBF,UAH/B;AAIP6L,wBAAe9O,MAAM8C,SAAN,CAAgBkI,IAAhB,CAAqB/H,UAJ7B;AAKPsF,gBAAOvI,MAAM8C,SAAN,CAAgBE,MALhB;AAMPwgB,mBAAUxjB,MAAM8C,SAAN,CAAgBE;AANnB,MAF6B;;AAWxCujB,kBAAa,uBAAY;AACrB,gBAAO,KAAK/iB,KAAL,CAAWsL,aAAX,GAA2B,KAAKtL,KAAL,CAAW4iB,QAAtC,GAAiD,KAAK5iB,KAAL,CAAW6iB,QAAnE;AACH,MAbuC;;AAexCG,wBAAmB,6BAAY;AAC3Bxa,WAAExG,SAASmC,WAAT,CAAqB,IAArB,CAAF,EAA8BwR,MAA9B,CAAqC,EAAEtD,OAAO,KAAK0Q,WAAL,EAAT,EAArC;AACH,MAjBuC;;AAmBxC9iB,aAAQ,kBAAY;AAChB,aAAIkG,QAAQ,EAAZ;AAEA,aAAI,KAAKnG,KAAL,CAAW+E,KAAf,EAAsB;AAClBoB,mBAAMpB,KAAN,GAAc,KAAK/E,KAAL,CAAW+E,KAAzB;AACH;AACD,aAAI,KAAK/E,KAAL,CAAWggB,QAAf,EAAyB;AACrB7Z,mBAAM6Z,QAAN,GAAiB,KAAKhgB,KAAL,CAAWggB,QAA5B;AACH;;AAED,gBACI,gCAAQ,OAAO7Z,KAAf,EAAsB,SAAS,KAAKnG,KAAL,CAAW8iB,eAA1C,GADJ;AAGH,MAhCuC;;AAkCxC/e,wBAAmB,6BAAY;AAC3B,cAAKif,iBAAL;AACH,MApCuC;;AAsCxC/e,yBAAoB,8BAAY;AAC5B,cAAK+e,iBAAL;AACH;;AAxCuC,EAAlB,CAA1B;;AA4CA;;AAEA3mB,QAAOC,OAAP,GAAiBwM,mBAAjB,C;;;;;;;;;;ACpDA;;AAEA;;AAEAzM,QAAOC,OAAP,GAAiB,mBAAAC,CAAQ,0CAAR,CAAjB,C;;;;;;;;;;;;ACJA,KAAIC,QAAQ,mBAAAD,CAAQ,iBAAR,CAAZ;AACA,KAAI4L,iBAAiB,mBAAA5L,CAAQ,4BAAR,CAArB;;AAEA,KAAIiM,IAAI,mBAAAjM,CAAQ,kBAAR,CAAR;AACA,oBAAAA,CAAQ,4BAAR;;AAEA;;AAEA,KAAI0mB,kBAAkB,mBAAA1mB,CAAQ,iCAAR,CAAtB;;AAEA;;AAEA,oBAAAA,CAAQ,oCAAR;;AAEA;;AAEA,UAAS2mB,WAAT,CAAqBC,WAArB,EAAkC1P,SAAlC,EAA6C8M,OAA7C,EAAsDzO,mBAAtD,EAA2EoD,UAA3E,EAAuF;;AAEnF1M,OAAE+X,OAAF,EAAWpZ,IAAX,CAAgB,OAAhB,EAAyB,EAAzB,EAA6B+L,OAA7B,CAAqC;;AAEjCsC,eAAM,KAF2B;;AAIjCC,eAAM,KAJ2B;;AAMjCC,uBAAc,oBANmB;;AAQjC9B,mBAAU,EAAEwP,WAAW,MAAb,EARuB;;AAUjCC,gBAAO,iBAAW;AACd7a,eAAE,qBAAF,EAAyBlD,MAAzB;AACH,UAZgC;;AAcjCuQ,kBAAS,iBAAUwL,QAAV,EAAoB;AACzB7Y,eAAE8a,IAAF,CAAO;AACHC,sBAAIJ,cAAc,wBADf;AAEHrD,uBAAK;AACDhO,0CAAqBA,mBADpB;AAEDoD,iCAAYA,UAFX;AAGDzB,gCAAWA;AAHV,kBAFF;AAOHxS,uBAAK,KAPF;AAQHuiB,0BAAQ,iBAAU1D,IAAV,EAAgB;AACpB,yBAAI/I,OACA5O,eAAesb,cAAf,CACIjnB,MAAMknB,aAAN,CACIT,eADJ,EAEI;AACIU,gDAAuB7D,KAAK6D,qBADhC;AAEIC,8CAAqB9D,KAAK8D,mBAF9B;AAGIC,yCAAgB/D,KAAK+D,cAHzB;AAIIC,8CAAqBhE,KAAKgE,mBAJ9B;AAKItgB,qCAAYsc,KAAKtc;AALrB,sBAFJ,CADJ,CADJ;AAaA6d,8BAAStK,IAAT;AACH;AAvBE,cAAP,EAwBGgN,IAxBH,CAwBQ,UAAUjE,IAAV,EAAgB;AACpBkE,yBAAQC,GAAR,CAAY,aAAanE,IAAzB;AACAuB,0BAAS,YAAYvB,IAArB;AACH,cA3BD;AA4BH;;AA3CgC,MAArC;AA+CH;;AAED;;AAEAzjB,QAAOC,OAAP,GAAiB,UAAU6mB,WAAV,EAAuB1P,SAAvB,EAAkC8M,OAAlC,EAA2CzO,mBAA3C,EAAgEoD,UAAhE,EAA4E;AACzFgO,iBAAYC,WAAZ,EAAyB1P,SAAzB,EAAoC8M,OAApC,EAA6CzO,mBAA7C,EAAkEoD,UAAlE;AACH,EAFD,C;;;;;;;;;;;;ACrEA,KAAI1Y,QAAQ,mBAAAD,CAAQ,iBAAR,CAAZ;;AAEA,KAAI0mB,kBAAkBzmB,MAAM0C,WAAN,CAAkB;AAAA;;AACpCE,gBAAW;AACPukB,gCAAuBnnB,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC,UADvC;AAEPmkB,8BAAqBpnB,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC,UAFrC;AAGPokB,yBAAgBrnB,MAAM8C,SAAN,CAAgB8B,MAAhB,CAAuB3B,UAHhC;AAIPqkB,8BAAqBtnB,MAAM8C,SAAN,CAAgB8B,MAAhB,CAAuB3B,UAJrC;AAKP+D,qBAAYhH,MAAM8C,SAAN,CAAgBC,OAAhB,CACR/C,MAAM8C,SAAN,CAAgB0B,KAAhB,CAAsB;AAClBkjB,mCAAsB1nB,MAAM8C,SAAN,CAAgBE,MADpB;AAElB2kB,2BAAc3nB,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC,UAFnB;AAGlB2kB,6BAAgB5nB,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC,UAHrB;AAIlB4kB,wBAAW7nB,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC;AAJhB,UAAtB,CADQ;AALL,MADyB;;AAiBpC6kB,kBAAa,qBAAUC,QAAV,EAAoB;AAC7B,aAAI,CAACA,SAASF,SAAV,IAAuB,CAACE,SAASH,cAArC,EAAqD;AACjD,oBAAO,IAAP;AACH;;AAED,kBAASI,QAAT,CAAkBD,QAAlB,EAA4B;AACxB,oBAAOA,SAASL,oBAAT,KAAkC,QAAzC;AACH;;AAED,aAAI/d,QAAQ,EAACse,YAAY,QAAb,EAAZ;;AAEA,aAAID,SAASD,QAAT,CAAJ,EAAwB;AACpBpe,mBAAMue,UAAN,GAAmB,MAAnB;AACH,UAFD,MAEO;AACHve,mBAAM6N,KAAN,GAAc,MAAd;AACH;;AAED,gBACI;AAAA;AAAA,eAAI,KAAKuQ,SAASL,oBAAT,GAAgC,GAAhC,GAAsCK,SAASJ,YAAxD;AACI;AAAA;AAAA,mBAAI,OAAOhe,KAAX;AAAmBoe,0BAASJ;AAA5B,cADJ;AAEI;AAAA;AAAA,mBAAI,OAAOhe,KAAX;AAAmBoe,0BAASF;AAA5B,cAFJ;AAGI;AAAA;AAAA,mBAAI,OAAOle,KAAX;AAAmBoe,0BAASH;AAA5B;AAHJ,UADJ;AAOH,MAzCmC;;AA2CpCnkB,aAAQ,kBAAY;AAChB,gBACI;AAAA;AAAA;AACI;AAAA;AAAA,mBAAK,IAAG,+BAAR,EAAwC,OAAO,EAACykB,YAAY,MAAb,EAAqB1Q,OAAO,MAA5B,EAAoC8D,WAAW,QAA/C,EAA/C;AAA0G,sBAAK9X,KAAL,CAAW2jB;AAArH,cADJ;AAEI;AAAA;AAAA,mBAAK,IAAG,qBAAR,EAA8B,OAAO,EAAC7L,WAAW,QAAZ,EAArC;AAA6D,sBAAK9X,KAAL,CAAW4jB;AAAxE,cAFJ;AAGI;AAAA;AAAA,mBAAO,OAAO,EAACvM,SAAS,KAAV,EAAiBmH,QAAQ,KAAzB,EAAgCzZ,OAAO,MAAvC,EAAd;AACI;AAAA;AAAA;AACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,0BADJ;AAEI;AAAA;AAAA;AAAA;AAAmB,kCAAK/E,KAAL,CAAW6jB,cAA9B;AAAA;AAAA,0BAFJ;AAGI;AAAA;AAAA;AAAA;AAAwB,kCAAK7jB,KAAL,CAAW8jB,mBAAnC;AAAA;AAAA;AAHJ;AADJ,kBADJ;AAQI;AAAA;AAAA;AACK,0BAAK9jB,KAAL,CAAWwD,UAAX,CAAsB7B,GAAtB,CAA0B,KAAK2iB,WAA/B;AADL;AARJ;AAHJ,UADJ;AAkBH;;AA9DmC,EAAlB,CAAtB;;AAkEA;;AAEAjoB,QAAOC,OAAP,GAAiB2mB,eAAjB,C;;;;;;;;;;ACtEA;;AAEA;AACA;AACA;AACA;AACA,0FAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,iCAAgC,UAAU,EAAE;AAC5C,E;;;;;;;;;;ACpBA;AACA;;;AAGA;AACA,gDAA+C,yBAAyB,gCAAgC,2BAA2B,mBAAmB,uDAAuD,uBAAuB,GAAG,+BAA+B,gBAAgB,iEAAiE,kCAAkC,gCAAgC,uBAAuB,GAAG,4BAA4B,yCAAyC,oCAAoC,GAAG,4BAA4B,kCAAkC,GAAG,oDAAoD,6BAA6B,mBAAmB,GAAG,oCAAoC,uBAAuB,GAAG;;AAErwB;;;;;;;;;;;ACPA;;AAEA;;AAEA,KAAIza,IAAI,mBAAAjM,CAAQ,kBAAR,CAAR;AACA,oBAAAA,CAAQ,4BAAR;;AAEA;;AAEA,oBAAAA,CAAQ,6CAAR;;AAEA;;AAEA;;;;;;;AAOA,UAAS2mB,WAAT,CAAqBlH,OAArB,EAA6B;;AAEzBxT,OAAEwT,QAAQuE,OAAV,EAAmBpZ,IAAnB,CAAwB,OAAxB,EAAiC,EAAjC,EAAqC+L,OAArC,CAA6C;;AAEzCsC,eAAM,KAFmC;;AAIzCC,eAAM,KAJmC;;AAMzCC,uBAAc,oBAN2B;;AAQzC2N,gBAAO,iBAAW;AACd7a,eAAE,qBAAF,EAAyBlD,MAAzB;AACH,UAVwC;;AAYzCsO,mBAAU,EAAE+Q,IAAI,aAAN,EAAqBC,IAAI,OAAzB,EAZ+B;;AAczC/O,kBAAS,iBAAUwL,QAAV,EAAoB;AACzB,iBAAIrF,QAAQ6I,UAAZ,EAAyB;AACrBrc,mBAAE8a,IAAF,CAAO;AACHC,0BAAKvH,QAAQmH,WAAR,GAAsB,wBADxB;AAEHrD,2BAAM;AACFrV,mCAAUuR,QAAQvR,QADhB;AAEFoa,qCAAY7I,QAAQ6I;AAFlB,sBAFH;AAMH5jB,2BAAK,KANF;AAOHuiB,8BAAS,iBAAU/B,QAAV,EAAoB;AACzB,6BAAI,CAACA,QAAL,EAAe;AACXJ,sCAAS,iCAAiCrF,QAAQ6I,UAAzC,GAAsD,WAA/D;AACH;;AAEDxD,kCAASI,QAAT;AACH;AAbE,kBAAP,EAcGsC,IAdH,CAcQ,UAAUjE,IAAV,EAAgB;AACpBkE,6BAAQC,GAAR,CAAY,aAAanE,IAAzB;AACAuB,8BAAS,YAAYvB,IAArB;AACH,kBAjBD;AAkBH;AACJ;;AAnCwC,MAA7C;AAuCH;;AAED;;AAEAxjB,SAAQkX,IAAR,GAAe,UAAS2P,WAAT,EAAsB5C,OAAtB,EAA+BsE,UAA/B,EAA2Cpa,QAA3C,EAAqD;AAChEyY,iBAAY,EAACC,aAAaA,WAAd,EAA2B5C,SAASA,OAApC,EAA6CsE,YAAYA,UAAzD,EAAqEpa,UAAUA,QAA/E,EAAZ;AACH,EAFD,C;;;;;;;;;;ACjEA;;AAEA;AACA;AACA;AACA;AACA,yFAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,iCAAgC,UAAU,EAAE;AAC5C,E;;;;;;;;;;ACpBA;AACA;;;AAGA;AACA,gDAA+C,gCAAgC,2BAA2B,mBAAmB,uDAAuD,8BAA8B,GAAG,+BAA+B,mBAAmB,wBAAwB,4BAA4B,uBAAuB,GAAG,6BAA6B,yBAAyB,2CAA2C,KAAK,yBAAyB,0BAA0B,GAAG;;AAEjf;;;;;;;;;;;ACPA;;AAEA;;AAEA,KAAIjO,QAAQ,mBAAAD,CAAQ,iBAAR,CAAZ;AACA,KAAI4L,iBAAiB,mBAAA5L,CAAQ,4BAAR,CAArB;;AAEA,KAAIiM,IAAI,mBAAAjM,CAAQ,kBAAR,CAAR;AACA,oBAAAA,CAAQ,4BAAR;;AAEA;;AAEA,KAAIuoB,gBAAgB,mBAAAvoB,CAAQ,+BAAR,CAApB;;AAEA;;AAEA,oBAAAA,CAAQ,qCAAR;;AAEA;;AAEA;;;;;;;;AAQA,UAAS2mB,WAAT,CAAqBlH,OAArB,EAA8B;;AAE1BxT,OAAEwT,QAAQuE,OAAV,EAAmBpZ,IAAnB,CAAwB,OAAxB,EAAiC,EAAjC,EAAqC+L,OAArC,CAA6C;;AAEzCsC,eAAK,KAFoC;;AAIzCC,eAAK,KAJoC;;AAMzCC,uBAAc,kBAN2B;;AAQzC2N,gBAAO,iBAAW;AACd7a,eAAE,mBAAF,EAAuBlD,MAAvB;AACH,UAVwC;;AAYzCuQ,kBAAS,iBAAUwL,QAAV,EAAoB;AACzB7Y,eAAE8a,IAAF,CAAO;AACHC,sBAAKvH,QAAQmH,WAAR,GAAsB,0BADxB;AAEHrD,uBAAK;AACDhO,0CAAqBkK,QAAQlK,mBAD5B;AAED/H,mCAAciS,QAAQjS,YAFrB;AAGD0J,gCAAWuI,QAAQvI;AAHlB,kBAFF;AAOHxS,uBAAK,KAPF;AAQHuiB,0BAAQ,iBAAU1D,IAAV,EAAgB;AACpB,yBAAI/I,OACA5O,eAAesb,cAAf,CACIjnB,MAAMknB,aAAN,CACIoB,aADJ,EAEI;AACIthB,qCAAYsc,KAAKtc,UADrB;AAEI4G,qCAAY0V,KAAK1V;AAFrB,sBAFJ,CADJ,CADJ;AAUAiX,8BAAStK,IAAT;AACH;AApBE,cAAP,EAqBGgN,IArBH,CAqBQ,UAAUjE,IAAV,EAAgB;AAChBkE,yBAAQC,GAAR,CAAY,aAAanE,IAAzB;AACAuB,0BAAS,YAAYvB,IAArB;AACP,cAxBD;AAyBH;AAtCwC,MAA7C;AAwCH;;AAED;;AAEAxjB,SAAQkX,IAAR,GAAe,UAAU2P,WAAV,EAAuB1P,SAAvB,EAAkC8M,OAAlC,EAA2CzO,mBAA3C,EAAgE/H,YAAhE,EAA8E;AACzFmZ,iBAAY,EAACC,aAAaA,WAAd,EAA2B1P,WAAWA,SAAtC,EAAiD8M,SAASA,OAA1D,EAAmEzO,qBAAqBA,mBAAxF,EAA6G/H,cAAcA,YAA3H,EAAZ;AACH,EAFD,C;;;;;;;;;;AC1EA;;AAEA;;AAEA,KAAIvN,QAAQ,mBAAAD,CAAQ,iBAAR,CAAZ;;AAEA;;AAEA,KAAIuoB,gBAAgBtoB,MAAM0C,WAAN,CAAkB;AAAA;;;AAElColB,kBAAa,qBAAUC,QAAV,EAAoB;AAC7B,aAAI,CAACA,SAASF,SAAd,EAAyB;AACrB,oBAAO,IAAP;AACH;;AAED,kBAASG,QAAT,CAAkBD,QAAlB,EAA4B;AACxB,oBAAOA,SAASL,oBAAT,KAAkC,QAAzC;AACH;;AAED,aAAI/d,QAAQ,EAAC,cAAc,QAAf,EAAZ;;AAEA,aAAIqe,SAASD,QAAT,CAAJ,EAAwB;AACpBpe,mBAAM,YAAN,IAAsB,MAAtB;AACH,UAFD,MAEO;AACHA,mBAAM,OAAN,IAAiB,MAAjB;AACH;;AAED,gBACI;AAAA;AAAA,eAAI,KAAKoe,SAASJ,YAAlB;AACI;AAAA;AAAA,mBAAI,OAAOhe,KAAX;AAAmBoe,0BAASJ;AAA5B,cADJ;AAEI;AAAA;AAAA,mBAAI,OAAOhe,KAAX;AAAmBoe,0BAASF;AAA5B;AAFJ,UADJ;AAMH,MAzBiC;;AA2BlCpkB,aAAQ,kBAAY;AAChB,gBACI;AAAA;AAAA;AACI;AAAA;AAAA;AACI;AAAA;AAAA;AACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,0BADJ;AAEI;AAAA;AAAA;AAAA;AAAc,kCAAKD,KAAL,CAAWoK,UAAzB;AAAA;AAAA;AAFJ;AADJ,kBADJ;AAOI;AAAA;AAAA;AACK,0BAAKpK,KAAL,CAAWwD,UAAX,CAAsB7B,GAAtB,CAA0B,KAAK2iB,WAA/B;AADL;AAPJ;AADJ,UADJ;AAeH;AA3CiC,EAAlB,CAApB;;AA8CA;;AAEAjoB,QAAOC,OAAP,GAAiBwoB,aAAjB,C;;;;;;;;;;ACxDA;;AAEA;AACA;AACA;AACA;AACA,yFAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,iCAAgC,UAAU,EAAE;AAC5C,E;;;;;;;;;;ACpBA;AACA;;;AAGA;AACA,8CAA6C,gCAAgC,2BAA2B,mBAAmB,uDAAuD,uBAAuB,GAAG,6BAA6B,gBAAgB,iEAAiE,kCAAkC,gCAAgC,GAAG,0BAA0B,yCAAyC,oCAAoC,GAAG,0BAA0B,kCAAkC,0BAA0B,GAAG,gDAAgD,6BAA6B,mBAAmB,GAAG;;AAErqB;;;;;;;;;;;ACPA;;AAEA;;AAEA,KAAItc,IAAI,mBAAAjM,CAAQ,kBAAR,CAAR;;AAEA;;AAEA,UAAS8M,kBAAT,CAA4BoF,KAA5B,EAAmCG,eAAnC,EAAoDC,YAApD,EAAkEC,aAAlE,EAAiFE,UAAjF,EAA6F+V,WAA7F,EAA0G;AACtG,SAAIC,KAAkBxc,EAAEiG,KAAF,CAAtB;AAAA,SACIwW,mBAAmBzc,EAAEoG,eAAF,CADvB;AAAA,SAEIsW,gBAAmB1c,EAAEqG,YAAF,CAFvB;AAAA,SAGIsW,iBAAmB3c,EAAEsG,aAAF,CAHvB;AAAA,SAIIsW,cAAmB5c,EAAEwG,UAAF,CAJvB;AAAA,SAKIqW,eAAmB7c,EAAEuc,WAAF,CALvB;;AAOA,SAAI1V,qBAAqBiW,8BAA8BN,EAA9B,EAAkCG,cAAlC,CAAzB;AACA,SAAI5V,mBAAmBgW,+BAA+BP,EAA/B,EAAmCC,gBAAnC,EAAqDC,aAArD,EAAoEC,cAApE,EAAoFC,WAApF,EAAiGC,YAAjG,EAA+GhW,kBAA/G,CAAvB;AACA,SAAII,oBAAoB+V,2BAA2BR,EAA3B,EAA+BC,gBAA/B,EAAiDC,aAAjD,EAAgEC,cAAhE,EAAgFC,WAAhF,CAAxB;AACA,SAAIlW,yBAAyBuW,gDAAgDhW,iBAAhD,EAAmEF,gBAAnE,CAA7B;;AAEA,YAAO;AACHF,6BAAoBA,kBADjB;AAEHE,2BAAkBA,gBAFf;AAGHE,4BAAmBA,iBAHhB;AAIHP,iCAAwBA;AAJrB,MAAP;;AAOA,cAASsW,0BAAT,CAAoCR,EAApC,EAAwCC,gBAAxC,EAA0DC,aAA1D,EAAyEC,cAAzE,EAAyFC,WAAzF,EAAsG;AAClG,gBAAO,YAAY;AACfJ,gBAAG/N,IAAH,CAAQ,UAAR,EAAoBC,IAApB,CACI,UAAUnY,CAAV,EAAa;AACTomB,gCAAelO,IAAf,CAAoB,IAApB,EAA0ByO,EAA1B,CAA6B3mB,CAA7B,EAAgCgG,KAAhC,CAAsCyD,EAAE,IAAF,EAAQzD,KAAR,EAAtC;AACH,cAHL,EAIE4gB,GAJF,GAIQ1O,IAJR,CAIa,IAJb,EAImBC,IAJnB,CAKI,UAAUnY,CAAV,EAAa;AACTmmB,+BAAcjO,IAAd,CAAmB,IAAnB,EAAyByO,EAAzB,CAA4B3mB,CAA5B,EAA+BoC,MAA/B,CAAsCqH,EAAE,IAAF,EAAQrH,MAAR,EAAtC;AACA8jB,kCAAiBhO,IAAjB,CAAsB,IAAtB,EAA4ByO,EAA5B,CAA+B3mB,CAA/B,EAAkCoC,MAAlC,CAAyCqH,EAAE,IAAF,EAAQrH,MAAR,EAAzC;AACH,cARL;;AAWAgkB,4BAAepgB,KAAf,CAAqBqgB,YAAYrgB,KAAZ,EAArB,EAA0CkS,IAA1C,CAA+C,OAA/C,EAAwDlS,KAAxD,CAA8DigB,GAAGjgB,KAAH,EAA9D;AACAkgB,8BAAiBhO,IAAjB,CAAsB,OAAtB,EAA+B2O,UAA/B,CAA0CZ,GAAG/N,IAAH,CAAQ,UAAR,EAAoByO,EAApB,CAAuB,CAAvB,EAA0BE,UAA1B,EAA1C;AACAV,2BAAcjO,IAAd,CAAmB,OAAnB,EAA4B2O,UAA5B,CAAuCZ,GAAG/N,IAAH,CAAQ,UAAR,EAAoByO,EAApB,CAAuB,CAAvB,EAA0BE,UAA1B,EAAvC;;AAEA;AACAX,8BAAiBhO,IAAjB,CAAsB,oBAAtB,EAA4CC,IAA5C,CAAiD,UAAUnY,CAAV,EAAa;AAC1DyJ,mBAAE,IAAF,EAAQzD,KAAR,CAAcigB,GAAG/N,IAAH,CAAQ,oBAAR,EAA8ByO,EAA9B,CAAiC3mB,CAAjC,EAAoCgG,KAApC,EAAd;AACH,cAFD;AAGH,UApBD;AAqBH;;AAED,cAASwgB,8BAAT,CAAwCP,EAAxC,EAA4CC,gBAA5C,EAA8DC,aAA9D,EAA6EC,cAA7E,EAA6FC,WAA7F,EAA0GC,YAA1G,EAAwHQ,uBAAxH,EAAiJ;AAC7I,gBAAO,YAAW;AACd,iBAAIC,KAAKtd,EAAE8E,MAAF,CAAT;;AAEA;AACA6X,4BAAeY,GAAf,CAAmBd,gBAAnB,EAAqCc,GAArC,CAAyCb,aAAzC,EAAwDvC,GAAxD,CAA4D;AACxD7O,uBAAMsR,YAAYY,MAAZ,GAAqBlS,IAD6B;AAExD8D,sBAAKwN,YAAYY,MAAZ,GAAqBpO;AAF8B,cAA5D;;AAKA,iBAAIqO,YAAYJ,yBAAhB;;AAEAV,4BAAelO,IAAf,CAAoB,OAApB,EAA6B0L,GAA7B,CAAiC;AAC7B7O,uBAAM,CAACsR,YAAYc,UAAZ;AADsB,cAAjC;AAGAhB,2BAAcvC,GAAd,CAAkB;AACd/K,sBAAKwN,YAAYY,MAAZ,GAAqBpO,GAArB,GAA2BkO,GAAGK,SAAH,EADlB;AAEdrS,uBAAMsR,YAAYY,MAAZ,GAAqBlS;AAFb,cAAlB;;AAKA;AACA,iBAAIgS,GAAGK,SAAH,KAAiBd,aAAae,WAAb,EAAjB,GAA8CpB,GAAGgB,MAAH,GAAYpO,GAA1D,IACAkO,GAAGK,SAAH,KAAiBd,aAAae,WAAb,EAAjB,GAA8CpB,GAAGgB,MAAH,GAAYpO,GAAZ,GAAkBoN,GAAGoB,WAAH,EAAlB,GAAqCH,SADvF,EACkG;AAC9F;AACAd,gCAAeY,GAAf,CAAmBd,gBAAnB,EAAqCtC,GAArC,CAAyC;AACrC3H,iCAAY,SADyB;AAErCpD,0BAAKyN,aAAae,WAAb;AAFgC,kBAAzC;AAIH,cAPD,MAOO,IAAIN,GAAGK,SAAH,KAAiBd,aAAae,WAAb,EAAjB,GAA8CpB,GAAGgB,MAAH,GAAYpO,GAAZ,GAAkBoN,GAAGoB,WAAH,EAAlB,GAAqCH,SAAvF,EAAkG;AACrGd,gCAAeY,GAAf,CAAmBd,gBAAnB,EAAqCtC,GAArC,CAAyC;AACrC3H,iCAAY,SADyB;AAErCpD,0BAAKoN,GAAGgB,MAAH,GAAYpO,GAAZ,GAAkBoN,GAAGoB,WAAH,EAAlB,GAAqCH,SAArC,GAAiDH,GAAGK,SAAH;AAFjB,kBAAzC;AAIH,cALM,MAKA;AACH;AACAhB,gCAAeY,GAAf,CAAmBd,gBAAnB,EAAqCtC,GAArC,CAAyC;AACrC3H,iCAAY,QADyB;AAErCpD,0BAAKwN,YAAYY,MAAZ,GAAqBpO,GAArB,GAA2BkO,GAAGK,SAAH;AAFK,kBAAzC;AAIH;;AAED;AACA,iBAAGf,YAAYc,UAAZ,KAA2B,CAA9B,EAAiC;AAC7B;AACAhB,+BAAcvC,GAAd,CAAkB;AACd3H,iCAAY,SADE;AAEd,gCAAW;AAFG,kBAAlB;AAIH,cAND,MAMO;AACHkK,+BAAcvC,GAAd,CAAkB;AACd3H,iCAAY,QADE;AAEd,gCAAW,CAAC;AAFE,kBAAlB;AAIH;AACJ,UArDD;AAsDH;;AAED,cAASyK,+CAAT,CAAyDY,yBAAzD,EAAoFC,wBAApF,EAA8G;AAC1G,gBAAO,YAAY;AACfD;AACAC;AACH,UAHD;AAIH;;AAED,cAAShB,6BAAT,CAAuCN,EAAvC,EAA2CG,cAA3C,EAA2D;AACvD,gBAAO,YAAW;AACd,iBAAIoB,YAAY,CAAhB;AACA;AACAvB,gBAAG/N,IAAH,CAAQ,gBAAR,EAA0BC,IAA1B,CAA+B,YAAY;AACvCqP,8BAAa/d,EAAE,IAAF,EAAQrH,MAAR,EAAb;AACH,cAFD;AAGA,oBAAOolB,YAAYpB,eAAehkB,MAAf,EAAnB;AACH,UAPD;AAQH;AACJ;;AAED;;AAEA9E,QAAOC,OAAP,GAAiB+M,kBAAjB,C;;;;;;;;;;AClIA;;AAEA;AACA;AACA;AACA;AACA,yFAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,iCAAgC,UAAU,EAAE;AAC5C,E;;;;;;;;;;ACpBA;AACA;;;AAGA;AACA,gDAA+C,uBAAuB,yBAAyB,yBAAyB,kBAAkB,GAAG,iDAAiD,uBAAuB,GAAG,6BAA6B,oBAAoB,GAAG,iCAAiC,gBAAgB,yBAAyB,kBAAkB,iFAAiF,GAAG,wIAAwI,yBAAyB,sBAAsB,kBAAkB,GAAG,6CAA6C,kBAAkB,kBAAkB,uBAAuB,gDAAgD,kBAAkB,GAAG,mDAAmD,6BAA6B,GAAG,gCAAgC,gCAAgC,6BAA6B,4BAA4B,GAAG,qBAAqB,gBAAgB,kBAAkB,GAAG,qBAAqB,kBAAkB,GAAG,sHAAsH,uDAAuD,wBAAwB,OAAO,GAAG;;AAEvzC;;;;;;;;;;;ACPA;;AAEA;AACA;AACA;AACA;AACA,yFAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,iCAAgC,UAAU,EAAE;AAC5C,E;;;;;;;;;;ACpBA;AACA;;;AAGA;AACA,2DAA0D,yBAAyB,qBAAqB,oBAAoB,kBAAkB,uBAAuB,GAAG,mBAAmB,qBAAqB,8BAA8B,2CAA2C,wBAAwB,wBAAwB,mBAAmB,uBAAuB,kBAAkB,gCAAgC,GAAG,0DAA0D,qBAAqB,6BAA6B,2CAA2C,mBAAmB,kBAAkB,0BAA0B,GAAG,wDAAwD,0BAA0B,sDAAsD,GAAG,oDAAoD,2CAA2C,GAAG,kCAAkC,sBAAsB,GAAG,gKAAgK,sDAAsD,gCAAgC,kBAAkB,GAAG,gCAAgC,gCAAgC,0BAA0B,kBAAkB,kCAAkC,GAAG,2DAA2D,sDAAsD,GAAG,iIAAiI,sDAAsD,GAAG,qBAAqB,qBAAqB,8BAA8B,kBAAkB,mBAAmB,0BAA0B,yBAAyB,GAAG,qCAAqC,0BAA0B,uBAAuB,gCAAgC,GAAG,+BAA+B,wBAAwB,GAAG,kCAAkC,oBAAoB,gCAAgC,6BAA6B,6BAA6B,iCAAiC,yBAAyB,gBAAgB,kBAAkB,uBAAuB,0BAA0B,qCAAqC,sCAAsC,oCAAoC,qCAAqC,wCAAwC,yCAAyC,mCAAmC,oCAAoC,GAAG,iCAAiC,sCAAsC,yCAAyC,qCAAqC,oCAAoC,GAAG,sBAAsB,wCAAwC,kCAAkC,sCAAsC,mBAAmB,GAAG,4BAA4B,qBAAqB,GAAG,kCAAkC,qBAAqB,GAAG,6CAA6C,iBAAiB,iBAAiB,yBAAyB,GAAG,oCAAoC,mBAAmB,GAAG;;AAEhoG;;;;;;;;;;;ACPA;;AAEA;;AAEAhN,QAAOC,OAAP,GAAiB;AACbkqB,eAAU,EAAEjd,YAAY,IAAd,EAAoBI,gBAAgB,gCAApC,EADG;AAEb8c,0BAAqB,EAAEld,YAAY,IAAd,EAAoBC,cAAc,IAAlC,EAAwCG,gBAAgB,kCAAxD,EAFR;AAGb+c,mBAAc,EAAEjd,gBAAgB,IAAlB,EAAwBE,gBAAgB,oCAAxC,EAHD;AAIbgd,sBAAiB,EAAEjd,mBAAmB,IAArB,EAA2BC,gBAAgB,uCAA3C;AAJJ,EAAjB,C;;;;;;;;;;;;ACJAtN,QAAOC,OAAP,GAAiB,mBAAAC,CAAQ,+CAAR,CAAjB,C;;;;;;;;;;ACAA;;AAEA,KAAIC,QAAQ,mBAAAD,CAAQ,iBAAR,CAAZ;AACA,KAAIyF,WAAW,mBAAAzF,CAAQ,qBAAR,CAAf;;AAEA;;AAEA,KAAIqqB,eAAe,mBAAArqB,CAAQ,kBAAR,CAAnB;;AAEA,KAAIsqB,8BAA8B,mBAAAtqB,CAAQ,6CAAR,CAAlC;;AAEA,KAAIuqB,kBAAkB,mBAAAvqB,CAAQ,gCAAR,CAAtB;;AAEA;;AAEA;;;;;;;;;;;;;AAaAD,SAAQ2D,MAAR,GAAiB,UAAS+b,OAAT,EAAkB;;AAEjC,SAAI+K,YAAY/K,QAAQ+K,SAAR,KAAsB/Y,SAAtB,GAAkC,uBAAlC,GAA4DgO,QAAQ+K,SAApF;AAAA,SACIC,YAAY,MADhB;;AAGA,SAAIjc,eACA,CAACgc,UAAU3pB,OAAV,CAAkB,SAAlB,MAAiC,CAAjC,IAAsC2pB,UAAU3pB,OAAV,CAAkB,UAAlB,MAAkC,CAAxE,GACG,EADH,GAEG4e,QAAQiL,WAAR,IAAuB,UAF3B,IAGEF,SAHF,GAIEC,SALN;;AAOA,SAAIhc,oBAAoBgR,QAAQkL,UAAR,GAAoB,CAAClL,QAAQiL,WAAR,IAAuB,UAAxB,IAAqC,mBAAzD,GAA8Elc,YAAtG;;AAEE,SAAIoc,eAAenL,QAAQtS,iBAAR,GAA4B,oCAA5B,GAAmE,sCAAtF;;AAEA,SAAI0d,YAAYrc,eAAeoc,YAAf,GAA8B,GAA9B,GAAoCnL,QAAQqL,MAA5D;;AAEA,SAAIxc,0BAA0B,IAAI+b,YAAJ,EAA9B;AACA/b,6BAAwByc,eAAxB,CAAwC,CAAxC;;AAEAtlB,cAAS/B,MAAT,CACIzD,MAAMknB,aAAN,CACImD,2BADJ,EAEI,EAAIU,KAAK3W,KAAKE,SAAL,CAAekL,QAAQqL,MAAvB,CAAT;AACID,oBAAWA,SADf;AAEIrc,uBAAcA,YAFlB;AAGIjO,2CAAiCkO,oBAAkB,wBAHvD;AAIIA,4BAAmBA,iBAJvB;AAKI/J,eAAM+a,QAAQtS,iBAAR,GAA4Bod,gBAAgBH,eAA5C,GAA8DG,gBAAgBN,QALxF;AAMIgB,0BAAiBxL,QAAQwL,eAAR,KAA4BxZ,SAA5B,GAAwC,IAAxC,GAA+CgO,QAAQwL,eAN5E;AAOIC,mBAAUzL,QAAQyL,QAAR,KAAqBzZ,SAArB,GAAiC,IAAjC,GAAwCgO,QAAQyL,QAP9D;AAQIC,iCAAwB1L,QAAQ0L,sBAAR,KAAmC1Z,SAAnC,GAA+C,KAA/C,GAAuDgO,QAAQ0L,sBAR3F;AASI3D,eAAM/H,QAAQ+H,IATlB;AAUIlZ,kCAAyBA;AAV7B,MAFJ,CADJ,EAgBK,OAAOmR,QAAQ2L,MAAf,KAA0B,QAA3B,GAAuCC,SAASC,cAAT,CAAwB7L,QAAQ2L,MAAhC,CAAvC,GAAiF3L,QAAQ2L,MAhB7F;AAkBH,EAvCD,C;;;;;;;;;;AC5BA;;AAEA;;;;AAEA,KAAInrB,QAAQ,mBAAAD,CAAQ,iBAAR,CAAZ;AACA,KAAIyF,WAAW,mBAAAzF,CAAQ,qBAAR,CAAf;;AAEA,KAAIiM,IAAI,mBAAAjM,CAAQ,kBAAR,CAAR;AACA,oBAAAA,CAAQ,4BAAR;;AAEA,KAAIurB,MAAM,mBAAAvrB,CAAQ,iBAAR,CAAV;;AAEA;;AAEA,KAAIE,cAAc,mBAAAF,CAAQ,uBAAR,CAAlB;AACA,KAAI+M,UAAU,mBAAA/M,CAAQ,yBAAR,CAAd;AACA,KAAIwrB,kBAAkB,mBAAAxrB,CAAQ,iCAAR,CAAtB;AACA,KAAIuqB,kBAAkB,mBAAAvqB,CAAQ,gCAAR,CAAtB;;AAEA;;AAEA,oBAAAA,CAAQ,6CAAR;;AAEA;;AAEA,KAAIyrB,wBAAwBxrB,MAAM0C,WAAN,CAAkB;AAAA;;AAC1CE,gBAAW;AACP4L,4BAAmBxO,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC,UADnC;AAEPwoB,qBAAYzrB,MAAM8C,SAAN,CAAgB0B,KAAhB,CAAsB;AAC9BknB,kBAAK1rB,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC,UADE;AAE9B0oB,0BAAa3rB,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC,UAFN;AAG9B5C,sBAASL,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC;AAHF,UAAtB,EAITA;AANI,MAD+B;;AAU1CQ,aAAQ,kBAAY;;AAEhB,aAAI0Z,gBAAgB,KAAK3Z,KAAL,CAAWgL,iBAAX,GAA+B,KAAKhL,KAAL,CAAWioB,UAAX,CAAsBC,GAAzE;;AAEA,gBACI;AAAA;AAAA,eAAK,OAAO,EAACnjB,OAAO,MAAR,EAAgBqjB,eAAe,MAA/B,EAAZ;AACI;AAAA;AAAA,mBAAK,IAAG,uBAAR;AACI;AAAA;AAAA,uBAAG,IAAG,iBAAN,EAAwB,WAAU,cAAlC,EAAiD,OAAM,iBAAvD,EAAyE,MAAMzO,aAA/E;AAA+F,0BAAK3Z,KAAL,CAAWioB,UAAX,CAAsBE;AAArH;AADJ,cADJ;AAII;AAAA;AAAA,mBAAK,IAAG,qBAAR;AAAA;AAAwC;AAAA;AAAA,uBAAM,OAAO,EAAC,aAAY,QAAb,EAAb;AAAsC,0BAAKnoB,KAAL,CAAWioB,UAAX,CAAsBprB;AAA5D;AAAxC;AAJJ,UADJ;AAQH;;AAtByC,EAAlB,CAA5B;AAyBA,KAAIwrB,kDAAkD7rB,MAAM0C,WAAN,CAAkB;AAAA;;AACtEqD,sBAAiB,2BAAU;AACzB,gBAAO;AACL+lB,8CAAiC;AAD5B,UAAP;AAGD,MALqE;;AAQtEC,+CAA0C,oDAAU;AAClD;AACA,aAAIC,oBAAmB,SAAnBA,iBAAmB,CAASC,sBAAT,EAAgC;AACrD,iBAAInc,IAAImc,sBAAR;AACA,iBAAIC,KAAKjoB,OAAOyH,IAAP,CAAYoE,CAAZ,EAAe3K,GAAf,CAAmB,UAASzE,CAAT,EAAW;AAAC,wBAAOoP,EAAEpP,CAAF,CAAP;AAAa,cAA5C,CAAT;AACA,oBACE,GAAG6E,MAAH,CAAU0K,KAAV,CAAgB,EAAhB,EAAmBic,EAAnB,EACC1rB,MADD,CACQ,SAAS2rB,IAAT,CAAczrB,CAAd,EAAiByb,EAAjB,EAAqBiQ,IAArB,EAA2B;AAC/B,wBAAOA,KAAKxrB,OAAL,CAAaF,CAAb,MAAoByb,EAA3B;AACH,cAHD,CADF;AAMD,UATD;AAUA,aAAIkQ,0BAA0B,SAA1BA,uBAA0B,CAAShZ,WAAT,EAAqB;AACjD,oBACEA,YACCiZ,MADD,CACQ,UAASvW,MAAT,EAAgBwW,GAAhB,EAAoB;AAC1BxW,wBAAOwW,IAAItY,IAAX,IACEsY,IAAIjb,WAAJ,CAAgB9Q,MAAhB,CAAuB,UAASod,UAAT,EAAoB;AACzC,4BAAOA,WAAWzN,KAAlB;AACD,kBAFD,EAGChL,GAHD,CAGK,UAASyY,UAAT,EAAoB;AACvB,4BAAOA,WAAWtX,SAAlB;AACD,kBALD,CADF;AAOA,wBAAOyP,MAAP;AACD,cAVD,EAUE,EAVF,CADF;AAaD,UAdD;AAeA,gBAAOiW,kBAAkBK,wBAAwB,KAAK7oB,KAAL,CAAWsK,QAAX,CAAoB6B,IAA5C,CAAlB,CAAP;AACD,MApCqE;AAqCtE6c,2CAAsC,8CAASC,QAAT,EAAkB;AACtD;AACA,aAAIJ,0BAA0B,SAA1BA,uBAA0B,CAAShZ,WAAT,EAAqB;AACjD,oBACEA,YACCiZ,MADD,CACQ,UAASvW,MAAT,EAAgBwW,GAAhB,EAAoB;AAC1BxW,wBAAOwW,IAAItY,IAAX,IACEsY,IAAIjb,WAAJ,CAAgB9Q,MAAhB,CAAuB,UAASod,UAAT,EAAoB;AACzC,4BAAOA,WAAWzN,KAAlB;AACD,kBAFD,EAGChL,GAHD,CAGK,UAASyY,UAAT,EAAoB;AACvB,4BAAOA,WAAWtX,SAAlB;AACD,kBALD,CADF;AAOA,wBAAOyP,MAAP;AACD,cAVD,EAUE,EAVF,CADF;AAaD,UAdD;AAeA,gBACEsW,wBAAwB,KAAK7oB,KAAL,CAAWsK,QAAX,CAAoB6B,IAA5C,EAAkD8c,QAAlD,CADF;AAGD,MAzDqE;AA0DtEhpB,aAAQ,kBAAW;;AAEjB,aAAIipB,mCAAmC,KAAKlpB,KAAL,CAAWiB,IAAX,CAAgByI,iBAAhB,GAAoC,KAApC,GAA4C,MAAnF;AACA,aAAIyf,iCAAiC,KAAKnpB,KAAL,CAAWiB,IAAX,CAAgByI,iBAAhB,GAAoC,QAApC,GAA+C,KAApF;AACA,aAAIvJ,oBAAoB;AACtBrD,+CAAiC,KAAKkD,KAAL,CAAWlD,gCADtB;AAEtBsB,8BAAiB,KAAK4B,KAAL,CAAW5B,eAFN;AAGtBE,oCAAuB4qB,gCAHD;AAItB3qB,kCAAqB4qB,8BAJC;AAKtB1qB,uCAAyB,KAAK8pB,wCAAL,EALH;AAMtBhrB,2BAAc,KAAKyC,KAAL,CAAW6K,uBANH;AAOtBE,2BAAc,KAAK/K,KAAL,CAAW+K;AAPH,UAAxB;;AAUA,aAAIqe,sBAAsB,KAAKppB,KAAL,CAAW4J,aAAX,CAAyB/M,OAAzB,KAAqC,cAArC,IAAuD,IAAIirB,GAAJ,CAAQ,KAAK9nB,KAAL,CAAWonB,SAAnB,EAA8BiC,MAA9B,CAAqC,IAArC,EAA2CC,MAA3C,KAAsD,WAAvI;AACA,aAAIC,SAAJ,EAAe3pB,cAAf;AACA,aAAGwpB,mBAAH,EAAuB;AACrBG,yBAAYxB,eAAZ;AACAnoB,8BAAiB;AACd0K,2BAAS,KAAKtK,KAAL,CAAWsK,QADN;AAEdS,+BAAa,KAAK/K,KAAL,CAAW+K,YAFV;AAGdC,oCAAkB,KAAKhL,KAAL,CAAWgL,iBAHf;AAId4O,4BAAU,KAAK5Z,KAAL,CAAW4J,aAAX,CAAyBgQ;AAJrB,cAAjB;AAMD,UARD,MAQO;AACL2P,yBAAYjgB,OAAZ;AACA1J,8BAAiB;AACfqB,uBAAK,KAAKjB,KAAL,CAAWiB,IADD;AAEN2I,gCAAc,KAAK5J,KAAL,CAAW4J,aAFnB;AAGNC,gCAAc,KAAK7J,KAAL,CAAW6J,aAHnB;AAINS,2BAAS,KAAKtK,KAAL,CAAWsK,QAJd;AAKNK,kCAAgB,KAAK3K,KAAL,CAAW2K,eALrB;AAMNE,0CAAwB,KAAK7K,KAAL,CAAW6K,uBAN7B;AAONE,+BAAa,KAAK/K,KAAL,CAAW+K,YAPlB;AAQNC,oCAAkB,KAAKhL,KAAL,CAAWgL,iBARvB;AASNK,0CAAwB,KAAKrL,KAAL,CAAWqL;AAT7B,cAAjB;AAWD;AACD,aAAIhL,UAAU5D,YAAY+sB,aAAZ,CAA0BrpB,iBAA1B,EAA6CopB,SAA7C,EAAwD3pB,cAAxD,CAAd;AACA,gBACE,KAAKI,KAAL,CAAW5B,eAAX,GACM,oBAAC,OAAD,IAAS,KAAK,KAAK4B,KAAL,CAAWsoB,+BAAzB,GADN,GAEK,oBAAC,SAAD,EAAe1oB,cAAf,CAHP;AAKD,MAtGqE;AAuGtEmE,wBAAmB,6BAAU;AAC3B,cAAK/D,KAAL,CAAW6K,uBAAX,CACC6I,WADD,CACa,6BADb,EAEE,UAAS7G,QAAT,EAAkB;AAChB,kBAAK6B,IAAL,CAAU,KAAK1O,KAAL,CAAWsoB,+BAArB,EAAsD1nB,QAAtD,CAA+D,EAACL,0CAAyCsM,WAAS,CAACA,QAAD,CAAT,GAAoB,EAA9D,EAA/D;AACD,UAFD,CAEEN,IAFF,CAEO,IAFP,CAFF;AAKA,cAAKvM,KAAL,CAAW6K,uBAAX,CACC6I,WADD,CACa,0BADb,EAEE,UAAS3G,KAAT,EAAe;AACb,kBAAK2B,IAAL,CAAU,KAAK1O,KAAL,CAAWsoB,+BAArB,EAAsD1nB,QAAtD,CAA+D,EAACL,0CAA0CwM,QAAO,KAAKic,oCAAL,CAA0Cjc,KAA1C,CAAP,GAAyD,EAApG,EAA/D;AACH,UAFC,CAEAR,IAFA,CAEK,IAFL,CAFF;AAKD;AAlHqE,EAAlB,CAAtD;AAoHA,KAAIsa,8BAA8BrqB,MAAM0C,WAAN,CAAkB;AAAA;;AAChDE,gBAAW;AACPtC,2CAAkCN,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC,UADlD;AAEP2nB,oBAAW5qB,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC,UAF3B;AAGPsL,uBAAcvO,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC,UAH9B;AAIPuL,4BAAmBxO,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC,UAJnC;AAKPwB,eAAMzE,MAAM8C,SAAN,CAAgBgI,KAAhB,CAAsB,CACxBwf,gBAAgBN,QADQ,EACEM,gBAAgBH,eADlB,EACmCG,gBAAgBJ,YADnD,EACiEI,gBAAgBL,mBADjF,CAAtB,EAEHhnB,UAPI;AAQP+nB,0BAAiBhrB,MAAM8C,SAAN,CAAgBkI,IAAhB,CAAqB/H,UAR/B;AASPgoB,mBAAUjrB,MAAM8C,SAAN,CAAgBkI,IAAhB,CAAqB/H,UATxB;AAUPioB,iCAAwBlrB,MAAM8C,SAAN,CAAgBkI,IAAhB,CAAqB/H,UAVtC;AAWPskB,eAAMvnB,MAAM8C,SAAN,CAAgBK,IAXf;AAYP0L,kCAAyB7O,MAAM8C,SAAN,CAAgBK,IAZlC;AAaPkL,kCAAyBrO,MAAM8C,SAAN,CAAgBO,MAAhB,CAAuBJ,UAbzC;AAcPgqB,6BAAoBjtB,MAAM8C,SAAN,CAAgBO;AAd7B,MADqC;;AAkBhDI,aAAQ,kBAAY;;AAEhB,aAAI6Z,UACA,KAAK9Z,KAAL,CAAWgL,iBAAX,GAA+B,QAA/B,GACA,aADA,GACgB,KAAKrK,KAAL,CAAWiJ,aAAX,CAAyBgQ,SADzC,GAEA,YAFA,GAEe,KAAKjZ,KAAL,CAAWiJ,aAAX,CAAyB/M,OAH5C;;AAMA,gBACI;AAAA;AAAA,eAAK,KAAI,MAAT;AAEM,kBAAK8D,KAAL,CAAW+oB,cAAX,GACE,oBAAC,qBAAD,IAAuB,YAAY,KAAK/oB,KAAL,CAAW+oB,cAA9C,EAA8D,mBAAmB,KAAK1pB,KAAL,CAAWgL,iBAA5F,GADF,GAEI,IAJV;AAOM,kBAAKrK,KAAL,CAAWiJ,aAAX,GACI,oBAAC,+CAAD,eAAqD,KAAK5J,KAA1D,EAAqE,KAAKW,KAA1E,EADJ,GAGE;AAAA;AAAA,mBAAK,KAAI,yBAAT;AACI,8CAAK,KAAK,KAAKX,KAAL,CAAW+K,YAAX,GAA0B,+BAApC;AADJ,cAVR;AAeM,kBAAK/K,KAAL,CAAWynB,QAAX,GACE;AAAA;AAAA;AAAK;AAAA;AAAA;AAAG;AAAA;AAAA,2BAAG,MAAM3N,OAAT;AAAA;AAAA,sBAAH;AACD,oDADC;AAAA;AACwC;AAAA;AAAA,2BAAG,MAAM,KAAK9Z,KAAL,CAAWgL,iBAApB;AAAA;AAAA,sBADxC;AAAA;AAED,oDAFC;AAAA;AAE6C;AAAA;AAAA,2BAAG,MAAK,qCAAR;AAAA;AAAA;AAF7C;AAAL,cADF,GAME;AArBR,UADJ;AA2BH,MArD+C;;AAuDhD1K,sBAAiB,2BAAW;AACxB,gBAAO;AACHsJ,4BAAe,EADZ;AAEHC,4BAAe,EAFZ;AAGHS,uBAAU;AACN6B,uBAAM,EADA;AAEN6D,qCAAoB,CAFd;AAGNL,qCAAoB;AAHd,cAHP;AAQHpF,gCAAkB,EARf;AASHI,8BAAiB,EATd;AAUHvM,8BAAiB,EAVd;AAWHsrB,6BAAgB,EAXb;AAYHre,sCAAyB,mCAAW,CAAE;AAZnC,UAAP;AAcH,MAtE+C;;AAwEhDse,iCAA4B,oCAAU7J,IAAV,EAAgB;AACxC,cAAKlf,QAAL,CAAc;AACVgJ,4BAAekW,KAAK8J,MADV;AAEV/f,4BAAeiW,KAAKjW,aAFV;AAGVS,uBAAUwV,KAAKxV,QAHL;AAIVC,gCAAoBuV,KAAKvV,iBAJf;AAKVI,8BAAiBmV,KAAKnV,eALZ;AAMVvM,8BAAiB0hB,KAAK+J,WANZ;AAOVH,6BAAgB5J,KAAKmI;AAPX,UAAd;AASH,MAlF+C;;AAoFhDlkB,wBAAmB,6BAAW;AAC1B,aAAI+lB,cAAc,UAASC,KAAT,EAAgBC,UAAhB,EAA4BC,WAA5B,EAAyC;AACvD,iBAAI,KAAKjqB,KAAL,CAAW+jB,IAAf,EAAqB;AACjB,sBAAK/jB,KAAL,CAAW+jB,IAAX,CAAgBgG,KAAhB,EAAuBC,UAAvB,EAAmCC,WAAnC;AACH,cAFD,MAEO,IAAID,eAAe,aAAnB,EAAkC;AACrCxhB,mBAAExG,SAASmC,WAAT,CAAqB,KAAKuK,IAAL,CAAUwb,IAA/B,CAAF,EAAwCnT,IAAxC,CAA6C,2DAA7C;AACH,cAFM,MAEA;AACHvO,mBAAExG,SAASmC,WAAT,CAAqB,KAAKuK,IAAL,CAAUwb,IAA/B,CAAF,EAAwCnT,IAAxC,CAA6C,2BAA2BgT,MAAMI,YAAjC,GAAgD,QAA7F;AACH;AACJ,UARiB,CAQhB5d,IARgB,CAQX,IARW,CAAlB;;AAUA,aAAI6d,gBAAgB,UAAStK,IAAT,EAAe;AAC/B,iBAAI,WAAWA,IAAf,EAAqB;AACjBgK,6BAAY,EAACK,cAAcrK,KAAKuK,KAApB,EAAZ;AACH,cAFD,MAEO;AACH,sBAAKV,0BAAL,CAAgC7J,IAAhC;AACH;AACJ,UANmB,CAMlBvT,IANkB,CAMb,IANa,CAApB;;AAQA,aAAI+d,cAAc;AACd/G,kBAAK,KAAKvjB,KAAL,CAAWonB,SADF;AAEdmD,uBAAU,MAFI;AAGdC,qBAAQ,KAHM;AAIdhH,sBAAS4G,aAJK;AAKdC,oBAAOP;AALO,UAAlB;;AAQA,cAAKW,aAAL,GAAqBjiB,EAAE8a,IAAF,CAAOgH,WAAP,CAArB;;AAEA,aAAI,CAAC,KAAKtqB,KAAL,CAAW0nB,sBAAhB,EAAwC;AACpC,cAAC,UAAS3oB,CAAT,EAAW2rB,CAAX,EAAape,CAAb,EAAe1G,CAAf,EAAiB+kB,CAAjB,EAAmB9rB,CAAnB,EAAqB+rB,CAArB,EAAuB;AAAC7rB,mBAAE,uBAAF,IAA2B4rB,CAA3B,CAA6B5rB,EAAE4rB,CAAF,IAAK5rB,EAAE4rB,CAAF,KAAM,YAAU;AAC3E,sBAAC5rB,EAAE4rB,CAAF,EAAKE,CAAL,GAAO9rB,EAAE4rB,CAAF,EAAKE,CAAL,IAAQ,EAAhB,EAAoBhmB,IAApB,CAAyB4T,SAAzB;AAAoC,kBADkB,EACjB1Z,EAAE4rB,CAAF,EAAKG,CAAL,GAAO,IAAE,IAAIC,IAAJ,EADQ,CACGlsB,IAAE6rB,EAAEhH,aAAF,CAAgBpX,CAAhB,CAAF,EACzDse,IAAEF,EAAEM,oBAAF,CAAuB1e,CAAvB,EAA0B,CAA1B,CADuD,CAC1BzN,EAAEosB,KAAF,GAAQ,CAAR,CAAUpsB,EAAEqsB,GAAF,GAAMtlB,CAAN,CAAQglB,EAAEO,UAAF,CAAaC,YAAb,CAA0BvsB,CAA1B,EAA4B+rB,CAA5B;AAChD,cAHD,EAGGtd,MAHH,EAGUsa,QAHV,EAGmB,QAHnB,EAG4B,+CAH5B,EAG4E,IAH5E;;AAKAyD,gBAAG,QAAH,EAAa,eAAb,EAA8B,MAA9B;AACAA,gBAAG,MAAH,EAAW,UAAX;AACA,kBAAKzqB,QAAL,CAAc,EAACyK,yBAAyBggB,EAA1B,EAAd;AACH;AACJ,MA3H+C;;AA6HhDpnB,yBAAoB,8BAAW;AAC3B;AACA;AACA,aAAIqnB,eAAe9iB,EAAExG,SAASmC,WAAT,CAAqB,KAAKuK,IAAL,CAAU6c,kBAA/B,CAAF,CAAnB;;AAEA,aAAI,KAAKvrB,KAAL,CAAWwnB,eAAf,EAAgC;AAC5B8D,0BAAanc,QAAb,CAAsB,EAACqc,YAAY,IAAb,EAAtB;AACH;;AAEDhjB,WAAE8E,MAAF,EAAUoP,OAAV,CAAkB,mCAAlB;AACH,MAvI+C;AAwIhDzZ,2BAAsB,gCAAW;AAC7B,cAAKwnB,aAAL,CAAmBgB,KAAnB;AACH;AA1I+C,EAAlB,CAAlC;;AA6IA;;AAEApvB,QAAOC,OAAP,GAAiBuqB,2BAAjB,C;;;;;;;;;;ACrTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,yCAAwC;AACxC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL,yCAAwC,YAAY;AACpD;AACA;AACA,MAAK;AACL;AACA;;AAEA,sCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yCAAwC,YAAY;AACpD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oCAAmC,OAAO;AAC1C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI;AAC3D;AACA;AACA;AACA,4CAA2C,IAAI,GAAG,EAAE,aAAa,IAAI,mBAAmB,IAAI,GAAG,EAAE,cAAc,IAAI,yEAAyE,EAAE,oBAAoB,IAAI,GAAG,EAAE,gBAAgB,IAAI,EAAE,IAAI,2EAA2E,EAAE,oBAAoB,IAAI,GAAG,EAAE,gBAAgB,IAAI,EAAE,IAAI,iBAAiB,IAAI,2EAA2E,EAAE,qBAAqB,IAAI,GAAG,EAAE,gBAAgB,IAAI,EAAE,IAAI,iBAAiB,IAAI,EAAE,IAAI,yEAAyE,EAAE,qBAAqB,IAAI,GAAG,EAAE,gBAAgB,IAAI,EAAE,IAAI,iBAAiB,IAAI,EAAE,IAAI,yEAAyE,EAAE,qBAAqB,IAAI,GAAG,EAAE,gBAAgB,IAAI,EAAE,IAAI,iBAAiB,IAAI,EAAE,IAAI,yEAAyE,EAAE,yBAAyB,IAAI,EAAE,IAAI,iBAAiB,IAAI,EAAE,IAAI,yEAAyE,EAAE;AAC9jC;AACA;AACA;AACA;AACA,sDAAqD,IAAI,kBAAkB,IAAI,yBAAyB,IAAI,0GAA0G;AACtN;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,4EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA,gDAA+C,YAAY;AAC3D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,YAAY;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAuC,YAAY;AACnD;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA4B;;AAE5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,kBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;AACL;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,kCAAiC,OAAO;AACxC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP,yCAAwC,OAAO;AAC/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL,gCAA+B,OAAO;AACtC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,GAAG;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uEAAsE,OAAO;AAC7E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAe,qBAAqB;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;;;;;;;;;;;;;;;;ACloED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;AACD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,cAAc;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAmB,WAAW;AAC9B;AACA,sBAAqB,QAAQ;AAC7B;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET,gBAAe,WAAW;AAC1B;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gBAAe,YAAY;AAC3B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;;;;;;;;;;AC1LD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;AACD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;;;;;;;;;;AC/OD;;AAEA;;AAEA,KAAIrqB,QAAQ,mBAAAD,CAAQ,iBAAR,CAAZ;AACA,KAAImvB,kBAAkB,mBAAAnvB,CAAQ,sCAAR,CAAtB;;AAEA;;AAEA,KAAIwrB,kBAAkBvrB,MAAM0C,WAAN,CAAkB;AAAA;;AACpCE,gBAAW;AACPkL,mBAAU9N,MAAM8C,SAAN,CAAgB0B,KAAhB,CAAsB;AAC5BmL,mBAAM3P,MAAM8C,SAAN,CAAgBqsB,KAAhB,CAAsBlsB;AADA,UAAtB,EAEPA,UAHI;AAIPsL,uBAAcvO,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC,UAJ9B;AAKPuL,4BAAmBxO,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC,UALnC;AAMPma,oBAAWpd,MAAM8C,SAAN,CAAgBE,MAAhB,CAAuBC;AAN3B,MADyB;;AAUpCa,sBAAiB,2BAAW;AACxB,gBAAO,EAAC,cAAc,KAAKN,KAAL,CAAWsK,QAAX,CAAoB6B,IAApB,CAAyB9N,MAAzB,GAAkC,EAAjD,EAAP;AACH,MAZmC;;AAcpCutB,wBAAmB,6BAAW;AAC1B,aAAIzf,OAAO,KAAKnM,KAAL,CAAWsK,QAAX,CAAoB6B,IAApB,CAAyB0f,IAAzB,CAA8B,KAAKC,YAAnC,CAAX;AACA,gBAAO,KAAKnrB,KAAL,CAAWorB,UAAX,GAAwB5f,IAAxB,GAA+BA,KAAK3F,KAAL,CAAW,CAAX,EAAa,EAAb,CAAtC;AACH,MAjBmC;;AAmBpCwlB,kBAAa,uBAAW;AACtB,cAAKprB,QAAL,CAAc,EAAC,cAAe,IAAhB,EAAd;AACD,MArBmC;;AAuBpCkrB,mBAAc,sBAASG,WAAT,EAAsBC,WAAtB,EAAmC;AAC7C,aAAID,YAAYxb,IAAZ,GAAmByb,YAAYzb,IAAnC,EAAyC;AACrC,oBAAO,CAAP;AACH;AACD,aAAIwb,YAAYxb,IAAZ,GAAmByb,YAAYzb,IAAnC,EAAyC;AACrC,oBAAO,CAAC,CAAR;AACH;AACD,gBAAO,CAAP;AACH,MA/BmC;;AAiCpC0b,sBAAiB,yBAAUlT,OAAV,EAAmB;AAChC,aAAIU,gBACA,KAAK3Z,KAAL,CAAWgL,iBAAX,GACA,eADA,GACkBiO,QAAQ5b,EAD1B,GAC+B,aAD/B,GAC+C,KAAK2C,KAAL,CAAW4Z,SAD1D,IAECX,QAAQG,uBAAR,GACD,8BAA8BS,mBAAmBZ,QAAQG,uBAA3B,CAD7B,GACmF,EAHpF,CADJ;;AAMA,gBACI;AAAA;AAAA,eAAI,KAAKH,QAAQxI,IAAjB;AACI;AAAA;AAAA,mBAAG,QAAO,QAAV,EAAmB,MAAMkJ,aAAzB;AAAyCV,yBAAQxI;AAAjD;AADJ,UADJ;AAKH,MA7CmC;;AA+CpC2b,uBAAkB,0BAASpQ,OAAT,EAAkB;AAChC,gBAAO,KAAK4P,iBAAL,GAAyBjqB,GAAzB,CAA6B,KAAKwqB,eAAlC,CAAP;AACH,MAjDmC;;AAmDpClsB,aAAQ,kBAAW;AACf,gBACI;AAAA;AAAA,eAAI,OAAO,EAACosB,eAAe,MAAhB,EAAwBC,aAAa,GAArC,EAAX;AACK,kBAAKF,gBAAL,EADL;AAEK,kBAAKzrB,KAAL,CAAWorB,UAAX,GAAuB,8BAAvB,GAA8B;AAAC,gCAAD;AAAA,mBAAiB,SAAQ,SAAzB,EAAmC,QAAO,QAA1C,EAAmD,SAAS,KAAKC,WAAjE;AAAA;AAAA;AAFnC,UADJ;AAMH;AA1DmC,EAAlB,CAAtB;;AA6DA;;AAEA3vB,QAAOC,OAAP,GAAiByrB,eAAjB,C;;;;;;;;;;ACxEA;;AAEA;AACA;AACA;AACA;AACA,yFAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,iCAAgC,UAAU,EAAE;AAC5C,E;;;;;;;;;;ACpBA;AACA;;;AAGA;AACA,sDAAqD,yBAAyB,GAAG,qCAAqC,kBAAkB,qBAAqB,qBAAqB,yBAAyB,GAAG,eAAe,kBAAkB,GAAG;;AAElP","file":"expressionAtlasHeatmap.bundle.js","sourcesContent":["module.exports = require(`./src/AnatomogramFactory.jsx`);\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/anatomogram/index.js","const React = require(`react`);\nconst Anatomogram = require(`./Anatomogram.jsx`);\nconst getSvgsForSpecies = require(`./imagesAvailable.js`).GetSvgsForSpecies;\nrequire(`./ContainerLayout.less`);\n\n// See note below, consider using something like https://flowtype.org if type checking is necessary\n// const argumentShape= {\n//     pathToFolderWithBundledResources: RequiredString,\n//     anatomogramData: React.PropTypes.shape({\n//         species: RequiredString,\n//         allSvgPathIds: React.PropTypes.arrayOf(RequiredString) //if not provided, we use properties read in from the file\n//     }).isRequired,\n//     expressedTissueColour: RequiredString,\n//     hoveredTissueColour: RequiredString,\n//     eventEmitter: React.PropTypes.instanceOf(EventEmitter)\n// };\n\nconst _availableAnatomograms = (species, pathToFolderWithBundledResources, allSvgPathIds) =>\n    getSvgsForSpecies(pathToFolderWithBundledResources, species)\n    .filter(e => !allSvgPathIds || allSvgPathIds.some(id => e.ids.indexOf(id) > -1));\n\nconst callEmitterWhenMousedOverTissuesChange = (eventEmitter) => {\n    const forEachXNotInYsEmit = (xs, ys, eventName) => {\n        xs\n        .filter(id => ys.indexOf(id) === -1)\n        .forEach(id => {eventEmitter.emit(eventName, id);});\n    };\n\n    return function emitEvents(nextIds,previousIds){\n        forEachXNotInYsEmit(nextIds, previousIds, 'gxaAnatomogramTissueMouseEnter');\n        forEachXNotInYsEmit(previousIds,nextIds, 'gxaAnatomogramTissueMouseLeave');\n    }\n};\n\nconst createAnatomogram = (args) => {\n    // PropTypes should only be used with proper React components\n    // https://facebook.github.io/react/warnings/dont-call-proptypes.html\n    // validate(argumentShape, args, \"Error!\");\n\n    const availableAnatomograms =\n        _availableAnatomograms(\n            args.anatomogramData.species,\n            args.pathToFolderWithBundledResources,\n            args.anatomogramData.allSvgPathIds || null);\n\n    return(\n        availableAnatomograms.length ?\n            <Anatomogram\n                pathToFolderWithBundledResources={args.pathToFolderWithBundledResources}\n                expressedTissueColour={args.expressedTissueColour}\n                hoveredTissueColour={args.hoveredTissueColour}\n                availableAnatomograms= {availableAnatomograms}\n                height={args.anatomogramData.species.indexOf(\"homo sapiens\")>-1 ? 375 : 265}\n                whenMousedOverIdsChange={\n                    args.whenMousedOverIdsChange ||\n                    (args.eventEmitter ? callEmitterWhenMousedOverTissuesChange(args.eventEmitter) : function(){}\n                )}\n                idsExpressedInExperiment={args.idsExpressedInExperiment || args.ontologyIdsForTissuesExpressedInAllRows || []}\n                idsToBeHighlighted={args.idsToBeHighlighted||[]}\n                {...(args.anatomogramData.allSvgPathIds? {allSvgPathIds:args.anatomogramData.allSvgPathIds} :{})}/> :\n            null\n    );\n};\n\n//http://stackoverflow.com/questions/3115982/how-to-check-if-two-arrays-are-equal-with-javascript\nconst arraysEqual = (a, b) => {\n    if (a === b) return true;\n    if (a == null || b == null) return false;\n    if (a.length != b.length) return false;\n    for (let i = 0 ; i < a.length ; ++i) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n};\n\nconst makeWrapper = (ComponentClass) => {\n    return (\n        React.createClass({\n            displayName: \"WrappedComponent\",\n            propTypes: {\n                ontologyIdsToHighlight: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,\n                onOntologyIdIsUnderFocus: React.PropTypes.func.isRequired,\n                componentProps: React.PropTypes.object.isRequired\n            },\n\n        shouldComponentUpdate(nextProps) {\n            return !arraysEqual(nextProps.ontologyIdsToHighlight, this.props.ontologyIdsToHighlight) ;\n        },\n\n        render() {\n            return (\n                <div id=\"gxaAnatomogramWrapper\">\n                    <ComponentClass ontologyIdsToHighlight={this.props.ontologyIdsToHighlight}\n                                    onOntologyIdIsUnderFocus={this.props.onOntologyIdIsUnderFocus}\n                                    {...this.props.componentProps} />\n                </div>\n            );\n        }\n    })\n  );\n};\n\n/**\nanatomogramConfig: see argumentShape\ncomponentClass : a React class to be wrapped. Should accept props onOntologyIdIsUnderFocus and ontologyIdsToHighlight\ncomponentProps : other props to be passed over.\n*/\nconst wrapComponentWithAnatomogram = (anatomogramConfig, componentClass, componentProps) => {\n    const Wrapped = makeWrapper(componentClass);\n\n    return React.createClass({\n        displayName: \"AnatomogramComponentWrapper\",\n\n        getInitialState() {\n            return {\n                ontologyIdsForComponentContentUnderFocus: [],\n                ontologyIdsForAnatomogramContentUnderFocus: []\n            }\n        },\n\n        render() {\n            return (\n                <div>\n                    <div id=\"gxaAnatomogramAside\">\n                        {createAnatomogram(\n                            Object.assign({},\n                                anatomogramConfig,\n                                {\n                                    idsToBeHighlighted: this.state.ontologyIdsForComponentContentUnderFocus,\n                                    whenMousedOverIdsChange: nextIds => {\n                                        this.setState({ontologyIdsForAnatomogramContentUnderFocus: nextIds});\n                                    }\n                                })\n                        )}\n                    </div>\n\n                    <Wrapped componentProps={componentProps}\n                             onOntologyIdIsUnderFocus={selectedIdOrIds => {\n                                 this.setState({\n                                     ontologyIdsForComponentContentUnderFocus:\n                                        selectedIdOrIds ?\n                                            (typeof selectedIdOrIds === 'string' ? [selectedIdOrIds] : selectedIdOrIds) :\n                                            []})\n                             }}\n                             ontologyIdsToHighlight={this.state.ontologyIdsForAnatomogramContentUnderFocus}/>\n                </div>\n            )\n        }\n    })\n};\n\nmodule.exports={\"create\": createAnatomogram, \"wrapComponent\": wrapComponentWithAnatomogram};\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/anatomogram/src/AnatomogramFactory.jsx","const React = require(`react`);\nconst AnatomogramImage = require(`./AnatomogramImage.jsx`);\nconst SelectionIcon = require(`./SelectionIcon.jsx`);\n\nconst Anatomogram = React.createClass({\n    propTypes: {\n        pathToFolderWithBundledResources: React.PropTypes.string.isRequired,\n        expressedTissueColour: React.PropTypes.string.isRequired,\n        hoveredTissueColour: React.PropTypes.string.isRequired,\n        availableAnatomograms : React.PropTypes.arrayOf(\n            React.PropTypes.shape({\n                type:React.PropTypes.string.isRequired,\n                path:React.PropTypes.string.isRequired,\n                ids: React.PropTypes.arrayOf(React.PropTypes.string).isRequired\n            })\n        ).isRequired,\n        height: React.PropTypes.number.isRequired,\n        whenMousedOverIdsChange: React.PropTypes.func,\n        allSvgPathIds: React.PropTypes.arrayOf(React.PropTypes.string),\n        idsToBeHighlighted: React.PropTypes.arrayOf(React.PropTypes.string).isRequired\n    },\n\n    getInitialState() {\n        return { selectedType: this.props.availableAnatomograms[0].type };\n    },\n\n    render() {\n        return (\n            <div className=\"gxaAnatomogram\" style={{display: `table`, paddingTop: `4px`}}>\n                <div style={{display: `table-row`}}>\n                    <div style={{display: `table-cell`, verticalAlign: `top`}}>\n                        {this._anatomogramSelectImageButtons()}\n                    </div>\n                    <AnatomogramImage\n                        key={this.state.selectedType}\n                        file={this._selectedAnatomogram().path}\n                        allSvgPathIds={this.props.allSvgPathIds || this._selectedAnatomogram().ids}\n                        {...this.props} />\n                </div>\n            </div>\n        );\n    },\n\n    _anatomogramSelectImageButtons() {\n        return (\n            this.props.availableAnatomograms.length < 2 ?\n                [] :\n                this.props.availableAnatomograms\n                .map(availableAnatomogram =>\n                    (\n                        <SelectionIcon\n                            key={`${availableAnatomogram.type}_toggle`}\n                            pathToFolderWithBundledResources={this.props.pathToFolderWithBundledResources}\n                            anatomogramType={availableAnatomogram.type}\n                            selected={this.state.selectedType === availableAnatomogram.type}\n                            onClick={() => { this._afterUserSelectedAnatomogram(availableAnatomogram.type); }}/>\n                    )\n                )\n        );\n    },\n\n    _afterUserSelectedAnatomogram(newSelectedType) {\n        if (newSelectedType !== this.state.selectedType) {\n            this.setState({ selectedType: newSelectedType });\n        }\n    },\n\n    _selectedAnatomogram() {\n        return (\n            this.props.availableAnatomograms\n            .filter(e => e.type === this.state.selectedType)\n            .concat({\n                type: `_`,\n                path: `__invalid__.svg`,\n                ids: []\n            })[0]\n        );\n    },\n});\n\nmodule.exports = Anatomogram;\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/anatomogram/src/Anatomogram.jsx","const React = require(`react`);\nconst ReactDOM = require(`react-dom`);\nconst Snap = require(`imports-loader?this=>window,fix=>module.exports=0!snapsvg/dist/snap.svg.js`);\n\n//http://stackoverflow.com/questions/3115982/how-to-check-if-two-arrays-are-equal-with-javascript\nconst ArraysEqual = (a, b) => {\n    if (a === b) return true;\n    if (a == null || b == null) return false;\n    if (a.length != b.length) return false;\n    for (let i = 0; i < a.length; ++i) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n};\n\nconst AnatomogramImageParts = React.createClass({\n    propTypes: {\n        idsExpressedInExperiment: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,\n        idsHeatmapWantsHighlighted: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,\n        idsMousedOver: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,\n        idsNotHighlighted: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,\n        expressedTissueColour: React.PropTypes.string.isRequired,\n        hoveredTissueColour: React.PropTypes.string.isRequired,\n        whenMousedOverIdsChange: React.PropTypes.func\n    },\n\n    getDefaultProps() {\n        return ({ whenMousedOverIdsChange: (nextIds, oldIds) => {} });\n    },\n\n    getInitialState() {\n        return {\n            toDraw: [].concat(\n                this._idsThatShouldBeStronglyHighlighted(this.props).map(this._highlightStrongly),\n                this.props.idsExpressedInExperiment.map(this._highlightSlightly),\n                this.props.idsNotHighlighted.map(this._highlightAsBackground)\n            )};\n    },\n\n    render() {\n        return <span/>;\n    },\n\n    _highlightStrongly(svgPathId) {\n        return { id: svgPathId, colour: this.props.hoveredTissueColour, opacity: 0.7 };\n    },\n\n    _highlightSlightly(svgPathId) {\n        return { id: svgPathId, colour: this.props.expressedTissueColour, opacity: 0.5 };\n    },\n\n    _highlightAsBackground(svgPathId) {\n        return { id: svgPathId, colour: `gray`, opacity: 0.5 };\n    },\n\n    componentWillUnmount() {\n        this.props.whenMousedOverIdsChange([],this.props.idsMousedOver);\n    },\n\n    componentWillReceiveProps(nextProps) {\n        if(!ArraysEqual(nextProps.idsMousedOver, this.props.idsMousedOver)){\n            this.props.whenMousedOverIdsChange(nextProps.idsMousedOver,this.props.idsMousedOver);\n        }\n        const oldStrong = this._idsThatShouldBeStronglyHighlighted(this.props);\n        const newStrong = this._idsThatShouldBeStronglyHighlighted(nextProps);\n        const oldWeak = this.props.idsExpressedInExperiment;\n        const newWeak = nextProps.idsExpressedInExperiment;\n\n        const toDraw = [].concat(\n            //ids that heatmap wants highlighted are the most highlighted\n            newStrong\n            .filter(id => !oldStrong.includes(id))\n            .map(this._highlightStrongly),\n            //ids that are expressed in the experiment are highlighted with a weaker colour, often the same as background\n            newWeak\n            .filter(id => !newStrong.includes(id))\n            .filter(id => !oldWeak.includes(id))\n            .map(this._highlightSlightly),\n            nextProps.idsNotHighlighted\n            .filter(id => !this.props.idsNotHighlighted.includes(id))\n            .map(this._highlightAsBackground)\n        );\n\n        this.setState({ toDraw: toDraw });\n    },\n\n    _idsThatShouldBeStronglyHighlighted(properties) {\n        return properties.idsHeatmapWantsHighlighted.concat(properties.idsMousedOver);\n    }\n});\n\n\nconst AnatomogramImage = React.createClass({\n    propTypes: {\n        file: (props, propName, componentName) => {\n            if(propName === `file`){\n                if(typeof props[propName]!== `string`){\n                    return new Error(`Expected string to specify file, got: ${props[propName]}`);\n                }\n                if(!props[propName]){\n                    return new Error(`Path to file empty!`);\n                }\n            }\n            return ``;\n        },\n        height: React.PropTypes.number.isRequired,\n        allSvgPathIds: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,\n        idsExpressedInExperiment: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,\n        idsToBeHighlighted: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,\n        expressedTissueColour: React.PropTypes.string.isRequired,\n        hoveredTissueColour: React.PropTypes.string.isRequired,\n        whenMousedOverIdsChange: React.PropTypes.func\n    },\n\n    getInitialState() {\n        return { mousedOverSvgIds: [] };\n    },\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.file!==this.props.file) {\n            this._loadAnatomogram(nextProps.file);\n        }\n    },\n\n    componentDidMount() {\n        this._loadAnatomogram(this.props.file);\n        this._draw();\n    },\n\n    componentDidUpdate() {\n        this._draw();\n    },\n\n    _draw() {\n        const svg = Snap(ReactDOM.findDOMNode(this._anatomogram)).select(`#LAYER_EFO`);\n        if(svg !== null){\n            this._drawOnSvg(svg, this._imageParts.state.toDraw);\n            this._imageParts.setState({ toDraw: [] });\n        }\n    },\n\n    _drawInitialLayout(svg) {\n        if(this._imageParts) {\n            this._drawOnSvg(svg, this._imageParts.getInitialState().toDraw);\n            this._imageParts.setState({ toDraw: [] });\n        }\n    },\n\n    _drawOnSvg(svg, instructions) {\n        instructions.forEach(instruction => {\n            this._highlightOrganismParts(svg,instruction.id, instruction.colour, instruction.opacity);\n        });\n    },\n\n    render () {\n        let idsExpressedInExperiment = [],\n            idsHoveredOver = [],\n            idsHeatmapWantsHighlighted = [],\n            idsNotHighlighted = [];\n\n        this.props.allSvgPathIds.forEach(id => {\n            if (this.state.mousedOverSvgIds.includes(id)) {\n                idsHoveredOver.push(id);\n            } else if (this.props.idsToBeHighlighted.includes(id)) {\n                idsHeatmapWantsHighlighted.push(id);\n            } else if (this.props.idsExpressedInExperiment.includes(id)) {\n                idsExpressedInExperiment.push(id);\n            } else {\n                idsNotHighlighted.push(id);\n            }\n        });\n\n    return (\n        <span>\n            <svg ref={c => this._anatomogram = c} style={{display: \"table-cell\", width: \"230px\", height:this.props.height + \"px\"}} />\n\n            <AnatomogramImageParts\n                ref={c => this._imageParts = c} key={this.props.file}\n                idsExpressedInExperiment={idsExpressedInExperiment}\n                idsHeatmapWantsHighlighted={idsHeatmapWantsHighlighted}\n                idsMousedOver={idsHoveredOver}\n                idsNotHighlighted={idsNotHighlighted}\n                expressedTissueColour={this.props.expressedTissueColour}\n                hoveredTissueColour={this.props.hoveredTissueColour}\n                whenMousedOverIdsChange={this.props.whenMousedOverIdsChange}\n            />\n        </span>);\n    },\n\n    _highlightPath(svgPathId) {\n        this.setState({ hoveredPathId: svgPathId });\n    },\n\n    _loadAnatomogram(svgFile) {\n        let svgCanvas = Snap(ReactDOM.findDOMNode(this._anatomogram)),\n            allElements = svgCanvas.selectAll(`*`);\n\n        if (allElements) {\n            allElements.remove();\n        }\n\n        const displayAllOrganismPartsCallback = this._drawInitialLayout;\n        const registerHoverEventsCallback = this._registerHoverEvents;\n\n        Snap.load(\n            svgFile,\n            fragment => {\n                displayAllOrganismPartsCallback(fragment.select(`#LAYER_EFO`));\n                registerHoverEventsCallback(fragment.select(`#LAYER_EFO`));\n                fragment.selectAll(`svg > g`).forEach(g => {\n                    g.transform(`S1.6,0,0`);\n                    svgCanvas.append(g);\n                });\n                const img = fragment.select(`#ccLogo`);\n                if (img) {\n                    // svgCanvas.node.clientHeight and svgCanvas.node.clientWidth is more “correct” but are 0 in Firefox\n                    const heightTranslate = Number.parseInt(this._anatomogram.style.height) - 15;\n                    const widthTranslate = Number.parseInt(this._anatomogram.style.width) / 2 - 40;\n                    img.transform(`t${widthTranslate},${heightTranslate}`);\n                    svgCanvas.append(img);\n                }\n            }\n        );\n    },\n\n    _registerHoverEvents(svg) {\n        if (svg) {  // Sometimes svg is null... why?\n            const MaxOverlappingTissues = 5;\n            const mouseoverCallback = svgPathId => {\n                this.setState((previousState) =>\n                    ({ mousedOverSvgIds: [...previousState.mousedOverSvgIds, svgPathId].slice(-MaxOverlappingTissues) })\n                );\n            };\n\n            const mouseoutCallback = svgPathId => {\n                this.setState((previousState) =>\n                    ({ mousedOverSvgIds: previousState.mousedOverSvgIds.map(el => el === svgPathId ? `` : el) })\n                );\n            };\n\n            const attachCallbacks = (svgElement, svgPathId) => {\n                if (svgElement) {\n                    svgElement.mouseover(() => { mouseoverCallback(svgPathId) });\n                    svgElement.mouseout(() => { mouseoutCallback(svgPathId) });\n                }\n            };\n\n            this.props.allSvgPathIds.forEach(svgPathId => {\n                const svgElement = svg.select(`#${svgPathId}`);\n                attachCallbacks(svgElement, svgPathId);\n                if(svgElement && svgElement.type === `use`){\n                    attachCallbacks(svg.select(svgElement.node.getAttribute(`xlink:href`)), svgPathId);\n                }\n            });\n        }\n    },\n\n    _highlightOrganismParts(svg, svgPathId, colour, opacity) {\n        let el = svg.select(`#${svgPathId}`);\n        if (el && el.type === `use`) {\n            this._recursivelyChangeProperties(svg.select(el.node.getAttribute(`xlink:href`)), colour, opacity);\n        }\n        this._recursivelyChangeProperties(el, colour, opacity);\n    },\n\n    _recursivelyChangeProperties(svgElement, colour, opacity) {\n        if (svgElement) {\n            svgElement.selectAll(`*`).forEach(innerElement => { this._recursivelyChangeProperties(innerElement); });\n            svgElement.attr({\"fill\": colour, \"fill-opacity\": opacity});\n        }\n    }\n});\n\nmodule.exports = AnatomogramImage;\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/anatomogram/src/AnatomogramImage.jsx","const React = require(`react`);\nconst ResolvePathToIcon = require(`./imagesAvailable.js`).ResolvePathToIcon;\nrequire(`./SelectionIcon.less`);\n\nconst SelectionIcon = React.createClass({\n    propTypes: {\n        pathToFolderWithBundledResources: React.PropTypes.string.isRequired,\n        anatomogramType: React.PropTypes.oneOf([`brain`,`female`,`male`,`whole_plant`,`flower_parts`]).isRequired,\n        selected: React.PropTypes.bool.isRequired,\n        onClick: React.PropTypes.func.isRequired\n    },\n\n    render() {\n        return (\n            <img className={\"selection-icon\"} onClick={this.props.onClick}\n                 src={\n                     ResolvePathToIcon(\n                         this.props.pathToFolderWithBundledResources,\n                         this.props.anatomogramType,\n                         this.props.selected\n                     )\n                 }/>\n        );\n    },\n\n    shouldComponentUpdate(nextProps) {\n        return this.props.selected !== nextProps.selected;\n    }\n});\n\nmodule.exports = SelectionIcon;\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/anatomogram/src/SelectionIcon.jsx","const Url = require(`url`);\nconst Path = require(`path`);\nconst SvgsForSpecies = require(`../resources/json/svgsForSpecies.json`);\nconst IdsForSvgs = require(`../resources/json/idsForSvgs.json`);\n\nconst ResolvePathToIcon = (pathToFolderWithBundledResources, type, selected) =>\n    Url.resolve(\n        pathToFolderWithBundledResources,\n        Path.basename(require(`../resources/icons/${type}_${selected ? `` : `un`}selected.png`))\n    );\n\nconst ResolvePathToSvg = (pathToFolderWithBundledResources, svg) =>\n    Url.resolve(\n        pathToFolderWithBundledResources,\n        Path.basename(require(`../resources/svg/${svg}`))\n    );\n\nconst GetSvgsForSpecies = (pathToFolderWithBundledResources, species) => {\n    let svgEntry = SvgsForSpecies[species];\n    if (typeof svgEntry === `object`) {\n        return Object.keys(svgEntry).map(anatomogramType => (\n            {\n                type: anatomogramType,\n                path: ResolvePathToSvg(pathToFolderWithBundledResources, svgEntry[anatomogramType]),\n                ids: IdsForSvgs[svgEntry[anatomogramType]]\n            }\n        ));\n    } else if (typeof svgEntry === `string`) {\n        return [{\n            type: `svg`,\n            path: ResolvePathToSvg(pathToFolderWithBundledResources, svgEntry),\n            ids: IdsForSvgs[svgEntry]\n        }];\n    } else {\n        return [];\n    }\n};\n\nmodule.exports = {GetSvgsForSpecies, ResolvePathToIcon};\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/anatomogram/src/imagesAvailable.js","var map = {\n\t\"./brain_selected.png\": 3110,\n\t\"./brain_unselected.png\": 3111,\n\t\"./female_selected.png\": 3112,\n\t\"./female_unselected.png\": 3113,\n\t\"./flower_parts_selected.png\": 3114,\n\t\"./flower_parts_unselected.png\": 3115,\n\t\"./male_selected.png\": 3116,\n\t\"./male_unselected.png\": 3117,\n\t\"./whole_plant_selected.png\": 3118,\n\t\"./whole_plant_unselected.png\": 3119\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 3109;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/anatomogram/resources/icons ^\\.\\/.*selected\\.png$\n// module id = 3109\n// module chunks = 2 7","var map = {\n\t\"./anolis_carolinensis.svg\": 3121,\n\t\"./arabidopsis_thaliana_whole_plant.svg\": 3122,\n\t\"./brachypodium_distachyon_flower_parts.svg\": 3123,\n\t\"./brachypodium_distachyon_whole_plant.svg\": 3124,\n\t\"./chicken.svg\": 3125,\n\t\"./cow.svg\": 3126,\n\t\"./hordeum_vulgare_flower_parts.svg\": 3127,\n\t\"./hordeum_vulgare_whole_plant.svg\": 3128,\n\t\"./human_brain.svg\": 3129,\n\t\"./human_female.svg\": 3130,\n\t\"./human_male.svg\": 3131,\n\t\"./macaca_mulatta.svg\": 3132,\n\t\"./monodelphis_domestica.svg\": 3133,\n\t\"./mouse_brain.svg\": 3134,\n\t\"./mouse_female.svg\": 3135,\n\t\"./mouse_male.svg\": 3136,\n\t\"./oryza_sativa_flower_parts.svg\": 3137,\n\t\"./oryza_sativa_whole_plant.svg\": 3138,\n\t\"./papio_anubis.svg\": 3139,\n\t\"./rat.svg\": 3140,\n\t\"./solanum_lycopersicum_flower_parts.svg\": 3141,\n\t\"./solanum_lycopersicum_whole_plant.svg\": 3142,\n\t\"./solanum_tuberosum_whole_plant.svg\": 3143,\n\t\"./sorghum_bicolor_flower_parts.svg\": 3144,\n\t\"./sorghum_bicolor_whole_plant.svg\": 3145,\n\t\"./tetraodon_nigroviridis.svg\": 3146,\n\t\"./triticum_aestivum_flower_parts.svg\": 3147,\n\t\"./triticum_aestivum_whole_plant.svg\": 3148,\n\t\"./xenopus_tropicalis.svg\": 3149,\n\t\"./zea_mays_flower_parts.svg\": 3150,\n\t\"./zea_mays_whole_plant.svg\": 3151\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 3120;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/anatomogram/resources/svg ^\\.\\/.*$\n// module id = 3120\n// module chunks = 2 7","\"use strict\";\n\n//*------------------------------------------------------------------*\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar ReactDOMServer = require('react-dom/server');\nvar RadioGroup = require('react-radio-group');\nvar Slider = require('rc-slider');\nrequire('rc-slider/assets/index.css');\n\nvar DownloadProfilesButton =require('expression-atlas-download-profiles-button');\nvar shallowCompare = require('react-addons-shallow-compare');\n\nvar $ = require('jquery');\n\nrequire('jquery-ui-bundle');\nrequire('jquery-hc-sticky');\nrequire('atlas-modernizr');  // Leaks Modernizr to the global window namespace\n\nrequire('fancybox')($);\nrequire('fancybox/dist/css/jquery.fancybox.css');\n\nrequire('jquery-toolbar');\nrequire('jquery-toolbar/jquery.toolbar.css');\n\n\n//*------------------------------------------------------------------*\n\nvar HeatmapBaselineCellVariance = require('expression-atlas-heatmap-baseline-cell-variance');\nvar Legend = require('expression-atlas-legend');\nvar LegendBaseline = Legend.LegendBaseline;\nvar LegendDifferential = Legend.LegendDifferential;\nvar CellDifferential = require('expression-atlas-cell-differential');\nvar DisplayLevelsButton = require('expression-atlas-display-levels-button');\nvar NumberFormat = require('expression-atlas-number-format').default;\nvar HelpTooltips = require('expression-atlas-help-tooltips');\nvar ContrastTooltips = require('expression-atlas-contrast-tooltips');\n\nvar GenePropertiesTooltipModule = require('./genePropertiesTooltipModule.js');\nvar FactorTooltipModule = require('./factorTooltipModule.js');\n\nvar StickyHeaderModule = require('./stickyHeaderModule.js');\nrequire('./stickyHeaderModule.css');\n\n//*------------------------------------------------------------------*\n\nrequire('./Heatmap.css');\n\n//*------------------------------------------------------------------*\n\nvar Heatmap = React.createClass({\n\n    propTypes: {\n        type: React.PropTypes.shape({\n            isBaseline: React.PropTypes.bool,\n            isProteomics: React.PropTypes.bool,\n            isDifferential: React.PropTypes.bool,\n            isMultiExperiment: React.PropTypes.bool,\n            heatmapTooltip: React.PropTypes.string.isRequired\n        }),\n        heatmapConfig: React.PropTypes.object.isRequired,\n        columnHeaders: React.PropTypes.oneOfType([\n            React.PropTypes.arrayOf(React.PropTypes.shape({\n                assayGroupId: React.PropTypes.string.isRequired,\n                factorValue: React.PropTypes.string.isRequired,\n                factorValueOntologyTermId: React.PropTypes.string\n            })),\n            React.PropTypes.arrayOf(React.PropTypes.shape({\n                id: React.PropTypes.string.isRequired,\n                referenceAssayGroup: React.PropTypes.shape({\n                    id: React.PropTypes.string.isRequired,\n                    assayAccessions: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,\n                    replicates: React.PropTypes.number.isRequired\n                }).isRequired,\n                testAssayGroup: React.PropTypes.shape({\n                    id: React.PropTypes.string.isRequired,\n                    assayAccessions: React.PropTypes.arrayOf(React.PropTypes.string).isRequired,\n                    replicates: React.PropTypes.number.isRequired\n                }).isRequired,\n                displayName: React.PropTypes.string.isRequired\n            }))\n        ]).isRequired,\n        profiles: React.PropTypes.object.isRequired,\n        jsonCoexpressions: React.PropTypes.arrayOf(React.PropTypes.shape({\n          geneId: React.PropTypes.string.isRequired,\n          geneName: React.PropTypes.string.isRequired,\n          jsonProfiles: React.PropTypes.object\n        })),\n        geneSetProfiles: React.PropTypes.object,\n        prefFormDisplayLevels: React.PropTypes.object,\n        anatomogramEventEmitter: React.PropTypes.object,\n        googleAnalytics: React.PropTypes.bool,\n        atlasBaseURL: React.PropTypes.string.isRequired,\n        linksAtlasBaseURL: React.PropTypes.string.isRequired,\n        selectGeneIdCallback: React.PropTypes.func,\n        selectedGeneId: React.PropTypes.string,\n        selectColumnIdCallback: React.PropTypes.func,\n        selectedColumnId: React.PropTypes.string,\n        googleAnalyticsCallback: React.PropTypes.func.isRequired\n    },\n\n    getInitialState: function () {\n        var displayLevels = this.props.prefFormDisplayLevels ? (this.props.prefFormDisplayLevels.val() === \"true\") : false;\n        var coexpressionsDisplayed = {};\n        if(this.props.jsonCoexpressions ) {\n          for (var i = 0; i< this.props.jsonCoexpressions.length; i++){\n            coexpressionsDisplayed[this.props.jsonCoexpressions[i].geneId]=0;\n          }\n        }\n        return {\n            showGeneSetProfiles: false,\n            displayLevels: displayLevels,\n            hoveredColumnId: null,\n            hoveredGeneId: null,\n            selectedRadioButton: \"gradients\",\n            coexpressionsDisplayed:coexpressionsDisplayed,\n            userInteractedWithTheHeatmap: false\n        };\n    },\n\n    _coexpressionsCurrentlyShown: function() {\n      var ans = 0;\n      for(var k in this.state.coexpressionsDisplayed){\n        ans+= this.state.coexpressionsDisplayed[k];\n      }\n      return ans;\n    },\n\n    _getProfiles: function() {\n      if(this.state.showGeneSetProfiles){\n        return this.props.geneSetProfiles;\n      } else if (! this.props.jsonCoexpressions){\n        return this.props.profiles;\n      } else {\n        var newRows = [];\n        for(var i = 0; i< this.props.profiles.rows.length ; i++){\n            var thisRow = this.props.profiles.rows[i];\n            newRows.push(thisRow);\n            var coexpressionsForThisRow =\n                this.props.jsonCoexpressions\n                  .filter(function(o){\n                    return o.geneId=== thisRow.id && this.state.coexpressionsDisplayed[o.geneId]\n                  }.bind(this))\n            for(var j = 0 ; j < coexpressionsForThisRow.length ; j++ ){\n              [].push.apply(newRows,coexpressionsForThisRow[j].jsonProfiles.rows.slice(0, this.state.coexpressionsDisplayed[coexpressionsForThisRow[j].geneId]));\n            }\n\n        }\n        return Object.create(this.props.profiles, {rows: {value: newRows}});\n      }\n    },\n\n    _hoverColumn: function(columnId) {\n        this.setState({hoveredColumnId: columnId}, function() {\n            this.props.anatomogramEventEmitter.emit('gxaHeatmapColumnHoverChange', columnId);\n        });\n    },\n\n    _hoverRow: function(rowId) {\n        this.setState({hoveredRowId: rowId}, function() {\n            this.props.anatomogramEventEmitter.emit('gxaHeatmapRowHoverChange', rowId);\n        });\n    },\n\n    selectColumn: function (columnId) {\n        if (this.props.selectColumnIdCallback) {\n            this.props.selectColumnIdCallback(columnId);\n        }\n    },\n\n    selectGene: function (geneId) {\n        if (this.props.selectGeneIdCallback) {\n            this.props.selectGeneIdCallback(geneId);\n        }\n    },\n\n    toggleGeneSets: function () {\n        this.setState({showGeneSetProfiles: !this.state.showGeneSetProfiles});\n    },\n\n    toggleDisplayLevels: function () {\n        var newDisplayLevels = !this.state.displayLevels;\n        this.setState({displayLevels: newDisplayLevels});\n        if (this.props.prefFormDisplayLevels) {\n            this.props.prefFormDisplayLevels.val(newDisplayLevels);\n        }\n        $(window).resize();\n    },\n\n    toggleRadioButton: function(newSelected) {\n        this.setState({selectedRadioButton: newSelected});\n        this.setState({displayLevels: (newSelected === \"levels\")}); //update the LegendType\n    },\n\n    isMicroarray: function () {\n        return this.props.profiles.rows[0].hasOwnProperty(\"designElement\") && this.props.profiles.rows[0].designElement;\n    },\n\n    hasQuartiles: function() {\n        var hasQuartiles = false;\n        for(var i=0; i < this.props.profiles.rows[0].expressions.length; i++) {\n            if(this.props.profiles.rows[0].expressions[i].quartiles != undefined) {\n                hasQuartiles = true;\n                break;\n            }\n        }\n        return hasQuartiles;\n    },\n\n    isSingleGeneResult: function () {\n        return (this.props.profiles.rows.length == 1);\n    },\n\n    _stateChangeRepresentsInteraction: function (s1, s2) {\n      var ks = [\n        \"displayLevels\", \"showGeneSetProfiles\", \"hoveredColumnId\", \"hoveredGeneId\", \"hoveredRowId\"\n      ];\n      for(var i = 0; i< ks.length ; i++){\n        var k = ks[i];\n        if(s1[k] !== s2[k]){\n          return k || true;\n        }\n      }\n      return false;\n    },\n\n    _propsChangeRepresentsInteraction: function (s1, s2) {\n        var ks = [\n            \"selectedGeneId\", \"selectedColumnId\"\n        ];\n        for(var i = 0; i< ks.length ; i++){\n            var k = ks[i];\n            if(s1[k] !== s2[k]){\n                return k || true;\n            }\n        }\n        return false;\n    },\n\n    shouldComponentUpdate: function(nextProps,nextState){\n      return shallowCompare(this, nextProps, nextState);\n    },\n\n    componentWillUpdate: function(nextProps, nextState) {\n      if(! this.state.userInteractedWithTheHeatmap){\n        if( this._stateChangeRepresentsInteraction(this.state, nextState)) {\n          this.props.googleAnalyticsCallback('send', 'event', 'HeatmapReact', 'interact');\n          this.setState({userInteractedWithTheHeatmap: true});\n        }\n\n        if (this._propsChangeRepresentsInteraction(this.props, nextProps)) {\n            this.props.googleAnalyticsCallback('send', 'event', 'HeatmapReact', 'interact');\n            this.setState({userInteractedWithTheHeatmap: true});\n        }\n      }\n\n      if(nextProps.ontologyIdsToHighlight){\n        var forEachXNotInYsEmit = function(xs, ys, eventName){\n          xs\n          .filter(function(id){\n            return ys.indexOf(id)==-1;\n          })\n          .forEach(function(id){\n            eventEmitter.emit(eventName, id);\n          });\n        };\n\n        forEachXNotInYsEmit(nextProps.ontologyIdsToHighlight, this.props.ontologyIdsToHighlight, 'gxaAnatomogramTissueMouseEnter');\n        forEachXNotInYsEmit(this.props.ontologyIdsToHighlight,nextProps.ontologyIdsToHighlight, 'gxaAnatomogramTissueMouseLeave');\n      }\n    },\n\n    componentDidMount: function() {\n        var table           = ReactDOM.findDOMNode(this.refs.heatmapTable),\n            stickyIntersect = ReactDOM.findDOMNode(this.refs.stickyIntersect),\n            stickyColumn    = ReactDOM.findDOMNode(this.refs.stickyColumn),\n            stickyHeadRow   = ReactDOM.findDOMNode(this.refs.stickyHeader),\n            stickyWrap      = ReactDOM.findDOMNode(this.refs.stickyWrap),\n            countAndLegend  = ReactDOM.findDOMNode(this.refs.countAndLegend);\n\n        var stickyHeader = StickyHeaderModule(table, stickyIntersect, stickyColumn, stickyHeadRow, stickyWrap, countAndLegend);\n\n        stickyHeader.setWidthsAndReposition();\n        $(countAndLegend).hcSticky({bottomEnd: stickyHeader.calculateAllowance()});\n\n        $(stickyWrap).scroll(stickyHeader.stickyReposition);\n        $(window).resize(stickyHeader.setWidthsAndReposition)\n                 .scroll(stickyHeader.stickyReposition)\n                 .on(\n                     \"gxaResizeHeatmapAnatomogramHeader\",\n                     function() {\n                         stickyHeader.setWidthAndHeight();\n                         $(countAndLegend).hcSticky(\"resize\");\n                     }\n                 );\n    },\n\n    _getMaxExpressionLevel: function () {\n      var maxExpressionLevel = -Infinity;\n      var profileRows = this._getProfiles().rows;\n      for(var i = 0; i< profileRows.length; i++){\n        for(var j = 0 ; j < (profileRows[i].expressions || []).length; j ++) {\n          var value = profileRows[i].expressions[j].value;\n          if(!isNaN(value) && value > maxExpressionLevel){\n            maxExpressionLevel = value;\n          }\n        }\n      }\n      return maxExpressionLevel;\n    },\n\n    _getMinExpressionLevel: function () {\n      var minExpressionLevel = Infinity;\n      var profileRows = this._getProfiles().rows;\n      for(var i = 0; i< profileRows.length; i++){\n        for(var j = 0 ; j < (profileRows[i].expressions || []).length; j ++) {\n          var value = profileRows[i].expressions[j].value;\n          if(!isNaN(value) && value < minExpressionLevel){\n            minExpressionLevel = value;\n          }\n        }\n      }\n      return minExpressionLevel;\n    },\n\n    legendType: function () {\n        if (this.props.type.isBaseline || this.props.type.isMultiExperiment) {\n          return <LegendBaseline\n            atlasBaseURL={this.props.atlasBaseURL}\n            minExpressionLevel={this._getMinExpressionLevel()}\n            maxExpressionLevel={this._getMaxExpressionLevel()}\n            isMultiExperiment={this.props.type.isMultiExperiment ? true : false}/> ;\n        } else {\n          var ps = this._getProfiles();\n          return <LegendDifferential atlasBaseURL={this.props.atlasBaseURL}\n                                     minDownLevel={parseFloat(ps.minDownLevel)}\n                                     maxDownLevel={parseFloat(ps.maxDownLevel)}\n                                     minUpLevel={parseFloat(ps.minUpLevel)}\n                                     maxUpLevel={parseFloat(ps.maxUpLevel)} />;\n        }\n    },\n\n    _getCoexpressionsAvailable: function() {\n      return ! this.props.jsonCoexpressions\n             ? []\n             : this.props.jsonCoexpressions.map(function(value){\n        return {name: value.geneName, id: value.geneId, amount: value.jsonProfiles && value.jsonProfiles.rows? value.jsonProfiles.rows.length : 0}\n      });\n    },\n\n    _showCoexpressionsFor : function(geneId, amount) {\n      this.setState(function(previousState) {\n        if(previousState.coexpressionsDisplayed.hasOwnProperty(geneId)){\n          previousState.coexpressionsDisplayed[geneId] = amount;\n        }\n        return {coexpressionsDisplayed: JSON.parse(JSON.stringify(previousState.coexpressionsDisplayed))};\n      });\n    },\n\n    _showGeneCount: function() {\n      var shownRows, totalRows;\n      if (this.props.type.isMultiExperiment || ! this.state.showGeneSetProfiles || ! this.props.geneSetProfiles){\n          shownRows = this.props.profiles.rows.length;\n          totalRows = this.props.profiles.searchResultTotal;\n      } else {\n        shownRows = this.props.geneSetProfiles.rows.length;\n        totalRows = this.props.geneSetProfiles.searchResultTotal;\n      }\n\n      return <div style={{display: \"inline-block\", 'verticalAlign': \"top\"}}>\n        {this.props.type.isMultiExperiment\n          ? <span id=\"geneCount\">Showing {shownRows} of {totalRows} experiments found: </span>\n          : <span id=\"geneCount\">Showing {shownRows} of {totalRows} {this.state.showGeneSetProfiles ? 'gene sets' : 'genes' } found\n              {! this.props.jsonCoexpressions || ! this.props.jsonCoexpressions.length ? \":\" : \" and \"+(this._getProfiles().rows.length-shownRows)+ \" similarly expressed genes:\"}</span> }\n        {this.props.geneSetProfiles && !this.props.type.isMultiExperiment ? <a href=\"javascript:void(0)\" onClick={this.toggleGeneSets}>{this.state.showGeneSetProfiles ? '(show individual genes)' : '(show by gene set)'}</a> : ''}\n      </div>\n    },\n\n    _constructDownloadProfilesURL: function() {\n      return this.props.heatmapConfig.downloadProfilesURL.match(/.*\\?.+/) && Object.keys(this.state.coexpressionsDisplayed).length > 0\n            ?this.props.heatmapConfig.downloadProfilesURL+\"&coexpressions=\"+JSON.stringify(this.state.coexpressionsDisplayed)\n            :this.props.heatmapConfig.downloadProfilesURL;\n    },\n\n    render: function () {\n        var paddingMargin = \"15px\";\n\n        return (\n            <div>\n                <div ref=\"countAndLegend\" className=\"gxaHeatmapCountAndLegend\" style={{\"paddingBottom\": paddingMargin, \"position\": \"sticky\"}}>\n                    {this._showGeneCount()}\n                    <div style={{display: \"inline-block\", \"paddingLeft\": \"10px\", \"verticalAlign\": \"top\"}}>\n                        <DownloadProfilesButton ref=\"downloadProfilesButton\"\n                                                downloadProfilesURL={this._constructDownloadProfilesURL()}\n                                                atlasBaseURL={this.props.atlasBaseURL}\n                                                disclaimer={this.props.heatmapConfig.disclaimer}\n                                                onDownloadCallbackForAnalytics={function() {this.props.googleAnalyticsCallback('send', 'event', 'HeatmapReact', 'downloadData')}.bind(this)}/>\n                    </div>\n                    <div style={{display: \"inline-block\", \"paddingLeft\": \"20px\"}}>\n                        {this.legendType()}\n                    </div>\n                </div>\n\n                <div ref=\"stickyWrap\" className=\"gxaStickyTableWrap\" style={{\"marginTop\": paddingMargin}}>\n                    <table ref=\"heatmapTable\" className=\"gxaTableGrid gxaStickyEnabled\" id=\"heatmap-table\">\n                        <HeatmapTableHeader ref=\"heatmapTableHeader\"\n                                            radioId=\"table\"\n                                            isMicroarray={this.isMicroarray()}\n                                            hasQuartiles={this.hasQuartiles()}\n                                            isSingleGeneResult={this.isSingleGeneResult()}\n                                            currentlyShowingCoexpressions={!!this._coexpressionsCurrentlyShown()}\n                                            type={this.props.type}\n                                            columnHeaders={this.props.columnHeaders}\n                                            multipleColumnHeaders={this.props.multipleColumnHeaders}\n                                            selectedColumnId={this.props.selectedColumnId}\n                                            selectColumn={this.selectColumn}\n                                            hoverColumnCallback={this._hoverColumn}\n                                            heatmapConfig={this.props.heatmapConfig}\n                                            atlasBaseURL={this.props.atlasBaseURL}\n                                            displayLevels={this.state.displayLevels}\n                                            toggleDisplayLevels={this.toggleDisplayLevels}\n                                            showGeneSetProfiles={this.state.showGeneSetProfiles}\n                                            selectedRadioButton={this.state.selectedRadioButton}\n                                            toggleRadioButton={this.toggleRadioButton}\n                                            renderContrastFactorHeaders={true}\n                                            anatomogramEventEmitter={this.props.anatomogramEventEmitter}/>\n                        <HeatmapTableRows profiles={this._getProfiles().rows}\n                                          selectedGeneId={this.props.selectedGeneId}\n                                          selectGene={this.selectGene}\n                                          type={this.props.type}\n                                          heatmapConfig={this.props.heatmapConfig}\n                                          atlasBaseURL={this.props.atlasBaseURL}\n                                          linksAtlasBaseURL={this.props.linksAtlasBaseURL}\n                                          displayLevels={this.state.displayLevels}\n                                          showGeneSetProfiles={this.state.showGeneSetProfiles}\n                                          selectedRadioButton={this.state.selectedRadioButton}\n                                          hoverColumnCallback={this._hoverColumn}\n                                          hoverRowCallback={this._hoverRow}\n                                          hasQuartiles={this.hasQuartiles()}\n                                          isSingleGeneResult={this.isSingleGeneResult()}\n                                          renderExpressionCells={true}/>\n                    </table>\n\n                    <div ref=\"stickyIntersect\" className=\"gxaStickyTableIntersect\">\n                        <table className=\"gxaTableGrid\">\n                            <HeatmapTableHeader isMicroarray={this.isMicroarray()}\n                                                    radioId=\"intersect\"\n                                                    hasQuartiles={this.hasQuartiles()}\n                                                    isSingleGeneResult={this.isSingleGeneResult()}\n                                                    currentlyShowingCoexpressions={!!this._coexpressionsCurrentlyShown()}\n                                                    type={this.props.type}\n                                                    columnHeaders={this.props.columnHeaders}\n                                                    multipleColumnHeaders={this.props.multipleColumnHeaders}\n                                                    selectedColumnId={this.props.selectedColumnId}\n                                                    selectColumn={this.selectColumn}\n                                                    heatmapConfig={this.props.heatmapConfig}\n                                                    atlasBaseURL={this.props.atlasBaseURL}\n                                                    linksAtlasBaseURL={this.props.linksAtlasBaseURL}\n                                                    displayLevels={this.state.displayLevels}\n                                                    toggleDisplayLevels={this.toggleDisplayLevels}\n                                                    showGeneSetProfiles={this.state.showGeneSetProfiles}\n                                                    selectedRadioButton={this.state.selectedRadioButton}\n                                                    toggleRadioButton={this.toggleRadioButton}\n                                                    renderContrastFactorHeaders={false}/>\n\n                        </table>\n                    </div>\n\n                    <div ref=\"stickyColumn\" className=\"gxaStickyTableColumn\">\n                        <table className=\"gxaTableGrid\">\n                            <HeatmapTableHeader isMicroarray={this.isMicroarray()}\n                                                radioId=\"column\"\n                                                hasQuartiles={this.hasQuartiles()}\n                                                isSingleGeneResult={this.isSingleGeneResult()}\n                                                currentlyShowingCoexpressions={!!this._coexpressionsCurrentlyShown()}\n                                                columnHeaders={this.props.columnHeaders}\n                                                type={this.props.type}\n                                                multipleColumnHeaders={this.props.multipleColumnHeaders}\n                                                selectedColumnId={this.props.selectedColumnId}\n                                                selectColumn={this.selectColumn}\n                                                heatmapConfig={this.props.heatmapConfig}\n                                                atlasBaseURL={this.props.atlasBaseURL}\n                                                displayLevels={this.state.displayLevels}\n                                                toggleDisplayLevels={this.toggleDisplayLevels}\n                                                showGeneSetProfiles={this.state.showGeneSetProfiles}\n                                                selectedRadioButton={this.state.selectedRadioButton}\n                                                toggleRadioButton={this.toggleRadioButton}\n                                                renderContrastFactorHeaders={false}/>\n                            <HeatmapTableRows profiles={this._getProfiles().rows}\n                                              selectedGeneId={this.props.selectedGeneId}\n                                              selectGene={this.selectGene}\n                                              type={this.props.type}\n                                              heatmapConfig={this.props.heatmapConfig}\n                                              atlasBaseURL={this.props.atlasBaseURL}\n                                              linksAtlasBaseURL={this.props.linksAtlasBaseURL}\n                                              displayLevels={this.state.displayLevels}\n                                              showGeneSetProfiles={this.state.showGeneSetProfiles}\n                                              selectedRadioButton={this.state.selectedRadioButton}\n                                              hoverRowCallback={this._hoverRow}\n                                              hasQuartiles={this.hasQuartiles()}\n                                              isSingleGeneResult={this.isSingleGeneResult()}\n                                              renderExpressionCells={false}/>\n                        </table>\n                    </div>\n\n\n                    <div ref=\"stickyHeader\" className=\"gxaStickyTableHeader\">\n                        <table className=\"gxaTableGrid\">\n                            <HeatmapTableHeader isMicroarray={this.isMicroarray()}\n                                                    radioId=\"header\"\n                                                    hasQuartiles={this.hasQuartiles()}\n                                                    isSingleGeneResult={this.isSingleGeneResult()}\n                                                    currentlyShowingCoexpressions={!!this._coexpressionsCurrentlyShown()}\n                                                    hoverColumnCallback={this._hoverColumn}\n                                                    type={this.props.type}\n                                                    columnHeaders={this.props.columnHeaders}\n                                                    multipleColumnHeaders={this.props.multipleColumnHeaders}\n                                                    selectedColumnId={this.props.selectedColumnId}\n                                                    selectColumn={this.selectColumn}\n                                                    heatmapConfig={this.props.heatmapConfig}\n                                                    atlasBaseURL={this.props.atlasBaseURL}\n                                                    linksAtlasBaseURL={this.props.linksAtlasBaseURL}\n                                                    displayLevels={this.state.displayLevels}\n                                                    toggleDisplayLevels={this.toggleDisplayLevels}\n                                                    showGeneSetProfiles={this.state.showGeneSetProfiles}\n                                                    selectedRadioButton={this.state.selectedRadioButton}\n                                                    toggleRadioButton={this.toggleRadioButton}\n                                                    renderContrastFactorHeaders={true}\n                                                    anatomogramEventEmitter={this.props.anatomogramEventEmitter}/>\n\n                        </table>\n                    </div>\n                    <HeatmapBottomOptions coexpressionsAvailable={this._getCoexpressionsAvailable()}\n                                          showCoexpressionsFor={this._showCoexpressionsFor}\n                                          googleAnalyticsCallback={this.props.googleAnalyticsCallback} />\n                </div>\n\n            </div>\n        );\n    }\n\n});\n\nvar HeatmapTableHeader = React.createClass({\n    propTypes: {\n        currentlyShowingCoexpressions: React.PropTypes.bool.isRequired\n    },\n\n    renderContrastFactorHeaders: function () {\n        var heatmapConfig = this.props.heatmapConfig;\n\n        if (this.props.type.isBaseline) {\n            return renderFactorHeaders(heatmapConfig, this.props.atlasBaseURL, this.props.mainHeaderNames, this.props.type, this.props.columnHeaders, heatmapConfig.experimentAccession,\n                                        this.props.selectColumn, this.props.selectedColumnId, this.props.hoverColumnCallback, this.props.anatomogramEventEmitter);\n        }\n        else if (this.props.type.isDifferential) {\n            return renderContrastHeaders(heatmapConfig, this.props.atlasBaseURL, this.props.columnHeaders, this.props.selectedColumnId, this.props.selectColumn, heatmapConfig.experimentAccession);\n        }\n        else if (this.props.type.isMultiExperiment) {\n            return renderFactorHeaders(heatmapConfig, this.props.atlasBaseURL, null, this.props.type, this.props.columnHeaders, \"\",\n                this.props.selectColumn, this.props.selectedColumnId, this.props.hoverColumnCallback, this.props.anatomogramEventEmitter);\n        }\n    },\n\n    render: function () {\n        var showGeneProfile = this.props.showGeneSetProfiles ? \"Gene set\" : \"Gene\";\n        var showExperimentProfile = this.props.type.isMultiExperiment ? \"Experiment\" : showGeneProfile;\n\n        return (\n            <thead>\n                <tr>\n                    <th className=\"gxaHorizontalHeaderCell gxaHeatmapTableIntersect\" colSpan={this.props.isMicroarray ? 2 : undefined}>\n                        <TopLeftCorner type={this.props.type}\n                                       hasQuartiles={this.props.hasQuartiles}\n                                       radioId={this.props.radioId}\n                                       isSingleGeneResult={this.props.isSingleGeneResult}\n                                       currentlyShowingCoexpressions={this.props.currentlyShowingCoexpressions}\n                                       heatmapConfig={this.props.heatmapConfig}\n                                       displayLevels={this.props.displayLevels}\n                                       toggleDisplayLevels={this.props.toggleDisplayLevels}\n                                       selectedRadioButton={this.props.selectedRadioButton}\n                                       toggleRadioButton={this.props.toggleRadioButton}\n                                       atlasBaseURL={this.props.atlasBaseURL}/>\n                    </th>\n\n                    { this.props.renderContrastFactorHeaders ? this.renderContrastFactorHeaders() : null }\n                </tr>\n\n                <tr>\n                    <th className=\"gxaHorizontalHeaderCell gxaHeatmapTableIntersect\" style={ this.props.isMicroarray ? {width: \"166px\"} : {}}><div>{ showExperimentProfile }</div></th>\n                    { this.props.isMicroarray ? <th className=\"gxaHorizontalHeaderCell gxaHeatmapTableIntersect\"><div>Design Element</div></th> : null}\n                </tr>\n            </thead>\n        );\n    }\n});\n\n\nfunction restrictLabelSize(label, maxSize) {\n    var result = label;\n    if (result.length > maxSize + 1) {  // +1 to account for the extra ellipsis character appended\n        result = result.substring(0, maxSize);\n        if (result.lastIndexOf(\" \") > maxSize - 5) {\n            result = result.substring(0, result.lastIndexOf(\" \"));\n        }\n        result = result + \"…\";\n    }\n    return result;\n}\n\n\nfunction renderFactorHeaders(heatmapConfig, atlasBaseURL, mainHeaderNames, type, assayGroupFactors, experimentAccession, selectColumn,\n                             selectedColumnId, hoverColumnCallback, anatomogramEventEmitter) {\n\n    return assayGroupFactors.map(function (assayGroupFactor) {\n        return <FactorHeader key={mainHeaderNames + assayGroupFactor.factorValue}\n                             type={type}\n                             heatmapConfig={heatmapConfig}\n                             factorName={assayGroupFactor.factorValue}\n                             svgPathId={assayGroupFactor.factorValueOntologyTermId}\n                             assayGroupId={assayGroupFactor.assayGroupId}\n                             experimentAccession={experimentAccession}\n                             selectColumn={selectColumn}\n                             selected={assayGroupFactor.assayGroupId === selectedColumnId}\n                             hoverColumnCallback={hoverColumnCallback}\n                             anatomogramEventEmitter={anatomogramEventEmitter}\n                             atlasBaseURL={atlasBaseURL}/>;\n    });\n}\n\nvar FactorHeader = React.createClass({\n\n    getInitialState: function () {\n        return ({hover: false, selected: false});\n    },\n\n    onMouseEnter: function () {\n        if (this.props.heatmapConfig.enableEnsemblLauncher) {\n            this.setState({hover: true});\n        }\n        this.props.hoverColumnCallback(this.props.svgPathId);\n    },\n\n    onMouseLeave: function () {\n        if (this.props.heatmapConfig.enableEnsemblLauncher) {\n            this.setState({hover: false});\n        }\n        this.props.hoverColumnCallback(null);\n        this._closeTooltip();\n    },\n\n    _closeTooltip: function() {\n        if(!this.props.type.isMultiExperiment) {\n            $(ReactDOM.findDOMNode(this)).tooltip(\"close\");\n        }\n    },\n\n    _anatomogramTissueMouseEnter: function(svgPathId) {\n        if (svgPathId === this.props.svgPathId) {\n            $(ReactDOM.findDOMNode(this.refs.headerCell)).addClass(\"gxaHeaderHover\");\n        }\n    },\n\n    _anatomogramTissueMouseLeave: function(svgPathId) {\n        if (svgPathId === this.props.svgPathId) {\n            $(ReactDOM.findDOMNode(this.refs.headerCell)).removeClass(\"gxaHeaderHover\");\n        }\n    },\n\n    onClick: function () {\n        if (this.props.heatmapConfig.enableEnsemblLauncher) {\n            this.props.selectColumn(this.props.assayGroupId);\n        }\n    },\n\n    componentDidMount: function () {\n        if(!this.props.type.isMultiExperiment) {\n            FactorTooltipModule.init(this.props.atlasBaseURL, this.props.heatmapConfig.accessKey, ReactDOM.findDOMNode(this), this.props.experimentAccession, this.props.assayGroupId);\n        }\n        if (this.props.anatomogramEventEmitter) {\n            this.props.anatomogramEventEmitter.addListener('gxaAnatomogramTissueMouseEnter', this._anatomogramTissueMouseEnter);\n            this.props.anatomogramEventEmitter.addListener('gxaAnatomogramTissueMouseLeave', this._anatomogramTissueMouseLeave);\n        }\n    },\n\n    render: function () {\n        var showSelectTextOnHover = this.state.hover && !this.props.selected ? <span style={{position: \"absolute\", width:\"10px\", right:\"0px\", left:\"95px\", float:\"right\", color:\"green\"}}>  select</span> : null;\n        var showTickWhenSelected = this.props.selected ? <span className=\"rotate_tick\" style={{position: \"absolute\", width:\"5px\", right:\"0px\", left:\"125px\", float:\"right\", color:\"green\"}}> &#10004; </span>: null ;\n        var thClass = \"rotated_cell gxaHoverableHeader\" + (this.props.selected ? \" gxaVerticalHeaderCell-selected\" : \" gxaVerticalHeaderCell\") + (this.props.heatmapConfig.enableEnsemblLauncher ? \" gxaSelectableHeader\" : \"\");\n        var divClass = \"rotate_text factor-header\";\n        var factorName = Modernizr.csstransforms ? restrictLabelSize(this.props.factorName, 14) : this.props.factorName;\n\n        return (\n            <th ref=\"headerCell\" className={thClass} onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave} onClick={this.onClick} rowSpan=\"2\">\n                <div data-assay-group-id={this.props.assayGroupId} data-experiment-accession={this.props.experimentAccession} className={divClass}>\n                    {factorName}\n                    {showSelectTextOnHover}\n                    {showTickWhenSelected}\n                </div>\n            </th>\n        );\n    }\n\n});\n\n\nfunction renderContrastHeaders(heatmapConfig, atlasBaseURL, contrasts, selectedColumnId, selectColumn, experimentAccession){\n    var contrastHeaders = contrasts.map(function (contrast) {\n\n        var plotsThisContrast = {\n            maPlot: contrast.resources.some(function(e) {return e.type === 'ma-plot'}),\n            gseaGo: contrast.resources.some(function(e) {return e.type === 'gsea_go'}),\n            gseaInterpro: contrast.resources.some(function(e) {return e.type === 'gsea_interpro'}),\n            gseaReactome: contrast.resources.some(function(e) {return e.type === 'gsea_reactome'})\n        };\n\n        // var gseaPlotsThisContrast = this.props.gseaPlots ? this.props.gseaPlots[contrast.id] : {go: false, interpro: false, reactome: false};\n        return <ContrastHeader key={contrast.id}\n                               heatmapConfig={heatmapConfig}\n                               atlasBaseURL={atlasBaseURL}\n                               selectColumn={selectColumn}\n                               selected={contrast.id === selectedColumnId}\n                               contrastName={contrast.displayName} arrayDesignAccession={contrast.arrayDesignAccession}\n                               contrastId={contrast.id} experimentAccession={experimentAccession}\n                               showMaPlotButton={plotsThisContrast.maPlot}\n                               showGseaGoPlot={plotsThisContrast.gseaGo}\n                               showGseaInterproPlot={plotsThisContrast.gseaInterpro}\n                               showGseaReactomePlot={plotsThisContrast.gseaReactome}/>;\n    }.bind(this));\n\n    return contrastHeaders;\n}\n\nvar ContrastHeader = React.createClass({\n\n    getInitialState: function () {\n        return ({hover:false, selected:false});\n    },\n\n    onMouseEnter: function () {\n        this.setState({hover:true});\n    },\n\n    onMouseLeave: function () {\n        this.setState({hover:false});\n        this._closeTooltip();\n    },\n\n    _closeTooltip: function() {\n        $(ReactDOM.findDOMNode(this)).tooltip(\"close\");\n    },\n\n    onClick: function () {\n        this.props.selectColumn(this.props.contrastId);\n    },\n\n    componentDidMount: function () {\n        ContrastTooltips(this.props.atlasBaseURL, this.props.heatmapConfig.accessKey, ReactDOM.findDOMNode(this), this.props.experimentAccession, this.props.contrastId);\n\n        if (this.showPlotsButton()) {\n            this.renderToolBarContent(ReactDOM.findDOMNode(this.refs.plotsToolBarContent));\n\n            var $plotsButton = $(ReactDOM.findDOMNode(this.refs.plotsButton));\n            $plotsButton.tooltip({\n                hide: false,\n                show: false,\n                tooltipClass: \"gxaHelpTooltip\"\n            }).button();\n            $plotsButton.toolbar({\n                content: ReactDOM.findDOMNode(this.refs.plotsToolBarContent),\n                position: \"right\",\n                style: \"white\",\n                event: \"click\",\n                hideOnClick: true\n            });\n            $plotsButton.addClass(\"gxaNoTextButton\");\n        }\n    },\n\n    renderToolBarContent: function(contentNode) {\n\n        var $contentNode = $(contentNode);\n\n        var maPlotURL = this.props.atlasBaseURL + \"/external-resources/\" + this.props.experimentAccession + '/' + (this.props.arrayDesignAccession ? this.props.arrayDesignAccession + \"/\" : \"\" ) + this.props.contrastId + \"/ma-plot.png\";\n        var maPlotImgSrcURL = this.props.atlasBaseURL + \"/resources/images/maplot-button.png\";\n\n        var gseaGoPlotURL = this.props.atlasBaseURL + \"/external-resources/\" + this.props.experimentAccession + '/' + this.props.contrastId + \"/gsea_go.png\";\n        var gseaGoPlotImgSrcURL = this.props.atlasBaseURL + \"/resources/images/gsea-go-button.png\";\n\n        var gseaInterproPlotURL = this.props.atlasBaseURL + \"/external-resources/\" + this.props.experimentAccession + '/' + this.props.contrastId + \"/gsea_interpro.png\";\n        var gseaInterproImgSrcURL = this.props.atlasBaseURL + '/resources/images/gsea-interpro-button.png';\n\n        var gseaReactomePlotURL = this.props.atlasBaseURL + \"/external-resources/\" + this.props.experimentAccession + '/' + this.props.contrastId + \"/gsea_reactome.png\";\n        var gseaReactomePlotImgSrcURL = this.props.atlasBaseURL + \"/resources/images/gsea-reactome-button.png\";\n\n        var content =\n            <div>\n                {this.props.showMaPlotButton ? <a href={maPlotURL} id=\"maButtonID\" title=\"Click to view MA plot for the contrast across all genes\" onClick={this.clickButton}><img src={maPlotImgSrcURL} /></a> : null }\n                {this.props.showGseaGoPlot ? <a href={gseaGoPlotURL} id=\"goButtonID\" title=\"Click to view GO terms enrichment analysis plot\" onClick={this.clickButton}><img src={gseaGoPlotImgSrcURL} /></a> : null }\n                {this.props.showGseaInterproPlot ? <a href={gseaInterproPlotURL} id=\"interproButtonID\" title=\"Click to view Interpro domains enrichment analysis plot\" onClick={this.clickButton}><img src={gseaInterproImgSrcURL} /></a> : null }\n                {this.props.showGseaReactomePlot ? <a href={gseaReactomePlotURL} id=\"reactomeButtonID\" title=\"Click to view Reactome pathways enrichment analysis plot\" onClick={this.clickButton}><img src={gseaReactomePlotImgSrcURL} /></a> : null }\n            </div>;\n\n        // the tool bar content will be copied around the DOM by the toolbar plugin\n        // so we render using static markup because otherwise when copied, we'll end up with\n        // duplicate data-reactids\n        $contentNode.html(ReactDOMServer.renderToStaticMarkup(content));\n\n        $contentNode.find('a').tooltip({\n            tooltipClass: \"gxaHelpTooltip\"\n        });\n\n        //need to use each here otherwise we get a fancybox error\n        $contentNode.find('a').each(function (index, button) {\n            $(button).fancybox({\n                padding:0,\n                openEffect:'elastic',\n                closeEffect:'elastic'\n            });\n        });\n    },\n\n    clickButton: function (event) {\n        // prevent contrast from being selected\n        event.stopPropagation();\n    },\n\n    showPlotsButton: function () {\n        return this.props.showMaPlotButton || this.props.showGseaGoPlot || this.props.showGseaInterproPlot || this.props.showGseaReactomePlot;\n    },\n\n    render: function () {\n        var thStyle = this.showPlotsButton() ? {minWidth: \"80px\"} : {};\n        var textStyle = this.showPlotsButton() ? {top: \"57px\"} : {};\n\n        var plotsImgSrcURL = this.props.atlasBaseURL + \"/resources/images/yellow-chart-icon.png\";\n\n        var plotsButton = (\n            <div style={{textAlign: \"right\", paddingRight: \"3px\"}} >\n                <a href=\"#\" ref=\"plotsButton\" onClick={this.clickButton} title=\"Click to view plots\"><img src={plotsImgSrcURL}/></a>\n            </div>\n        );\n\n        var showSelectTextOnHover = this.state.hover && !this.props.selected ? <span style={{position: \"absolute\", width: \"10px\", right: \"0px\", left: \"95px\", bottom: \"-35px\", color: \"green\"}}>  select</span> : null;\n        var showTickWhenSelected = this.props.selected ? <span className=\"rotate_tick\" style={{position: \"absolute\", width: \"5px\", right: \"0px\", left: \"125px\", bottom: \"-35px\", color: \"green\"}}> &#10004; </span>: null;\n        var thClass = \"rotated_cell gxaHoverableHeader\" + (this.props.selected ? \" gxaVerticalHeaderCell-selected\" : \" gxaVerticalHeaderCell\") + (this.props.heatmapConfig.enableEnsemblLauncher ? \" gxaSelectableHeader \" : \"\");\n        var divClass = \"rotate_text factor-header\";\n        var contrastName = Modernizr.csstransforms ? restrictLabelSize(this.props.contrastName, 17) : this.props.contrastName;\n\n        return (\n            <th className={thClass} rowSpan=\"2\" style={thStyle} onMouseEnter={this.props.heatmapConfig.enableEnsemblLauncher ? this.onMouseEnter : undefined} onMouseLeave={this.props.heatmapConfig.enableEnsemblLauncher ? this.onMouseLeave : this._closeTooltip} onClick={this.props.heatmapConfig.enableEnsemblLauncher ? this.onClick : undefined}>\n                <div data-contrast-id={this.props.contrastId} data-experiment-accession={this.props.experimentAccession} className={divClass} style={textStyle}>\n                    {contrastName}\n                    {showSelectTextOnHover}\n                    {showTickWhenSelected}\n                </div>\n                {this.showPlotsButton() ? plotsButton : null}\n                {this.showPlotsButton() ? <div ref=\"plotsToolBarContent\" style={{display: \"none\"}}>placeholder</div> : null}\n            </th>\n        );\n    }\n\n});\n\nvar TopLeftCorner = React.createClass({\n\n    displayLevelsBaseline: function() {\n        if (this.props.hasQuartiles && this.props.isSingleGeneResult) {\n            var LRG = this.props.currentlyShowingCoexpressions\n              ? LevelsRadioGroup(\"gradients\", \"levels\")\n              : LevelsRadioGroup(\"gradients\", \"levels\", \"variance\");\n            return (\n                <LRG radioId={this.props.radioId}\n                                  selectedRadioButton={this.props.selectedRadioButton}\n                                  toggleRadioButton={this.props.toggleRadioButton}/>\n            );\n        } else if (this.props.type.isBaseline || this.props.type.isMultiExperiment) {\n            return (\n                    <DisplayLevelsButton hideText=\"Hide levels\"\n                                         showText=\"Display levels\"\n                                         onClickCallback={this.props.toggleDisplayLevels}\n                                         displayLevels={this.props.displayLevels}\n                                         width=\"150px\" fontSize=\"14px\"/>\n            );\n        } else {\n            return (\n                    <DisplayLevelsButton hideText=\"Hide log<sub>2</sub>-fold change\"\n                                         showText=\"Display log<sub>2</sub>-fold change\"\n                                         onClickCallback={this.props.toggleDisplayLevels}\n                                         displayLevels={this.props.displayLevels}\n                                         width=\"200px\" fontSize=\"14px\"/>\n            );\n        }\n    },\n\n    render: function () {\n        return (\n            <div className=\"gxaHeatmapMatrixTopLeftCorner\">\n                <span data-help-loc={this.props.type.heatmapTooltip} ref=\"tooltipSpan\"/>\n                <div style={{display: \"table-cell\", verticalAlign: \"middle\", textAlign: \"center\"}}>\n                    {this.displayLevelsBaseline()}\n                </div>\n            </div>\n        );\n    },\n\n    componentDidMount: function () {\n        HelpTooltips(this.props.atlasBaseURL, 'experiment', ReactDOM.findDOMNode(this.refs.tooltipSpan));\n    }\n\n});\n\n\nvar LevelsRadioGroup = function(__args__) {\n  var args = [].slice.call(arguments)\n  var inputElements = [].concat.apply([],\n    args.map(\n      function(el, ix){\n        return [\n          <RadioGroup.Radio key={3*ix} type=\"radio\" value={el}/>,\n          <span key={3*ix +1}>{\"Display \"+el}</span>,\n          <br key={3*ix +2}/> ];\n      }\n    )).slice(0,-1);\n  return (React.createClass({\n    displayName: \"levelsRadioGroup for \"+args,\n\n    getDefaultProps: function(){\n      return {\n        allValues: args\n      }\n    },\n\n    getInitialState: function() {\n        return {\n            value: this.props.allValues.indexOf(this.props.selectedRadioButton) > -1 ?\n                this.props.selectedRadioButton :\n                this.props.allValues[0]\n        };\n    },\n    componentDidMount: function() {\n      if(this.props.allValues.indexOf(this.props.selectedRadioButton)==-1){\n        this.handleChange(this.state.value);\n      }\n    },\n\n    render: function() {\n        return (\n            <RadioGroup.RadioGroup name={\"displayLevelsGroup_\" + this.props.radioId} selectedValue={this.state.value} onChange={this.handleChange}>\n                <div style={{\"marginLeft\": \"10px\", \"marginTop\": \"8px\"}}>\n                    {inputElements}\n                </div>\n            </RadioGroup.RadioGroup>\n        );\n    },\n\n    handleChange: function(selectedRadio) {\n        this.props.toggleRadioButton(selectedRadio);\n        this.setState({value: selectedRadio});\n\n        // To resize the sticky column/header in case the row height or column width changes\n        $(window).resize();\n    }\n  }) );\n};\n\n\nvar HeatmapTableRows = React.createClass({\n    propTypes: {\n        profiles: React.PropTypes.arrayOf(React.PropTypes.object).isRequired\n    },\n\n    profileRowType: function (profile)  {\n        var geneProfileKey = this.props.heatmapConfig.species + \"-\" +\n            (this.props.type.isDifferential\n              ? profile.name + \"-\" + profile.designElement\n              : profile.name);\n        return (this.props.type.isMultiExperiment ?\n            <GeneProfileRow key={geneProfileKey}\n                            id={profile.id}\n                            name={profile.name}\n                            type={this.props.type}\n                            experimentType={profile.experimentType}\n                            expressions={profile.expressions}\n                            serializedFilterFactors={profile.serializedFilterFactors}\n                            heatmapConfig={this.props.heatmapConfig}\n                            atlasBaseURL={this.props.atlasBaseURL}\n                            linksAtlasBaseURL={this.props.linksAtlasBaseURL}\n                            displayLevels={this.props.displayLevels}\n                            renderExpressionCells={this.props.renderExpressionCells}\n                            hoverColumnCallback={this.props.hoverColumnCallback}\n                            hoverRowCallback={this.props.hoverRowCallback}/>\n            :\n            <GeneProfileRow key={geneProfileKey}\n                            selected={profile.id === this.props.selectedGeneId}\n                            selectGene={this.props.selectGene}\n                            designElement={profile.designElement}\n                            id={profile.id}\n                            name={profile.name}\n                            type={this.props.type}\n                            expressions={profile.expressions}\n                            heatmapConfig={this.props.heatmapConfig}\n                            atlasBaseURL={this.props.atlasBaseURL}\n                            linksAtlasBaseURL={this.props.linksAtlasBaseURL}\n                            displayLevels={this.props.displayLevels}\n                            showGeneSetProfiles={this.props.showGeneSetProfiles}\n                            selectedRadioButton={this.props.selectedRadioButton}\n                            hasQuartiles={this.props.hasQuartiles}\n                            isSingleGeneResult={this.props.isSingleGeneResult}\n                            renderExpressionCells={this.props.renderExpressionCells}\n                            hoverColumnCallback={this.props.hoverColumnCallback}\n                            hoverRowCallback={this.props.hoverRowCallback}/>\n        );\n    },\n\n    render: function () {\n        var geneProfilesRows = this.props.profiles.map(function (profile) {\n\n            return this.profileRowType(profile);\n        }.bind(this));\n\n        return (\n            <tbody>\n            {geneProfilesRows}\n            </tbody>\n        );\n    }\n});\n\n\nvar GeneProfileRow = React.createClass({\n    propTypes: {\n        atlasBaseURL: React.PropTypes.string.isRequired,\n        linksAtlasBaseURL: React.PropTypes.string.isRequired\n    },\n\n    getInitialState: function () {\n        return ({hover:false, selected:false, levels: this.props.displayLevels});\n    },\n\n    onMouseEnter: function () {\n        if (this.props.heatmapConfig.enableEnsemblLauncher) {\n            this.setState({hover:true});\n        }\n        // We use name instead of id because in multiexperiment the same id can appear under different name (same experiment, different conditions)\n        this.props.hoverRowCallback(this.props.name);\n    },\n\n    onMouseLeave: function () {\n        if (this.props.heatmapConfig.enableEnsemblLauncher) {\n            this.setState({hover:false});\n        }\n        this._closeTooltip();\n        this.props.hoverRowCallback(null);\n    },\n\n    onClick: function () {\n        if (this.props.heatmapConfig.enableEnsemblLauncher) {\n            this.props.selectGene(this.props.id);\n        }\n    },\n\n    _geneNameLinked: function () {\n        var experimentURL = '/experiments/' + this.props.id + '?geneQuery=' + this.props.heatmapConfig.geneQuery + (this.props.serializedFilterFactors ? \"&serializedFilterFactors=\" + encodeURIComponent(this.props.serializedFilterFactors) : \"\");\n        var geneURL = this.props.showGeneSetProfiles ? '/query?geneQuery=' + this.props.name : '/genes/' + this.props.id;\n\n        var titleTooltip = this.props.type.isMultiExperiment ? (this.props.experimentType == \"PROTEOMICS_BASELINE\" ? \"Protein Expression\" : \"RNA Expression\" ) : \"\";\n\n        var experimentOrGeneURL = this.props.linksAtlasBaseURL + (this.props.type.isMultiExperiment ? experimentURL : geneURL);\n\n        // don't render id for gene sets to prevent tooltips\n        // The vertical align in the <a> element is needed because the kerning in the font used in icon-conceptual is vertically off\n        return (\n            <span title={titleTooltip} style={{\"display\": \"table-cell\"}}>\n                <span className=\"icon icon-conceptual icon-c2\" data-icon={this.props.type.isMultiExperiment ? (this.props.experimentType == \"PROTEOMICS_BASELINE\" ? 'P' : 'd') : ''}/>\n                <a ref=\"geneName\" id={this.props.showGeneSetProfiles ? '' : this.props.id} href={experimentOrGeneURL} onClick={this.geneNameLinkClicked} style={{\"verticalAlign\": \"15%\"}}>{this.props.name}</a>\n            </span>\n        );\n    },\n\n    geneNameLinkClicked: function (event) {\n        // prevent row from being selected\n        event.stopPropagation();\n    },\n\n    displayLevelsRadio: function() {\n        if(this.props.hasQuartiles && this.props.isSingleGeneResult) {\n            return this.props.selectedRadioButton === \"levels\";\n        }\n        else return (this.props.displayLevels);\n    },\n\n    cellType: function (expression) {\n        if (this.props.type.isBaseline) {\n            if(this.props.selectedRadioButton === \"variance\" && expression.quartiles) {\n                return (\n                    <HeatmapBaselineCellVariance key={this.props.id + expression.factorName}\n                                                 quartiles={expression.quartiles}\n                                                 hoverColumnCallback={this.props.hoverColumnCallback}/>\n                );\n            }\n            else {\n                return (\n                    <CellBaseline key={this.props.id + expression.factorName}\n                                  factorName={expression.factorName}\n                                  color={expression.color}\n                                  value={expression.value}\n                                  heatmapConfig={this.props.heatmapConfig}\n                                  displayLevels={this.displayLevelsRadio()}\n                                  svgPathId={expression.svgPathId}\n                                  geneSetProfiles={this.props.showGeneSetProfiles}\n                                  id={this.props.id}\n                                  name={this.props.name}\n                                  hoverColumnCallback={this.props.hoverColumnCallback}/>\n                );\n            }\n        }\n        else if (this.props.type.isDifferential) {\n            return (\n                <CellDifferential key={this.props.designElement + this.props.name + expression.contrastName}\n                                  colour={expression.color}\n                                  foldChange={parseFloat(expression.foldChange)}\n                                  pValue={parseFloat(expression.pValue)}\n                                  tStat={parseFloat(expression.tStat)}\n                                  displayLevels={this.props.displayLevels}/>\n            );\n        }\n        else if (this.props.type.isMultiExperiment) {\n            return (\n                <CellMultiExperiment key={this.props.id + expression.factorName}\n                                     factorName={expression.factorName}\n                                     serializedFilterFactors={this.props.serializedFilterFactors}\n                                     color={expression.color}\n                                     value={expression.value}\n                                     displayLevels={this.props.displayLevels}\n                                     svgPathId={expression.svgPathId}\n                                     id={this.props.id}\n                                     name={this.props.name}\n                                     hoverColumnCallback={this.props.hoverColumnCallback}/>\n            );\n        }\n    },\n\n    cells: function (expressions) {\n\n        return expressions.map(function (expression) {\n            return this.cellType(expression);\n        }.bind(this));\n    },\n\n    render: function () {\n        var showSelectTextOnHover = this.state.hover && !this.props.selected ? <span style={{\"display\": \"table-cell\", \"textAlign\": \"right\", \"paddingLeft\": \"10px\", \"color\": \"green\", \"visibility\": \"visible\"}}>select</span> :\n            <span style={{\"display\": \"table-cell\", \"textAlign\": \"right\", \"paddingLeft\": \"10px\", \"color\": \"green\", \"visibility\": \"hidden\"}}>select</span>;\n        var showTickWhenSelected = this.props.selected ? <span style={{\"float\": \"right\", \"color\": \"green\"}}> &#10004; </span>: null ;\n        var className = (this.props.selected ? \"gxaHorizontalHeaderCell-selected gxaHoverableHeader\" : \"gxaHorizontalHeaderCell gxaHoverableHeader\") + (this.props.heatmapConfig.enableEnsemblLauncher ? \" gxaSelectableHeader\" : \"\");\n        var rowClassName = this.props.type.isMultiExperiment ? (this.props.experimentType == \"PROTEOMICS_BASELINE\" ? \"gxaProteomicsExperiment\" : \"gxaTranscriptomicsExperiment\" ) : \"\";\n\n        return (\n            <tr className={rowClassName}>\n                <th className={className} onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave} onClick={this.onClick}>\n                    <div style={{display: \"table\", width: \"100%\"}}>\n                        <div style={{display: \"table-row\"}}>\n                            { this._geneNameLinked() }\n                            { this.props.heatmapConfig.enableEnsemblLauncher ? showSelectTextOnHover : null }\n                            { this.props.heatmapConfig.enableEnsemblLauncher ? showTickWhenSelected : null }\n                        </div>\n                    </div>\n                </th>\n                {this.props.designElement ? <th className=\"gxaHeatmapTableDesignElement\">{this.props.designElement}</th> : null}\n                {this.props.renderExpressionCells ? this.cells(this.props.expressions) : null}\n            </tr>\n        );\n    },\n\n    componentDidMount: function () {\n        if(!this.props.type.isMultiExperiment) {\n            GenePropertiesTooltipModule.init(this.props.atlasBaseURL, ReactDOM.findDOMNode(this.refs.geneName), this.props.id, this.props.name);\n        }\n    },\n\n    _closeTooltip: function() {\n        if(!this.props.type.isMultiExperiment) {\n            $(ReactDOM.findDOMNode(this.refs.geneName)).tooltip(\"close\");\n        }\n    }\n\n});\n\nvar CellBaseline = React.createClass({\n    render: function () {\n        if (this._noExpression()) {\n            return (<td></td>);\n        }\n\n        var style = {\"backgroundColor\": this._isUnknownExpression() ? \"white\" : this.props.color};\n\n        return (\n            <td style={style} onMouseEnter={this._onMouseEnter} onMouseLeave={this._onMouseLeave}>\n                <div\n                    className=\"gxaHeatmapCell\"\n                    style={{visibility: this._isUnknownExpression() || this.props.displayLevels ? \"visible\" : \"hidden\"}}>\n                    {this._isUnknownExpression() ? this._unknownCell() : NumberFormat.baselineExpression(this.props.value)}\n                </div>\n            </td>\n        );\n    },\n\n    componentDidMount: function () {\n        this.addQuestionMarkTooltip();\n    },\n\n    // need this so that we re-add question mark tooltip, if it doesn't exist, when switching between\n    // individual genes and gene sets\n    componentDidUpdate: function () {\n        this.addQuestionMarkTooltip();\n    },\n\n    addQuestionMarkTooltip: function() {\n        function hasQuestionMark(unknownElement) {\n            return unknownElement.children.length;\n        }\n\n        if (this._isUnknownExpression() && !hasQuestionMark(ReactDOM.findDOMNode(this.refs.unknownCell))) {\n            HelpTooltips(this.props.atlasBaseURL, 'experiment', ReactDOM.findDOMNode(this.refs.unknownCell));\n        }\n    },\n\n    _hasKnownExpression: function () {\n        // true if not blank or UNKNOWN, ie: has a expression with a known value\n        return (this.props.value && !this._isUnknownExpression());\n    },\n\n    _isUnknownExpression: function () {\n        return (this.propsvalue === \"UNKNOWN\")\n    },\n\n    _noExpression: function () {\n        return !this.props.value;\n    },\n\n    _unknownCell: function () {\n        return (\n            <span ref='unknownCell' data-help-loc={this.props.geneSetProfiles ? '#heatMapTableGeneSetUnknownCell' : '#heatMapTableUnknownCell'}></span>\n        );\n    },\n\n    _onMouseEnter: function() {\n        if (this._hasKnownExpression()) {\n            this.props.hoverColumnCallback(this.props.svgPathId);\n        }\n    },\n\n    _onMouseLeave: function() {\n        if (this._hasKnownExpression()) {\n            this.props.hoverColumnCallback(null);\n        }\n    }\n});\n\n\nvar CellMultiExperiment = React.createClass({\n    _isNAExpression : function () {\n        return (this.props.value === \"NT\");\n    },\n\n    _noExpression: function () {\n        return !this.props.value;\n    },\n\n    _tissueNotStudiedInExperiment: function () {\n        return (\n            <span>NA</span>\n        );\n    },\n\n    _onMouseEnter: function() {\n        if (!this._noExpression() && !this._isNAExpression()) {\n            this.props.hoverColumnCallback(this.props.svgPathId);\n        }\n    },\n\n    _onMouseLeave: function() {\n        if (!this._noExpression() && !this._isNAExpression()) {\n            this.props.hoverColumnCallback(null);\n        }\n    },\n\n    render: function () {\n\n        if (this._noExpression()) {\n            return (<td></td>);\n        }\n\n        var style = {\"backgroundColor\": this.props.color};\n\n        return (\n            <td style={style} onMouseEnter={this._onMouseEnter} onMouseLeave={this._onMouseLeave}>\n                <div className=\"gxaHeatmapCell\" style={{visibility: this._isNAExpression() || this.props.displayLevels ? \"visible\" : \"hidden\"}}>\n                    {this._isNAExpression(this.props.value) ? this._tissueNotStudiedInExperiment() : NumberFormat.baselineExpression(this.props.value)}\n                </div>\n            </td>\n        );\n    }\n});\n\nvar HeatmapBottomOptions = React.createClass({\n    propTypes: {\n        coexpressionsAvailable: React.PropTypes.arrayOf(React.PropTypes.shape({\n            name: React.PropTypes.string.isRequired,\n            id: React.PropTypes.string.isRequired,\n            amount: React.PropTypes.number.isRequired\n        })).isRequired,\n        showCoexpressionsFor: React.PropTypes.func.isRequired,\n        googleAnalyticsCallback: React.PropTypes.func.isRequired\n    },\n\n    render: function () {\n        var options = [];\n        for (var i = 0; i < this.props.coexpressionsAvailable.length; i++) {\n            var el = this.props.coexpressionsAvailable[i];\n            options.push(<CoexpressionOption\n                key={i}\n                geneName={el.name}\n                numCoexpressionsAvailable={el.amount}\n                showCoexpressionsCallback={ function(amount){\n                  this.props.googleAnalyticsCallback('send', 'event', 'HeatmapReact', 'coexpressions-use');\n                  this.props.showCoexpressionsFor(el.id,amount);\n                }.bind(this) }\n            />);\n        }\n        ;\n        return (\n            <div>\n                {options}\n            </div>\n        );\n    },\n\n    componentDidMount: function () {\n        if (this.props.coexpressionsAvailable.length > 0) {\n            this.props.googleAnalyticsCallback('send', 'event', 'HeatmapReact', 'coexpressions-display');\n        }\n    }\n\n\n});\n\nvar CoexpressionOption = React.createClass({\n    propTypes: {\n        geneName: React.PropTypes.string.isRequired,\n        numCoexpressionsAvailable: React.PropTypes.number.isRequired,\n        showCoexpressionsCallback: React.PropTypes.func.isRequired\n    },\n    getInitialState: function () {\n        return {visible: 0};\n    },\n    _chooseValue: function (amount) {\n        this.setState({visible: amount});\n        this.props.showCoexpressionsCallback(amount);\n    },\n\n    _turnOnWithDefaultValue: function () {\n        this._chooseValue(10);\n    },\n\n    _showOfferToDisplay: function () {\n        return <DisplayLevelsButton hideText=\"\"\n                                    showText=\"Add similarly expressed genes\"\n                                    onClickCallback={this._turnOnWithDefaultValue}\n                                    displayLevels={false}\n                                    width=\"250px\"\n                                    fontSize=\"14px\"/>\n    },\n\n    _showSlider: function () {\n        var marks = {\n            0: \"off\",\n            10: \"10\"\n        };\n        marks[this.props.numCoexpressionsAvailable] = this.props.numCoexpressionsAvailable;\n        return <div>\n            <p>{\"Display genes with similar expressions to \" + this.props.geneName + \":\"}</p>\n            <div className=\"gxaSlider\">\n                <Slider min={0} max={this.props.numCoexpressionsAvailable} onAfterChange={this._chooseValue}\n                        marks={marks} included={false} defaultValue={10}/>\n            </div>\n        </div>\n    },\n\n    render: function () {\n        return <div className=\"gxaDisplayCoexpressionOffer\">\n            {this.props.numCoexpressionsAvailable\n              ? this.state.visible\n                  ? this._showSlider()\n                  : this._showOfferToDisplay()\n              : <span>{\"No genes with similar expressions to \"+this.props.geneName+\" available for display\"}</span>\n            }\n        </div>\n    },\n\n    componentDidUpdate: function () {\n        $(window).trigger(\"gxaResizeHeatmapAnatomogramHeader\");\n    }\n});\n\n//*------------------------------------------------------------------*\n\nmodule.exports = Heatmap;\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/src/Heatmap.jsx","module.exports = require(`./src/DownloadProfilesButton.jsx`);\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/expression-atlas-download-profiles-button/index.js","const React = require(`react`);\nconst Modal = require(`react-bootstrap/lib/Modal`);\nconst Button = require(`react-bootstrap/lib/Button`);\nconst Glyphicon = require(`react-bootstrap/lib/Glyphicon`);\nconst Disclaimers = require(`./Disclaimers.jsx`);\n\nconst DownloadProfilesButton = React.createClass({\n    propTypes: {\n        atlasBaseURL: React.PropTypes.string.isRequired,\n        downloadProfilesURL: React.PropTypes.string.isRequired,\n        disclaimer: React.PropTypes.string.isRequired,\n        onDownloadCallbackForAnalytics: React.PropTypes.func.isRequired\n    },\n\n    getInitialState() {\n        return { showModal: false };\n    },\n\n    _closeModal() {\n        this.setState({ showModal: false });\n    },\n\n    _disclaimer() {\n      return this.props.disclaimer && Disclaimers[this.props.disclaimer] || {title: null, content: null};\n    },\n\n    _afterDownloadButtonClicked() {\n        if(!this._disclaimer().title && !this._disclaimer().content) {\n            this._commenceDownload();\n        } else {\n            this.setState({ showModal: true });\n        }\n    },\n\n    _commenceDownload() {\n        this.props.onDownloadCallbackForAnalytics();\n        window.location.href = this.props.atlasBaseURL + this.props.downloadProfilesURL;\n    },\n\n    _commenceDownloadAndCloseModal() {\n        this._commenceDownload();\n        this._closeModal();\n    },\n\n    render() {\n        return (\n            <a onClick={this._afterDownloadButtonClicked}>\n                <Button bsSize=\"small\">\n                    <Glyphicon glyph=\"download-alt\"/> Download all results\n                </Button>\n\n                <Modal show={this.state.showModal} onHide={this._closeModal}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>\n                            {this._disclaimer().title}\n                        </Modal.Title>\n                    </Modal.Header>\n\n                    <Modal.Body>\n                        {this._disclaimer().content}\n                    </Modal.Body>\n\n                    <Modal.Footer>\n                        <Button onClick={this._closeModal}>Close</Button>\n                        <Button bsStyle=\"primary\" onClick={this._commenceDownloadAndCloseModal}>\n                            Continue downloading\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </a>\n        );\n    }\n});\n\nmodule.exports = DownloadProfilesButton;\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/expression-atlas-download-profiles-button/src/DownloadProfilesButton.jsx","const React = require(`react`);\n\nconst BlueprintText = {\n    title: `The Blueprint project Data Reuse statement`,\n    content: (\n        <div>\n            <p>\n                This document refers to the reuse of data generated by the EC funded FP7 High Impact Project,\n                Blueprint.\n            </p>\n            <p>\n                Blueprint regularly released analysis results via its ftp site and makes the raw sequence data\n                available through the sequence archives at the EMBL-EBI. Much Blueprint data is generated from samples\n                whose data must be released through a managed access process. For these data sets external users must\n                apply for permission to access the data from the European Genome-phenome Archive (EGA) through the\n                Blueprint Data Access Committee.\n            </p>\n            <p>\n                The Blueprint consortium expects this data to be valuable to other researchers and in keeping with Fort\n                Lauderdale principles data users may use the data for many studies, but are expected to allow the data\n                producers to make the first presentations and to publish the first paper with global analyses of the\n                data.\n            </p>\n\n            <h4>Global analyses of Project data</h4>\n            <p>\n                Blueprint plans to publish global analyses of the sequencing data, epigenetic marks, expression levels\n                and variation both in the context of normal hematopoietic cells and of those neoplastic and\n                non-neoplastic diseases studied within th econsortium. Talks, posters, and papers on all such analyses\n                are to be published first by the Blueprint project, by approved presenters on behalf of the Project,\n                with the Project as author. When the first major Project paper on these analyses is published, then\n                researchers inside and outside the Project are free to present and publish using the Project data for\n                these and other analyses.\n            </p>\n\n            <h4>Large-scale analyses of Project data</h4>\n            <p>\n                Groups within the Project may make presentations and publish papers on more extensive analyses of\n                topics to be included in the main analysis presentations and papers, coincident with the main project\n                analysis presentations and papers. The major points would be included in the main Project presentations\n                and papers, but these additional presentations and papers allow more focused discussion of methods and\n                results. The author list would include the Consortium.\n            </p>\n\n            <h4>Methods development using Project data</h4>\n            <p>\n                Researchers who have used small amounts of Project data (&lt;= one chromosome) may present methods\n                development posters, talks, and papers that include these data prior to the first major Project paper,\n                without needing Project approval or authorship, although the Project should be acknowledged. Methods\n                presentations or papers on global analyses or analyses using large amounts of Project data, on topics\n                that the Consortium plans to examine, would be similar to large-scale analyses of Project data:\n                researchers within the Project may make presentations or submit papers at the same time as the main\n                Project presentations and papers, and others could do so after the Project publishes the first major\n                analysis paper.\n            </p>\n\n            <h4>Disease studies using Project data</h4>\n            <p>\n                Researchers may present and publish on use of Project data in specific chromosome regions (that are not\n                of general interest) or as summaries (such as number of differentially expressed genes in cell types\n                assayed by Blueprint) for studies on diseases not studied by BLUEPRINT without Project approval, prior\n                to the first major Project paper being published. The Project should not be listed as an author.\n            </p>\n\n            <h4>Authors who use data from the project must acknowledge Blueprint using the following wording</h4>\n            <p>\n                This study makes use of data generated by the Blueprint Consortium. A full list of the investigators\n                who contributed to the generation of the data is available from\n                <a href=\"http://www.blueprint-epigenome.eu\">www.blueprint-epigenome.eu</a>. Funding for the\n                project was provided by the European Union's Seventh Framework Programme (FP7/2007-2013) under grant\n                agreement no 282510 – BLUEPRINT.\n            </p>\n        </div>\n    )\n};\n\nconst ZebrafishText = {\n    title: `Data Reuse statement`,\n    content: (\n        <div>\n            <p>\n                This is a pre-publication release in accordance with <a href=\"http://www.sanger.ac.uk/datasharing/\">\n                the Fort Lauderdale Agreement </a>. Feel free to search and download data on your genes of interest.\n            </p>\n            <p>\n                Equally, you can use the dataset to show developmental expression profiles for specific genes in your\n                publications.\n            </p>\n            <p>\n                However, we ask that you refrain from publishing larger scale or genome-wide analyses of this dataset\n                for 12 months from the time of deposition in Expression Atlas or until we have published our\n                transcriptional time-course paper, whichever comes first.\n            </p>\n            <p>\n                For citations in publications before the paper is out please use this link to the Expression Atlas\n                site (<a href=\"https://www.ebi.ac.uk/gxa/experiments/E-ERAD-475\">\n                http://www.ebi.ac.uk/gxa/experiments/E-ERAD-475</a>) and acknowledge us: “We would like to thank the\n                Busch-Nentwich lab for providing RNA-seq data.”\n            </p>\n        </div>\n    )\n};\n\nmodule.exports = {\"fortLauderdale\": BlueprintText, \"zebrafish\": ZebrafishText};\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/expression-atlas-download-profiles-button/src/Disclaimers.jsx","/*! modernizr 3.3.1 (Custom Build) | MIT *\n * https://modernizr.com/download/?-csstransforms-setclasses !*/\n!function(e,n,t){function r(e,n){return typeof e===n}function o(){var e,n,t,o,s,i,a;for(var l in C)if(C.hasOwnProperty(l)){if(e=[],n=C[l],n.name&&(e.push(n.name.toLowerCase()),n.options&&n.options.aliases&&n.options.aliases.length))for(t=0;t<n.options.aliases.length;t++)e.push(n.options.aliases[t].toLowerCase());for(o=r(n.fn,\"function\")?n.fn():n.fn,s=0;s<e.length;s++)i=e[s],a=i.split(\".\"),1===a.length?Modernizr[a[0]]=o:(!Modernizr[a[0]]||Modernizr[a[0]]instanceof Boolean||(Modernizr[a[0]]=new Boolean(Modernizr[a[0]])),Modernizr[a[0]][a[1]]=o),g.push((o?\"\":\"no-\")+a.join(\"-\"))}}function s(e){var n=_.className,t=Modernizr._config.classPrefix||\"\";if(S&&(n=n.baseVal),Modernizr._config.enableJSClass){var r=new RegExp(\"(^|\\\\s)\"+t+\"no-js(\\\\s|$)\");n=n.replace(r,\"$1\"+t+\"js$2\")}Modernizr._config.enableClasses&&(n+=\" \"+t+e.join(\" \"+t),S?_.className.baseVal=n:_.className=n)}function i(e,n){return!!~(\"\"+e).indexOf(n)}function a(){return\"function\"!=typeof n.createElement?n.createElement(arguments[0]):S?n.createElementNS.call(n,\"http://www.w3.org/2000/svg\",arguments[0]):n.createElement.apply(n,arguments)}function l(e){return e.replace(/([a-z])-([a-z])/g,function(e,n,t){return n+t.toUpperCase()}).replace(/^-/,\"\")}function f(e,n){return function(){return e.apply(n,arguments)}}function u(e,n,t){var o;for(var s in e)if(e[s]in n)return t===!1?e[s]:(o=n[e[s]],r(o,\"function\")?f(o,t||n):o);return!1}function d(e){return e.replace(/([A-Z])/g,function(e,n){return\"-\"+n.toLowerCase()}).replace(/^ms-/,\"-ms-\")}function c(){var e=n.body;return e||(e=a(S?\"svg\":\"body\"),e.fake=!0),e}function p(e,t,r,o){var s,i,l,f,u=\"modernizr\",d=a(\"div\"),p=c();if(parseInt(r,10))for(;r--;)l=a(\"div\"),l.id=o?o[r]:u+(r+1),d.appendChild(l);return s=a(\"style\"),s.type=\"text/css\",s.id=\"s\"+u,(p.fake?p:d).appendChild(s),p.appendChild(d),s.styleSheet?s.styleSheet.cssText=e:s.appendChild(n.createTextNode(e)),d.id=u,p.fake&&(p.style.background=\"\",p.style.overflow=\"hidden\",f=_.style.overflow,_.style.overflow=\"hidden\",_.appendChild(p)),i=t(d,e),p.fake?(p.parentNode.removeChild(p),_.style.overflow=f,_.offsetHeight):d.parentNode.removeChild(d),!!i}function m(n,r){var o=n.length;if(\"CSS\"in e&&\"supports\"in e.CSS){for(;o--;)if(e.CSS.supports(d(n[o]),r))return!0;return!1}if(\"CSSSupportsRule\"in e){for(var s=[];o--;)s.push(\"(\"+d(n[o])+\":\"+r+\")\");return s=s.join(\" or \"),p(\"@supports (\"+s+\") { #modernizr { position: absolute; } }\",function(e){return\"absolute\"==getComputedStyle(e,null).position})}return t}function h(e,n,o,s){function f(){d&&(delete z.style,delete z.modElem)}if(s=r(s,\"undefined\")?!1:s,!r(o,\"undefined\")){var u=m(e,o);if(!r(u,\"undefined\"))return u}for(var d,c,p,h,v,y=[\"modernizr\",\"tspan\",\"samp\"];!z.style&&y.length;)d=!0,z.modElem=a(y.shift()),z.style=z.modElem.style;for(p=e.length,c=0;p>c;c++)if(h=e[c],v=z.style[h],i(h,\"-\")&&(h=l(h)),z.style[h]!==t){if(s||r(o,\"undefined\"))return f(),\"pfx\"==n?h:!0;try{z.style[h]=o}catch(g){}if(z.style[h]!=v)return f(),\"pfx\"==n?h:!0}return f(),!1}function v(e,n,t,o,s){var i=e.charAt(0).toUpperCase()+e.slice(1),a=(e+\" \"+b.join(i+\" \")+i).split(\" \");return r(n,\"string\")||r(n,\"undefined\")?h(a,n,o,s):(a=(e+\" \"+E.join(i+\" \")+i).split(\" \"),u(a,n,t))}function y(e,n,r){return v(e,t,t,n,r)}var g=[],C=[],w={_version:\"3.3.1\",_config:{classPrefix:\"\",enableClasses:!0,enableJSClass:!0,usePrefixes:!0},_q:[],on:function(e,n){var t=this;setTimeout(function(){n(t[e])},0)},addTest:function(e,n,t){C.push({name:e,fn:n,options:t})},addAsyncTest:function(e){C.push({name:null,fn:e})}},Modernizr=function(){};Modernizr.prototype=w,Modernizr=new Modernizr;var _=n.documentElement,S=\"svg\"===_.nodeName.toLowerCase(),x=\"Moz O ms Webkit\",b=w._config.usePrefixes?x.split(\" \"):[];w._cssomPrefixes=b;var E=w._config.usePrefixes?x.toLowerCase().split(\" \"):[];w._domPrefixes=E;var P={elem:a(\"modernizr\")};Modernizr._q.push(function(){delete P.elem});var z={style:P.elem.style};Modernizr._q.unshift(function(){delete z.style}),w.testAllProps=v,w.testAllProps=y,Modernizr.addTest(\"csstransforms\",function(){return-1===navigator.userAgent.indexOf(\"Android 2.\")&&y(\"transform\",\"scale(1)\",!0)}),o(),s(g),delete w.addTest,delete w.addAsyncTest;for(var N=0;N<Modernizr._q.length;N++)Modernizr._q[N]();e.Modernizr=Modernizr}(window,document);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/atlas-modernizr/modernizr-csstransforms.min.js\n// module id = 3566\n// module chunks = 2 7","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../css-loader/index.js!./jquery.fancybox.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../css-loader/index.js!./jquery.fancybox.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../css-loader/index.js!./jquery.fancybox.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/fancybox/dist/css/jquery.fancybox.css\n// module id = 3568\n// module chunks = 2 7","exports = module.exports = require(\"../../../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/*! fancyBox v2.1.5 fancyapps.com | fancyapps.com/fancybox/#license */\\n.fancybox-wrap, .fancybox-skin, .fancybox-outer, .fancybox-inner, .fancybox-image, .fancybox-wrap iframe, .fancybox-wrap object, .fancybox-nav, .fancybox-nav span, .fancybox-tmp {\\n  padding: 0;\\n  margin: 0;\\n  border: 0;\\n  outline: none;\\n  vertical-align: top; }\\n\\n.fancybox-wrap {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  z-index: 8020; }\\n\\n.fancybox-skin {\\n  position: relative;\\n  background: #f9f9f9;\\n  color: #444;\\n  text-shadow: none;\\n  -webkit-border-radius: 4px;\\n  -moz-border-radius: 4px;\\n  border-radius: 4px; }\\n\\n.fancybox-opened {\\n  z-index: 8030; }\\n\\n.fancybox-opened .fancybox-skin {\\n  -webkit-box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);\\n  -moz-box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);\\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5); }\\n\\n.fancybox-outer, .fancybox-inner {\\n  position: relative; }\\n\\n.fancybox-inner {\\n  overflow: hidden; }\\n\\n.fancybox-type-iframe .fancybox-inner {\\n  -webkit-overflow-scrolling: touch; }\\n\\n.fancybox-error {\\n  color: #444;\\n  font: 14px/20px \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n  margin: 0;\\n  padding: 15px;\\n  white-space: nowrap; }\\n\\n.fancybox-image, .fancybox-iframe {\\n  display: block;\\n  width: 100%;\\n  height: 100%; }\\n\\n.fancybox-image {\\n  max-width: 100%;\\n  max-height: 100%; }\\n\\n#fancybox-loading, .fancybox-close, .fancybox-prev span, .fancybox-next span {\\n  background-image: url(\" + require(\"../img/fancybox_sprite.png\") + \"); }\\n\\n#fancybox-loading {\\n  position: fixed;\\n  top: 50%;\\n  left: 50%;\\n  margin-top: -22px;\\n  margin-left: -22px;\\n  background-position: 0 -108px;\\n  opacity: 0.8;\\n  cursor: pointer;\\n  z-index: 8060; }\\n\\n#fancybox-loading div {\\n  width: 44px;\\n  height: 44px;\\n  background: url(\" + require(\"../img/fancybox_loading.gif\") + \") center center no-repeat; }\\n\\n.fancybox-close {\\n  position: absolute;\\n  top: -18px;\\n  right: -18px;\\n  width: 36px;\\n  height: 36px;\\n  cursor: pointer;\\n  z-index: 8040; }\\n\\n.fancybox-nav {\\n  position: absolute;\\n  top: 0;\\n  width: 40%;\\n  height: 100%;\\n  cursor: pointer;\\n  text-decoration: none;\\n  background: transparent url(\" + require(\"../img/blank.gif\") + \");\\n  /* helps IE */\\n  -webkit-tap-highlight-color: transparent;\\n  z-index: 8040; }\\n\\n.fancybox-prev {\\n  left: 0; }\\n\\n.fancybox-next {\\n  right: 0; }\\n\\n.fancybox-nav span {\\n  position: absolute;\\n  top: 50%;\\n  width: 36px;\\n  height: 34px;\\n  margin-top: -18px;\\n  cursor: pointer;\\n  z-index: 8040;\\n  visibility: hidden; }\\n\\n.fancybox-prev span {\\n  left: 10px;\\n  background-position: 0 -36px; }\\n\\n.fancybox-next span {\\n  right: 10px;\\n  background-position: 0 -72px; }\\n\\n.fancybox-nav:hover span {\\n  visibility: visible; }\\n\\n.fancybox-tmp {\\n  position: absolute;\\n  top: -99999px;\\n  left: -99999px;\\n  max-width: 99999px;\\n  max-height: 99999px;\\n  overflow: visible !important; }\\n\\n/* Overlay helper */\\n.fancybox-lock {\\n  overflow: visible !important;\\n  width: auto; }\\n\\n.fancybox-lock body {\\n  overflow: hidden !important; }\\n\\n.fancybox-lock-test {\\n  overflow-y: hidden !important; }\\n\\n.fancybox-overlay {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  overflow: hidden;\\n  display: none;\\n  z-index: 8010;\\n  background: url(\" + require(\"../img/fancybox_overlay.png\") + \"); }\\n\\n.fancybox-overlay-fixed {\\n  position: fixed;\\n  bottom: 0;\\n  right: 0; }\\n\\n.fancybox-lock .fancybox-overlay {\\n  overflow: auto;\\n  overflow-y: scroll; }\\n\\n/* Title helper */\\n.fancybox-title {\\n  visibility: hidden;\\n  font: normal 13px/20px \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n  position: relative;\\n  text-shadow: none;\\n  z-index: 8050; }\\n\\n.fancybox-opened .fancybox-title {\\n  visibility: visible; }\\n\\n.fancybox-title-float-wrap {\\n  position: absolute;\\n  bottom: 0;\\n  right: 50%;\\n  margin-bottom: -35px;\\n  z-index: 8050;\\n  text-align: center; }\\n\\n.fancybox-title-float-wrap .child {\\n  display: inline-block;\\n  margin-right: -100%;\\n  padding: 2px 20px;\\n  background: transparent;\\n  /* Fallback for web browsers that doesn't support RGBa */\\n  background: rgba(0, 0, 0, 0.8);\\n  -webkit-border-radius: 15px;\\n  -moz-border-radius: 15px;\\n  border-radius: 15px;\\n  text-shadow: 0 1px 2px #222;\\n  color: #FFF;\\n  font-weight: bold;\\n  line-height: 24px;\\n  white-space: nowrap; }\\n\\n.fancybox-title-outside-wrap {\\n  position: relative;\\n  margin-top: 10px;\\n  color: #fff; }\\n\\n.fancybox-title-inside-wrap {\\n  padding-top: 10px; }\\n\\n.fancybox-title-over-wrap {\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  color: #fff;\\n  padding: 10px;\\n  background: #000;\\n  background: rgba(0, 0, 0, 0.8); }\\n\\n/*Retina graphics!*/\\n@media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {\\n  #fancybox-loading, .fancybox-close, .fancybox-prev span, .fancybox-next span {\\n    background-image: url(\" + require(\"../img/fancybox_sprite@2x.png\") + \");\\n    background-size: 44px 152px;\\n    /*The size of the normal image, half the size of the hi-res image*/ }\\n  #fancybox-loading div {\\n    background-image: url(\" + require(\"../img/fancybox_loading@2x.gif\") + \");\\n    background-size: 24px 24px;\\n    /*The size of the normal image, half the size of the hi-res image*/ } }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/css-loader!./atlas_bundles/heatmap/~/fancybox/dist/css/jquery.fancybox.css\n// module id = 3569\n// module chunks = 2 7","module.exports = __webpack_public_path__ + \"783d4031fe50c3d83c960911e1fbc705.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/fancybox/dist/img/fancybox_sprite.png\n// module id = 3570\n// module chunks = 2 7","module.exports = __webpack_public_path__ + \"328cc0f6c78211485058d460e80f4fa8.gif\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/fancybox/dist/img/fancybox_loading.gif\n// module id = 3571\n// module chunks = 2 7","module.exports = __webpack_public_path__ + \"325472601571f31e1bf00674c368d335.gif\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/fancybox/dist/img/blank.gif\n// module id = 3572\n// module chunks = 2 7","module.exports = __webpack_public_path__ + \"77aeaa52715b898b73c74d68c630330e.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/fancybox/dist/img/fancybox_overlay.png\n// module id = 3573\n// module chunks = 2 7","module.exports = __webpack_public_path__ + \"ed9970ce22242421e66ff150aa97fe5f.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/fancybox/dist/img/fancybox_sprite@2x.png\n// module id = 3574\n// module chunks = 2 7","module.exports = __webpack_public_path__ + \"f92938639fa894a0e8ded1c3368abe98.gif\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/fancybox/dist/img/fancybox_loading@2x.gif\n// module id = 3575\n// module chunks = 2 7","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../css-loader/index.js!./jquery.toolbar.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../css-loader/index.js!./jquery.toolbar.css\", function() {\n\t\t\tvar newContent = require(\"!!../css-loader/index.js!./jquery.toolbar.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/jquery-toolbar/jquery.toolbar.css\n// module id = 3577\n// module chunks = 2 7","exports = module.exports = require(\"../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".btn-toolbar {\\n  background: #364347;\\n  width: 20px;\\n  height: 20px;\\n  text-align: center;\\n  padding: 10px;\\n  border-radius: 6px;\\n  display: block;\\n  transition: none;\\n}\\n.btn-toolbar > i {\\n  color: #02baf2;\\n  font-size: 16px;\\n}\\n.btn-toolbar:hover {\\n  background: #02baf2;\\n  cursor: pointer;\\n}\\n.btn-toolbar:hover > i {\\n  color: white;\\n}\\n.btn-toolbar-primary {\\n  background-color: #009dcd;\\n}\\n.btn-toolbar-primary.pressed {\\n  background-color: #02baf2;\\n}\\n.btn-toolbar-primary:hover {\\n  background-color: #02baf2;\\n}\\n.btn-toolbar-primary > i {\\n  color: white;\\n}\\n.btn-toolbar-danger {\\n  background-color: #cc0000;\\n}\\n.btn-toolbar-danger.pressed {\\n  background-color: #f84545;\\n}\\n.btn-toolbar-danger:hover {\\n  background-color: #f84545;\\n}\\n.btn-toolbar-danger > i {\\n  color: white;\\n}\\n.btn-toolbar-warning {\\n  background-color: #f3bc65;\\n}\\n.btn-toolbar-warning.pressed {\\n  background-color: #fad46b;\\n}\\n.btn-toolbar-warning:hover {\\n  background-color: #fad46b;\\n}\\n.btn-toolbar-warning > i {\\n  color: white;\\n}\\n.btn-toolbar-info {\\n  background-color: #e96300;\\n}\\n.btn-toolbar-info.pressed {\\n  background-color: #f58410;\\n}\\n.btn-toolbar-info:hover {\\n  background-color: #f58410;\\n}\\n.btn-toolbar-info > i {\\n  color: white;\\n}\\n.btn-toolbar-success {\\n  background-color: #28948c;\\n}\\n.btn-toolbar-success.pressed {\\n  background-color: #3eb5ac;\\n}\\n.btn-toolbar-success:hover {\\n  background-color: #3eb5ac;\\n}\\n.btn-toolbar-success > i {\\n  color: white;\\n}\\n.btn-toolbar-info-o {\\n  background-color: #9175bd;\\n}\\n.btn-toolbar-info-o.pressed {\\n  background-color: #a88cd5;\\n}\\n.btn-toolbar-info-o:hover {\\n  background-color: #a88cd5;\\n}\\n.btn-toolbar-info-o > i {\\n  color: white;\\n}\\n.btn-toolbar-light {\\n  background-color: #b2c6cd;\\n}\\n.btn-toolbar-light.pressed {\\n  background-color: #d6e1e5;\\n}\\n.btn-toolbar-light:hover {\\n  background-color: #d6e1e5;\\n}\\n.btn-toolbar-light > i {\\n  color: white;\\n}\\n.btn-toolbar-dark {\\n  background-color: #364347;\\n}\\n.btn-toolbar-dark.pressed {\\n  background-color: #5e696d;\\n}\\n.btn-toolbar-dark:hover {\\n  background-color: #5e696d;\\n}\\n.btn-toolbar-dark > i {\\n  color: white;\\n}\\n.tool-container {\\n  background-color: #5e696d;\\n  background-size: 100% 100%;\\n  border-radius: 6px;\\n  position: absolute;\\n  box-shadow: 0 0 2px grey;\\n}\\n.tool-container.tool-top,\\n.tool-container.tool-bottom {\\n  height: 40px;\\n  border-bottom: 0px solid #beb8b8;\\n}\\n.tool-container.tool-top .tool-item,\\n.tool-container.tool-bottom .tool-item {\\n  float: left;\\n  border-right: 0;\\n  border-left: 0;\\n}\\n.tool-item {\\n  box-sizing: initial;\\n  height: 100%;\\n  display: block;\\n  width: 20px;\\n  height: 20px;\\n  text-align: center;\\n  padding: 10px;\\n  transition: none;\\n}\\n.tool-item > .fa {\\n  color: #b2c6cd;\\n}\\n.tool-item.selected,\\n.tool-item:hover {\\n  background: #02baf2;\\n}\\n.tool-item.selected > .fa,\\n.tool-item:hover > .fa {\\n  color: white;\\n}\\n.tool-top .tool-item:first-child:hover,\\n.tool-bottom .tool-item:first-child:hover {\\n  border-top-left-radius: 6px;\\n  border-bottom-left-radius: 6px;\\n}\\n.tool-top .tool-item:last-child:hover,\\n.tool-bottom .tool-item:last-child:hover {\\n  border-top-right-radius: 6px;\\n  border-bottom-right-radius: 6px;\\n}\\n.tool-vertical-top .tool-item:first-child:hover,\\n.tool-vertical-bottom .tool-item:first-child:hover,\\n.tool-right .tool-item:first-child:hover,\\n.tool-left .tool-item:first-child:hover {\\n  border-top-left-radius: 6px;\\n  border-top-right-radius: 6px;\\n}\\n.tool-vertical-top .tool-item:last-child:hover,\\n.tool-vertical-bottom .tool-item:last-child:hover,\\n.tool-right .tool-item:last-child:hover,\\n.tool-left .tool-item:last-child:hover {\\n  border-bottom-left-radius: 6px;\\n  border-bottom-right-radius: 6px;\\n}\\n.tool-container .arrow {\\n  width: 0;\\n  height: 0;\\n  position: absolute;\\n  border-width: 7px;\\n  border-style: solid;\\n}\\n.tool-container.tool-top .arrow {\\n  border-color: #5e696d transparent transparent;\\n  left: 50%;\\n  bottom: -14px;\\n  margin-left: -7px;\\n}\\n.tool-container.tool-bottom .arrow {\\n  border-color: transparent transparent #5e696d;\\n  left: 50%;\\n  top: -14px;\\n  margin-left: -7px;\\n}\\n.tool-container.tool-left .arrow {\\n  border-color: transparent transparent transparent #5e696d;\\n  top: 50%;\\n  right: -14px;\\n  margin-top: -7px;\\n}\\n.tool-container.tool-right .arrow {\\n  border-color: transparent #5e696d transparent transparent;\\n  top: 50%;\\n  left: -14px;\\n  margin-top: -7px;\\n}\\n.toolbar-primary {\\n  background-color: #02baf2;\\n}\\n.toolbar-primary.tool-top .arrow {\\n  border-color: #02baf2 transparent transparent;\\n}\\n.toolbar-primary.tool-bottom .arrow {\\n  border-color: transparent transparent #02baf2;\\n}\\n.toolbar-primary.tool-left .arrow {\\n  border-color: transparent transparent transparent #02baf2;\\n}\\n.toolbar-primary.tool-right .arrow {\\n  border-color: transparent #02baf2 transparent transparent;\\n}\\n.toolbar-primary .tool-item > .fa {\\n  color: white;\\n}\\n.toolbar-primary .tool-item.selected,\\n.toolbar-primary .tool-item:hover {\\n  background: #009dcd;\\n  color: white;\\n}\\n.toolbar-danger {\\n  background-color: #f84545;\\n}\\n.toolbar-danger.tool-top .arrow {\\n  border-color: #f84545 transparent transparent;\\n}\\n.toolbar-danger.tool-bottom .arrow {\\n  border-color: transparent transparent #f84545;\\n}\\n.toolbar-danger.tool-left .arrow {\\n  border-color: transparent transparent transparent #f84545;\\n}\\n.toolbar-danger.tool-right .arrow {\\n  border-color: transparent #f84545 transparent transparent;\\n}\\n.toolbar-danger .tool-item > .fa {\\n  color: white;\\n}\\n.toolbar-danger .tool-item.selected,\\n.toolbar-danger .tool-item:hover {\\n  background: #cc0000;\\n  color: white;\\n}\\n.toolbar-warning {\\n  background-color: #f3bc65;\\n}\\n.toolbar-warning.tool-top .arrow {\\n  border-color: #f3bc65 transparent transparent;\\n}\\n.toolbar-warning.tool-bottom .arrow {\\n  border-color: transparent transparent #f3bc65;\\n}\\n.toolbar-warning.tool-left .arrow {\\n  border-color: transparent transparent transparent #f3bc65;\\n}\\n.toolbar-warning.tool-right .arrow {\\n  border-color: transparent #f3bc65 transparent transparent;\\n}\\n.toolbar-warning .tool-item > .fa {\\n  color: white;\\n}\\n.toolbar-warning .tool-item.selected,\\n.toolbar-warning .tool-item:hover {\\n  background: #fad46b;\\n  color: white;\\n}\\n.toolbar-info {\\n  background-color: #e96300;\\n}\\n.toolbar-info.tool-top .arrow {\\n  border-color: #e96300 transparent transparent;\\n}\\n.toolbar-info.tool-bottom .arrow {\\n  border-color: transparent transparent #e96300;\\n}\\n.toolbar-info.tool-left .arrow {\\n  border-color: transparent transparent transparent #e96300;\\n}\\n.toolbar-info.tool-right .arrow {\\n  border-color: transparent #e96300 transparent transparent;\\n}\\n.toolbar-info .tool-item > .fa {\\n  color: white;\\n}\\n.toolbar-info .tool-item.selected,\\n.toolbar-info .tool-item:hover {\\n  background: #f58410;\\n  color: white;\\n}\\n.toolbar-success {\\n  background-color: #28948c;\\n}\\n.toolbar-success.tool-top .arrow {\\n  border-color: #28948c transparent transparent;\\n}\\n.toolbar-success.tool-bottom .arrow {\\n  border-color: transparent transparent #28948c;\\n}\\n.toolbar-success.tool-left .arrow {\\n  border-color: transparent transparent transparent #28948c;\\n}\\n.toolbar-success.tool-right .arrow {\\n  border-color: transparent #28948c transparent transparent;\\n}\\n.toolbar-success .tool-item > .fa {\\n  color: white;\\n}\\n.toolbar-success .tool-item.selected,\\n.toolbar-success .tool-item:hover {\\n  background: #3eb5ac;\\n  color: white;\\n}\\n.toolbar-info-o {\\n  background-color: #9175bd;\\n}\\n.toolbar-info-o.tool-top .arrow {\\n  border-color: #9175bd transparent transparent;\\n}\\n.toolbar-info-o.tool-bottom .arrow {\\n  border-color: transparent transparent #9175bd;\\n}\\n.toolbar-info-o.tool-left .arrow {\\n  border-color: transparent transparent transparent #9175bd;\\n}\\n.toolbar-info-o.tool-right .arrow {\\n  border-color: transparent #9175bd transparent transparent;\\n}\\n.toolbar-info-o .tool-item > .fa {\\n  color: white;\\n}\\n.toolbar-info-o .tool-item.selected,\\n.toolbar-info-o .tool-item:hover {\\n  background: #a88cd5;\\n  color: white;\\n}\\n.toolbar-light {\\n  background-color: #b2c6cd;\\n}\\n.toolbar-light.tool-top .arrow {\\n  border-color: #b2c6cd transparent transparent;\\n}\\n.toolbar-light.tool-bottom .arrow {\\n  border-color: transparent transparent #b2c6cd;\\n}\\n.toolbar-light.tool-left .arrow {\\n  border-color: transparent transparent transparent #b2c6cd;\\n}\\n.toolbar-light.tool-right .arrow {\\n  border-color: transparent #b2c6cd transparent transparent;\\n}\\n.toolbar-light .tool-item > .fa {\\n  color: white;\\n}\\n.toolbar-light .tool-item.selected,\\n.toolbar-light .tool-item:hover {\\n  background: #d6e1e5;\\n  color: white;\\n}\\n.toolbar-dark {\\n  background-color: #364347;\\n}\\n.toolbar-dark.tool-top .arrow {\\n  border-color: #364347 transparent transparent;\\n}\\n.toolbar-dark.tool-bottom .arrow {\\n  border-color: transparent transparent #364347;\\n}\\n.toolbar-dark.tool-left .arrow {\\n  border-color: transparent transparent transparent #364347;\\n}\\n.toolbar-dark.tool-right .arrow {\\n  border-color: transparent #364347 transparent transparent;\\n}\\n.toolbar-dark .tool-item > .fa {\\n  color: white;\\n}\\n.toolbar-dark .tool-item.selected,\\n.toolbar-dark .tool-item:hover {\\n  background: #5e696d;\\n  color: white;\\n}\\n.animate-standard {\\n  -webkit-animation: standardAnimate 0.3s 1 ease;\\n}\\n.animate-flyin {\\n  -webkit-animation: rotateAnimate 0.5s 1 ease;\\n}\\n.animate-grow {\\n  -webkit-animation: growAnimate 0.4s 1 ease;\\n}\\n.animate-flip {\\n  -webkit-animation: flipAnimate 0.4s 1 ease;\\n}\\n.animate-bounce {\\n  -webkit-animation: bounceAnimate 0.4s 1 ease-out;\\n}\\n@-webkit-keyframes rotateAnimate {\\n  from {\\n    transform: rotate(180deg) translate(-120px);\\n    opacity: 0;\\n  }\\n  to {\\n    transform: rotate(0deg) translate(0px);\\n    opacity: 1;\\n  }\\n}\\n@-webkit-keyframes standardAnimate {\\n  from {\\n    transform: translateY(20px);\\n    opacity: 0;\\n  }\\n  to {\\n    transform: translateY(0px);\\n    opacity: 1;\\n  }\\n}\\n@-webkit-keyframes growAnimate {\\n  0% {\\n    transform: scale(0) translateY(40px);\\n    opacity: 0;\\n  }\\n  70% {\\n    transform: scale(1.5) translate(0px);\\n  }\\n  100% {\\n    transform: scale(1) translate(0px);\\n    opacity: 1;\\n  }\\n}\\n@-webkit-keyframes rotate2Animate {\\n  from {\\n    transform: rotate(-90deg);\\n    transform-origin: 0% 100%;\\n    opacity: 0;\\n  }\\n  to {\\n    transform: rotate(0deg);\\n    opacity: 1;\\n  }\\n}\\n@-webkit-keyframes flipAnimate {\\n  from {\\n    transform: rotate3d(2, 2, 2, 180deg);\\n    opacity: 0;\\n  }\\n  to {\\n    transform: rotate3d(0, 0, 0, 0deg);\\n    opacity: 1;\\n  }\\n}\\n@-webkit-keyframes bounceAnimate {\\n  0% {\\n    transform: translateY(40px);\\n    opacity: 0;\\n  }\\n  30% {\\n    transform: translateY(-40px);\\n  }\\n  70% {\\n    transform: translateY(20px);\\n  }\\n  100% {\\n    transform: translateY(0px);\\n    opacity: 1;\\n  }\\n}\\n.hidden {\\n  display: none;\\n}\\n\\n/* Custom white theme */\\n\\n.btn-toolbar-white {\\n    background-color: #b2c6cd;\\n}\\n.btn-toolbar-white.pressed {\\n    background-color: #d6e1e5;\\n}\\n.btn-toolbar-white:hover {\\n    background-color: #d6e1e5;\\n}\\n.btn-toolbar-white > i {\\n    color: white;\\n}\\n\\n.toolbar-white {\\n    background-color: whitesmoke;\\n}\\n.toolbar-white.tool-top .arrow {\\n    border-color: #b2c6cd transparent transparent;\\n}\\n.toolbar-white.tool-bottom .arrow {\\n    border-color: transparent transparent #b2c6cd;\\n}\\n.toolbar-white.tool-left .arrow {\\n    border-color: transparent transparent transparent #b2c6cd;\\n}\\n.toolbar-white.tool-right .arrow {\\n    border-color: transparent lightgrey transparent transparent;\\n}\\n.toolbar-white .tool-item > .fa {\\n    color: white;\\n}\\n.toolbar-white .tool-item.selected,\\n.toolbar-white .tool-item:hover {\\n    background: lightgoldenrodyellow;\\n    color: white;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/css-loader!./atlas_bundles/heatmap/~/jquery-toolbar/jquery.toolbar.css\n// module id = 3578\n// module chunks = 2 7","\"use strict\";\n\n//*------------------------------------------------------------------*\n\nmodule.exports = require('./src/HeatmapBaselineCellVariance.jsx');\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/expression-atlas-heatmap-baseline-cell-variance/index.js","var React = require('react');\nvar Highcharts = require('react-highcharts');\nrequire('highcharts-more')(Highcharts.Highcharts);\n\nvar HeatmapBaselineCellVariance = React.createClass({\n\n    propTypes: {\n        quartiles: React.PropTypes.shape({\n            min: React.PropTypes.number,\n            lower: React.PropTypes.number,\n            median: React.PropTypes.number,\n            upper: React.PropTypes.number,\n            max: React.PropTypes.number\n        }).isRequired\n    },\n\n    render: function () {\n\n        var chartWidth = 115;\n        var chartHeight = 105;\n        var chartMargin = 0;\n\n        var highchartsOptions = {\n            credits: { enabled: false },\n            chart:   { type: \"boxplot\", width: chartWidth, height: chartHeight, margin: chartMargin},\n            title:   { text: \"\" },\n            legend:  { enabled: false },\n            xAxis:   { title: { text: \"Variance\" } },\n            yAxis:   {\n                title: { text: \"Expression level\" },\n                labels: {\n                    align: \"left\",\n                    x: 0,\n                    y: -2\n                }\n            },\n            plotOptions: {\n                boxplot: {\n                    fillColor: \"#F0F0E0\",\n                    lineWidth: 2,\n                    medianColor: \"#0C5DA5\",\n                    medianWidth: 3,\n                    stemColor: \"#A63400\",\n                    stemDashStyle: \"dot\",\n                    stemWidth: 1,\n                    whiskerColor: \"#3D9200\",\n                    whiskerLength: \"20%\",\n                    whiskerWidth: 3\n                }\n            },\n            series: [{\n                name: \"Expression\",\n                data: [\n                    [this.props.quartiles.min, this.props.quartiles.lower, this.props.quartiles.median, this.props.quartiles.upper, this.props.quartiles.max]\n                ]\n            }],\n            tooltip: {\n                headerFormat: \"\",\n                style:{\n                    fontSize: \"10px\",\n                    padding: 5\n                }\n            }\n        };\n\n        var boxPlotStyle = {width: chartWidth, height: chartHeight, margin: chartMargin};\n        return (\n            <td>\n                <div id=\"container\" style={boxPlotStyle}>\n                    <Highcharts config={highchartsOptions}/>\n                </div>\n            </td>\n        );\n    }\n\n});\n\nmodule.exports = HeatmapBaselineCellVariance;\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/expression-atlas-heatmap-baseline-cell-variance/src/HeatmapBaselineCellVariance.jsx","!function(t,r){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=r(require(\"react\"),require(\"highcharts\")):\"function\"==typeof define&&define.amd?define([\"react\",\"highcharts\"],r):\"object\"==typeof exports?exports.ReactHighcharts=r(require(\"react\"),require(\"highcharts\")):t.ReactHighcharts=r(t.React,t.Highcharts)}(this,function(t,r){return function(t){function r(o){if(e[o])return e[o].exports;var n=e[o]={exports:{},id:o,loaded:!1};return t[o].call(n.exports,n,n.exports,r),n.loaded=!0,n.exports}var e={};return r.m=t,r.c=e,r.p=\"\",r(0)}([function(t,r,e){t.exports=e(3)},function(r,e){r.exports=t},function(t,r,e){(function(r){\"use strict\";var o=Object.assign||function(t){for(var r=1;r<arguments.length;r++){var e=arguments[r];for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])}return t},n=e(1);t.exports=function(t,e){var i=\"Highcharts\"+t,c=n.createClass({displayName:i,propTypes:{config:n.PropTypes.object.isRequired,isPureConfig:n.PropTypes.bool,neverReflow:n.PropTypes.bool,callback:n.PropTypes.func},defaultProps:{callback:function(){}},renderChart:function(n){var c=this;if(!n)throw new Error(\"Config must be specified for the \"+i+\" component\");var s=n.chart;this.chart=new e[t](o({},n,{chart:o({},s,{renderTo:this.refs.chart})}),this.props.callback),r.requestAnimationFrame&&requestAnimationFrame(function(){c.chart&&c.chart.options&&c.chart.reflow()})},shouldComponentUpdate:function(t){return t.neverReflow||t.isPureConfig&&this.props.config===t.config?!0:(this.renderChart(t.config),!1)},getChart:function(){if(!this.chart)throw new Error(\"getChart() should not be called before the component is mounted\");return this.chart},componentDidMount:function(){this.renderChart(this.props.config)},componentWillUnmount:function(){this.chart.destroy()},render:function(){var t=this.props;return t=o({},t,{ref:\"chart\"}),n.createElement(\"div\",t)}});return c.Highcharts=e,c}}).call(r,function(){return this}())},function(t,r,e){\"use strict\";t.exports=e(2)(\"Chart\",e(4))},function(t,e){t.exports=r}])});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/react-highcharts/dist/ReactHighcharts.js\n// module id = 3581\n// module chunks = 2 7","// ==ClosureCompiler==\n// @compilation_level SIMPLE_OPTIMIZATIONS\n\n/**\n * @license Highcharts JS v4.2.7 (2016-09-21)\n *\n * (c) 2009-2016 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n\n(function (root, factory) {\n    if (typeof module === 'object' && module.exports) {\n        module.exports = root.document ?\n            factory(root) : \n            factory;\n    } else {\n        root.Highcharts = factory(root);\n    }\n}(typeof window !== 'undefined' ? window : this, function (win) { // eslint-disable-line no-undef\n// encapsulated variables\n    var UNDEFINED,\n        doc = win.document,\n        math = Math,\n        mathRound = math.round,\n        mathFloor = math.floor,\n        mathCeil = math.ceil,\n        mathMax = math.max,\n        mathMin = math.min,\n        mathAbs = math.abs,\n        mathCos = math.cos,\n        mathSin = math.sin,\n        mathPI = math.PI,\n        deg2rad = mathPI * 2 / 360,\n\n\n        // some variables\n        userAgent = (win.navigator && win.navigator.userAgent) || '',\n        isOpera = win.opera,\n        isMS = /(msie|trident|edge)/i.test(userAgent) && !isOpera,\n        docMode8 = doc && doc.documentMode === 8,\n        isWebKit = !isMS && /AppleWebKit/.test(userAgent),\n        isFirefox = /Firefox/.test(userAgent),\n        isTouchDevice = /(Mobile|Android|Windows Phone)/.test(userAgent),\n        SVG_NS = 'http://www.w3.org/2000/svg',\n        hasSVG = doc && doc.createElementNS && !!doc.createElementNS(SVG_NS, 'svg').createSVGRect,\n        hasBidiBug = isFirefox && parseInt(userAgent.split('Firefox/')[1], 10) < 4, // issue #38\n        useCanVG = doc && !hasSVG && !isMS && !!doc.createElement('canvas').getContext,\n        Renderer,\n        hasTouch,\n        symbolSizes = {},\n        idCounter = 0,\n        garbageBin,\n        defaultOptions,\n        dateFormat, // function\n        pathAnim,\n        timeUnits,\n        noop = function () {},\n        charts = [],\n        chartCount = 0,\n        PRODUCT = 'Highcharts',\n        VERSION = '4.2.7',\n\n        // some constants for frequently used strings\n        DIV = 'div',\n        ABSOLUTE = 'absolute',\n        RELATIVE = 'relative',\n        HIDDEN = 'hidden',\n        PREFIX = 'highcharts-',\n        VISIBLE = 'visible',\n        PX = 'px',\n        NONE = 'none',\n        M = 'M',\n        L = 'L',\n        numRegex = /[0-9]/g,\n        NORMAL_STATE = '',\n        HOVER_STATE = 'hover',\n        SELECT_STATE = 'select',\n        marginNames = ['plotTop', 'marginRight', 'marginBottom', 'plotLeft'],\n\n        // Object for extending Axis\n        AxisPlotLineOrBandExtension,\n\n        // constants for attributes\n        STROKE_WIDTH = 'stroke-width',\n\n        // time methods, changed based on whether or not UTC is used\n        Date,  // Allow using a different Date class\n        makeTime,\n        timezoneOffset,\n        getTimezoneOffset,\n        getMinutes,\n        getHours,\n        getDay,\n        getDate,\n        getMonth,\n        getFullYear,\n        setMilliseconds,\n        setSeconds,\n        setMinutes,\n        setHours,\n        setDate,\n        setMonth,\n        setFullYear,\n\n\n        // lookup over the types and the associated classes\n        seriesTypes = {},\n        Highcharts;\n\n    /**\n     * Provide error messages for debugging, with links to online explanation\n     */\n    function error(code, stop) {\n        var msg = 'Highcharts error #' + code + ': www.highcharts.com/errors/' + code;\n        if (stop) {\n            throw new Error(msg);\n        }\n        // else ...\n        if (win.console) {\n            console.log(msg); // eslint-disable-line no-console\n        }\n    }\n\n    // The Highcharts namespace\n    Highcharts = win.Highcharts ? error(16, true) : { win: win };\n\n    Highcharts.seriesTypes = seriesTypes;\n    var timers = [],\n        getStyle,\n\n        // Previous adapter functions\n        inArray,\n        each,\n        grep,\n        offset,\n        map,\n        addEvent,\n        removeEvent,\n        fireEvent,\n        animate,\n        stop;\n\n    /**\n     * An animator object. One instance applies to one property (attribute or style prop) \n     * on one element.\n     * \n     * @param {object} elem    The element to animate. May be a DOM element or a Highcharts SVGElement wrapper.\n     * @param {object} options Animation options, including duration, easing, step and complete.\n     * @param {object} prop    The property to animate.\n     */\n    function Fx(elem, options, prop) {\n        this.options = options;\n        this.elem = elem;\n        this.prop = prop;\n    }\n    Fx.prototype = {\n    \n        /**\n         * Animating a path definition on SVGElement\n         * @returns {undefined} \n         */\n        dSetter: function () {\n            var start = this.paths[0],\n                end = this.paths[1],\n                ret = [],\n                now = this.now,\n                i = start.length,\n                startVal;\n\n            if (now === 1) { // land on the final path without adjustment points appended in the ends\n                ret = this.toD;\n\n            } else if (i === end.length && now < 1) {\n                while (i--) {\n                    startVal = parseFloat(start[i]);\n                    ret[i] =\n                        isNaN(startVal) ? // a letter instruction like M or L\n                                start[i] :\n                                now * (parseFloat(end[i] - startVal)) + startVal;\n\n                }\n            } else { // if animation is finished or length not matching, land on right value\n                ret = end;\n            }\n            this.elem.attr('d', ret);\n        },\n\n        /**\n         * Update the element with the current animation step\n         * @returns {undefined}\n         */\n        update: function () {\n            var elem = this.elem,\n                prop = this.prop, // if destroyed, it is null\n                now = this.now,\n                step = this.options.step;\n\n            // Animation setter defined from outside\n            if (this[prop + 'Setter']) {\n                this[prop + 'Setter']();\n\n            // Other animations on SVGElement\n            } else if (elem.attr) {\n                if (elem.element) {\n                    elem.attr(prop, now);\n                }\n\n            // HTML styles, raw HTML content like container size\n            } else {\n                elem.style[prop] = now + this.unit;\n            }\n        \n            if (step) {\n                step.call(elem, now, this);\n            }\n\n        },\n\n        /**\n         * Run an animation\n         */\n        run: function (from, to, unit) {\n            var self = this,\n                timer = function (gotoEnd) {\n                    return timer.stopped ? false : self.step(gotoEnd);\n                },\n                i;\n\n            this.startTime = +new Date();\n            this.start = from;\n            this.end = to;\n            this.unit = unit;\n            this.now = this.start;\n            this.pos = 0;\n\n            timer.elem = this.elem;\n\n            if (timer() && timers.push(timer) === 1) {\n                timer.timerId = setInterval(function () {\n                \n                    for (i = 0; i < timers.length; i++) {\n                        if (!timers[i]()) {\n                            timers.splice(i--, 1);\n                        }\n                    }\n\n                    if (!timers.length) {\n                        clearInterval(timer.timerId);\n                    }\n                }, 13);\n            }\n        },\n    \n        /**\n         * Run a single step in the animation\n         * @param   {Boolean} gotoEnd Whether to go to then endpoint of the animation after abort\n         * @returns {Boolean} True if animation continues\n         */\n        step: function (gotoEnd) {\n            var t = +new Date(),\n                ret,\n                done,\n                options = this.options,\n                elem = this.elem,\n                complete = options.complete,\n                duration = options.duration,\n                curAnim = options.curAnim,\n                i;\n        \n            if (elem.attr && !elem.element) { // #2616, element including flag is destroyed\n                ret = false;\n\n            } else if (gotoEnd || t >= duration + this.startTime) {\n                this.now = this.end;\n                this.pos = 1;\n                this.update();\n\n                curAnim[this.prop] = true;\n\n                done = true;\n                for (i in curAnim) {\n                    if (curAnim[i] !== true) {\n                        done = false;\n                    }\n                }\n\n                if (done && complete) {\n                    complete.call(elem);\n                }\n                ret = false;\n\n            } else {\n                this.pos = options.easing((t - this.startTime) / duration);\n                this.now = this.start + ((this.end - this.start) * this.pos);\n                this.update();\n                ret = true;\n            }\n            return ret;\n        },\n\n        /**\n         * Prepare start and end values so that the path can be animated one to one\n         */\n        initPath: function (elem, fromD, toD) {\n            fromD = fromD || '';\n            var shift,\n                startX = elem.startX,\n                endX = elem.endX,\n                bezier = fromD.indexOf('C') > -1,\n                numParams = bezier ? 7 : 3,\n                fullLength,\n                slice,\n                i,\n                start = fromD.split(' '),\n                end = toD.slice(), // copy\n                isArea = elem.isArea,\n                positionFactor = isArea ? 2 : 1,\n                reverse;\n        \n            /**\n             * In splines make move points have six parameters like bezier curves\n             */\n            function sixify(arr) {\n                i = arr.length;\n                while (i--) {\n                    if (arr[i] === M || arr[i] === L) {\n                        arr.splice(i + 1, 0, arr[i + 1], arr[i + 2], arr[i + 1], arr[i + 2]);\n                    }\n                }\n            }\n\n            /**\n             * Insert an array at the given position of another array\n             */\n            function insertSlice(arr, subArr, index) {\n                [].splice.apply(\n                    arr,\n                    [index, 0].concat(subArr)\n                );\n            }\n\n            /**\n             * If shifting points, prepend a dummy point to the end path. \n             */\n            function prepend(arr, other) {\n                while (arr.length < fullLength) {\n                \n                    // Move to, line to or curve to?\n                    arr[0] = other[fullLength - arr.length];\n\n                    // Prepend a copy of the first point\n                    insertSlice(arr, arr.slice(0, numParams), 0);\n\n                    // For areas, the bottom path goes back again to the left, so we need\n                    // to append a copy of the last point.\n                    if (isArea) {\n                        insertSlice(arr, arr.slice(arr.length - numParams), arr.length);\n                        i--;\n                    }\n                }\n                arr[0] = 'M';\n            }\n\n            /**\n             * Copy and append last point until the length matches the end length\n             */\n            function append(arr, other) {\n                var i = (fullLength - arr.length) / numParams;\n                while (i > 0 && i--) {\n\n                    // Pull out the slice that is going to be appended or inserted. In a line graph,\n                    // the positionFactor is 1, and the last point is sliced out. In an area graph,\n                    // the positionFactor is 2, causing the middle two points to be sliced out, since\n                    // an area path starts at left, follows the upper path then turns and follows the\n                    // bottom back. \n                    slice = arr.slice().splice(\n                        (arr.length / positionFactor) - numParams, \n                        numParams * positionFactor\n                    );\n\n                    // Move to, line to or curve to?\n                    slice[0] = other[fullLength - numParams - (i * numParams)];\n                \n                    // Disable first control point\n                    if (bezier) {\n                        slice[numParams - 6] = slice[numParams - 2];\n                        slice[numParams - 5] = slice[numParams - 1];\n                    }\n                \n                    // Now insert the slice, either in the middle (for areas) or at the end (for lines)\n                    insertSlice(arr, slice, arr.length / positionFactor);\n\n                    if (isArea) {\n                        i--;\n                    }\n                }\n            }\n\n            if (bezier) {\n                sixify(start);\n                sixify(end);\n            }\n\n            // For sideways animation, find out how much we need to shift to get the start path Xs\n            // to match the end path Xs.\n            if (startX && endX) {\n                for (i = 0; i < startX.length; i++) {\n                    if (startX[i] === endX[0]) { // Moving left, new points coming in on right\n                        shift = i;\n                        break;\n                    } else if (startX[0] === endX[endX.length - startX.length + i]) { // Moving right\n                        shift = i;\n                        reverse = true;\n                        break;\n                    }\n                }\n                if (shift === undefined) {\n                    start = [];\n                }\n            }\n\n            if (start.length && Highcharts.isNumber(shift)) {\n\n                // The common target length for the start and end array, where both \n                // arrays are padded in opposite ends\n                fullLength = end.length + shift * positionFactor * numParams;\n            \n                if (!reverse) {\n                    prepend(end, start);\n                    append(start, end);\n                } else {\n                    prepend(start, end);\n                    append(end, start);\n                }\n            }\n\n            return [start, end];\n        }\n    }; // End of Fx prototype\n\n\n    /**\n     * Extend an object with the members of another\n     * @param {Object} a The object to be extended\n     * @param {Object} b The object to add to the first one\n     */\n    var extend = Highcharts.extend = function (a, b) {\n        var n;\n        if (!a) {\n            a = {};\n        }\n        for (n in b) {\n            a[n] = b[n];\n        }\n        return a;\n    };\n\n    /**\n     * Deep merge two or more objects and return a third object. If the first argument is\n     * true, the contents of the second object is copied into the first object.\n     * Previously this function redirected to jQuery.extend(true), but this had two limitations.\n     * First, it deep merged arrays, which lead to workarounds in Highcharts. Second,\n     * it copied properties from extended prototypes.\n     */\n    function merge() {\n        var i,\n            args = arguments,\n            len,\n            ret = {},\n            doCopy = function (copy, original) {\n                var value, key;\n\n                // An object is replacing a primitive\n                if (typeof copy !== 'object') {\n                    copy = {};\n                }\n\n                for (key in original) {\n                    if (original.hasOwnProperty(key)) {\n                        value = original[key];\n\n                        // Copy the contents of objects, but not arrays or DOM nodes\n                        if (Highcharts.isObject(value, true) &&\n                                key !== 'renderTo' && typeof value.nodeType !== 'number') {\n                            copy[key] = doCopy(copy[key] || {}, value);\n\n                        // Primitives and arrays are copied over directly\n                        } else {\n                            copy[key] = original[key];\n                        }\n                    }\n                }\n                return copy;\n            };\n\n        // If first argument is true, copy into the existing object. Used in setOptions.\n        if (args[0] === true) {\n            ret = args[1];\n            args = Array.prototype.slice.call(args, 2);\n        }\n\n        // For each argument, extend the return\n        len = args.length;\n        for (i = 0; i < len; i++) {\n            ret = doCopy(ret, args[i]);\n        }\n\n        return ret;\n    }\n\n    /**\n     * Shortcut for parseInt\n     * @param {Object} s\n     * @param {Number} mag Magnitude\n     */\n    function pInt(s, mag) {\n        return parseInt(s, mag || 10);\n    }\n\n    /**\n     * Check for string\n     * @param {Object} s\n     */\n    function isString(s) {\n        return typeof s === 'string';\n    }\n\n    /**\n     * Check for array\n     * @param {Object} obj\n     */\n    function isArray(obj) {\n        var str = Object.prototype.toString.call(obj);\n        return str === '[object Array]' || str === '[object Array Iterator]';\n    }\n\n    /**\n     * Check for object\n     * @param {Object} obj\n     * @param {Boolean} strict Also checks that the object is not an array\n     */\n    var isObject = Highcharts.isObject = function (obj, strict) {\n        //debugger;\n        return obj && typeof obj === 'object' && (!strict || !isArray(obj));\n    };\n\n    /**\n     * Check for number\n     * @param {Object} n\n     */\n    var isNumber = Highcharts.isNumber = function isNumber(n) {\n        return typeof n === 'number' && !isNaN(n);\n    };\n\n    /**\n     * Remove last occurence of an item from an array\n     * @param {Array} arr\n     * @param {Mixed} item\n     */\n    function erase(arr, item) {\n        var i = arr.length;\n        while (i--) {\n            if (arr[i] === item) {\n                arr.splice(i, 1);\n                break;\n            }\n        }\n        //return arr;\n    }\n\n    /**\n     * Returns true if the object is not null or undefined.\n     * @param {Object} obj\n     */\n    function defined(obj) {\n        return obj !== UNDEFINED && obj !== null;\n    }\n\n    /**\n     * Set or get an attribute or an object of attributes. Can't use jQuery attr because\n     * it attempts to set expando properties on the SVG element, which is not allowed.\n     *\n     * @param {Object} elem The DOM element to receive the attribute(s)\n     * @param {String|Object} prop The property or an abject of key-value pairs\n     * @param {String} value The value if a single property is set\n     */\n    function attr(elem, prop, value) {\n        var key,\n            ret;\n\n        // if the prop is a string\n        if (isString(prop)) {\n            // set the value\n            if (defined(value)) {\n                elem.setAttribute(prop, value);\n\n            // get the value\n            } else if (elem && elem.getAttribute) { // elem not defined when printing pie demo...\n                ret = elem.getAttribute(prop);\n            }\n\n        // else if prop is defined, it is a hash of key/value pairs\n        } else if (defined(prop) && isObject(prop)) {\n            for (key in prop) {\n                elem.setAttribute(key, prop[key]);\n            }\n        }\n        return ret;\n    }\n    /**\n     * Check if an element is an array, and if not, make it into an array.\n     */\n    function splat(obj) {\n        return isArray(obj) ? obj : [obj];\n    }\n\n    /**\n     * Set a timeout if the delay is given, otherwise perform the function synchronously\n     * @param   {Function} fn      The function to perform\n     * @param   {Number}   delay   Delay in milliseconds\n     * @param   {Ojbect}   context The context\n     * @returns {Nubmer}           An identifier for the timeout\n     */\n    function syncTimeout(fn, delay, context) {\n        if (delay) {\n            return setTimeout(fn, delay, context);\n        }\n        fn.call(0, context);\n    }\n\n\n    /**\n     * Return the first value that is defined.\n     */\n    var pick = Highcharts.pick = function () {\n        var args = arguments,\n            i,\n            arg,\n            length = args.length;\n        for (i = 0; i < length; i++) {\n            arg = args[i];\n            if (arg !== UNDEFINED && arg !== null) {\n                return arg;\n            }\n        }\n    };\n\n    /**\n     * Set CSS on a given element\n     * @param {Object} el\n     * @param {Object} styles Style object with camel case property names\n     */\n    function css(el, styles) {\n        if (isMS && !hasSVG) { // #2686\n            if (styles && styles.opacity !== UNDEFINED) {\n                styles.filter = 'alpha(opacity=' + (styles.opacity * 100) + ')';\n            }\n        }\n        extend(el.style, styles);\n    }\n\n    /**\n     * Utility function to create element with attributes and styles\n     * @param {Object} tag\n     * @param {Object} attribs\n     * @param {Object} styles\n     * @param {Object} parent\n     * @param {Object} nopad\n     */\n    function createElement(tag, attribs, styles, parent, nopad) {\n        var el = doc.createElement(tag);\n        if (attribs) {\n            extend(el, attribs);\n        }\n        if (nopad) {\n            css(el, { padding: 0, border: 'none', margin: 0 });\n        }\n        if (styles) {\n            css(el, styles);\n        }\n        if (parent) {\n            parent.appendChild(el);\n        }\n        return el;\n    }\n\n    /**\n     * Extend a prototyped class by new members\n     * @param {Object} parent\n     * @param {Object} members\n     */\n    function extendClass(Parent, members) {\n        var object = function () {\n        };\n        object.prototype = new Parent();\n        extend(object.prototype, members);\n        return object;\n    }\n\n    /**\n     * Pad a string to a given length by adding 0 to the beginning\n     * @param {Number} number\n     * @param {Number} length\n     */\n    function pad(number, length, padder) {\n        return new Array((length || 2) + 1 - String(number).length).join(padder || 0) + number;\n    }\n\n    /**\n     * Return a length based on either the integer value, or a percentage of a base.\n     */\n    function relativeLength(value, base) {\n        return (/%$/).test(value) ? base * parseFloat(value) / 100 : parseFloat(value);\n    }\n\n    /**\n     * Wrap a method with extended functionality, preserving the original function\n     * @param {Object} obj The context object that the method belongs to\n     * @param {String} method The name of the method to extend\n     * @param {Function} func A wrapper function callback. This function is called with the same arguments\n     * as the original function, except that the original function is unshifted and passed as the first\n     * argument.\n     */\n    var wrap = Highcharts.wrap = function (obj, method, func) {\n        var proceed = obj[method];\n        obj[method] = function () {\n            var args = Array.prototype.slice.call(arguments);\n            args.unshift(proceed);\n            return func.apply(this, args);\n        };\n    };\n\n\n    function getTZOffset(timestamp) {\n        return ((getTimezoneOffset && getTimezoneOffset(timestamp)) || timezoneOffset || 0) * 60000;\n    }\n\n    /**\n     * Based on http://www.php.net/manual/en/function.strftime.php\n     * @param {String} format\n     * @param {Number} timestamp\n     * @param {Boolean} capitalize\n     */\n    dateFormat = function (format, timestamp, capitalize) {\n        if (!defined(timestamp) || isNaN(timestamp)) {\n            return defaultOptions.lang.invalidDate || '';\n        }\n        format = pick(format, '%Y-%m-%d %H:%M:%S');\n\n        var date = new Date(timestamp - getTZOffset(timestamp)),\n            key, // used in for constuct below\n            // get the basic time values\n            hours = date[getHours](),\n            day = date[getDay](),\n            dayOfMonth = date[getDate](),\n            month = date[getMonth](),\n            fullYear = date[getFullYear](),\n            lang = defaultOptions.lang,\n            langWeekdays = lang.weekdays,\n            shortWeekdays = lang.shortWeekdays,\n\n            // List all format keys. Custom formats can be added from the outside.\n            replacements = extend({\n\n                // Day\n                'a': shortWeekdays ? shortWeekdays[day] : langWeekdays[day].substr(0, 3), // Short weekday, like 'Mon'\n                'A': langWeekdays[day], // Long weekday, like 'Monday'\n                'd': pad(dayOfMonth), // Two digit day of the month, 01 to 31\n                'e': pad(dayOfMonth, 2, ' '), // Day of the month, 1 through 31\n                'w': day,\n\n                // Week (none implemented)\n                //'W': weekNumber(),\n\n                // Month\n                'b': lang.shortMonths[month], // Short month, like 'Jan'\n                'B': lang.months[month], // Long month, like 'January'\n                'm': pad(month + 1), // Two digit month number, 01 through 12\n\n                // Year\n                'y': fullYear.toString().substr(2, 2), // Two digits year, like 09 for 2009\n                'Y': fullYear, // Four digits year, like 2009\n\n                // Time\n                'H': pad(hours), // Two digits hours in 24h format, 00 through 23\n                'k': hours, // Hours in 24h format, 0 through 23\n                'I': pad((hours % 12) || 12), // Two digits hours in 12h format, 00 through 11\n                'l': (hours % 12) || 12, // Hours in 12h format, 1 through 12\n                'M': pad(date[getMinutes]()), // Two digits minutes, 00 through 59\n                'p': hours < 12 ? 'AM' : 'PM', // Upper case AM or PM\n                'P': hours < 12 ? 'am' : 'pm', // Lower case AM or PM\n                'S': pad(date.getSeconds()), // Two digits seconds, 00 through  59\n                'L': pad(mathRound(timestamp % 1000), 3) // Milliseconds (naming from Ruby)\n            }, Highcharts.dateFormats);\n\n\n        // do the replaces\n        for (key in replacements) {\n            while (format.indexOf('%' + key) !== -1) { // regex would do it in one line, but this is faster\n                format = format.replace('%' + key, typeof replacements[key] === 'function' ? replacements[key](timestamp) : replacements[key]);\n            }\n        }\n\n        // Optionally capitalize the string and return\n        return capitalize ? format.substr(0, 1).toUpperCase() + format.substr(1) : format;\n    };\n\n    /**\n     * Format a single variable. Similar to sprintf, without the % prefix.\n     */\n    function formatSingle(format, val) {\n        var floatRegex = /f$/,\n            decRegex = /\\.([0-9])/,\n            lang = defaultOptions.lang,\n            decimals;\n\n        if (floatRegex.test(format)) { // float\n            decimals = format.match(decRegex);\n            decimals = decimals ? decimals[1] : -1;\n            if (val !== null) {\n                val = Highcharts.numberFormat(\n                    val,\n                    decimals,\n                    lang.decimalPoint,\n                    format.indexOf(',') > -1 ? lang.thousandsSep : ''\n                );\n            }\n        } else {\n            val = dateFormat(format, val);\n        }\n        return val;\n    }\n\n    /**\n     * Format a string according to a subset of the rules of Python's String.format method.\n     */\n    function format(str, ctx) {\n        var splitter = '{',\n            isInside = false,\n            segment,\n            valueAndFormat,\n            path,\n            i,\n            len,\n            ret = [],\n            val,\n            index;\n\n        while ((index = str.indexOf(splitter)) !== -1) {\n\n            segment = str.slice(0, index);\n            if (isInside) { // we're on the closing bracket looking back\n\n                valueAndFormat = segment.split(':');\n                path = valueAndFormat.shift().split('.'); // get first and leave format\n                len = path.length;\n                val = ctx;\n\n                // Assign deeper paths\n                for (i = 0; i < len; i++) {\n                    val = val[path[i]];\n                }\n\n                // Format the replacement\n                if (valueAndFormat.length) {\n                    val = formatSingle(valueAndFormat.join(':'), val);\n                }\n\n                // Push the result and advance the cursor\n                ret.push(val);\n\n            } else {\n                ret.push(segment);\n\n            }\n            str = str.slice(index + 1); // the rest\n            isInside = !isInside; // toggle\n            splitter = isInside ? '}' : '{'; // now look for next matching bracket\n        }\n        ret.push(str);\n        return ret.join('');\n    }\n\n    /**\n     * Get the magnitude of a number\n     */\n    function getMagnitude(num) {\n        return math.pow(10, mathFloor(math.log(num) / math.LN10));\n    }\n\n    /**\n     * Take an interval and normalize it to multiples of 1, 2, 2.5 and 5\n     * @param {Number} interval\n     * @param {Array} multiples\n     * @param {Number} magnitude\n     * @param {Object} options\n     */\n    function normalizeTickInterval(interval, multiples, magnitude, allowDecimals, preventExceed) {\n        var normalized,\n            i,\n            retInterval = interval;\n\n        // round to a tenfold of 1, 2, 2.5 or 5\n        magnitude = pick(magnitude, 1);\n        normalized = interval / magnitude;\n\n        // multiples for a linear scale\n        if (!multiples) {\n            multiples = [1, 2, 2.5, 5, 10];\n\n            // the allowDecimals option\n            if (allowDecimals === false) {\n                if (magnitude === 1) {\n                    multiples = [1, 2, 5, 10];\n                } else if (magnitude <= 0.1) {\n                    multiples = [1 / magnitude];\n                }\n            }\n        }\n\n        // normalize the interval to the nearest multiple\n        for (i = 0; i < multiples.length; i++) {\n            retInterval = multiples[i];\n            if ((preventExceed && retInterval * magnitude >= interval) || // only allow tick amounts smaller than natural\n                    (!preventExceed && (normalized <= (multiples[i] + (multiples[i + 1] || multiples[i])) / 2))) {\n                break;\n            }\n        }\n\n        // multiply back to the correct magnitude\n        retInterval *= magnitude;\n\n        return retInterval;\n    }\n\n\n    /**\n     * Utility method that sorts an object array and keeping the order of equal items.\n     * ECMA script standard does not specify the behaviour when items are equal.\n     */\n    function stableSort(arr, sortFunction) {\n        var length = arr.length,\n            sortValue,\n            i;\n\n        // Add index to each item\n        for (i = 0; i < length; i++) {\n            arr[i].safeI = i; // stable sort index\n        }\n\n        arr.sort(function (a, b) {\n            sortValue = sortFunction(a, b);\n            return sortValue === 0 ? a.safeI - b.safeI : sortValue;\n        });\n\n        // Remove index from items\n        for (i = 0; i < length; i++) {\n            delete arr[i].safeI; // stable sort index\n        }\n    }\n\n    /**\n     * Non-recursive method to find the lowest member of an array. Math.min raises a maximum\n     * call stack size exceeded error in Chrome when trying to apply more than 150.000 points. This\n     * method is slightly slower, but safe.\n     */\n    function arrayMin(data) {\n        var i = data.length,\n            min = data[0];\n\n        while (i--) {\n            if (data[i] < min) {\n                min = data[i];\n            }\n        }\n        return min;\n    }\n\n    /**\n     * Non-recursive method to find the lowest member of an array. Math.min raises a maximum\n     * call stack size exceeded error in Chrome when trying to apply more than 150.000 points. This\n     * method is slightly slower, but safe.\n     */\n    function arrayMax(data) {\n        var i = data.length,\n            max = data[0];\n\n        while (i--) {\n            if (data[i] > max) {\n                max = data[i];\n            }\n        }\n        return max;\n    }\n\n    /**\n     * Utility method that destroys any SVGElement or VMLElement that are properties on the given object.\n     * It loops all properties and invokes destroy if there is a destroy method. The property is\n     * then delete'ed.\n     * @param {Object} The object to destroy properties on\n     * @param {Object} Exception, do not destroy this property, only delete it.\n     */\n    function destroyObjectProperties(obj, except) {\n        var n;\n        for (n in obj) {\n            // If the object is non-null and destroy is defined\n            if (obj[n] && obj[n] !== except && obj[n].destroy) {\n                // Invoke the destroy\n                obj[n].destroy();\n            }\n\n            // Delete the property from the object.\n            delete obj[n];\n        }\n    }\n\n\n    /**\n     * Discard an element by moving it to the bin and delete\n     * @param {Object} The HTML node to discard\n     */\n    function discardElement(element) {\n        // create a garbage bin element, not part of the DOM\n        if (!garbageBin) {\n            garbageBin = createElement(DIV);\n        }\n\n        // move the node and empty bin\n        if (element) {\n            garbageBin.appendChild(element);\n        }\n        garbageBin.innerHTML = '';\n    }\n\n    /**\n     * Fix JS round off float errors\n     * @param {Number} num\n     */\n    function correctFloat(num, prec) {\n        return parseFloat(\n            num.toPrecision(prec || 14)\n        );\n    }\n\n    /**\n     * Set the global animation to either a given value, or fall back to the\n     * given chart's animation option\n     * @param {Object} animation\n     * @param {Object} chart\n     */\n    function setAnimation(animation, chart) {\n        chart.renderer.globalAnimation = pick(animation, chart.animation);\n    }\n\n    /**\n     * Get the animation in object form, where a disabled animation is always\n     * returned with duration: 0\n     */\n    function animObject(animation) {\n        return isObject(animation) ? merge(animation) : { duration: animation ? 500 : 0 };\n    }\n\n    /**\n     * The time unit lookup\n     */\n    timeUnits = {\n        millisecond: 1,\n        second: 1000,\n        minute: 60000,\n        hour: 3600000,\n        day: 24 * 3600000,\n        week: 7 * 24 * 3600000,\n        month: 28 * 24 * 3600000,\n        year: 364 * 24 * 3600000\n    };\n\n\n    /**\n     * Format a number and return a string based on input settings\n     * @param {Number} number The input number to format\n     * @param {Number} decimals The amount of decimals\n     * @param {String} decimalPoint The decimal point, defaults to the one given in the lang options\n     * @param {String} thousandsSep The thousands separator, defaults to the one given in the lang options\n     */\n    Highcharts.numberFormat = function (number, decimals, decimalPoint, thousandsSep) {\n\n        number = +number || 0;\n        decimals = +decimals;\n\n        var lang = defaultOptions.lang,\n            origDec = (number.toString().split('.')[1] || '').length,\n            decimalComponent,\n            strinteger,\n            thousands,\n            absNumber = Math.abs(number),\n            ret;\n\n        if (decimals === -1) {\n            decimals = Math.min(origDec, 20); // Preserve decimals. Not huge numbers (#3793).\n        } else if (!isNumber(decimals)) {\n            decimals = 2;\n        }\n\n        // A string containing the positive integer component of the number\n        strinteger = String(pInt(absNumber.toFixed(decimals)));\n\n        // Leftover after grouping into thousands. Can be 0, 1 or 3.\n        thousands = strinteger.length > 3 ? strinteger.length % 3 : 0;\n\n        // Language\n        decimalPoint = pick(decimalPoint, lang.decimalPoint);\n        thousandsSep = pick(thousandsSep, lang.thousandsSep);\n\n        // Start building the return\n        ret = number < 0 ? '-' : '';\n\n        // Add the leftover after grouping into thousands. For example, in the number 42 000 000,\n        // this line adds 42.\n        ret += thousands ? strinteger.substr(0, thousands) + thousandsSep : '';\n\n        // Add the remaining thousands groups, joined by the thousands separator\n        ret += strinteger.substr(thousands).replace(/(\\d{3})(?=\\d)/g, '$1' + thousandsSep);\n\n        // Add the decimal point and the decimal component\n        if (decimals) {\n            // Get the decimal component, and add power to avoid rounding errors with float numbers (#4573)\n            decimalComponent = Math.abs(absNumber - strinteger + Math.pow(10, -Math.max(decimals, origDec) - 1));\n            ret += decimalPoint + decimalComponent.toFixed(decimals).slice(2);\n        }\n\n        return ret;\n    };\n\n    /**\n     * Easing definition\n     * @param   {Number} pos Current position, ranging from 0 to 1\n     */\n    Math.easeInOutSine = function (pos) {\n        return -0.5 * (Math.cos(Math.PI * pos) - 1);\n    };\n\n    /**\n     * Internal method to return CSS value for given element and property\n     */\n    getStyle = function (el, prop) {\n\n        var style;\n\n        // For width and height, return the actual inner pixel size (#4913)\n        if (prop === 'width') {\n            return Math.min(el.offsetWidth, el.scrollWidth) - getStyle(el, 'padding-left') - getStyle(el, 'padding-right');\n        } else if (prop === 'height') {\n            return Math.min(el.offsetHeight, el.scrollHeight) - getStyle(el, 'padding-top') - getStyle(el, 'padding-bottom');\n        }\n\n        // Otherwise, get the computed style\n        style = win.getComputedStyle(el, undefined);\n        return style && pInt(style.getPropertyValue(prop));\n    };\n\n    /**\n     * Return the index of an item in an array, or -1 if not found\n     */\n    inArray = function (item, arr) {\n        return arr.indexOf ? arr.indexOf(item) : [].indexOf.call(arr, item);\n    };\n\n    /**\n     * Filter an array\n     */\n    grep = function (elements, callback) {\n        return [].filter.call(elements, callback);\n    };\n\n    /**\n     * Map an array\n     */\n    map = function (arr, fn) {\n        var results = [],\n            i = 0,\n            len = arr.length;\n\n        for (; i < len; i++) {\n            results[i] = fn.call(arr[i], arr[i], i, arr);\n        }\n\n        return results;\n    };\n\n    /**\n     * Get the element's offset position, corrected by overflow:auto.\n     */\n    offset = function (el) {\n        var docElem = doc.documentElement,\n            box = el.getBoundingClientRect();\n\n        return {\n            top: box.top  + (win.pageYOffset || docElem.scrollTop)  - (docElem.clientTop  || 0),\n            left: box.left + (win.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || 0)\n        };\n    };\n\n    /**\n     * Stop running animation.\n     * A possible extension to this would be to stop a single property, when\n     * we want to continue animating others. Then assign the prop to the timer\n     * in the Fx.run method, and check for the prop here. This would be an improvement\n     * in all cases where we stop the animation from .attr. Instead of stopping\n     * everything, we can just stop the actual attributes we're setting.\n     */\n    stop = function (el) {\n\n        var i = timers.length;\n\n        // Remove timers related to this element (#4519)\n        while (i--) {\n            if (timers[i].elem === el) {\n                timers[i].stopped = true; // #4667\n            }\n        }\n    };\n\n    /**\n     * Utility for iterating over an array.\n     * @param {Array} arr\n     * @param {Function} fn\n     */\n    each = function (arr, fn) { // modern browsers\n        return Array.prototype.forEach.call(arr, fn);\n    };\n\n    /**\n     * Add an event listener\n     */\n    addEvent = function (el, type, fn) {\n    \n        var events = el.hcEvents = el.hcEvents || {};\n\n        function wrappedFn(e) {\n            e.target = e.srcElement || win; // #2820\n            fn.call(el, e);\n        }\n\n        // Handle DOM events in modern browsers\n        if (el.addEventListener) {\n            el.addEventListener(type, fn, false);\n\n        // Handle old IE implementation\n        } else if (el.attachEvent) {\n\n            if (!el.hcEventsIE) {\n                el.hcEventsIE = {};\n            }\n\n            // Link wrapped fn with original fn, so we can get this in removeEvent\n            el.hcEventsIE[fn.toString()] = wrappedFn;\n\n            el.attachEvent('on' + type, wrappedFn);\n        }\n\n        if (!events[type]) {\n            events[type] = [];\n        }\n\n        events[type].push(fn);\n    };\n\n    /**\n     * Remove event added with addEvent\n     */\n    removeEvent = function (el, type, fn) {\n    \n        var events,\n            hcEvents = el.hcEvents,\n            index;\n\n        function removeOneEvent(type, fn) {\n            if (el.removeEventListener) {\n                el.removeEventListener(type, fn, false);\n            } else if (el.attachEvent) {\n                fn = el.hcEventsIE[fn.toString()];\n                el.detachEvent('on' + type, fn);\n            }\n        }\n\n        function removeAllEvents() {\n            var types,\n                len,\n                n;\n\n            if (!el.nodeName) {\n                return; // break on non-DOM events\n            }\n\n            if (type) {\n                types = {};\n                types[type] = true;\n            } else {\n                types = hcEvents;\n            }\n\n            for (n in types) {\n                if (hcEvents[n]) {\n                    len = hcEvents[n].length;\n                    while (len--) {\n                        removeOneEvent(n, hcEvents[n][len]);\n                    }\n                }\n            }\n        }\n\n        if (hcEvents) {\n            if (type) {\n                events = hcEvents[type] || [];\n                if (fn) {\n                    index = inArray(fn, events);\n                    if (index > -1) {\n                        events.splice(index, 1);\n                        hcEvents[type] = events;\n                    }\n                    removeOneEvent(type, fn);\n\n                } else {\n                    removeAllEvents();\n                    hcEvents[type] = [];\n                }\n            } else {\n                removeAllEvents();\n                el.hcEvents = {};\n            }\n        }\n    };\n\n    /**\n     * Fire an event on a custom object\n     */\n    fireEvent = function (el, type, eventArguments, defaultFunction) {\n        var e,\n            hcEvents = el.hcEvents,\n            events,\n            len,\n            i,\n            fn;\n\n        eventArguments = eventArguments || {};\n\n        if (doc.createEvent && (el.dispatchEvent || el.fireEvent)) {\n            e = doc.createEvent('Events');\n            e.initEvent(type, true, true);\n            e.target = el;\n\n            extend(e, eventArguments);\n\n            if (el.dispatchEvent) {\n                el.dispatchEvent(e);\n            } else {\n                el.fireEvent(type, e);\n            }\n\n        } else if (hcEvents) {\n        \n            events = hcEvents[type] || [];\n            len = events.length;\n\n            // Attach a simple preventDefault function to skip default handler if called. \n            // The built-in defaultPrevented property is not overwritable (#5112)\n            if (!eventArguments.preventDefault) {\n                eventArguments.preventDefault = function () {\n                    eventArguments.defaultPrevented = true;\n                };\n            }\n\n            eventArguments.target = el;\n\n            // If the type is not set, we're running a custom event (#2297). If it is set,\n            // we're running a browser event, and setting it will cause en error in\n            // IE8 (#2465).\n            if (!eventArguments.type) {\n                eventArguments.type = type;\n            }\n        \n            for (i = 0; i < len; i++) {\n                fn = events[i];\n\n                // If the event handler return false, prevent the default handler from executing\n                if (fn && fn.call(el, eventArguments) === false) {\n                    eventArguments.preventDefault();\n                }\n            }\n        }\n            \n        // Run the default if not prevented\n        if (defaultFunction && !eventArguments.defaultPrevented) {\n            defaultFunction(eventArguments);\n        }\n    };\n\n    /**\n     * The global animate method, which uses Fx to create individual animators.\n     */\n    animate = function (el, params, opt) {\n        var start,\n            unit = '',\n            end,\n            fx,\n            args,\n            prop;\n\n        if (!isObject(opt)) { // Number or undefined/null\n            args = arguments;\n            opt = {\n                duration: args[2],\n                easing: args[3],\n                complete: args[4]\n            };\n        }\n        if (!isNumber(opt.duration)) {\n            opt.duration = 400;\n        }\n        opt.easing = typeof opt.easing === 'function' ? opt.easing : (Math[opt.easing] || Math.easeInOutSine);\n        opt.curAnim = merge(params);\n\n        for (prop in params) {\n            fx = new Fx(el, opt, prop);\n            end = null;\n\n            if (prop === 'd') {\n                fx.paths = fx.initPath(\n                    el,\n                    el.d,\n                    params.d\n                );\n                fx.toD = params.d;\n                start = 0;\n                end = 1;\n            } else if (el.attr) {\n                start = el.attr(prop);\n            } else {\n                start = parseFloat(getStyle(el, prop)) || 0;\n                if (prop !== 'opacity') {\n                    unit = 'px';\n                }\n            }\n\n            if (!end) {\n                end = params[prop];\n            }\n            if (end.match && end.match('px')) {\n                end = end.replace(/px/g, ''); // #4351\n            }\n            fx.run(start, end, unit);\n        }\n    };\n\n    /**\n     * Register Highcharts as a plugin in jQuery\n     */\n    if (win.jQuery) {\n        win.jQuery.fn.highcharts = function () {\n            var args = [].slice.call(arguments);\n\n            if (this[0]) { // this[0] is the renderTo div\n\n                // Create the chart\n                if (args[0]) {\n                    new Highcharts[ // eslint-disable-line no-new\n                        isString(args[0]) ? args.shift() : 'Chart' // Constructor defaults to Chart\n                    ](this[0], args[0], args[1]);\n                    return this;\n                }\n\n                // When called without parameters or with the return argument, return an existing chart\n                return charts[attr(this[0], 'data-highcharts-chart')];\n            }\n        };\n    }\n\n\n    /**\n     * Compatibility section to add support for legacy IE. This can be removed if old IE \n     * support is not needed.\n     */\n    if (doc && !doc.defaultView) {\n        getStyle = function (el, prop) {\n            var val,\n                alias = { width: 'clientWidth', height: 'clientHeight' }[prop];\n            \n            if (el.style[prop]) {\n                return pInt(el.style[prop]);\n            }\n            if (prop === 'opacity') {\n                prop = 'filter';\n            }\n\n            // Getting the rendered width and height\n            if (alias) {\n                el.style.zoom = 1;\n                return Math.max(el[alias] - 2 * getStyle(el, 'padding'), 0);\n            }\n        \n            val = el.currentStyle[prop.replace(/\\-(\\w)/g, function (a, b) {\n                return b.toUpperCase();\n            })];\n            if (prop === 'filter') {\n                val = val.replace(\n                    /alpha\\(opacity=([0-9]+)\\)/, \n                    function (a, b) { \n                        return b / 100; \n                    }\n                );\n            }\n        \n            return val === '' ? 1 : pInt(val);\n        };\n    }\n\n    if (!Array.prototype.forEach) {\n        each = function (arr, fn) { // legacy\n            var i = 0, \n                len = arr.length;\n            for (; i < len; i++) {\n                if (fn.call(arr[i], arr[i], i, arr) === false) {\n                    return i;\n                }\n            }\n        };\n    }\n\n    if (!Array.prototype.indexOf) {\n        inArray = function (item, arr) {\n            var len, \n                i = 0;\n\n            if (arr) {\n                len = arr.length;\n            \n                for (; i < len; i++) {\n                    if (arr[i] === item) {\n                        return i;\n                    }\n                }\n            }\n\n            return -1;\n        };\n    }\n\n    if (!Array.prototype.filter) {\n        grep = function (elements, fn) {\n            var ret = [],\n                i = 0,\n                length = elements.length;\n\n            for (; i < length; i++) {\n                if (fn(elements[i], i)) {\n                    ret.push(elements[i]);\n                }\n            }\n\n            return ret;\n        };\n    }\n\n    //--- End compatibility section ---\n\n    // Expose utilities\n    Highcharts.Fx = Fx;\n    Highcharts.inArray = inArray;\n    Highcharts.each = each;\n    Highcharts.grep = grep;\n    Highcharts.offset = offset;\n    Highcharts.map = map;\n    Highcharts.addEvent = addEvent;\n    Highcharts.removeEvent = removeEvent;\n    Highcharts.fireEvent = fireEvent;\n    Highcharts.animate = animate;\n    Highcharts.animObject = animObject;\n    Highcharts.stop = stop;\n\n    /* ****************************************************************************\n     * Handle the options                                                         *\n     *****************************************************************************/\n    defaultOptions = {\n        colors: ['#7cb5ec', '#434348', '#90ed7d', '#f7a35c',\n                '#8085e9', '#f15c80', '#e4d354', '#2b908f', '#f45b5b', '#91e8e1'],\n        symbols: ['circle', 'diamond', 'square', 'triangle', 'triangle-down'],\n        lang: {\n            loading: 'Loading...',\n            months: ['January', 'February', 'March', 'April', 'May', 'June', 'July',\n                    'August', 'September', 'October', 'November', 'December'],\n            shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            weekdays: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            // invalidDate: '',\n            decimalPoint: '.',\n            numericSymbols: ['k', 'M', 'G', 'T', 'P', 'E'], // SI prefixes used in axis labels\n            resetZoom: 'Reset zoom',\n            resetZoomTitle: 'Reset zoom level 1:1',\n            thousandsSep: ' '\n        },\n        global: {\n            useUTC: true,\n            //timezoneOffset: 0,\n            canvasToolsURL: 'http://code.highcharts.com/modules/canvas-tools.js',\n            VMLRadialGradientURL: 'http://code.highcharts.com/4.2.7/gfx/vml-radial-gradient.png'\n        },\n        chart: {\n            //animation: true,\n            //alignTicks: false,\n            //reflow: true,\n            //className: null,\n            //events: { load, selection },\n            //margin: [null],\n            //marginTop: null,\n            //marginRight: null,\n            //marginBottom: null,\n            //marginLeft: null,\n            borderColor: '#4572A7',\n            //borderWidth: 0,\n            borderRadius: 0,\n            defaultSeriesType: 'line',\n            ignoreHiddenSeries: true,\n            //inverted: false,\n            //shadow: false,\n            spacing: [10, 10, 15, 10],\n            //spacingTop: 10,\n            //spacingRight: 10,\n            //spacingBottom: 15,\n            //spacingLeft: 10,\n            //style: {\n            //    fontFamily: '\"Lucida Grande\", \"Lucida Sans Unicode\", Verdana, Arial, Helvetica, sans-serif', // default font\n            //    fontSize: '12px'\n            //},\n            backgroundColor: '#FFFFFF',\n            //plotBackgroundColor: null,\n            plotBorderColor: '#C0C0C0',\n            //plotBorderWidth: 0,\n            //plotShadow: false,\n            //zoomType: ''\n            resetZoomButton: {\n                theme: {\n                    zIndex: 20\n                },\n                position: {\n                    align: 'right',\n                    x: -10,\n                    //verticalAlign: 'top',\n                    y: 10\n                }\n                // relativeTo: 'plot'\n            },\n            width: null,\n            height: null\n        },\n        title: {\n            text: 'Chart title',\n            align: 'center',\n            // floating: false,\n            margin: 15,\n            // x: 0,\n            // verticalAlign: 'top',\n            // y: null,\n            style: {\n                color: '#333333',\n                fontSize: '18px'\n            },\n            widthAdjust: -44\n\n        },\n        subtitle: {\n            text: '',\n            align: 'center',\n            // floating: false\n            // x: 0,\n            // verticalAlign: 'top',\n            // y: null,\n            style: {\n                color: '#555555'\n            },\n            widthAdjust: -44\n        },\n\n        plotOptions: {\n            line: { // base series options\n                allowPointSelect: false,\n                showCheckbox: false,\n                animation: {\n                    duration: 1000\n                },\n                //connectNulls: false,\n                //cursor: 'default',\n                //clip: true,\n                //dashStyle: null,\n                //enableMouseTracking: true,\n                events: {},\n                //legendIndex: 0,\n                //linecap: 'round',\n                lineWidth: 2,\n                //shadow: false,\n                // stacking: null,\n                marker: {\n                    //enabled: true,\n                    //symbol: null,\n                    lineWidth: 0,\n                    radius: 4,\n                    lineColor: '#FFFFFF',\n                    //fillColor: null,\n                    states: { // states for a single point\n                        hover: {\n                            enabled: true,\n                            lineWidthPlus: 1,\n                            radiusPlus: 2\n                        },\n                        select: {\n                            fillColor: '#FFFFFF',\n                            lineColor: '#000000',\n                            lineWidth: 2\n                        }\n                    }\n                },\n                point: {\n                    events: {}\n                },\n                dataLabels: {\n                    align: 'center',\n                    // defer: true,\n                    // enabled: false,\n                    formatter: function () {\n                        return this.y === null ? '' : Highcharts.numberFormat(this.y, -1);\n                    },\n                    style: {\n                        color: 'contrast',\n                        fontSize: '11px',\n                        fontWeight: 'bold',\n                        textShadow: '0 0 6px contrast, 0 0 3px contrast'\n                    },\n                    verticalAlign: 'bottom', // above singular point\n                    x: 0,\n                    y: 0,\n                    // backgroundColor: undefined,\n                    // borderColor: undefined,\n                    // borderRadius: undefined,\n                    // borderWidth: undefined,\n                    padding: 5\n                    // shadow: false\n                },\n                cropThreshold: 300, // draw points outside the plot area when the number of points is less than this\n                pointRange: 0,\n                //pointStart: 0,\n                //pointInterval: 1,\n                //showInLegend: null, // auto: true for standalone series, false for linked series\n                softThreshold: true,\n                states: { // states for the entire series\n                    hover: {\n                        //enabled: false,\n                        lineWidthPlus: 1,\n                        marker: {\n                            // lineWidth: base + 1,\n                            // radius: base + 1\n                        },\n                        halo: {\n                            size: 10,\n                            opacity: 0.25\n                        }\n                    },\n                    select: {\n                        marker: {}\n                    }\n                },\n                stickyTracking: true,\n                //tooltip: {\n                    //pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> {series.name}: <b>{point.y}</b>'\n                    //valueDecimals: null,\n                    //xDateFormat: '%A, %b %e, %Y',\n                    //valuePrefix: '',\n                    //ySuffix: ''\n                //}\n                turboThreshold: 1000\n                // zIndex: null\n            }\n        },\n        labels: {\n            //items: [],\n            style: {\n                //font: defaultFont,\n                position: ABSOLUTE,\n                color: '#3E576F'\n            }\n        },\n        legend: {\n            enabled: true,\n            align: 'center',\n            //floating: false,\n            layout: 'horizontal',\n            labelFormatter: function () {\n                return this.name;\n            },\n            //borderWidth: 0,\n            borderColor: '#909090',\n            borderRadius: 0,\n            navigation: {\n                // animation: true,\n                activeColor: '#274b6d',\n                // arrowSize: 12\n                inactiveColor: '#CCC'\n                // style: {} // text styles\n            },\n            // margin: 20,\n            // reversed: false,\n            shadow: false,\n            // backgroundColor: null,\n            /*style: {\n                padding: '5px'\n            },*/\n            itemStyle: {\n                color: '#333333',\n                fontSize: '12px',\n                fontWeight: 'bold'\n            },\n            itemHoverStyle: {\n                //cursor: 'pointer', removed as of #601\n                color: '#000'\n            },\n            itemHiddenStyle: {\n                color: '#CCC'\n            },\n            itemCheckboxStyle: {\n                position: ABSOLUTE,\n                width: '13px', // for IE precision\n                height: '13px'\n            },\n            // itemWidth: undefined,\n            // symbolRadius: 0,\n            // symbolWidth: 16,\n            symbolPadding: 5,\n            verticalAlign: 'bottom',\n            // width: undefined,\n            x: 0,\n            y: 0,\n            title: {\n                //text: null,\n                style: {\n                    fontWeight: 'bold'\n                }\n            }\n        },\n\n        loading: {\n            // hideDuration: 100,\n            labelStyle: {\n                fontWeight: 'bold',\n                position: RELATIVE,\n                top: '45%'\n            },\n            // showDuration: 0,\n            style: {\n                position: ABSOLUTE,\n                backgroundColor: 'white',\n                opacity: 0.5,\n                textAlign: 'center'\n            }\n        },\n\n        tooltip: {\n            enabled: true,\n            animation: hasSVG,\n            //crosshairs: null,\n            backgroundColor: 'rgba(249, 249, 249, .85)',\n            borderWidth: 1,\n            borderRadius: 3,\n            dateTimeLabelFormats: {\n                millisecond: '%A, %b %e, %H:%M:%S.%L',\n                second: '%A, %b %e, %H:%M:%S',\n                minute: '%A, %b %e, %H:%M',\n                hour: '%A, %b %e, %H:%M',\n                day: '%A, %b %e, %Y',\n                week: 'Week from %A, %b %e, %Y',\n                month: '%B %Y',\n                year: '%Y'\n            },\n            footerFormat: '',\n            //formatter: defaultFormatter,\n            headerFormat: '<span style=\"font-size: 10px\">{point.key}</span><br/>',\n            pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> {series.name}: <b>{point.y}</b><br/>',\n            shadow: true,\n            //shape: 'callout',\n            //shared: false,\n            snap: isTouchDevice ? 25 : 10,\n            style: {\n                color: '#333333',\n                cursor: 'default',\n                fontSize: '12px',\n                padding: '8px',\n                pointerEvents: 'none', // #1686 http://caniuse.com/#feat=pointer-events\n                whiteSpace: 'nowrap'\n            }\n            //xDateFormat: '%A, %b %e, %Y',\n            //valueDecimals: null,\n            //valuePrefix: '',\n            //valueSuffix: ''\n        },\n\n        credits: {\n            enabled: true,\n            text: 'Highcharts.com',\n            href: 'http://www.highcharts.com',\n            position: {\n                align: 'right',\n                x: -10,\n                verticalAlign: 'bottom',\n                y: -5\n            },\n            style: {\n                cursor: 'pointer',\n                color: '#909090',\n                fontSize: '9px'\n            }\n        }\n    };\n\n\n\n    /**\n     * Set the time methods globally based on the useUTC option. Time method can be either\n     * local time or UTC (default).\n     */\n    function setTimeMethods() {\n        var globalOptions = defaultOptions.global,\n            useUTC = globalOptions.useUTC,\n            GET = useUTC ? 'getUTC' : 'get',\n            SET = useUTC ? 'setUTC' : 'set';\n\n\n        Date = globalOptions.Date || win.Date;\n        timezoneOffset = useUTC && globalOptions.timezoneOffset;\n        getTimezoneOffset = useUTC && globalOptions.getTimezoneOffset;\n        makeTime = function (year, month, date, hours, minutes, seconds) {\n            var d;\n            if (useUTC) {\n                d = Date.UTC.apply(0, arguments);\n                d += getTZOffset(d);\n            } else {\n                d = new Date(\n                    year,\n                    month,\n                    pick(date, 1),\n                    pick(hours, 0),\n                    pick(minutes, 0),\n                    pick(seconds, 0)\n                ).getTime();\n            }\n            return d;\n        };\n        getMinutes =      GET + 'Minutes';\n        getHours =        GET + 'Hours';\n        getDay =          GET + 'Day';\n        getDate =         GET + 'Date';\n        getMonth =        GET + 'Month';\n        getFullYear =     GET + 'FullYear';\n        setMilliseconds = SET + 'Milliseconds';\n        setSeconds =      SET + 'Seconds';\n        setMinutes =      SET + 'Minutes';\n        setHours =        SET + 'Hours';\n        setDate =         SET + 'Date';\n        setMonth =        SET + 'Month';\n        setFullYear =     SET + 'FullYear';\n\n    }\n\n    /**\n     * Merge the default options with custom options and return the new options structure\n     * @param {Object} options The new custom options\n     */\n    function setOptions(options) {\n\n        // Copy in the default options\n        defaultOptions = merge(true, defaultOptions, options);\n\n        // Apply UTC\n        setTimeMethods();\n\n        return defaultOptions;\n    }\n\n    /**\n     * Get the updated default options. Until 3.0.7, merely exposing defaultOptions for outside modules\n     * wasn't enough because the setOptions method created a new object.\n     */\n    function getOptions() {\n        return defaultOptions;\n    }\n\n\n\n\n\n\n    // Series defaults\n    var defaultPlotOptions = defaultOptions.plotOptions,\n        defaultSeriesOptions = defaultPlotOptions.line;\n\n    // set the default time methods\n    setTimeMethods();\n\n\n    /**\n     * Handle color operations. The object methods are chainable.\n     * @param {String} input The input color in either rbga or hex format\n     */\n    function Color(input) {\n        // Backwards compatibility, allow instanciation without new\n        if (!(this instanceof Color)) {\n            return new Color(input);\n        }\n        // Initialize\n        this.init(input);\n    }\n    Color.prototype = {\n\n        // Collection of parsers. This can be extended from the outside by pushing parsers\n        // to Highcharts.Colors.prototype.parsers.\n        parsers: [{\n            // RGBA color\n            regex: /rgba\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]?(?:\\.[0-9]+)?)\\s*\\)/,\n            parse: function (result) {\n                return [pInt(result[1]), pInt(result[2]), pInt(result[3]), parseFloat(result[4], 10)];\n            }\n        }, {\n            // HEX color\n            regex: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/,\n            parse: function (result) {\n                return [pInt(result[1], 16), pInt(result[2], 16), pInt(result[3], 16), 1];\n            }\n        }, {\n            // RGB color\n            regex: /rgb\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)/,\n            parse: function (result) {\n                return [pInt(result[1]), pInt(result[2]), pInt(result[3]), 1];\n            }\n        }],\n\n        /**\n         * Parse the input color to rgba array\n         * @param {String} input\n         */\n        init: function (input) {\n            var result,\n                rgba,\n                i,\n                parser;\n\n            this.input = input;\n\n            // Gradients\n            if (input && input.stops) {\n                this.stops = map(input.stops, function (stop) {\n                    return new Color(stop[1]);\n                });\n\n            // Solid colors\n            } else {\n                i = this.parsers.length;\n                while (i-- && !rgba) {\n                    parser = this.parsers[i];\n                    result = parser.regex.exec(input);\n                    if (result) {\n                        rgba = parser.parse(result);\n                    }\n                }\n            }\n            this.rgba = rgba || [];\n        },\n\n        /**\n         * Return the color a specified format\n         * @param {String} format\n         */\n        get: function (format) {\n            var input = this.input,\n                rgba = this.rgba,\n                ret;\n\n            if (this.stops) {\n                ret = merge(input);\n                ret.stops = [].concat(ret.stops);\n                each(this.stops, function (stop, i) {\n                    ret.stops[i] = [ret.stops[i][0], stop.get(format)];\n                });\n\n            // it's NaN if gradient colors on a column chart\n            } else if (rgba && isNumber(rgba[0])) {\n                if (format === 'rgb' || (!format && rgba[3] === 1)) {\n                    ret = 'rgb(' + rgba[0] + ',' + rgba[1] + ',' + rgba[2] + ')';\n                } else if (format === 'a') {\n                    ret = rgba[3];\n                } else {\n                    ret = 'rgba(' + rgba.join(',') + ')';\n                }\n            } else {\n                ret = input;\n            }\n            return ret;\n        },\n\n        /**\n         * Brighten the color\n         * @param {Number} alpha\n         */\n        brighten: function (alpha) {\n            var i, \n                rgba = this.rgba;\n\n            if (this.stops) {\n                each(this.stops, function (stop) {\n                    stop.brighten(alpha);\n                });\n\n            } else if (isNumber(alpha) && alpha !== 0) {\n                for (i = 0; i < 3; i++) {\n                    rgba[i] += pInt(alpha * 255);\n\n                    if (rgba[i] < 0) {\n                        rgba[i] = 0;\n                    }\n                    if (rgba[i] > 255) {\n                        rgba[i] = 255;\n                    }\n                }\n            }\n            return this;\n        },\n\n        /**\n         * Set the color's opacity to a given alpha value\n         * @param {Number} alpha\n         */\n        setOpacity: function (alpha) {\n            this.rgba[3] = alpha;\n            return this;\n        }\n    };\n\n\n    /**\n     * A wrapper object for SVG elements\n     */\n    function SVGElement() {}\n\n    SVGElement.prototype = {\n\n        // Default base for animation\n        opacity: 1,\n        // For labels, these CSS properties are applied to the <text> node directly\n        textProps: ['direction', 'fontSize', 'fontWeight', 'fontFamily', 'fontStyle', 'color',\n            'lineHeight', 'width', 'textDecoration', 'textOverflow', 'textShadow'],\n\n        /**\n         * Initialize the SVG renderer\n         * @param {Object} renderer\n         * @param {String} nodeName\n         */\n        init: function (renderer, nodeName) {\n            var wrapper = this;\n            wrapper.element = nodeName === 'span' ?\n                    createElement(nodeName) :\n                    doc.createElementNS(SVG_NS, nodeName);\n            wrapper.renderer = renderer;\n        },\n\n        /**\n         * Animate a given attribute\n         * @param {Object} params\n         * @param {Number} options Options include duration, easing, step and complete\n         * @param {Function} complete Function to perform at the end of animation\n         */\n        animate: function (params, options, complete) {\n            var animOptions = pick(options, this.renderer.globalAnimation, true);\n            stop(this); // stop regardless of animation actually running, or reverting to .attr (#607)\n            if (animOptions) {\n                if (complete) { // allows using a callback with the global animation without overwriting it\n                    animOptions.complete = complete;\n                }\n                animate(this, params, animOptions);\n            } else {\n                this.attr(params, null, complete);\n            }\n            return this;\n        },\n\n        /**\n         * Build an SVG gradient out of a common JavaScript configuration object\n         */\n        colorGradient: function (color, prop, elem) {\n            var renderer = this.renderer,\n                colorObject,\n                gradName,\n                gradAttr,\n                radAttr,\n                gradients,\n                gradientObject,\n                stops,\n                stopColor,\n                stopOpacity,\n                radialReference,\n                n,\n                id,\n                key = [],\n                value;\n\n            // Apply linear or radial gradients\n            if (color.linearGradient) {\n                gradName = 'linearGradient';\n            } else if (color.radialGradient) {\n                gradName = 'radialGradient';\n            }\n\n            if (gradName) {\n                gradAttr = color[gradName];\n                gradients = renderer.gradients;\n                stops = color.stops;\n                radialReference = elem.radialReference;\n\n                // Keep < 2.2 kompatibility\n                if (isArray(gradAttr)) {\n                    color[gradName] = gradAttr = {\n                        x1: gradAttr[0],\n                        y1: gradAttr[1],\n                        x2: gradAttr[2],\n                        y2: gradAttr[3],\n                        gradientUnits: 'userSpaceOnUse'\n                    };\n                }\n\n                // Correct the radial gradient for the radial reference system\n                if (gradName === 'radialGradient' && radialReference && !defined(gradAttr.gradientUnits)) {\n                    radAttr = gradAttr; // Save the radial attributes for updating\n                    gradAttr = merge(gradAttr,\n                        renderer.getRadialAttr(radialReference, radAttr),\n                        { gradientUnits: 'userSpaceOnUse' }\n                        );\n                }\n\n                // Build the unique key to detect whether we need to create a new element (#1282)\n                for (n in gradAttr) {\n                    if (n !== 'id') {\n                        key.push(n, gradAttr[n]);\n                    }\n                }\n                for (n in stops) {\n                    key.push(stops[n]);\n                }\n                key = key.join(',');\n\n                // Check if a gradient object with the same config object is created within this renderer\n                if (gradients[key]) {\n                    id = gradients[key].attr('id');\n\n                } else {\n\n                    // Set the id and create the element\n                    gradAttr.id = id = PREFIX + idCounter++;\n                    gradients[key] = gradientObject = renderer.createElement(gradName)\n                        .attr(gradAttr)\n                        .add(renderer.defs);\n\n                    gradientObject.radAttr = radAttr;\n\n                    // The gradient needs to keep a list of stops to be able to destroy them\n                    gradientObject.stops = [];\n                    each(stops, function (stop) {\n                        var stopObject;\n                        if (stop[1].indexOf('rgba') === 0) {\n                            colorObject = Color(stop[1]);\n                            stopColor = colorObject.get('rgb');\n                            stopOpacity = colorObject.get('a');\n                        } else {\n                            stopColor = stop[1];\n                            stopOpacity = 1;\n                        }\n                        stopObject = renderer.createElement('stop').attr({\n                            offset: stop[0],\n                            'stop-color': stopColor,\n                            'stop-opacity': stopOpacity\n                        }).add(gradientObject);\n\n                        // Add the stop element to the gradient\n                        gradientObject.stops.push(stopObject);\n                    });\n                }\n\n                // Set the reference to the gradient object\n                value = 'url(' + renderer.url + '#' + id + ')';\n                elem.setAttribute(prop, value);\n                elem.gradient = key;\n\n                // Allow the color to be concatenated into tooltips formatters etc. (#2995)\n                color.toString = function () {\n                    return value;\n                };\n            }\n        },\n\n        /**\n         * Apply a polyfill to the text-stroke CSS property, by copying the text element\n         * and apply strokes to the copy.\n         *\n         * Contrast checks at http://jsfiddle.net/highcharts/43soe9m1/2/\n         */\n        applyTextShadow: function (textShadow) {\n            var elem = this.element,\n                tspans,\n                hasContrast = textShadow.indexOf('contrast') !== -1,\n                styles = {},\n                forExport = this.renderer.forExport,\n                // IE10 and IE11 report textShadow in elem.style even though it doesn't work. Check\n                // this again with new IE release. In exports, the rendering is passed to PhantomJS.\n                supports = forExport || (elem.style.textShadow !== UNDEFINED && !isMS);\n\n            // When the text shadow is set to contrast, use dark stroke for light text and vice versa\n            if (hasContrast) {\n                styles.textShadow = textShadow = textShadow.replace(/contrast/g, this.renderer.getContrast(elem.style.fill));\n            }\n\n            // Safari with retina displays as well as PhantomJS bug (#3974). Firefox does not tolerate this,\n            // it removes the text shadows.\n            if (isWebKit || forExport) {\n                styles.textRendering = 'geometricPrecision';\n            }\n\n            /* Selective side-by-side testing in supported browser (http://jsfiddle.net/highcharts/73L1ptrh/)\n            if (elem.textContent.indexOf('2.') === 0) {\n                elem.style['text-shadow'] = 'none';\n                supports = false;\n            }\n            // */\n\n            // No reason to polyfill, we've got native support\n            if (supports) {\n                this.css(styles); // Apply altered textShadow or textRendering workaround\n            } else {\n\n                this.fakeTS = true; // Fake text shadow\n\n                // In order to get the right y position of the clones,\n                // copy over the y setter\n                this.ySetter = this.xSetter;\n\n                tspans = [].slice.call(elem.getElementsByTagName('tspan'));\n                each(textShadow.split(/\\s?,\\s?/g), function (textShadow) {\n                    var firstChild = elem.firstChild,\n                        color,\n                        strokeWidth;\n\n                    textShadow = textShadow.split(' ');\n                    color = textShadow[textShadow.length - 1];\n\n                    // Approximately tune the settings to the text-shadow behaviour\n                    strokeWidth = textShadow[textShadow.length - 2];\n\n                    if (strokeWidth) {\n                        each(tspans, function (tspan, y) {\n                            var clone;\n\n                            // Let the first line start at the correct X position\n                            if (y === 0) {\n                                tspan.setAttribute('x', elem.getAttribute('x'));\n                                y = elem.getAttribute('y');\n                                tspan.setAttribute('y', y || 0);\n                                if (y === null) {\n                                    elem.setAttribute('y', 0);\n                                }\n                            }\n\n                            // Create the clone and apply shadow properties\n                            clone = tspan.cloneNode(1);\n                            attr(clone, {\n                                'class': PREFIX + 'text-shadow',\n                                'fill': color,\n                                'stroke': color,\n                                'stroke-opacity': 1 / mathMax(pInt(strokeWidth), 3),\n                                'stroke-width': strokeWidth,\n                                'stroke-linejoin': 'round'\n                            });\n                            elem.insertBefore(clone, firstChild);\n                        });\n                    }\n                });\n            }\n        },\n\n        /**\n         * Set or get a given attribute\n         * @param {Object|String} hash\n         * @param {Mixed|Undefined} val\n         */\n        attr: function (hash, val, complete) {\n            var key,\n                value,\n                element = this.element,\n                hasSetSymbolSize,\n                ret = this,\n                skipAttr,\n                setter;\n\n            // single key-value pair\n            if (typeof hash === 'string' && val !== UNDEFINED) {\n                key = hash;\n                hash = {};\n                hash[key] = val;\n            }\n\n            // used as a getter: first argument is a string, second is undefined\n            if (typeof hash === 'string') {\n                ret = (this[hash + 'Getter'] || this._defaultGetter).call(this, hash, element);\n\n            // setter\n            } else {\n\n                for (key in hash) {\n                    value = hash[key];\n                    skipAttr = false;\n\n\n\n                    if (this.symbolName && /^(x|y|width|height|r|start|end|innerR|anchorX|anchorY)/.test(key)) {\n                        if (!hasSetSymbolSize) {\n                            this.symbolAttr(hash);\n                            hasSetSymbolSize = true;\n                        }\n                        skipAttr = true;\n                    }\n\n                    if (this.rotation && (key === 'x' || key === 'y')) {\n                        this.doTransform = true;\n                    }\n\n                    if (!skipAttr) {\n                        setter = this[key + 'Setter'] || this._defaultSetter;\n                        setter.call(this, value, key, element);\n\n                        // Let the shadow follow the main element\n                        if (this.shadows && /^(width|height|visibility|x|y|d|transform|cx|cy|r)$/.test(key)) {\n                            this.updateShadows(key, value, setter);\n                        }\n                    }\n                }\n\n                // Update transform. Do this outside the loop to prevent redundant updating for batch setting\n                // of attributes.\n                if (this.doTransform) {\n                    this.updateTransform();\n                    this.doTransform = false;\n                }\n\n            }\n\n            // In accordance with animate, run a complete callback\n            if (complete) {\n                complete();\n            }\n\n            return ret;\n        },\n\n        /**\n         * Update the shadow elements with new attributes\n         * @param   {String}        key    The attribute name\n         * @param   {String|Number} value  The value of the attribute\n         * @param   {Function}      setter The setter function, inherited from the parent wrapper\n         * @returns {undefined}\n         */\n        updateShadows: function (key, value, setter) {\n            var shadows = this.shadows,\n                i = shadows.length;\n\n            while (i--) {\n                setter.call(\n                    shadows[i], \n                    key === 'height' ?\n                        Math.max(value - (shadows[i].cutHeight || 0), 0) :\n                        key === 'd' ? this.d : value, \n                    key, \n                    shadows[i]\n                );\n            }\n        },\n\n        /**\n         * Add a class name to an element\n         */\n        addClass: function (className) {\n            var element = this.element,\n                currentClassName = attr(element, 'class') || '';\n\n            if (currentClassName.indexOf(className) === -1) {\n                attr(element, 'class', currentClassName + ' ' + className);\n            }\n            return this;\n        },\n        /* hasClass and removeClass are not (yet) needed\n        hasClass: function (className) {\n            return attr(this.element, 'class').indexOf(className) !== -1;\n        },\n        removeClass: function (className) {\n            attr(this.element, 'class', attr(this.element, 'class').replace(className, ''));\n            return this;\n        },\n        */\n\n        /**\n         * If one of the symbol size affecting parameters are changed,\n         * check all the others only once for each call to an element's\n         * .attr() method\n         * @param {Object} hash\n         */\n        symbolAttr: function (hash) {\n            var wrapper = this;\n\n            each(['x', 'y', 'r', 'start', 'end', 'width', 'height', 'innerR', 'anchorX', 'anchorY'], function (key) {\n                wrapper[key] = pick(hash[key], wrapper[key]);\n            });\n\n            wrapper.attr({\n                d: wrapper.renderer.symbols[wrapper.symbolName](\n                    wrapper.x,\n                    wrapper.y,\n                    wrapper.width,\n                    wrapper.height,\n                    wrapper\n                )\n            });\n        },\n\n        /**\n         * Apply a clipping path to this object\n         * @param {String} id\n         */\n        clip: function (clipRect) {\n            return this.attr('clip-path', clipRect ? 'url(' + this.renderer.url + '#' + clipRect.id + ')' : NONE);\n        },\n\n        /**\n         * Calculate the coordinates needed for drawing a rectangle crisply and return the\n         * calculated attributes\n         * @param {Number} strokeWidth\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Number} width\n         * @param {Number} height\n         */\n        crisp: function (rect) {\n\n            var wrapper = this,\n                key,\n                attribs = {},\n                normalizer,\n                strokeWidth = wrapper.strokeWidth || 0;\n\n            normalizer = mathRound(strokeWidth) % 2 / 2; // mathRound because strokeWidth can sometimes have roundoff errors\n\n            // normalize for crisp edges\n            rect.x = mathFloor(rect.x || wrapper.x || 0) + normalizer;\n            rect.y = mathFloor(rect.y || wrapper.y || 0) + normalizer;\n            rect.width = mathFloor((rect.width || wrapper.width || 0) - 2 * normalizer);\n            rect.height = mathFloor((rect.height || wrapper.height || 0) - 2 * normalizer);\n            rect.strokeWidth = strokeWidth;\n\n            for (key in rect) {\n                if (wrapper[key] !== rect[key]) { // only set attribute if changed\n                    wrapper[key] = attribs[key] = rect[key];\n                }\n            }\n\n            return attribs;\n        },\n\n        /**\n         * Set styles for the element\n         * @param {Object} styles\n         */\n        css: function (styles) {\n            var elemWrapper = this,\n                oldStyles = elemWrapper.styles,\n                newStyles = {},\n                elem = elemWrapper.element,\n                textWidth,\n                n,\n                serializedCss = '',\n                hyphenate,\n                hasNew = !oldStyles;\n\n            // convert legacy\n            if (styles && styles.color) {\n                styles.fill = styles.color;\n            }\n\n            // Filter out existing styles to increase performance (#2640)\n            if (oldStyles) {\n                for (n in styles) {\n                    if (styles[n] !== oldStyles[n]) {\n                        newStyles[n] = styles[n];\n                        hasNew = true;\n                    }\n                }\n            }\n            if (hasNew) {\n                textWidth = elemWrapper.textWidth =\n                    (styles && styles.width && elem.nodeName.toLowerCase() === 'text' && pInt(styles.width)) ||\n                    elemWrapper.textWidth; // #3501\n\n                // Merge the new styles with the old ones\n                if (oldStyles) {\n                    styles = extend(\n                        oldStyles,\n                        newStyles\n                    );\n                }\n\n                // store object\n                elemWrapper.styles = styles;\n\n                if (textWidth && (useCanVG || (!hasSVG && elemWrapper.renderer.forExport))) {\n                    delete styles.width;\n                }\n\n                // serialize and set style attribute\n                if (isMS && !hasSVG) {\n                    css(elemWrapper.element, styles);\n                } else {\n                    hyphenate = function (a, b) {\n                        return '-' + b.toLowerCase();\n                    };\n                    for (n in styles) {\n                        serializedCss += n.replace(/([A-Z])/g, hyphenate) + ':' + styles[n] + ';';\n                    }\n                    attr(elem, 'style', serializedCss); // #1881\n                }\n\n\n                // re-build text\n                if (textWidth && elemWrapper.added) {\n                    elemWrapper.renderer.buildText(elemWrapper);\n                }\n            }\n\n            return elemWrapper;\n        },\n\n        /**\n         * Add an event listener\n         * @param {String} eventType\n         * @param {Function} handler\n         */\n        on: function (eventType, handler) {\n            var svgElement = this,\n                element = svgElement.element;\n\n            // touch\n            if (hasTouch && eventType === 'click') {\n                element.ontouchstart = function (e) {\n                    svgElement.touchEventFired = Date.now();\n                    e.preventDefault();\n                    handler.call(element, e);\n                };\n                element.onclick = function (e) {\n                    if (userAgent.indexOf('Android') === -1 || Date.now() - (svgElement.touchEventFired || 0) > 1100) { // #2269\n                        handler.call(element, e);\n                    }\n                };\n            } else {\n                // simplest possible event model for internal use\n                element['on' + eventType] = handler;\n            }\n            return this;\n        },\n\n        /**\n         * Set the coordinates needed to draw a consistent radial gradient across\n         * pie slices regardless of positioning inside the chart. The format is\n         * [centerX, centerY, diameter] in pixels.\n         */\n        setRadialReference: function (coordinates) {\n            var existingGradient = this.renderer.gradients[this.element.gradient];\n\n            this.element.radialReference = coordinates;\n\n            // On redrawing objects with an existing gradient, the gradient needs\n            // to be repositioned (#3801)\n            if (existingGradient && existingGradient.radAttr) {\n                existingGradient.animate(\n                    this.renderer.getRadialAttr(\n                        coordinates,\n                        existingGradient.radAttr\n                    )\n                );\n            }\n\n            return this;\n        },\n\n        /**\n         * Move an object and its children by x and y values\n         * @param {Number} x\n         * @param {Number} y\n         */\n        translate: function (x, y) {\n            return this.attr({\n                translateX: x,\n                translateY: y\n            });\n        },\n\n        /**\n         * Invert a group, rotate and flip\n         */\n        invert: function () {\n            var wrapper = this;\n            wrapper.inverted = true;\n            wrapper.updateTransform();\n            return wrapper;\n        },\n\n        /**\n         * Private method to update the transform attribute based on internal\n         * properties\n         */\n        updateTransform: function () {\n            var wrapper = this,\n                translateX = wrapper.translateX || 0,\n                translateY = wrapper.translateY || 0,\n                scaleX = wrapper.scaleX,\n                scaleY = wrapper.scaleY,\n                inverted = wrapper.inverted,\n                rotation = wrapper.rotation,\n                element = wrapper.element,\n                transform;\n\n            // flipping affects translate as adjustment for flipping around the group's axis\n            if (inverted) {\n                translateX += wrapper.attr('width');\n                translateY += wrapper.attr('height');\n            }\n\n            // Apply translate. Nearly all transformed elements have translation, so instead\n            // of checking for translate = 0, do it always (#1767, #1846).\n            transform = ['translate(' + translateX + ',' + translateY + ')'];\n\n            // apply rotation\n            if (inverted) {\n                transform.push('rotate(90) scale(-1,1)');\n            } else if (rotation) { // text rotation\n                transform.push('rotate(' + rotation + ' ' + (element.getAttribute('x') || 0) + ' ' + (element.getAttribute('y') || 0) + ')');\n\n                // Delete bBox memo when the rotation changes\n                //delete wrapper.bBox;\n            }\n\n            // apply scale\n            if (defined(scaleX) || defined(scaleY)) {\n                transform.push('scale(' + pick(scaleX, 1) + ' ' + pick(scaleY, 1) + ')');\n            }\n\n            if (transform.length) {\n                element.setAttribute('transform', transform.join(' '));\n            }\n        },\n        /**\n         * Bring the element to the front\n         */\n        toFront: function () {\n            var element = this.element;\n            element.parentNode.appendChild(element);\n            return this;\n        },\n\n\n        /**\n         * Break down alignment options like align, verticalAlign, x and y\n         * to x and y relative to the chart.\n         *\n         * @param {Object} alignOptions\n         * @param {Boolean} alignByTranslate\n         * @param {String[Object} box The box to align to, needs a width and height. When the\n         *        box is a string, it refers to an object in the Renderer. For example, when\n         *        box is 'spacingBox', it refers to Renderer.spacingBox which holds width, height\n         *        x and y properties.\n         *\n         */\n        align: function (alignOptions, alignByTranslate, box) {\n            var align,\n                vAlign,\n                x,\n                y,\n                attribs = {},\n                alignTo,\n                renderer = this.renderer,\n                alignedObjects = renderer.alignedObjects;\n\n            // First call on instanciate\n            if (alignOptions) {\n                this.alignOptions = alignOptions;\n                this.alignByTranslate = alignByTranslate;\n                if (!box || isString(box)) { // boxes other than renderer handle this internally\n                    this.alignTo = alignTo = box || 'renderer';\n                    erase(alignedObjects, this); // prevent duplicates, like legendGroup after resize\n                    alignedObjects.push(this);\n                    box = null; // reassign it below\n                }\n\n            // When called on resize, no arguments are supplied\n            } else {\n                alignOptions = this.alignOptions;\n                alignByTranslate = this.alignByTranslate;\n                alignTo = this.alignTo;\n            }\n\n            box = pick(box, renderer[alignTo], renderer);\n\n            // Assign variables\n            align = alignOptions.align;\n            vAlign = alignOptions.verticalAlign;\n            x = (box.x || 0) + (alignOptions.x || 0); // default: left align\n            y = (box.y || 0) + (alignOptions.y || 0); // default: top align\n\n            // Align\n            if (align === 'right' || align === 'center') {\n                x += (box.width - (alignOptions.width || 0)) /\n                        { right: 1, center: 2 }[align];\n            }\n            attribs[alignByTranslate ? 'translateX' : 'x'] = mathRound(x);\n\n\n            // Vertical align\n            if (vAlign === 'bottom' || vAlign === 'middle') {\n                y += (box.height - (alignOptions.height || 0)) /\n                        ({ bottom: 1, middle: 2 }[vAlign] || 1);\n\n            }\n            attribs[alignByTranslate ? 'translateY' : 'y'] = mathRound(y);\n\n            // Animate only if already placed\n            this[this.placed ? 'animate' : 'attr'](attribs);\n            this.placed = true;\n            this.alignAttr = attribs;\n\n            return this;\n        },\n\n        /**\n         * Get the bounding box (width, height, x and y) for the element\n         */\n        getBBox: function (reload, rot) {\n            var wrapper = this,\n                bBox, // = wrapper.bBox,\n                renderer = wrapper.renderer,\n                width,\n                height,\n                rotation,\n                rad,\n                element = wrapper.element,\n                styles = wrapper.styles,\n                textStr = wrapper.textStr,\n                textShadow,\n                elemStyle = element.style,\n                toggleTextShadowShim,\n                cache = renderer.cache,\n                cacheKeys = renderer.cacheKeys,\n                cacheKey;\n\n            rotation = pick(rot, wrapper.rotation);\n            rad = rotation * deg2rad;\n\n            if (textStr !== UNDEFINED) {\n\n                cacheKey = \n\n                    // Since numbers are monospaced, and numerical labels appear a lot in a chart,\n                    // we assume that a label of n characters has the same bounding box as others\n                    // of the same length.\n                    textStr.toString().replace(numRegex, '0') + \n\n                    // Properties that affect bounding box\n                    ['', rotation || 0, styles && styles.fontSize, element.style.width].join(',');\n\n            }\n\n            if (cacheKey && !reload) {\n                bBox = cache[cacheKey];\n            }\n\n            // No cache found\n            if (!bBox) {\n\n                // SVG elements\n                if (element.namespaceURI === SVG_NS || renderer.forExport) {\n                    try { // Fails in Firefox if the container has display: none.\n\n                        // When the text shadow shim is used, we need to hide the fake shadows\n                        // to get the correct bounding box (#3872)\n                        toggleTextShadowShim = this.fakeTS && function (display) {\n                            each(element.querySelectorAll('.' + PREFIX + 'text-shadow'), function (tspan) {\n                                tspan.style.display = display;\n                            });\n                        };\n\n                        // Workaround for #3842, Firefox reporting wrong bounding box for shadows\n                        if (isFirefox && elemStyle.textShadow) {\n                            textShadow = elemStyle.textShadow;\n                            elemStyle.textShadow = '';\n                        } else if (toggleTextShadowShim) {\n                            toggleTextShadowShim(NONE);\n                        }\n\n                        bBox = element.getBBox ?\n                            // SVG: use extend because IE9 is not allowed to change width and height in case\n                            // of rotation (below)\n                            extend({}, element.getBBox()) :\n                            // Canvas renderer and legacy IE in export mode\n                            {\n                                width: element.offsetWidth,\n                                height: element.offsetHeight\n                            };\n\n                        // #3842\n                        if (textShadow) {\n                            elemStyle.textShadow = textShadow;\n                        } else if (toggleTextShadowShim) {\n                            toggleTextShadowShim('');\n                        }\n                    } catch (e) {}\n\n                    // If the bBox is not set, the try-catch block above failed. The other condition\n                    // is for Opera that returns a width of -Infinity on hidden elements.\n                    if (!bBox || bBox.width < 0) {\n                        bBox = { width: 0, height: 0 };\n                    }\n\n\n                // VML Renderer or useHTML within SVG\n                } else {\n\n                    bBox = wrapper.htmlGetBBox();\n\n                }\n\n                // True SVG elements as well as HTML elements in modern browsers using the .useHTML option\n                // need to compensated for rotation\n                if (renderer.isSVG) {\n                    width = bBox.width;\n                    height = bBox.height;\n\n                    // Workaround for wrong bounding box in IE9 and IE10 (#1101, #1505, #1669, #2568)\n                    if (isMS && styles && styles.fontSize === '11px' && height.toPrecision(3) === '16.9') {\n                        bBox.height = height = 14;\n                    }\n\n                    // Adjust for rotated text\n                    if (rotation) {\n                        bBox.width = mathAbs(height * mathSin(rad)) + mathAbs(width * mathCos(rad));\n                        bBox.height = mathAbs(height * mathCos(rad)) + mathAbs(width * mathSin(rad));\n                    }\n                }\n\n                // Cache it. When loading a chart in a hidden iframe in Firefox and IE/Edge, the\n                // bounding box height is 0, so don't cache it (#5620).\n                if (cacheKey && bBox.height > 0) {\n\n                    // Rotate (#4681)\n                    while (cacheKeys.length > 250) {\n                        delete cache[cacheKeys.shift()];\n                    }\n\n                    if (!cache[cacheKey]) {\n                        cacheKeys.push(cacheKey);\n                    }\n                    cache[cacheKey] = bBox;\n                }\n            }\n            return bBox;\n        },\n\n        /**\n         * Show the element\n         */\n        show: function (inherit) {\n            return this.attr({ visibility: inherit ? 'inherit' : VISIBLE });\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            return this.attr({ visibility: HIDDEN });\n        },\n\n        fadeOut: function (duration) {\n            var elemWrapper = this;\n            elemWrapper.animate({\n                opacity: 0\n            }, {\n                duration: duration || 150,\n                complete: function () {\n                    elemWrapper.attr({ y: -9999 }); // #3088, assuming we're only using this for tooltips\n                }\n            });\n        },\n\n        /**\n         * Add the element\n         * @param {Object|Undefined} parent Can be an element, an element wrapper or undefined\n         *    to append the element to the renderer.box.\n         */\n        add: function (parent) {\n\n            var renderer = this.renderer,\n                element = this.element,\n                inserted;\n\n            if (parent) {\n                this.parentGroup = parent;\n            }\n\n            // mark as inverted\n            this.parentInverted = parent && parent.inverted;\n\n            // build formatted text\n            if (this.textStr !== undefined) {\n                renderer.buildText(this);\n            }\n\n            // Mark as added\n            this.added = true;\n\n            // If we're adding to renderer root, or other elements in the group\n            // have a z index, we need to handle it\n            if (!parent || parent.handleZ || this.zIndex) {\n                inserted = this.zIndexSetter();\n            }\n\n            // If zIndex is not handled, append at the end\n            if (!inserted) {\n                (parent ? parent.element : renderer.box).appendChild(element);\n            }\n\n            // fire an event for internal hooks\n            if (this.onAdd) {\n                this.onAdd();\n            }\n\n            return this;\n        },\n\n        /**\n         * Removes a child either by removeChild or move to garbageBin.\n         * Issue 490; in VML removeChild results in Orphaned nodes according to sIEve, discardElement does not.\n         */\n        safeRemoveChild: function (element) {\n            var parentNode = element.parentNode;\n            if (parentNode) {\n                parentNode.removeChild(element);\n            }\n        },\n\n        /**\n         * Destroy the element and element wrapper\n         */\n        destroy: function () {\n            var wrapper = this,\n                element = wrapper.element || {},\n                shadows = wrapper.shadows,\n                parentToClean = wrapper.renderer.isSVG && element.nodeName === 'SPAN' && wrapper.parentGroup,\n                grandParent,\n                key,\n                i;\n\n            // remove events\n            element.onclick = element.onmouseout = element.onmouseover = element.onmousemove = element.point = null;\n            stop(wrapper); // stop running animations\n\n            if (wrapper.clipPath) {\n                wrapper.clipPath = wrapper.clipPath.destroy();\n            }\n\n            // Destroy stops in case this is a gradient object\n            if (wrapper.stops) {\n                for (i = 0; i < wrapper.stops.length; i++) {\n                    wrapper.stops[i] = wrapper.stops[i].destroy();\n                }\n                wrapper.stops = null;\n            }\n\n            // remove element\n            wrapper.safeRemoveChild(element);\n\n            // destroy shadows\n            if (shadows) {\n                each(shadows, function (shadow) {\n                    wrapper.safeRemoveChild(shadow);\n                });\n            }\n\n            // In case of useHTML, clean up empty containers emulating SVG groups (#1960, #2393, #2697).\n            while (parentToClean && parentToClean.div && parentToClean.div.childNodes.length === 0) {\n                grandParent = parentToClean.parentGroup;\n                wrapper.safeRemoveChild(parentToClean.div);\n                delete parentToClean.div;\n                parentToClean = grandParent;\n            }\n\n            // remove from alignObjects\n            if (wrapper.alignTo) {\n                erase(wrapper.renderer.alignedObjects, wrapper);\n            }\n\n            for (key in wrapper) {\n                delete wrapper[key];\n            }\n\n            return null;\n        },\n\n        /**\n         * Add a shadow to the element. Must be done after the element is added to the DOM\n         * @param {Boolean|Object} shadowOptions\n         */\n        shadow: function (shadowOptions, group, cutOff) {\n            var shadows = [],\n                i,\n                shadow,\n                element = this.element,\n                strokeWidth,\n                shadowWidth,\n                shadowElementOpacity,\n\n                // compensate for inverted plot area\n                transform;\n\n\n            if (shadowOptions) {\n                shadowWidth = pick(shadowOptions.width, 3);\n                shadowElementOpacity = (shadowOptions.opacity || 0.15) / shadowWidth;\n                transform = this.parentInverted ?\n                        '(-1,-1)' :\n                        '(' + pick(shadowOptions.offsetX, 1) + ', ' + pick(shadowOptions.offsetY, 1) + ')';\n                for (i = 1; i <= shadowWidth; i++) {\n                    shadow = element.cloneNode(0);\n                    strokeWidth = (shadowWidth * 2) + 1 - (2 * i);\n                    attr(shadow, {\n                        'isShadow': 'true',\n                        'stroke': shadowOptions.color || 'black',\n                        'stroke-opacity': shadowElementOpacity * i,\n                        'stroke-width': strokeWidth,\n                        'transform': 'translate' + transform,\n                        'fill': NONE\n                    });\n                    if (cutOff) {\n                        attr(shadow, 'height', mathMax(attr(shadow, 'height') - strokeWidth, 0));\n                        shadow.cutHeight = strokeWidth;\n                    }\n\n                    if (group) {\n                        group.element.appendChild(shadow);\n                    } else {\n                        element.parentNode.insertBefore(shadow, element);\n                    }\n\n                    shadows.push(shadow);\n                }\n\n                this.shadows = shadows;\n            }\n            return this;\n\n        },\n\n        xGetter: function (key) {\n            if (this.element.nodeName === 'circle') {\n                key = { x: 'cx', y: 'cy' }[key] || key;\n            }\n            return this._defaultGetter(key);\n        },\n\n        /**\n         * Get the current value of an attribute or pseudo attribute, used mainly\n         * for animation.\n         */\n        _defaultGetter: function (key) {\n            var ret = pick(this[key], this.element ? this.element.getAttribute(key) : null, 0);\n\n            if (/^[\\-0-9\\.]+$/.test(ret)) { // is numerical\n                ret = parseFloat(ret);\n            }\n            return ret;\n        },\n\n\n        dSetter: function (value, key, element) {\n            if (value && value.join) { // join path\n                value = value.join(' ');\n            }\n            if (/(NaN| {2}|^$)/.test(value)) {\n                value = 'M 0 0';\n            }\n            element.setAttribute(key, value);\n\n            this[key] = value;\n        },\n        dashstyleSetter: function (value) {\n            var i,\n                strokeWidth = this['stroke-width'];\n        \n            // If \"inherit\", like maps in IE, assume 1 (#4981). With HC5 and the new strokeWidth \n            // function, we should be able to use that instead.\n            if (strokeWidth === 'inherit') {\n                strokeWidth = 1;\n            }\n            value = value && value.toLowerCase();\n            if (value) {\n                value = value\n                    .replace('shortdashdotdot', '3,1,1,1,1,1,')\n                    .replace('shortdashdot', '3,1,1,1')\n                    .replace('shortdot', '1,1,')\n                    .replace('shortdash', '3,1,')\n                    .replace('longdash', '8,3,')\n                    .replace(/dot/g, '1,3,')\n                    .replace('dash', '4,3,')\n                    .replace(/,$/, '')\n                    .split(','); // ending comma\n\n                i = value.length;\n                while (i--) {\n                    value[i] = pInt(value[i]) * strokeWidth;\n                }\n                value = value.join(',')\n                    .replace(/NaN/g, 'none'); // #3226\n                this.element.setAttribute('stroke-dasharray', value);\n            }\n        },\n        alignSetter: function (value) {\n            this.element.setAttribute('text-anchor', { left: 'start', center: 'middle', right: 'end' }[value]);\n        },\n        titleSetter: function (value) {\n            var titleNode = this.element.getElementsByTagName('title')[0];\n            if (!titleNode) {\n                titleNode = doc.createElementNS(SVG_NS, 'title');\n                this.element.appendChild(titleNode);\n            }\n\n            // Remove text content if it exists\n            if (titleNode.firstChild) {\n                titleNode.removeChild(titleNode.firstChild);\n            }\n\n            titleNode.appendChild(\n                doc.createTextNode(\n                    (String(pick(value), '')).replace(/<[^>]*>/g, '') // #3276, #3895\n                )\n            );\n        },\n        textSetter: function (value) {\n            if (value !== this.textStr) {\n                // Delete bBox memo when the text changes\n                delete this.bBox;\n\n                this.textStr = value;\n                if (this.added) {\n                    this.renderer.buildText(this);\n                }\n            }\n        },\n        fillSetter: function (value, key, element) {\n            if (typeof value === 'string') {\n                element.setAttribute(key, value);\n            } else if (value) {\n                this.colorGradient(value, key, element);\n            }\n        },\n        visibilitySetter: function (value, key, element) {\n            // IE9-11 doesn't handle visibilty:inherit well, so we remove the attribute instead (#2881, #3909)\n            if (value === 'inherit') {\n                element.removeAttribute(key);\n            } else {\n                element.setAttribute(key, value);\n            }\n        },\n        zIndexSetter: function (value, key) {\n            var renderer = this.renderer,\n                parentGroup = this.parentGroup,\n                parentWrapper = parentGroup || renderer,\n                parentNode = parentWrapper.element || renderer.box,\n                childNodes,\n                otherElement,\n                otherZIndex,\n                element = this.element,\n                inserted,\n                run = this.added,\n                i;\n\n            if (defined(value)) {\n                element.zIndex = value; // So we can read it for other elements in the group\n                value = +value;\n                if (this[key] === value) { // Only update when needed (#3865)\n                    run = false;\n                }\n                this[key] = value;\n            }\n\n            // Insert according to this and other elements' zIndex. Before .add() is called,\n            // nothing is done. Then on add, or by later calls to zIndexSetter, the node\n            // is placed on the right place in the DOM.\n            if (run) {\n                value = this.zIndex;\n\n                if (value && parentGroup) {\n                    parentGroup.handleZ = true;\n                }\n\n                childNodes = parentNode.childNodes;\n                for (i = 0; i < childNodes.length && !inserted; i++) {\n                    otherElement = childNodes[i];\n                    otherZIndex = otherElement.zIndex;\n                    if (otherElement !== element && (\n                            // Insert before the first element with a higher zIndex\n                            pInt(otherZIndex) > value ||\n                            // If no zIndex given, insert before the first element with a zIndex\n                            (!defined(value) && defined(otherZIndex))\n\n                        )) {\n                        parentNode.insertBefore(element, otherElement);\n                        inserted = true;\n                    }\n                }\n                if (!inserted) {\n                    parentNode.appendChild(element);\n                }\n            }\n            return inserted;\n        },\n        _defaultSetter: function (value, key, element) {\n            element.setAttribute(key, value);\n        }\n    };\n\n    // Some shared setters and getters\n    SVGElement.prototype.yGetter = SVGElement.prototype.xGetter;\n    SVGElement.prototype.translateXSetter = SVGElement.prototype.translateYSetter =\n            SVGElement.prototype.rotationSetter = SVGElement.prototype.verticalAlignSetter =\n            SVGElement.prototype.scaleXSetter = SVGElement.prototype.scaleYSetter = function (value, key) {\n                this[key] = value;\n                this.doTransform = true;\n            };\n\n    // These setters both set the key on the instance itself plus as an attribute\n    SVGElement.prototype.opacitySetter = SVGElement.prototype.displaySetter = function (value, key, element) {\n        this[key] = value;\n        element.setAttribute(key, value);\n    };\n    \n\n    // WebKit and Batik have problems with a stroke-width of zero, so in this case we remove the\n    // stroke attribute altogether. #1270, #1369, #3065, #3072.\n    SVGElement.prototype['stroke-widthSetter'] = SVGElement.prototype.strokeSetter = function (value, key, element) {\n        this[key] = value;\n        // Only apply the stroke attribute if the stroke width is defined and larger than 0\n        if (this.stroke && this['stroke-width']) {\n            this.strokeWidth = this['stroke-width'];\n            SVGElement.prototype.fillSetter.call(this, this.stroke, 'stroke', element); // use prototype as instance may be overridden\n            element.setAttribute('stroke-width', this['stroke-width']);\n            this.hasStroke = true;\n        } else if (key === 'stroke-width' && value === 0 && this.hasStroke) {\n            element.removeAttribute('stroke');\n            this.hasStroke = false;\n        }\n    };\n\n\n    /**\n     * The default SVG renderer\n     */\n    var SVGRenderer = function () {\n        this.init.apply(this, arguments);\n    };\n    SVGRenderer.prototype = {\n        Element: SVGElement,\n        /**\n         * Initialize the SVGRenderer\n         * @param {Object} container\n         * @param {Number} width\n         * @param {Number} height\n         * @param {Boolean} forExport\n         */\n        init: function (container, width, height, style, forExport, allowHTML) {\n            var renderer = this,\n                boxWrapper,\n                element,\n                desc;\n\n            boxWrapper = renderer.createElement('svg')\n                .attr({\n                    version: '1.1'\n                })\n                .css(this.getStyle(style));\n            element = boxWrapper.element;\n            container.appendChild(element);\n\n            // For browsers other than IE, add the namespace attribute (#1978)\n            if (container.innerHTML.indexOf('xmlns') === -1) {\n                attr(element, 'xmlns', SVG_NS);\n            }\n\n            // object properties\n            renderer.isSVG = true;\n            renderer.box = element;\n            renderer.boxWrapper = boxWrapper;\n            renderer.alignedObjects = [];\n\n            // Page url used for internal references. #24, #672, #1070\n            renderer.url = (isFirefox || isWebKit) && doc.getElementsByTagName('base').length ?\n                    win.location.href\n                        .replace(/#.*?$/, '') // remove the hash\n                        .replace(/([\\('\\)])/g, '\\\\$1') // escape parantheses and quotes\n                        .replace(/ /g, '%20') : // replace spaces (needed for Safari only)\n                    '';\n\n            // Add description\n            desc = this.createElement('desc').add();\n            desc.element.appendChild(doc.createTextNode('Created with ' + PRODUCT + ' ' + VERSION));\n\n\n            renderer.defs = this.createElement('defs').add();\n            renderer.allowHTML = allowHTML;\n            renderer.forExport = forExport;\n            renderer.gradients = {}; // Object where gradient SvgElements are stored\n            renderer.cache = {}; // Cache for numerical bounding boxes\n            renderer.cacheKeys = [];\n            renderer.imgCount = 0;\n\n            renderer.setSize(width, height, false);\n\n\n\n            // Issue 110 workaround:\n            // In Firefox, if a div is positioned by percentage, its pixel position may land\n            // between pixels. The container itself doesn't display this, but an SVG element\n            // inside this container will be drawn at subpixel precision. In order to draw\n            // sharp lines, this must be compensated for. This doesn't seem to work inside\n            // iframes though (like in jsFiddle).\n            var subPixelFix, rect;\n            if (isFirefox && container.getBoundingClientRect) {\n                renderer.subPixelFix = subPixelFix = function () {\n                    css(container, { left: 0, top: 0 });\n                    rect = container.getBoundingClientRect();\n                    css(container, {\n                        left: (mathCeil(rect.left) - rect.left) + PX,\n                        top: (mathCeil(rect.top) - rect.top) + PX\n                    });\n                };\n\n                // run the fix now\n                subPixelFix();\n\n                // run it on resize\n                addEvent(win, 'resize', subPixelFix);\n            }\n        },\n\n        getStyle: function (style) {\n            this.style = extend({\n                fontFamily: '\"Lucida Grande\", \"Lucida Sans Unicode\", Arial, Helvetica, sans-serif', // default font\n                fontSize: '12px'\n            }, style);\n            return this.style;\n        },\n\n        /**\n         * Detect whether the renderer is hidden. This happens when one of the parent elements\n         * has display: none. #608.\n         */\n        isHidden: function () {\n            return !this.boxWrapper.getBBox().width;\n        },\n\n        /**\n         * Destroys the renderer and its allocated members.\n         */\n        destroy: function () {\n            var renderer = this,\n                rendererDefs = renderer.defs;\n            renderer.box = null;\n            renderer.boxWrapper = renderer.boxWrapper.destroy();\n\n            // Call destroy on all gradient elements\n            destroyObjectProperties(renderer.gradients || {});\n            renderer.gradients = null;\n\n            // Defs are null in VMLRenderer\n            // Otherwise, destroy them here.\n            if (rendererDefs) {\n                renderer.defs = rendererDefs.destroy();\n            }\n\n            // Remove sub pixel fix handler\n            // We need to check that there is a handler, otherwise all functions that are registered for event 'resize' are removed\n            // See issue #982\n            if (renderer.subPixelFix) {\n                removeEvent(win, 'resize', renderer.subPixelFix);\n            }\n\n            renderer.alignedObjects = null;\n\n            return null;\n        },\n\n        /**\n         * Create a wrapper for an SVG element\n         * @param {Object} nodeName\n         */\n        createElement: function (nodeName) {\n            var wrapper = new this.Element();\n            wrapper.init(this, nodeName);\n            return wrapper;\n        },\n\n        /**\n         * Dummy function for use in canvas renderer\n         */\n        draw: function () {},\n\n        /**\n         * Get converted radial gradient attributes\n         */\n        getRadialAttr: function (radialReference, gradAttr) {\n            return {\n                cx: (radialReference[0] - radialReference[2] / 2) + gradAttr.cx * radialReference[2],\n                cy: (radialReference[1] - radialReference[2] / 2) + gradAttr.cy * radialReference[2],\n                r: gradAttr.r * radialReference[2]\n            };\n        },\n\n        /**\n         * Parse a simple HTML string into SVG tspans\n         *\n         * @param {Object} textNode The parent text SVG node\n         */\n        buildText: function (wrapper) {\n            var textNode = wrapper.element,\n                renderer = this,\n                forExport = renderer.forExport,\n                textStr = pick(wrapper.textStr, '').toString(),\n                hasMarkup = textStr.indexOf('<') !== -1,\n                lines,\n                childNodes = textNode.childNodes,\n                styleRegex,\n                hrefRegex,\n                wasTooLong,\n                parentX = attr(textNode, 'x'),\n                textStyles = wrapper.styles,\n                width = wrapper.textWidth,\n                textLineHeight = textStyles && textStyles.lineHeight,\n                textShadow = textStyles && textStyles.textShadow,\n                ellipsis = textStyles && textStyles.textOverflow === 'ellipsis',\n                i = childNodes.length,\n                tempParent = width && !wrapper.added && this.box,\n                getLineHeight = function (tspan) {\n                    return textLineHeight ?\n                            pInt(textLineHeight) :\n                            renderer.fontMetrics(\n                                /(px|em)$/.test(tspan && tspan.style.fontSize) ?\n                                        tspan.style.fontSize :\n                                        ((textStyles && textStyles.fontSize) || renderer.style.fontSize || 12),\n                                tspan\n                            ).h;\n                },\n                unescapeAngleBrackets = function (inputStr) {\n                    return inputStr.replace(/&lt;/g, '<').replace(/&gt;/g, '>');\n                };\n\n            /// remove old text\n            while (i--) {\n                textNode.removeChild(childNodes[i]);\n            }\n\n            // Skip tspans, add text directly to text node. The forceTSpan is a hook\n            // used in text outline hack.\n            if (!hasMarkup && !textShadow && !ellipsis && !width && textStr.indexOf(' ') === -1) {\n                textNode.appendChild(doc.createTextNode(unescapeAngleBrackets(textStr)));\n\n            // Complex strings, add more logic\n            } else {\n\n                styleRegex = /<.*style=\"([^\"]+)\".*>/;\n                hrefRegex = /<.*href=\"(http[^\"]+)\".*>/;\n\n                if (tempParent) {\n                    tempParent.appendChild(textNode); // attach it to the DOM to read offset width\n                }\n\n                if (hasMarkup) {\n                    lines = textStr\n                        .replace(/<(b|strong)>/g, '<span style=\"font-weight:bold\">')\n                        .replace(/<(i|em)>/g, '<span style=\"font-style:italic\">')\n                        .replace(/<a/g, '<span')\n                        .replace(/<\\/(b|strong|i|em|a)>/g, '</span>')\n                        .split(/<br.*?>/g);\n\n                } else {\n                    lines = [textStr];\n                }\n\n\n                // Trim empty lines (#5261)\n                lines = grep(lines, function (line) {\n                    return line !== '';\n                });\n\n\n                // build the lines\n                each(lines, function buildTextLines(line, lineNo) {\n                    var spans,\n                        spanNo = 0;\n                    line = line\n                        .replace(/^\\s+|\\s+$/g, '') // Trim to prevent useless/costly process on the spaces (#5258)\n                        .replace(/<span/g, '|||<span')\n                        .replace(/<\\/span>/g, '</span>|||');\n                    spans = line.split('|||');\n\n                    each(spans, function buildTextSpans(span) {\n                        if (span !== '' || spans.length === 1) {\n                            var attributes = {},\n                                tspan = doc.createElementNS(SVG_NS, 'tspan'),\n                                spanStyle; // #390\n                            if (styleRegex.test(span)) {\n                                spanStyle = span.match(styleRegex)[1].replace(/(;| |^)color([ :])/, '$1fill$2');\n                                attr(tspan, 'style', spanStyle);\n                            }\n                            if (hrefRegex.test(span) && !forExport) { // Not for export - #1529\n                                attr(tspan, 'onclick', 'onclick=window.open(\\\"'+ span.match(hrefRegex)[1] +'\\\",\\\"_blank\\\")');\n                                css(tspan, { cursor: 'pointer' });\n                            }\n\n                            span = unescapeAngleBrackets(span.replace(/<(.|\\n)*?>/g, '') || ' ');\n\n                            // Nested tags aren't supported, and cause crash in Safari (#1596)\n                            if (span !== ' ') {\n\n                                // add the text node\n                                tspan.appendChild(doc.createTextNode(span));\n\n                                if (!spanNo) { // first span in a line, align it to the left\n                                    if (lineNo && parentX !== null) {\n                                        attributes.x = parentX;\n                                    }\n                                } else {\n                                    attributes.dx = 0; // #16\n                                }\n\n                                // add attributes\n                                attr(tspan, attributes);\n\n                                // Append it\n                                textNode.appendChild(tspan);\n\n                                // first span on subsequent line, add the line height\n                                if (!spanNo && lineNo) {\n\n                                    // allow getting the right offset height in exporting in IE\n                                    if (!hasSVG && forExport) {\n                                        css(tspan, { display: 'block' });\n                                    }\n\n                                    // Set the line height based on the font size of either\n                                    // the text element or the tspan element\n                                    attr(\n                                        tspan,\n                                        'dy',\n                                        getLineHeight(tspan)\n                                    );\n                                }\n\n                                /*if (width) {\n                                    renderer.breakText(wrapper, width);\n                                }*/\n\n                                // Check width and apply soft breaks or ellipsis\n                                if (width) {\n                                    var words = span.replace(/([^\\^])-/g, '$1- ').split(' '), // #1273\n                                        noWrap = textStyles.whiteSpace === 'nowrap',\n                                        hasWhiteSpace = spans.length > 1 || lineNo || (words.length > 1 && !noWrap),\n                                        tooLong,\n                                        actualWidth,\n                                        rest = [],\n                                        dy = getLineHeight(tspan),\n                                        softLineNo = 1,\n                                        rotation = wrapper.rotation,\n                                        wordStr = span, // for ellipsis\n                                        cursor = wordStr.length, // binary search cursor\n                                        bBox;\n\n                                    while ((hasWhiteSpace || ellipsis) && (words.length || rest.length)) {\n                                        wrapper.rotation = 0; // discard rotation when computing box\n                                        bBox = wrapper.getBBox(true);\n                                        actualWidth = bBox.width;\n\n                                        // Old IE cannot measure the actualWidth for SVG elements (#2314)\n                                        if (!hasSVG && renderer.forExport) {\n                                            actualWidth = renderer.measureSpanWidth(tspan.firstChild.data, wrapper.styles);\n                                        }\n\n                                        tooLong = actualWidth > width;\n\n                                        // For ellipsis, do a binary search for the correct string length\n                                        if (wasTooLong === undefined) {\n                                            wasTooLong = tooLong; // First time\n                                        }\n                                        if (ellipsis && wasTooLong) {\n                                            cursor /= 2;\n\n                                            if (wordStr === '' || (!tooLong && cursor < 0.5)) {\n                                                words = []; // All ok, break out\n                                            } else {\n                                                wordStr = span.substring(0, wordStr.length + (tooLong ? -1 : 1) * mathCeil(cursor));\n                                                words = [wordStr + (width > 3 ? '\\u2026' : '')];\n                                                tspan.removeChild(tspan.firstChild);\n                                            }\n\n                                        // Looping down, this is the first word sequence that is not too long,\n                                        // so we can move on to build the next line.\n                                        } else if (!tooLong || words.length === 1) {\n                                            words = rest;\n                                            rest = [];\n\n                                            if (words.length && !noWrap) {\n                                                softLineNo++;\n\n                                                tspan = doc.createElementNS(SVG_NS, 'tspan');\n                                                attr(tspan, {\n                                                    dy: dy,\n                                                    x: parentX\n                                                });\n                                                if (spanStyle) { // #390\n                                                    attr(tspan, 'style', spanStyle);\n                                                }\n                                                textNode.appendChild(tspan);\n                                            }\n                                            if (actualWidth > width) { // a single word is pressing it out\n                                                width = actualWidth;\n                                            }\n                                        } else { // append to existing line tspan\n                                            tspan.removeChild(tspan.firstChild);\n                                            rest.unshift(words.pop());\n                                        }\n                                        if (words.length) {\n                                            tspan.appendChild(doc.createTextNode(words.join(' ').replace(/- /g, '-')));\n                                        }\n                                    }\n                                    wrapper.rotation = rotation;\n                                }\n\n                                spanNo++;\n                            }\n                        }\n                    });\n                });\n\n                if (wasTooLong) {\n                    wrapper.attr('title', wrapper.textStr);\n                }\n                if (tempParent) {\n                    tempParent.removeChild(textNode); // attach it to the DOM to read offset width\n                }\n\n                // Apply the text shadow\n                if (textShadow && wrapper.applyTextShadow) {\n                    wrapper.applyTextShadow(textShadow);\n                }\n            }\n        },\n\n\n\n        /*\n        breakText: function (wrapper, width) {\n            var bBox = wrapper.getBBox(),\n                node = wrapper.element,\n                textLength = node.textContent.length,\n                pos = mathRound(width * textLength / bBox.width), // try this position first, based on average character width\n                increment = 0,\n                finalPos;\n\n            if (bBox.width > width) {\n                while (finalPos === undefined) {\n                    textLength = node.getSubStringLength(0, pos);\n\n                    if (textLength <= width) {\n                        if (increment === -1) {\n                            finalPos = pos;\n                        } else {\n                            increment = 1;\n                        }\n                    } else {\n                        if (increment === 1) {\n                            finalPos = pos - 1;\n                        } else {\n                            increment = -1;\n                        }\n                    }\n                    pos += increment;\n                }\n            }\n            console.log('width', width, 'stringWidth', node.getSubStringLength(0, finalPos))\n        },\n        */\n\n        /**\n         * Returns white for dark colors and black for bright colors\n         */\n        getContrast: function (color) {\n            color = Color(color).rgba;\n            return color[0] + color[1] + color[2] > 384 ? '#000000' : '#FFFFFF';\n        },\n\n        /**\n         * Create a button with preset states\n         * @param {String} text\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Function} callback\n         * @param {Object} normalState\n         * @param {Object} hoverState\n         * @param {Object} pressedState\n         */\n        button: function (text, x, y, callback, normalState, hoverState, pressedState, disabledState, shape) {\n            var label = this.label(text, x, y, shape, null, null, null, null, 'button'),\n                curState = 0,\n                stateOptions,\n                stateStyle,\n                normalStyle,\n                hoverStyle,\n                pressedStyle,\n                disabledStyle,\n                verticalGradient = { x1: 0, y1: 0, x2: 0, y2: 1 };\n\n            // Normal state - prepare the attributes\n            normalState = merge({\n                'stroke-width': 1,\n                stroke: '#CCCCCC',\n                fill: {\n                    linearGradient: verticalGradient,\n                    stops: [\n                        [0, '#FEFEFE'],\n                        [1, '#F6F6F6']\n                    ]\n                },\n                r: 2,\n                padding: 5,\n                style: {\n                    color: 'black'\n                }\n            }, normalState);\n            normalStyle = normalState.style;\n            delete normalState.style;\n\n            // Hover state\n            hoverState = merge(normalState, {\n                stroke: '#68A',\n                fill: {\n                    linearGradient: verticalGradient,\n                    stops: [\n                        [0, '#FFF'],\n                        [1, '#ACF']\n                    ]\n                }\n            }, hoverState);\n            hoverStyle = hoverState.style;\n            delete hoverState.style;\n\n            // Pressed state\n            pressedState = merge(normalState, {\n                stroke: '#68A',\n                fill: {\n                    linearGradient: verticalGradient,\n                    stops: [\n                        [0, '#9BD'],\n                        [1, '#CDF']\n                    ]\n                }\n            }, pressedState);\n            pressedStyle = pressedState.style;\n            delete pressedState.style;\n\n            // Disabled state\n            disabledState = merge(normalState, {\n                style: {\n                    color: '#CCC'\n                }\n            }, disabledState);\n            disabledStyle = disabledState.style;\n            delete disabledState.style;\n\n            // Add the events. IE9 and IE10 need mouseover and mouseout to funciton (#667).\n            addEvent(label.element, isMS ? 'mouseover' : 'mouseenter', function () {\n                if (curState !== 3) {\n                    label.attr(hoverState)\n                        .css(hoverStyle);\n                }\n            });\n            addEvent(label.element, isMS ? 'mouseout' : 'mouseleave', function () {\n                if (curState !== 3) {\n                    stateOptions = [normalState, hoverState, pressedState][curState];\n                    stateStyle = [normalStyle, hoverStyle, pressedStyle][curState];\n                    label.attr(stateOptions)\n                        .css(stateStyle);\n                }\n            });\n\n            label.setState = function (state) {\n                label.state = curState = state;\n                if (!state) {\n                    label.attr(normalState)\n                        .css(normalStyle);\n                } else if (state === 2) {\n                    label.attr(pressedState)\n                        .css(pressedStyle);\n                } else if (state === 3) {\n                    label.attr(disabledState)\n                        .css(disabledStyle);\n                }\n            };\n\n            return label\n                .on('click', function (e) {\n                    if (curState !== 3) {\n                        callback.call(label, e);\n                    }\n                })\n                .attr(normalState)\n                .css(extend({ cursor: 'default' }, normalStyle));\n        },\n\n        /**\n         * Make a straight line crisper by not spilling out to neighbour pixels\n         * @param {Array} points\n         * @param {Number} width\n         */\n        crispLine: function (points, width) {\n            // points format: [M, 0, 0, L, 100, 0]\n            // normalize to a crisp line\n            if (points[1] === points[4]) {\n                // Substract due to #1129. Now bottom and left axis gridlines behave the same.\n                points[1] = points[4] = mathRound(points[1]) - (width % 2 / 2);\n            }\n            if (points[2] === points[5]) {\n                points[2] = points[5] = mathRound(points[2]) + (width % 2 / 2);\n            }\n            return points;\n        },\n\n\n        /**\n         * Draw a path\n         * @param {Array} path An SVG path in array form\n         */\n        path: function (path) {\n            var attr = {\n                fill: NONE\n            };\n            if (isArray(path)) {\n                attr.d = path;\n            } else if (isObject(path)) { // attributes\n                extend(attr, path);\n            }\n            return this.createElement('path').attr(attr);\n        },\n\n        /**\n         * Draw and return an SVG circle\n         * @param {Number} x The x position\n         * @param {Number} y The y position\n         * @param {Number} r The radius\n         */\n        circle: function (x, y, r) {\n            var attr = isObject(x) ? x : { x: x, y: y, r: r },\n                wrapper = this.createElement('circle');\n\n            // Setting x or y translates to cx and cy\n            wrapper.xSetter = wrapper.ySetter = function (value, key, element) {\n                element.setAttribute('c' + key, value);\n            };\n\n            return wrapper.attr(attr);\n        },\n\n        /**\n         * Draw and return an arc\n         * @param {Number} x X position\n         * @param {Number} y Y position\n         * @param {Number} r Radius\n         * @param {Number} innerR Inner radius like used in donut charts\n         * @param {Number} start Starting angle\n         * @param {Number} end Ending angle\n         */\n        arc: function (x, y, r, innerR, start, end) {\n            var arc;\n\n            if (isObject(x)) {\n                y = x.y;\n                r = x.r;\n                innerR = x.innerR;\n                start = x.start;\n                end = x.end;\n                x = x.x;\n            }\n\n            // Arcs are defined as symbols for the ability to set\n            // attributes in attr and animate\n            arc = this.symbol('arc', x || 0, y || 0, r || 0, r || 0, {\n                innerR: innerR || 0,\n                start: start || 0,\n                end: end || 0\n            });\n            arc.r = r; // #959\n            return arc;\n        },\n\n        /**\n         * Draw and return a rectangle\n         * @param {Number} x Left position\n         * @param {Number} y Top position\n         * @param {Number} width\n         * @param {Number} height\n         * @param {Number} r Border corner radius\n         * @param {Number} strokeWidth A stroke width can be supplied to allow crisp drawing\n         */\n        rect: function (x, y, width, height, r, strokeWidth) {\n\n            r = isObject(x) ? x.r : r;\n\n            var wrapper = this.createElement('rect'),\n                attribs = isObject(x) ? x : x === UNDEFINED ? {} : {\n                    x: x,\n                    y: y,\n                    width: mathMax(width, 0),\n                    height: mathMax(height, 0)\n                };\n\n            if (strokeWidth !== UNDEFINED) {\n                wrapper.strokeWidth = strokeWidth;\n                attribs = wrapper.crisp(attribs);\n            }\n\n            if (r) {\n                attribs.r = r;\n            }\n\n            wrapper.rSetter = function (value, key, element) {\n                attr(element, {\n                    rx: value,\n                    ry: value\n                });\n            };\n\n            return wrapper.attr(attribs);\n        },\n\n        /**\n         * Resize the box and re-align all aligned elements\n         * @param {Object} width\n         * @param {Object} height\n         * @param {Boolean} animate\n         *\n         */\n        setSize: function (width, height, animate) {\n            var renderer = this,\n                alignedObjects = renderer.alignedObjects,\n                i = alignedObjects.length;\n\n            renderer.width = width;\n            renderer.height = height;\n\n            renderer.boxWrapper[pick(animate, true) ? 'animate' : 'attr']({\n                width: width,\n                height: height\n            });\n\n            while (i--) {\n                alignedObjects[i].align();\n            }\n        },\n\n        /**\n         * Create a group\n         * @param {String} name The group will be given a class name of 'highcharts-{name}'.\n         *     This can be used for styling and scripting.\n         */\n        g: function (name) {\n            var elem = this.createElement('g');\n            return defined(name) ? elem.attr({ 'class': PREFIX + name }) : elem;\n        },\n\n        /**\n         * Display an image\n         * @param {String} src\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Number} width\n         * @param {Number} height\n         */\n        image: function (src, x, y, width, height) {\n            var attribs = {\n                    preserveAspectRatio: NONE\n                },\n                elemWrapper;\n\n            // optional properties\n            if (arguments.length > 1) {\n                extend(attribs, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }\n\n            elemWrapper = this.createElement('image').attr(attribs);\n\n            // set the href in the xlink namespace\n            if (elemWrapper.element.setAttributeNS) {\n                elemWrapper.element.setAttributeNS('http://www.w3.org/1999/xlink',\n                    'href', src);\n            } else {\n                // could be exporting in IE\n                // using href throws \"not supported\" in ie7 and under, requries regex shim to fix later\n                elemWrapper.element.setAttribute('hc-svg-href', src);\n            }\n            return elemWrapper;\n        },\n\n        /**\n         * Draw a symbol out of pre-defined shape paths from the namespace 'symbol' object.\n         *\n         * @param {Object} symbol\n         * @param {Object} x\n         * @param {Object} y\n         * @param {Object} radius\n         * @param {Object} options\n         */\n        symbol: function (symbol, x, y, width, height, options) {\n\n            var ren = this,\n                obj,\n\n                // get the symbol definition function\n                symbolFn = this.symbols[symbol],\n\n                // check if there's a path defined for this symbol\n                path = symbolFn && symbolFn(\n                    mathRound(x),\n                    mathRound(y),\n                    width,\n                    height,\n                    options\n                ),\n                imageRegex = /^url\\((.*?)\\)$/,\n                imageSrc,\n                imageSize,\n                centerImage;\n\n            if (path) {\n\n                obj = this.path(path);\n                // expando properties for use in animate and attr\n                extend(obj, {\n                    symbolName: symbol,\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n                if (options) {\n                    extend(obj, options);\n                }\n\n\n            // image symbols\n            } else if (imageRegex.test(symbol)) {\n\n                // On image load, set the size and position\n                centerImage = function (img, size) {\n                    if (img.element) { // it may be destroyed in the meantime (#1390)\n                        img.attr({\n                            width: size[0],\n                            height: size[1]\n                        });\n\n                        if (!img.alignByTranslate) { // #185\n                            img.translate(\n                                mathRound((width - size[0]) / 2), // #1378\n                                mathRound((height - size[1]) / 2)\n                            );\n                        }\n                    }\n                };\n\n                imageSrc = symbol.match(imageRegex)[1];\n                imageSize = symbolSizes[imageSrc] || (options && options.width && options.height && [options.width, options.height]);\n\n                // Ireate the image synchronously, add attribs async\n                obj = this.image(imageSrc)\n                    .attr({\n                        x: x,\n                        y: y\n                    });\n                obj.isImg = true;\n\n                if (imageSize) {\n                    centerImage(obj, imageSize);\n                } else {\n                    // Initialize image to be 0 size so export will still function if there's no cached sizes.\n                    obj.attr({ width: 0, height: 0 });\n\n                    // Create a dummy JavaScript image to get the width and height. Due to a bug in IE < 8,\n                    // the created element must be assigned to a variable in order to load (#292).\n                    createElement('img', {\n                        onload: function () {\n\n                            var chart = charts[ren.chartIndex];\n\n                            // Special case for SVGs on IE11, the width is not accessible until the image is\n                            // part of the DOM (#2854).\n                            if (this.width === 0) {\n                                css(this, {\n                                    position: ABSOLUTE,\n                                    top: '-999em'\n                                });\n                                doc.body.appendChild(this);\n                            }\n\n                            // Center the image\n                            centerImage(obj, symbolSizes[imageSrc] = [this.width, this.height]);\n\n                            // Clean up after #2854 workaround.\n                            if (this.parentNode) {\n                                this.parentNode.removeChild(this);\n                            }\n\n                            // Fire the load event when all external images are loaded\n                            ren.imgCount--;\n                            if (!ren.imgCount && chart && chart.onload) {\n                                chart.onload();\n                            }\n                        },\n                        src: imageSrc\n                    });\n                    this.imgCount++;\n                }\n            }\n\n            return obj;\n        },\n\n        /**\n         * An extendable collection of functions for defining symbol paths.\n         */\n        symbols: {\n            'circle': function (x, y, w, h) {\n                var cpw = 0.166 * w;\n                return [\n                    M, x + w / 2, y,\n                    'C', x + w + cpw, y, x + w + cpw, y + h, x + w / 2, y + h,\n                    'C', x - cpw, y + h, x - cpw, y, x + w / 2, y,\n                    'Z'\n                ];\n            },\n\n            'square': function (x, y, w, h) {\n                return [\n                    M, x, y,\n                    L, x + w, y,\n                    x + w, y + h,\n                    x, y + h,\n                    'Z'\n                ];\n            },\n\n            'triangle': function (x, y, w, h) {\n                return [\n                    M, x + w / 2, y,\n                    L, x + w, y + h,\n                    x, y + h,\n                    'Z'\n                ];\n            },\n\n            'triangle-down': function (x, y, w, h) {\n                return [\n                    M, x, y,\n                    L, x + w, y,\n                    x + w / 2, y + h,\n                    'Z'\n                ];\n            },\n            'diamond': function (x, y, w, h) {\n                return [\n                    M, x + w / 2, y,\n                    L, x + w, y + h / 2,\n                    x + w / 2, y + h,\n                    x, y + h / 2,\n                    'Z'\n                ];\n            },\n            'arc': function (x, y, w, h, options) {\n                var start = options.start,\n                    radius = options.r || w || h,\n                    end = options.end - 0.001, // to prevent cos and sin of start and end from becoming equal on 360 arcs (related: #1561)\n                    innerRadius = options.innerR,\n                    open = options.open,\n                    cosStart = mathCos(start),\n                    sinStart = mathSin(start),\n                    cosEnd = mathCos(end),\n                    sinEnd = mathSin(end),\n                    longArc = options.end - start < mathPI ? 0 : 1;\n\n                return [\n                    M,\n                    x + radius * cosStart,\n                    y + radius * sinStart,\n                    'A', // arcTo\n                    radius, // x radius\n                    radius, // y radius\n                    0, // slanting\n                    longArc, // long or short arc\n                    1, // clockwise\n                    x + radius * cosEnd,\n                    y + radius * sinEnd,\n                    open ? M : L,\n                    x + innerRadius * cosEnd,\n                    y + innerRadius * sinEnd,\n                    'A', // arcTo\n                    innerRadius, // x radius\n                    innerRadius, // y radius\n                    0, // slanting\n                    longArc, // long or short arc\n                    0, // clockwise\n                    x + innerRadius * cosStart,\n                    y + innerRadius * sinStart,\n\n                    open ? '' : 'Z' // close\n                ];\n            },\n\n            /**\n             * Callout shape used for default tooltips, also used for rounded rectangles in VML\n             */\n            callout: function (x, y, w, h, options) {\n                var arrowLength = 6,\n                    halfDistance = 6,\n                    r = mathMin((options && options.r) || 0, w, h),\n                    safeDistance = r + halfDistance,\n                    anchorX = options && options.anchorX,\n                    anchorY = options && options.anchorY,\n                    path;\n\n                path = [\n                    'M', x + r, y,\n                    'L', x + w - r, y, // top side\n                    'C', x + w, y, x + w, y, x + w, y + r, // top-right corner\n                    'L', x + w, y + h - r, // right side\n                    'C', x + w, y + h, x + w, y + h, x + w - r, y + h, // bottom-right corner\n                    'L', x + r, y + h, // bottom side\n                    'C', x, y + h, x, y + h, x, y + h - r, // bottom-left corner\n                    'L', x, y + r, // left side\n                    'C', x, y, x, y, x + r, y // top-right corner\n                ];\n\n                if (anchorX && anchorX > w && anchorY > y + safeDistance && anchorY < y + h - safeDistance) { // replace right side\n                    path.splice(13, 3,\n                        'L', x + w, anchorY - halfDistance,\n                        x + w + arrowLength, anchorY,\n                        x + w, anchorY + halfDistance,\n                        x + w, y + h - r\n                        );\n                } else if (anchorX && anchorX < 0 && anchorY > y + safeDistance && anchorY < y + h - safeDistance) { // replace left side\n                    path.splice(33, 3,\n                        'L', x, anchorY + halfDistance,\n                        x - arrowLength, anchorY,\n                        x, anchorY - halfDistance,\n                        x, y + r\n                        );\n                } else if (anchorY && anchorY > h && anchorX > x + safeDistance && anchorX < x + w - safeDistance) { // replace bottom\n                    path.splice(23, 3,\n                        'L', anchorX + halfDistance, y + h,\n                        anchorX, y + h + arrowLength,\n                        anchorX - halfDistance, y + h,\n                        x + r, y + h\n                        );\n                } else if (anchorY && anchorY < 0 && anchorX > x + safeDistance && anchorX < x + w - safeDistance) { // replace top\n                    path.splice(3, 3,\n                        'L', anchorX - halfDistance, y,\n                        anchorX, y - arrowLength,\n                        anchorX + halfDistance, y,\n                        w - r, y\n                        );\n                }\n                return path;\n            }\n        },\n\n        /**\n         * Define a clipping rectangle\n         * @param {String} id\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Number} width\n         * @param {Number} height\n         */\n        clipRect: function (x, y, width, height) {\n            var wrapper,\n                id = PREFIX + idCounter++,\n\n                clipPath = this.createElement('clipPath').attr({\n                    id: id\n                }).add(this.defs);\n\n            wrapper = this.rect(x, y, width, height, 0).add(clipPath);\n            wrapper.id = id;\n            wrapper.clipPath = clipPath;\n            wrapper.count = 0;\n\n            return wrapper;\n        },\n\n\n\n\n\n        /**\n         * Add text to the SVG object\n         * @param {String} str\n         * @param {Number} x Left position\n         * @param {Number} y Top position\n         * @param {Boolean} useHTML Use HTML to render the text\n         */\n        text: function (str, x, y, useHTML) {\n\n            // declare variables\n            var renderer = this,\n                fakeSVG = useCanVG || (!hasSVG && renderer.forExport),\n                wrapper,\n                attr = {};\n\n            if (useHTML && (renderer.allowHTML || !renderer.forExport)) {\n                return renderer.html(str, x, y);\n            }\n\n            attr.x = Math.round(x || 0); // X is always needed for line-wrap logic\n            if (y) {\n                attr.y = Math.round(y);\n            }\n            if (str || str === 0) {\n                attr.text = str;\n            }\n\n            wrapper = renderer.createElement('text')\n                .attr(attr);\n\n            // Prevent wrapping from creating false offsetWidths in export in legacy IE (#1079, #1063)\n            if (fakeSVG) {\n                wrapper.css({\n                    position: ABSOLUTE\n                });\n            }\n\n            if (!useHTML) {\n                wrapper.xSetter = function (value, key, element) {\n                    var tspans = element.getElementsByTagName('tspan'),\n                        tspan,\n                        parentVal = element.getAttribute(key),\n                        i;\n                    for (i = 0; i < tspans.length; i++) {\n                        tspan = tspans[i];\n                        // If the x values are equal, the tspan represents a linebreak\n                        if (tspan.getAttribute(key) === parentVal) {\n                            tspan.setAttribute(key, value);\n                        }\n                    }\n                    element.setAttribute(key, value);\n                };\n            }\n\n            return wrapper;\n        },\n\n        /**\n         * Utility to return the baseline offset and total line height from the font size\n         */\n        fontMetrics: function (fontSize, elem) {\n            var lineHeight,\n                baseline,\n                style;\n\n            fontSize = fontSize || this.style.fontSize;\n            if (!fontSize && elem && win.getComputedStyle) {\n                elem = elem.element || elem; // SVGElement\n                style = win.getComputedStyle(elem, '');\n                fontSize = style && style.fontSize; // #4309, the style doesn't exist inside a hidden iframe in Firefox\n            }\n            fontSize = /px/.test(fontSize) ? pInt(fontSize) : /em/.test(fontSize) ? parseFloat(fontSize) * 12 : 12;\n\n            // Empirical values found by comparing font size and bounding box height.\n            // Applies to the default font family. http://jsfiddle.net/highcharts/7xvn7/\n            lineHeight = fontSize < 24 ? fontSize + 3 : mathRound(fontSize * 1.2);\n            baseline = mathRound(lineHeight * 0.8);\n\n            return {\n                h: lineHeight,\n                b: baseline,\n                f: fontSize\n            };\n        },\n\n        /**\n         * Correct X and Y positioning of a label for rotation (#1764)\n         */\n        rotCorr: function (baseline, rotation, alterY) {\n            var y = baseline;\n            if (rotation && alterY) {\n                y = mathMax(y * mathCos(rotation * deg2rad), 4);\n            }\n            return {\n                x: (-baseline / 3) * mathSin(rotation * deg2rad),\n                y: y\n            };\n        },\n\n        /**\n         * Add a label, a text item that can hold a colored or gradient background\n         * as well as a border and shadow.\n         * @param {string} str\n         * @param {Number} x\n         * @param {Number} y\n         * @param {String} shape\n         * @param {Number} anchorX In case the shape has a pointer, like a flag, this is the\n         *    coordinates it should be pinned to\n         * @param {Number} anchorY\n         * @param {Boolean} baseline Whether to position the label relative to the text baseline,\n         *    like renderer.text, or to the upper border of the rectangle.\n         * @param {String} className Class name for the group\n         */\n        label: function (str, x, y, shape, anchorX, anchorY, useHTML, baseline, className) {\n\n            var renderer = this,\n                wrapper = renderer.g(className),\n                text = renderer.text('', 0, 0, useHTML)\n                    .attr({\n                        zIndex: 1\n                    }),\n                    //.add(wrapper),\n                box,\n                bBox,\n                alignFactor = 0,\n                padding = 3,\n                paddingLeft = 0,\n                width,\n                height,\n                wrapperX,\n                wrapperY,\n                crispAdjust = 0,\n                deferredAttr = {},\n                baselineOffset,\n                hasBGImage = /^url\\((.*?)\\)$/.test(shape),\n                needsBox = hasBGImage,\n                updateBoxSize,\n                updateTextPadding,\n                boxAttr;\n\n            /**\n             * This function runs after the label is added to the DOM (when the bounding box is\n             * available), and after the text of the label is updated to detect the new bounding\n             * box and reflect it in the border box.\n             */\n            updateBoxSize = function () {\n                var boxX,\n                    boxY,\n                    style = text.element.style;\n\n                bBox = (width === undefined || height === undefined || wrapper.styles.textAlign) && defined(text.textStr) &&\n                    text.getBBox(); //#3295 && 3514 box failure when string equals 0\n                wrapper.width = (width || bBox.width || 0) + 2 * padding + paddingLeft;\n                wrapper.height = (height || bBox.height || 0) + 2 * padding;\n\n                // update the label-scoped y offset\n                baselineOffset = padding + renderer.fontMetrics(style && style.fontSize, text).b;\n\n\n                if (needsBox) {\n\n                    if (!box) {\n                        // create the border box if it is not already present\n                        boxX = crispAdjust;\n                        boxY = (baseline ? -baselineOffset : 0) + crispAdjust;\n                        wrapper.box = box = renderer.symbols[shape] || hasBGImage ? // Symbol definition exists (#5324)\n                                renderer.symbol(shape, boxX, boxY, wrapper.width, wrapper.height, deferredAttr) :\n                                renderer.rect(boxX, boxY, wrapper.width, wrapper.height, 0, deferredAttr[STROKE_WIDTH]);\n\n                        if (!box.isImg) { // #4324, fill \"none\" causes it to be ignored by mouse events in IE\n                            box.attr('fill', NONE);\n                        }\n                        box.add(wrapper);\n                    }\n\n                    // apply the box attributes\n                    if (!box.isImg) { // #1630\n                        box.attr(extend({\n                            width: mathRound(wrapper.width),\n                            height: mathRound(wrapper.height)\n                        }, deferredAttr));\n                    }\n                    deferredAttr = null;\n                }\n            };\n\n            /**\n             * This function runs after setting text or padding, but only if padding is changed\n             */\n            updateTextPadding = function () {\n                var styles = wrapper.styles,\n                    textAlign = styles && styles.textAlign,\n                    x = paddingLeft + padding,\n                    y;\n\n                // determin y based on the baseline\n                y = baseline ? 0 : baselineOffset;\n\n                // compensate for alignment\n                if (defined(width) && bBox && (textAlign === 'center' || textAlign === 'right')) {\n                    x += { center: 0.5, right: 1 }[textAlign] * (width - bBox.width);\n                }\n\n                // update if anything changed\n                if (x !== text.x || y !== text.y) {\n                    text.attr('x', x);\n                    if (y !== UNDEFINED) {\n                        text.attr('y', y);\n                    }\n                }\n\n                // record current values\n                text.x = x;\n                text.y = y;\n            };\n\n            /**\n             * Set a box attribute, or defer it if the box is not yet created\n             * @param {Object} key\n             * @param {Object} value\n             */\n            boxAttr = function (key, value) {\n                if (box) {\n                    box.attr(key, value);\n                } else {\n                    deferredAttr[key] = value;\n                }\n            };\n\n            /**\n             * After the text element is added, get the desired size of the border box\n             * and add it before the text in the DOM.\n             */\n            wrapper.onAdd = function () {\n                text.add(wrapper);\n                wrapper.attr({\n                    text: (str || str === 0) ? str : '', // alignment is available now // #3295: 0 not rendered if given as a value\n                    x: x,\n                    y: y\n                });\n\n                if (box && defined(anchorX)) {\n                    wrapper.attr({\n                        anchorX: anchorX,\n                        anchorY: anchorY\n                    });\n                }\n            };\n\n            /*\n             * Add specific attribute setters.\n             */\n\n            // only change local variables\n            wrapper.widthSetter = function (value) {\n                width = value;\n            };\n            wrapper.heightSetter = function (value) {\n                height = value;\n            };\n            wrapper.paddingSetter =  function (value) {\n                if (defined(value) && value !== padding) {\n                    padding = wrapper.padding = value;\n                    updateTextPadding();\n                }\n            };\n            wrapper.paddingLeftSetter =  function (value) {\n                if (defined(value) && value !== paddingLeft) {\n                    paddingLeft = value;\n                    updateTextPadding();\n                }\n            };\n\n\n            // change local variable and prevent setting attribute on the group\n            wrapper.alignSetter = function (value) {\n                value = { left: 0, center: 0.5, right: 1 }[value];\n                if (value !== alignFactor) {\n                    alignFactor = value;\n                    if (bBox) { // Bounding box exists, means we're dynamically changing\n                        wrapper.attr({ x: wrapperX }); // #5134\n                    }\n                }\n            };\n\n            // apply these to the box and the text alike\n            wrapper.textSetter = function (value) {\n                if (value !== UNDEFINED) {\n                    text.textSetter(value);\n                }\n                updateBoxSize();\n                updateTextPadding();\n            };\n\n            // apply these to the box but not to the text\n            wrapper['stroke-widthSetter'] = function (value, key) {\n                if (value) {\n                    needsBox = true;\n                }\n                crispAdjust = value % 2 / 2;\n                boxAttr(key, value);\n            };\n            wrapper.strokeSetter = wrapper.fillSetter = wrapper.rSetter = function (value, key) {\n                if (key === 'fill' && value) {\n                    needsBox = true;\n                }\n                boxAttr(key, value);\n            };\n            wrapper.anchorXSetter = function (value, key) {\n                anchorX = value;\n                boxAttr(key, mathRound(value) - crispAdjust - wrapperX);\n            };\n            wrapper.anchorYSetter = function (value, key) {\n                anchorY = value;\n                boxAttr(key, value - wrapperY);\n            };\n\n            // rename attributes\n            wrapper.xSetter = function (value) {\n                wrapper.x = value; // for animation getter\n                if (alignFactor) {\n                    value -= alignFactor * ((width || bBox.width) + 2 * padding);\n                }\n                wrapperX = mathRound(value);\n                wrapper.attr('translateX', wrapperX);\n            };\n            wrapper.ySetter = function (value) {\n                wrapperY = wrapper.y = mathRound(value);\n                wrapper.attr('translateY', wrapperY);\n            };\n\n            // Redirect certain methods to either the box or the text\n            var baseCss = wrapper.css;\n            return extend(wrapper, {\n                /**\n                 * Pick up some properties and apply them to the text instead of the wrapper\n                 */\n                css: function (styles) {\n                    if (styles) {\n                        var textStyles = {};\n                        styles = merge(styles); // create a copy to avoid altering the original object (#537)\n                        each(wrapper.textProps, function (prop) {\n                            if (styles[prop] !== UNDEFINED) {\n                                textStyles[prop] = styles[prop];\n                                delete styles[prop];\n                            }\n                        });\n                        text.css(textStyles);\n                    }\n                    return baseCss.call(wrapper, styles);\n                },\n                /**\n                 * Return the bounding box of the box, not the group\n                 */\n                getBBox: function () {\n                    return {\n                        width: bBox.width + 2 * padding,\n                        height: bBox.height + 2 * padding,\n                        x: bBox.x - padding,\n                        y: bBox.y - padding\n                    };\n                },\n                /**\n                 * Apply the shadow to the box\n                 */\n                shadow: function (b) {\n                    if (box) {\n                        box.shadow(b);\n                    }\n                    return wrapper;\n                },\n                /**\n                 * Destroy and release memory.\n                 */\n                destroy: function () {\n\n                    // Added by button implementation\n                    removeEvent(wrapper.element, 'mouseenter');\n                    removeEvent(wrapper.element, 'mouseleave');\n\n                    if (text) {\n                        text = text.destroy();\n                    }\n                    if (box) {\n                        box = box.destroy();\n                    }\n                    // Call base implementation to destroy the rest\n                    SVGElement.prototype.destroy.call(wrapper);\n\n                    // Release local pointers (#1298)\n                    wrapper = renderer = updateBoxSize = updateTextPadding = boxAttr = null;\n                }\n            });\n        }\n    }; // end SVGRenderer\n\n\n    // general renderer\n    Renderer = SVGRenderer;\n    // extend SvgElement for useHTML option\n    extend(SVGElement.prototype, {\n        /**\n         * Apply CSS to HTML elements. This is used in text within SVG rendering and\n         * by the VML renderer\n         */\n        htmlCss: function (styles) {\n            var wrapper = this,\n                element = wrapper.element,\n                textWidth = styles && element.tagName === 'SPAN' && styles.width;\n\n            if (textWidth) {\n                delete styles.width;\n                wrapper.textWidth = textWidth;\n                wrapper.updateTransform();\n            }\n            if (styles && styles.textOverflow === 'ellipsis') {\n                styles.whiteSpace = 'nowrap';\n                styles.overflow = 'hidden';\n            }\n            wrapper.styles = extend(wrapper.styles, styles);\n            css(wrapper.element, styles);\n\n            return wrapper;\n        },\n\n        /**\n         * VML and useHTML method for calculating the bounding box based on offsets\n         * @param {Boolean} refresh Whether to force a fresh value from the DOM or to\n         * use the cached value\n         *\n         * @return {Object} A hash containing values for x, y, width and height\n         */\n\n        htmlGetBBox: function () {\n            var wrapper = this,\n                element = wrapper.element;\n\n            // faking getBBox in exported SVG in legacy IE\n            // faking getBBox in exported SVG in legacy IE (is this a duplicate of the fix for #1079?)\n            if (element.nodeName === 'text') {\n                element.style.position = ABSOLUTE;\n            }\n\n            return {\n                x: element.offsetLeft,\n                y: element.offsetTop,\n                width: element.offsetWidth,\n                height: element.offsetHeight\n            };\n        },\n\n        /**\n         * VML override private method to update elements based on internal\n         * properties based on SVG transform\n         */\n        htmlUpdateTransform: function () {\n            // aligning non added elements is expensive\n            if (!this.added) {\n                this.alignOnAdd = true;\n                return;\n            }\n\n            var wrapper = this,\n                renderer = wrapper.renderer,\n                elem = wrapper.element,\n                translateX = wrapper.translateX || 0,\n                translateY = wrapper.translateY || 0,\n                x = wrapper.x || 0,\n                y = wrapper.y || 0,\n                align = wrapper.textAlign || 'left',\n                alignCorrection = { left: 0, center: 0.5, right: 1 }[align],\n                shadows = wrapper.shadows,\n                styles = wrapper.styles;\n\n            // apply translate\n            css(elem, {\n                marginLeft: translateX,\n                marginTop: translateY\n            });\n            if (shadows) { // used in labels/tooltip\n                each(shadows, function (shadow) {\n                    css(shadow, {\n                        marginLeft: translateX + 1,\n                        marginTop: translateY + 1\n                    });\n                });\n            }\n\n            // apply inversion\n            if (wrapper.inverted) { // wrapper is a group\n                each(elem.childNodes, function (child) {\n                    renderer.invertChild(child, elem);\n                });\n            }\n\n            if (elem.tagName === 'SPAN') {\n\n                var rotation = wrapper.rotation,\n                    baseline,\n                    textWidth = pInt(wrapper.textWidth),\n                    whiteSpace = styles && styles.whiteSpace,\n                    currentTextTransform = [rotation, align, elem.innerHTML, wrapper.textWidth, wrapper.textAlign].join(',');\n\n                if (currentTextTransform !== wrapper.cTT) { // do the calculations and DOM access only if properties changed\n\n\n                    baseline = renderer.fontMetrics(elem.style.fontSize).b;\n\n                    // Renderer specific handling of span rotation\n                    if (defined(rotation)) {\n                        wrapper.setSpanRotation(rotation, alignCorrection, baseline);\n                    }\n\n                    // Reset multiline/ellipsis in order to read width (#4928, #5417)\n                    css(elem, {\n                        width: '',\n                        whiteSpace: whiteSpace || 'nowrap'\n                    });\n\n                    // Update textWidth\n                    if (elem.offsetWidth > textWidth && /[ \\-]/.test(elem.textContent || elem.innerText)) { // #983, #1254\n                        css(elem, {\n                            width: textWidth + PX,\n                            display: 'block',\n                            whiteSpace: whiteSpace || 'normal' // #3331\n                        });\n                    }\n\n\n                    wrapper.getSpanCorrection(elem.offsetWidth, baseline, alignCorrection, rotation, align);\n                }\n\n                // apply position with correction\n                css(elem, {\n                    left: (x + (wrapper.xCorr || 0)) + PX,\n                    top: (y + (wrapper.yCorr || 0)) + PX\n                });\n\n                // force reflow in webkit to apply the left and top on useHTML element (#1249)\n                if (isWebKit) {\n                    baseline = elem.offsetHeight; // assigned to baseline for lint purpose\n                }\n\n                // record current text transform\n                wrapper.cTT = currentTextTransform;\n            }\n        },\n\n        /**\n         * Set the rotation of an individual HTML span\n         */\n        setSpanRotation: function (rotation, alignCorrection, baseline) {\n            var rotationStyle = {},\n                cssTransformKey = isMS ? '-ms-transform' : isWebKit ? '-webkit-transform' : isFirefox ? 'MozTransform' : isOpera ? '-o-transform' : '';\n\n            rotationStyle[cssTransformKey] = rotationStyle.transform = 'rotate(' + rotation + 'deg)';\n            rotationStyle[cssTransformKey + (isFirefox ? 'Origin' : '-origin')] = rotationStyle.transformOrigin = (alignCorrection * 100) + '% ' + baseline + 'px';\n            css(this.element, rotationStyle);\n        },\n\n        /**\n         * Get the correction in X and Y positioning as the element is rotated.\n         */\n        getSpanCorrection: function (width, baseline, alignCorrection) {\n            this.xCorr = -width * alignCorrection;\n            this.yCorr = -baseline;\n        }\n    });\n\n    // Extend SvgRenderer for useHTML option.\n    extend(SVGRenderer.prototype, {\n        /**\n         * Create HTML text node. This is used by the VML renderer as well as the SVG\n         * renderer through the useHTML option.\n         *\n         * @param {String} str\n         * @param {Number} x\n         * @param {Number} y\n         */\n        html: function (str, x, y) {\n            var wrapper = this.createElement('span'),\n                element = wrapper.element,\n                renderer = wrapper.renderer,\n                isSVG = renderer.isSVG,\n                addSetters = function (element, style) {\n                    // These properties are set as attributes on the SVG group, and as\n                    // identical CSS properties on the div. (#3542)\n                    each(['display', 'opacity', 'visibility'], function (prop) {\n                        wrap(element, prop + 'Setter', function (proceed, value, key, elem) {\n                            proceed.call(this, value, key, elem);\n                            style[key] = value;\n                        });\n                    });            \n                };\n\n            // Text setter\n            wrapper.textSetter = function (value) {\n                if (value !== element.innerHTML) {\n                    delete this.bBox;\n                }\n                element.innerHTML = this.textStr = value;\n                wrapper.htmlUpdateTransform();\n            };\n\n            // Add setters for the element itself (#4938)\n            if (isSVG) { // #4938, only for HTML within SVG\n                addSetters(wrapper, wrapper.element.style);\n            }\n\n            // Various setters which rely on update transform\n            wrapper.xSetter = wrapper.ySetter = wrapper.alignSetter = wrapper.rotationSetter = function (value, key) {\n                if (key === 'align') {\n                    key = 'textAlign'; // Do not overwrite the SVGElement.align method. Same as VML.\n                }\n                wrapper[key] = value;\n                wrapper.htmlUpdateTransform();\n            };\n\n            // Set the default attributes\n            wrapper\n                .attr({\n                    text: str,\n                    x: mathRound(x),\n                    y: mathRound(y)\n                })\n                .css({\n                    position: ABSOLUTE,\n                    fontFamily: this.style.fontFamily,\n                    fontSize: this.style.fontSize\n                });\n\n            // Keep the whiteSpace style outside the wrapper.styles collection\n            element.style.whiteSpace = 'nowrap';\n\n            // Use the HTML specific .css method\n            wrapper.css = wrapper.htmlCss;\n\n            // This is specific for HTML within SVG\n            if (isSVG) {\n                wrapper.add = function (svgGroupWrapper) {\n\n                    var htmlGroup,\n                        container = renderer.box.parentNode,\n                        parentGroup,\n                        parents = [];\n\n                    this.parentGroup = svgGroupWrapper;\n\n                    // Create a mock group to hold the HTML elements\n                    if (svgGroupWrapper) {\n                        htmlGroup = svgGroupWrapper.div;\n                        if (!htmlGroup) {\n\n                            // Read the parent chain into an array and read from top down\n                            parentGroup = svgGroupWrapper;\n                            while (parentGroup) {\n\n                                parents.push(parentGroup);\n\n                                // Move up to the next parent group\n                                parentGroup = parentGroup.parentGroup;\n                            }\n\n                            // Ensure dynamically updating position when any parent is translated\n                            each(parents.reverse(), function (parentGroup) {\n                                var htmlGroupStyle,\n                                    cls = attr(parentGroup.element, 'class');\n\n                                if (cls) {\n                                    cls = { className: cls };\n                                } // else null\n\n                                // Create a HTML div and append it to the parent div to emulate\n                                // the SVG group structure\n                                htmlGroup = parentGroup.div = parentGroup.div || createElement(DIV, cls, {\n                                    position: ABSOLUTE,\n                                    left: (parentGroup.translateX || 0) + PX,\n                                    top: (parentGroup.translateY || 0) + PX,\n                                    display: parentGroup.display,\n                                    opacity: parentGroup.opacity, // #5075\n                                    pointerEvents: parentGroup.styles && parentGroup.styles.pointerEvents // #5595\n                                }, htmlGroup || container); // the top group is appended to container\n\n                                // Shortcut\n                                htmlGroupStyle = htmlGroup.style;\n\n                                // Set listeners to update the HTML div's position whenever the SVG group\n                                // position is changed\n                                extend(parentGroup, {\n                                    translateXSetter: function (value, key) {\n                                        htmlGroupStyle.left = value + PX;\n                                        parentGroup[key] = value;\n                                        parentGroup.doTransform = true;\n                                    },\n                                    translateYSetter: function (value, key) {\n                                        htmlGroupStyle.top = value + PX;\n                                        parentGroup[key] = value;\n                                        parentGroup.doTransform = true;\n                                    }\n                                });\n                                addSetters(parentGroup, htmlGroupStyle);\n                            });\n\n                        }\n                    } else {\n                        htmlGroup = container;\n                    }\n\n                    htmlGroup.appendChild(element);\n\n                    // Shared with VML:\n                    wrapper.added = true;\n                    if (wrapper.alignOnAdd) {\n                        wrapper.htmlUpdateTransform();\n                    }\n\n                    return wrapper;\n                };\n            }\n            return wrapper;\n        }\n    });\n\n\n    /* ****************************************************************************\n     *                                                                            *\n     * START OF INTERNET EXPLORER <= 8 SPECIFIC CODE                              *\n     *                                                                            *\n     * For applications and websites that don't need IE support, like platform    *\n     * targeted mobile apps and web apps, this code can be removed.               *\n     *                                                                            *\n     *****************************************************************************/\n\n    /**\n     * @constructor\n     */\n    var VMLRenderer, VMLElement;\n    if (!hasSVG && !useCanVG) {\n\n    /**\n     * The VML element wrapper.\n     */\n    VMLElement = {\n\n        /**\n         * Initialize a new VML element wrapper. It builds the markup as a string\n         * to minimize DOM traffic.\n         * @param {Object} renderer\n         * @param {Object} nodeName\n         */\n        init: function (renderer, nodeName) {\n            var wrapper = this,\n                markup =  ['<', nodeName, ' filled=\"f\" stroked=\"f\"'],\n                style = ['position: ', ABSOLUTE, ';'],\n                isDiv = nodeName === DIV;\n\n            // divs and shapes need size\n            if (nodeName === 'shape' || isDiv) {\n                style.push('left:0;top:0;width:1px;height:1px;');\n            }\n            style.push('visibility: ', isDiv ? HIDDEN : VISIBLE);\n\n            markup.push(' style=\"', style.join(''), '\"/>');\n\n            // create element with default attributes and style\n            if (nodeName) {\n                markup = isDiv || nodeName === 'span' || nodeName === 'img' ?\n                    markup.join('')    :\n                    renderer.prepVML(markup);\n                wrapper.element = createElement(markup);\n            }\n\n            wrapper.renderer = renderer;\n        },\n\n        /**\n         * Add the node to the given parent\n         * @param {Object} parent\n         */\n        add: function (parent) {\n            var wrapper = this,\n                renderer = wrapper.renderer,\n                element = wrapper.element,\n                box = renderer.box,\n                inverted = parent && parent.inverted,\n\n                // get the parent node\n                parentNode = parent ?\n                    parent.element || parent :\n                    box;\n\n            if (parent) {\n                this.parentGroup = parent;\n            }\n\n            // if the parent group is inverted, apply inversion on all children\n            if (inverted) { // only on groups\n                renderer.invertChild(element, parentNode);\n            }\n\n            // append it\n            parentNode.appendChild(element);\n\n            // align text after adding to be able to read offset\n            wrapper.added = true;\n            if (wrapper.alignOnAdd && !wrapper.deferUpdateTransform) {\n                wrapper.updateTransform();\n            }\n\n            // fire an event for internal hooks\n            if (wrapper.onAdd) {\n                wrapper.onAdd();\n            }\n\n            return wrapper;\n        },\n\n        /**\n         * VML always uses htmlUpdateTransform\n         */\n        updateTransform: SVGElement.prototype.htmlUpdateTransform,\n\n        /**\n         * Set the rotation of a span with oldIE's filter\n         */\n        setSpanRotation: function () {\n            // Adjust for alignment and rotation. Rotation of useHTML content is not yet implemented\n            // but it can probably be implemented for Firefox 3.5+ on user request. FF3.5+\n            // has support for CSS3 transform. The getBBox method also needs to be updated\n            // to compensate for the rotation, like it currently does for SVG.\n            // Test case: http://jsfiddle.net/highcharts/Ybt44/\n\n            var rotation = this.rotation,\n                costheta = mathCos(rotation * deg2rad),\n                sintheta = mathSin(rotation * deg2rad);\n\n            css(this.element, {\n                filter: rotation ? ['progid:DXImageTransform.Microsoft.Matrix(M11=', costheta,\n                    ', M12=', -sintheta, ', M21=', sintheta, ', M22=', costheta,\n                    ', sizingMethod=\\'auto expand\\')'].join('') : NONE\n            });\n        },\n\n        /**\n         * Get the positioning correction for the span after rotating.\n         */\n        getSpanCorrection: function (width, baseline, alignCorrection, rotation, align) {\n\n            var costheta = rotation ? mathCos(rotation * deg2rad) : 1,\n                sintheta = rotation ? mathSin(rotation * deg2rad) : 0,\n                height = pick(this.elemHeight, this.element.offsetHeight),\n                quad,\n                nonLeft = align && align !== 'left';\n\n            // correct x and y\n            this.xCorr = costheta < 0 && -width;\n            this.yCorr = sintheta < 0 && -height;\n\n            // correct for baseline and corners spilling out after rotation\n            quad = costheta * sintheta < 0;\n            this.xCorr += sintheta * baseline * (quad ? 1 - alignCorrection : alignCorrection);\n            this.yCorr -= costheta * baseline * (rotation ? (quad ? alignCorrection : 1 - alignCorrection) : 1);\n            // correct for the length/height of the text\n            if (nonLeft) {\n                this.xCorr -= width * alignCorrection * (costheta < 0 ? -1 : 1);\n                if (rotation) {\n                    this.yCorr -= height * alignCorrection * (sintheta < 0 ? -1 : 1);\n                }\n                css(this.element, {\n                    textAlign: align\n                });\n            }\n        },\n\n        /**\n         * Converts a subset of an SVG path definition to its VML counterpart. Takes an array\n         * as the parameter and returns a string.\n         */\n        pathToVML: function (value) {\n            // convert paths\n            var i = value.length,\n                path = [];\n\n            while (i--) {\n\n                // Multiply by 10 to allow subpixel precision.\n                // Substracting half a pixel seems to make the coordinates\n                // align with SVG, but this hasn't been tested thoroughly\n                if (isNumber(value[i])) {\n                    path[i] = mathRound(value[i] * 10) - 5;\n                } else if (value[i] === 'Z') { // close the path\n                    path[i] = 'x';\n                } else {\n                    path[i] = value[i];\n\n                    // When the start X and end X coordinates of an arc are too close,\n                    // they are rounded to the same value above. In this case, substract or\n                    // add 1 from the end X and Y positions. #186, #760, #1371, #1410.\n                    if (value.isArc && (value[i] === 'wa' || value[i] === 'at')) {\n                        // Start and end X\n                        if (path[i + 5] === path[i + 7]) {\n                            path[i + 7] += value[i + 7] > value[i + 5] ? 1 : -1;\n                        }\n                        // Start and end Y\n                        if (path[i + 6] === path[i + 8]) {\n                            path[i + 8] += value[i + 8] > value[i + 6] ? 1 : -1;\n                        }\n                    }\n                }\n            }\n\n\n            // Loop up again to handle path shortcuts (#2132)\n            /*while (i++ < path.length) {\n                if (path[i] === 'H') { // horizontal line to\n                    path[i] = 'L';\n                    path.splice(i + 2, 0, path[i - 1]);\n                } else if (path[i] === 'V') { // vertical line to\n                    path[i] = 'L';\n                    path.splice(i + 1, 0, path[i - 2]);\n                }\n            }*/\n            return path.join(' ') || 'x';\n        },\n\n        /**\n         * Set the element's clipping to a predefined rectangle\n         *\n         * @param {String} id The id of the clip rectangle\n         */\n        clip: function (clipRect) {\n            var wrapper = this,\n                clipMembers,\n                cssRet;\n\n            if (clipRect) {\n                clipMembers = clipRect.members;\n                erase(clipMembers, wrapper); // Ensure unique list of elements (#1258)\n                clipMembers.push(wrapper);\n                wrapper.destroyClip = function () {\n                    erase(clipMembers, wrapper);\n                };\n                cssRet = clipRect.getCSS(wrapper);\n\n            } else {\n                if (wrapper.destroyClip) {\n                    wrapper.destroyClip();\n                }\n                cssRet = { clip: docMode8 ? 'inherit' : 'rect(auto)' }; // #1214\n            }\n\n            return wrapper.css(cssRet);\n\n        },\n\n        /**\n         * Set styles for the element\n         * @param {Object} styles\n         */\n        css: SVGElement.prototype.htmlCss,\n\n        /**\n         * Removes a child either by removeChild or move to garbageBin.\n         * Issue 490; in VML removeChild results in Orphaned nodes according to sIEve, discardElement does not.\n         */\n        safeRemoveChild: function (element) {\n            // discardElement will detach the node from its parent before attaching it\n            // to the garbage bin. Therefore it is important that the node is attached and have parent.\n            if (element.parentNode) {\n                discardElement(element);\n            }\n        },\n\n        /**\n         * Extend element.destroy by removing it from the clip members array\n         */\n        destroy: function () {\n            if (this.destroyClip) {\n                this.destroyClip();\n            }\n\n            return SVGElement.prototype.destroy.apply(this);\n        },\n\n        /**\n         * Add an event listener. VML override for normalizing event parameters.\n         * @param {String} eventType\n         * @param {Function} handler\n         */\n        on: function (eventType, handler) {\n            // simplest possible event model for internal use\n            this.element['on' + eventType] = function () {\n                var evt = win.event;\n                evt.target = evt.srcElement;\n                handler(evt);\n            };\n            return this;\n        },\n\n        /**\n         * In stacked columns, cut off the shadows so that they don't overlap\n         */\n        cutOffPath: function (path, length) {\n\n            var len;\n\n            path = path.split(/[ ,]/);\n            len = path.length;\n\n            if (len === 9 || len === 11) {\n                path[len - 4] = path[len - 2] = pInt(path[len - 2]) - 10 * length;\n            }\n            return path.join(' ');\n        },\n\n        /**\n         * Apply a drop shadow by copying elements and giving them different strokes\n         * @param {Boolean|Object} shadowOptions\n         */\n        shadow: function (shadowOptions, group, cutOff) {\n            var shadows = [],\n                i,\n                element = this.element,\n                renderer = this.renderer,\n                shadow,\n                elemStyle = element.style,\n                markup,\n                path = element.path,\n                strokeWidth,\n                modifiedPath,\n                shadowWidth,\n                shadowElementOpacity;\n\n            // some times empty paths are not strings\n            if (path && typeof path.value !== 'string') {\n                path = 'x';\n            }\n            modifiedPath = path;\n\n            if (shadowOptions) {\n                shadowWidth = pick(shadowOptions.width, 3);\n                shadowElementOpacity = (shadowOptions.opacity || 0.15) / shadowWidth;\n                for (i = 1; i <= 3; i++) {\n\n                    strokeWidth = (shadowWidth * 2) + 1 - (2 * i);\n\n                    // Cut off shadows for stacked column items\n                    if (cutOff) {\n                        modifiedPath = this.cutOffPath(path.value, strokeWidth + 0.5);\n                    }\n\n                    markup = ['<shape isShadow=\"true\" strokeweight=\"', strokeWidth,\n                        '\" filled=\"false\" path=\"', modifiedPath,\n                        '\" coordsize=\"10 10\" style=\"', element.style.cssText, '\" />'];\n\n                    shadow = createElement(renderer.prepVML(markup),\n                        null, {\n                            left: pInt(elemStyle.left) + pick(shadowOptions.offsetX, 1),\n                            top: pInt(elemStyle.top) + pick(shadowOptions.offsetY, 1)\n                        }\n                    );\n                    if (cutOff) {\n                        shadow.cutOff = strokeWidth + 1;\n                    }\n\n                    // apply the opacity\n                    markup = ['<stroke color=\"', shadowOptions.color || 'black', '\" opacity=\"', shadowElementOpacity * i, '\"/>'];\n                    createElement(renderer.prepVML(markup), null, null, shadow);\n\n\n                    // insert it\n                    if (group) {\n                        group.element.appendChild(shadow);\n                    } else {\n                        element.parentNode.insertBefore(shadow, element);\n                    }\n\n                    // record it\n                    shadows.push(shadow);\n\n                }\n\n                this.shadows = shadows;\n            }\n            return this;\n        },\n        updateShadows: noop, // Used in SVG only\n\n        setAttr: function (key, value) {\n            if (docMode8) { // IE8 setAttribute bug\n                this.element[key] = value;\n            } else {\n                this.element.setAttribute(key, value);\n            }\n        },\n        classSetter: function (value) {\n            // IE8 Standards mode has problems retrieving the className unless set like this\n            this.element.className = value;\n        },\n        dashstyleSetter: function (value, key, element) {\n            var strokeElem = element.getElementsByTagName('stroke')[0] ||\n                createElement(this.renderer.prepVML(['<stroke/>']), null, null, element);\n            strokeElem[key] = value || 'solid';\n            this[key] = value; /* because changing stroke-width will change the dash length\n                and cause an epileptic effect */\n        },\n        dSetter: function (value, key, element) {\n            var i,\n                shadows = this.shadows;\n            value = value || [];\n            this.d = value.join && value.join(' '); // used in getter for animation\n\n            element.path = value = this.pathToVML(value);\n\n            // update shadows\n            if (shadows) {\n                i = shadows.length;\n                while (i--) {\n                    shadows[i].path = shadows[i].cutOff ? this.cutOffPath(value, shadows[i].cutOff) : value;\n                }\n            }\n            this.setAttr(key, value);\n        },\n        fillSetter: function (value, key, element) {\n            var nodeName = element.nodeName;\n            if (nodeName === 'SPAN') { // text color\n                element.style.color = value;\n            } else if (nodeName !== 'IMG') { // #1336\n                element.filled = value !== NONE;\n                this.setAttr('fillcolor', this.renderer.color(value, element, key, this));\n            }\n        },\n        'fill-opacitySetter': function (value, key, element) {\n            createElement(\n                this.renderer.prepVML(['<', key.split('-')[0], ' opacity=\"', value, '\"/>']),\n                null,\n                null,\n                element\n            );\n        },\n        opacitySetter: noop, // Don't bother - animation is too slow and filters introduce artifacts\n        rotationSetter: function (value, key, element) {\n            var style = element.style;\n            this[key] = style[key] = value; // style is for #1873\n\n            // Correction for the 1x1 size of the shape container. Used in gauge needles.\n            style.left = -mathRound(mathSin(value * deg2rad) + 1) + PX;\n            style.top = mathRound(mathCos(value * deg2rad)) + PX;\n        },\n        strokeSetter: function (value, key, element) {\n            this.setAttr('strokecolor', this.renderer.color(value, element, key, this));\n        },\n        'stroke-widthSetter': function (value, key, element) {\n            element.stroked = !!value; // VML \"stroked\" attribute\n            this[key] = value; // used in getter, issue #113\n            if (isNumber(value)) {\n                value += PX;\n            }\n            this.setAttr('strokeweight', value);\n        },\n        titleSetter: function (value, key) {\n            this.setAttr(key, value);\n        },\n        visibilitySetter: function (value, key, element) {\n\n            // Handle inherited visibility\n            if (value === 'inherit') {\n                value = VISIBLE;\n            }\n\n            // Let the shadow follow the main element\n            if (this.shadows) {\n                each(this.shadows, function (shadow) {\n                    shadow.style[key] = value;\n                });\n            }\n\n            // Instead of toggling the visibility CSS property, move the div out of the viewport.\n            // This works around #61 and #586\n            if (element.nodeName === 'DIV') {\n                value = value === HIDDEN ? '-999em' : 0;\n\n                // In order to redraw, IE7 needs the div to be visible when tucked away\n                // outside the viewport. So the visibility is actually opposite of\n                // the expected value. This applies to the tooltip only.\n                if (!docMode8) {\n                    element.style[key] = value ? VISIBLE : HIDDEN;\n                }\n                key = 'top';\n            }\n            element.style[key] = value;\n        },\n        displaySetter: function (value, key, element) {\n            element.style[key] = value;\n        },\n        xSetter: function (value, key, element) {\n            this[key] = value; // used in getter\n\n            if (key === 'x') {\n                key = 'left';\n            } else if (key === 'y') {\n                key = 'top';\n            }/* else {\n                value = mathMax(0, value); // don't set width or height below zero (#311)\n            }*/\n\n            // clipping rectangle special\n            if (this.updateClipping) {\n                this[key] = value; // the key is now 'left' or 'top' for 'x' and 'y'\n                this.updateClipping();\n            } else {\n                // normal\n                element.style[key] = value;\n            }\n        },\n        zIndexSetter: function (value, key, element) {\n            element.style[key] = value;\n        }\n    };\n    VMLElement['stroke-opacitySetter'] = VMLElement['fill-opacitySetter'];\n\n    Highcharts.VMLElement = VMLElement = extendClass(SVGElement, VMLElement);\n\n    // Some shared setters\n    VMLElement.prototype.ySetter =\n        VMLElement.prototype.widthSetter =\n        VMLElement.prototype.heightSetter =\n        VMLElement.prototype.xSetter;\n\n\n    /**\n     * The VML renderer\n     */\n    var VMLRendererExtension = { // inherit SVGRenderer\n\n        Element: VMLElement,\n        isIE8: userAgent.indexOf('MSIE 8.0') > -1,\n\n\n        /**\n         * Initialize the VMLRenderer\n         * @param {Object} container\n         * @param {Number} width\n         * @param {Number} height\n         */\n        init: function (container, width, height, style) {\n            var renderer = this,\n                boxWrapper,\n                box,\n                css;\n\n            renderer.alignedObjects = [];\n\n            boxWrapper = renderer.createElement(DIV)\n                .css(extend(this.getStyle(style), { position: 'relative' }));\n            box = boxWrapper.element;\n            container.appendChild(boxWrapper.element);\n\n\n            // generate the containing box\n            renderer.isVML = true;\n            renderer.box = box;\n            renderer.boxWrapper = boxWrapper;\n            renderer.gradients = {};\n            renderer.cache = {}; // Cache for numerical bounding boxes\n            renderer.cacheKeys = [];\n            renderer.imgCount = 0;\n\n\n            renderer.setSize(width, height, false);\n\n            // The only way to make IE6 and IE7 print is to use a global namespace. However,\n            // with IE8 the only way to make the dynamic shapes visible in screen and print mode\n            // seems to be to add the xmlns attribute and the behaviour style inline.\n            if (!doc.namespaces.hcv) {\n\n                doc.namespaces.add('hcv', 'urn:schemas-microsoft-com:vml');\n\n                // Setup default CSS (#2153, #2368, #2384)\n                css = 'hcv\\\\:fill, hcv\\\\:path, hcv\\\\:shape, hcv\\\\:stroke' +\n                    '{ behavior:url(#default#VML); display: inline-block; } ';\n                try {\n                    doc.createStyleSheet().cssText = css;\n                } catch (e) {\n                    doc.styleSheets[0].cssText += css;\n                }\n\n            }\n        },\n\n\n        /**\n         * Detect whether the renderer is hidden. This happens when one of the parent elements\n         * has display: none\n         */\n        isHidden: function () {\n            return !this.box.offsetWidth;\n        },\n\n        /**\n         * Define a clipping rectangle. In VML it is accomplished by storing the values\n         * for setting the CSS style to all associated members.\n         *\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Number} width\n         * @param {Number} height\n         */\n        clipRect: function (x, y, width, height) {\n\n            // create a dummy element\n            var clipRect = this.createElement(),\n                isObj = isObject(x);\n\n            // mimic a rectangle with its style object for automatic updating in attr\n            return extend(clipRect, {\n                members: [],\n                count: 0,\n                left: (isObj ? x.x : x) + 1,\n                top: (isObj ? x.y : y) + 1,\n                width: (isObj ? x.width : width) - 1,\n                height: (isObj ? x.height : height) - 1,\n                getCSS: function (wrapper) {\n                    var element = wrapper.element,\n                        nodeName = element.nodeName,\n                        isShape = nodeName === 'shape',\n                        inverted = wrapper.inverted,\n                        rect = this,\n                        top = rect.top - (isShape ? element.offsetTop : 0),\n                        left = rect.left,\n                        right = left + rect.width,\n                        bottom = top + rect.height,\n                        ret = {\n                            clip: 'rect(' +\n                                mathRound(inverted ? left : top) + 'px,' +\n                                mathRound(inverted ? bottom : right) + 'px,' +\n                                mathRound(inverted ? right : bottom) + 'px,' +\n                                mathRound(inverted ? top : left) + 'px)'\n                        };\n\n                    // issue 74 workaround\n                    if (!inverted && docMode8 && nodeName === 'DIV') {\n                        extend(ret, {\n                            width: right + PX,\n                            height: bottom + PX\n                        });\n                    }\n                    return ret;\n                },\n\n                // used in attr and animation to update the clipping of all members\n                updateClipping: function () {\n                    each(clipRect.members, function (member) {\n                        if (member.element) { // Deleted series, like in stock/members/series-remove demo. Should be removed from members, but this will do.\n                            member.css(clipRect.getCSS(member));\n                        }\n                    });\n                }\n            });\n\n        },\n\n\n        /**\n         * Take a color and return it if it's a string, make it a gradient if it's a\n         * gradient configuration object, and apply opacity.\n         *\n         * @param {Object} color The color or config object\n         */\n        color: function (color, elem, prop, wrapper) {\n            var renderer = this,\n                colorObject,\n                regexRgba = /^rgba/,\n                markup,\n                fillType,\n                ret = NONE;\n\n            // Check for linear or radial gradient\n            if (color && color.linearGradient) {\n                fillType = 'gradient';\n            } else if (color && color.radialGradient) {\n                fillType = 'pattern';\n            }\n\n\n            if (fillType) {\n\n                var stopColor,\n                    stopOpacity,\n                    gradient = color.linearGradient || color.radialGradient,\n                    x1,\n                    y1,\n                    x2,\n                    y2,\n                    opacity1,\n                    opacity2,\n                    color1,\n                    color2,\n                    fillAttr = '',\n                    stops = color.stops,\n                    firstStop,\n                    lastStop,\n                    colors = [],\n                    addFillNode = function () {\n                        // Add the fill subnode. When colors attribute is used, the meanings of opacity and o:opacity2\n                        // are reversed.\n                        markup = ['<fill colors=\"' + colors.join(',') + '\" opacity=\"', opacity2, '\" o:opacity2=\"', opacity1,\n                            '\" type=\"', fillType, '\" ', fillAttr, 'focus=\"100%\" method=\"any\" />'];\n                        createElement(renderer.prepVML(markup), null, null, elem);\n                    };\n\n                // Extend from 0 to 1\n                firstStop = stops[0];\n                lastStop = stops[stops.length - 1];\n                if (firstStop[0] > 0) {\n                    stops.unshift([\n                        0,\n                        firstStop[1]\n                    ]);\n                }\n                if (lastStop[0] < 1) {\n                    stops.push([\n                        1,\n                        lastStop[1]\n                    ]);\n                }\n\n                // Compute the stops\n                each(stops, function (stop, i) {\n                    if (regexRgba.test(stop[1])) {\n                        colorObject = Color(stop[1]);\n                        stopColor = colorObject.get('rgb');\n                        stopOpacity = colorObject.get('a');\n                    } else {\n                        stopColor = stop[1];\n                        stopOpacity = 1;\n                    }\n\n                    // Build the color attribute\n                    colors.push((stop[0] * 100) + '% ' + stopColor);\n\n                    // Only start and end opacities are allowed, so we use the first and the last\n                    if (!i) {\n                        opacity1 = stopOpacity;\n                        color2 = stopColor;\n                    } else {\n                        opacity2 = stopOpacity;\n                        color1 = stopColor;\n                    }\n                });\n\n                // Apply the gradient to fills only.\n                if (prop === 'fill') {\n\n                    // Handle linear gradient angle\n                    if (fillType === 'gradient') {\n                        x1 = gradient.x1 || gradient[0] || 0;\n                        y1 = gradient.y1 || gradient[1] || 0;\n                        x2 = gradient.x2 || gradient[2] || 0;\n                        y2 = gradient.y2 || gradient[3] || 0;\n                        fillAttr = 'angle=\"' + (90  - math.atan(\n                            (y2 - y1) / // y vector\n                            (x2 - x1) // x vector\n                            ) * 180 / mathPI) + '\"';\n\n                        addFillNode();\n\n                    // Radial (circular) gradient\n                    } else {\n\n                        var r = gradient.r,\n                            sizex = r * 2,\n                            sizey = r * 2,\n                            cx = gradient.cx,\n                            cy = gradient.cy,\n                            radialReference = elem.radialReference,\n                            bBox,\n                            applyRadialGradient = function () {\n                                if (radialReference) {\n                                    bBox = wrapper.getBBox();\n                                    cx += (radialReference[0] - bBox.x) / bBox.width - 0.5;\n                                    cy += (radialReference[1] - bBox.y) / bBox.height - 0.5;\n                                    sizex *= radialReference[2] / bBox.width;\n                                    sizey *= radialReference[2] / bBox.height;\n                                }\n                                fillAttr = 'src=\"' + defaultOptions.global.VMLRadialGradientURL + '\" ' +\n                                    'size=\"' + sizex + ',' + sizey + '\" ' +\n                                    'origin=\"0.5,0.5\" ' +\n                                    'position=\"' + cx + ',' + cy + '\" ' +\n                                    'color2=\"' + color2 + '\" ';\n\n                                addFillNode();\n                            };\n\n                        // Apply radial gradient\n                        if (wrapper.added) {\n                            applyRadialGradient();\n                        } else {\n                            // We need to know the bounding box to get the size and position right\n                            wrapper.onAdd = applyRadialGradient;\n                        }\n\n                        // The fill element's color attribute is broken in IE8 standards mode, so we\n                        // need to set the parent shape's fillcolor attribute instead.\n                        ret = color1;\n                    }\n\n                // Gradients are not supported for VML stroke, return the first color. #722.\n                } else {\n                    ret = stopColor;\n                }\n\n            // If the color is an rgba color, split it and add a fill node\n            // to hold the opacity component\n            } else if (regexRgba.test(color) && elem.tagName !== 'IMG') {\n\n                colorObject = Color(color);\n\n                wrapper[prop + '-opacitySetter'](colorObject.get('a'), prop, elem);\n\n                ret = colorObject.get('rgb');\n\n\n            } else {\n                var propNodes = elem.getElementsByTagName(prop); // 'stroke' or 'fill' node\n                if (propNodes.length) {\n                    propNodes[0].opacity = 1;\n                    propNodes[0].type = 'solid';\n                }\n                ret = color;\n            }\n\n            return ret;\n        },\n\n        /**\n         * Take a VML string and prepare it for either IE8 or IE6/IE7.\n         * @param {Array} markup A string array of the VML markup to prepare\n         */\n        prepVML: function (markup) {\n            var vmlStyle = 'display:inline-block;behavior:url(#default#VML);',\n                isIE8 = this.isIE8;\n\n            markup = markup.join('');\n\n            if (isIE8) { // add xmlns and style inline\n                markup = markup.replace('/>', ' xmlns=\"urn:schemas-microsoft-com:vml\" />');\n                if (markup.indexOf('style=\"') === -1) {\n                    markup = markup.replace('/>', ' style=\"' + vmlStyle + '\" />');\n                } else {\n                    markup = markup.replace('style=\"', 'style=\"' + vmlStyle);\n                }\n\n            } else { // add namespace\n                markup = markup.replace('<', '<hcv:');\n            }\n\n            return markup;\n        },\n\n        /**\n         * Create rotated and aligned text\n         * @param {String} str\n         * @param {Number} x\n         * @param {Number} y\n         */\n        text: SVGRenderer.prototype.html,\n\n        /**\n         * Create and return a path element\n         * @param {Array} path\n         */\n        path: function (path) {\n            var attr = {\n                // subpixel precision down to 0.1 (width and height = 1px)\n                coordsize: '10 10'\n            };\n            if (isArray(path)) {\n                attr.d = path;\n            } else if (isObject(path)) { // attributes\n                extend(attr, path);\n            }\n            // create the shape\n            return this.createElement('shape').attr(attr);\n        },\n\n        /**\n         * Create and return a circle element. In VML circles are implemented as\n         * shapes, which is faster than v:oval\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Number} r\n         */\n        circle: function (x, y, r) {\n            var circle = this.symbol('circle');\n            if (isObject(x)) {\n                r = x.r;\n                y = x.y;\n                x = x.x;\n            }\n            circle.isCircle = true; // Causes x and y to mean center (#1682)\n            circle.r = r;\n            return circle.attr({ x: x, y: y });\n        },\n\n        /**\n         * Create a group using an outer div and an inner v:group to allow rotating\n         * and flipping. A simple v:group would have problems with positioning\n         * child HTML elements and CSS clip.\n         *\n         * @param {String} name The name of the group\n         */\n        g: function (name) {\n            var wrapper,\n                attribs;\n\n            // set the class name\n            if (name) {\n                attribs = { 'className': PREFIX + name, 'class': PREFIX + name };\n            }\n\n            // the div to hold HTML and clipping\n            wrapper = this.createElement(DIV).attr(attribs);\n\n            return wrapper;\n        },\n\n        /**\n         * VML override to create a regular HTML image\n         * @param {String} src\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Number} width\n         * @param {Number} height\n         */\n        image: function (src, x, y, width, height) {\n            var obj = this.createElement('img')\n                .attr({ src: src });\n\n            if (arguments.length > 1) {\n                obj.attr({\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }\n            return obj;\n        },\n\n        /**\n         * For rectangles, VML uses a shape for rect to overcome bugs and rotation problems\n         */\n        createElement: function (nodeName) {\n            return nodeName === 'rect' ? this.symbol(nodeName) : SVGRenderer.prototype.createElement.call(this, nodeName);\n        },\n\n        /**\n         * In the VML renderer, each child of an inverted div (group) is inverted\n         * @param {Object} element\n         * @param {Object} parentNode\n         */\n        invertChild: function (element, parentNode) {\n            var ren = this,\n                parentStyle = parentNode.style,\n                imgStyle = element.tagName === 'IMG' && element.style; // #1111\n\n            css(element, {\n                flip: 'x',\n                left: pInt(parentStyle.width) - (imgStyle ? pInt(imgStyle.top) : 1),\n                top: pInt(parentStyle.height) - (imgStyle ? pInt(imgStyle.left) : 1),\n                rotation: -90\n            });\n\n            // Recursively invert child elements, needed for nested composite shapes like box plots and error bars. #1680, #1806.\n            each(element.childNodes, function (child) {\n                ren.invertChild(child, element);\n            });\n        },\n\n        /**\n         * Symbol definitions that override the parent SVG renderer's symbols\n         *\n         */\n        symbols: {\n            // VML specific arc function\n            arc: function (x, y, w, h, options) {\n                var start = options.start,\n                    end = options.end,\n                    radius = options.r || w || h,\n                    innerRadius = options.innerR,\n                    cosStart = mathCos(start),\n                    sinStart = mathSin(start),\n                    cosEnd = mathCos(end),\n                    sinEnd = mathSin(end),\n                    ret;\n\n                if (end - start === 0) { // no angle, don't show it.\n                    return ['x'];\n                }\n\n                ret = [\n                    'wa', // clockwise arc to\n                    x - radius, // left\n                    y - radius, // top\n                    x + radius, // right\n                    y + radius, // bottom\n                    x + radius * cosStart, // start x\n                    y + radius * sinStart, // start y\n                    x + radius * cosEnd, // end x\n                    y + radius * sinEnd  // end y\n                ];\n\n                if (options.open && !innerRadius) {\n                    ret.push(\n                        'e',\n                        M,\n                        x, // - innerRadius,\n                        y// - innerRadius\n                    );\n                }\n\n                ret.push(\n                    'at', // anti clockwise arc to\n                    x - innerRadius, // left\n                    y - innerRadius, // top\n                    x + innerRadius, // right\n                    y + innerRadius, // bottom\n                    x + innerRadius * cosEnd, // start x\n                    y + innerRadius * sinEnd, // start y\n                    x + innerRadius * cosStart, // end x\n                    y + innerRadius * sinStart, // end y\n                    'x', // finish path\n                    'e' // close\n                );\n\n                ret.isArc = true;\n                return ret;\n\n            },\n            // Add circle symbol path. This performs significantly faster than v:oval.\n            circle: function (x, y, w, h, wrapper) {\n\n                if (wrapper) {\n                    w = h = 2 * wrapper.r;\n                }\n\n                // Center correction, #1682\n                if (wrapper && wrapper.isCircle) {\n                    x -= w / 2;\n                    y -= h / 2;\n                }\n\n                // Return the path\n                return [\n                    'wa', // clockwisearcto\n                    x, // left\n                    y, // top\n                    x + w, // right\n                    y + h, // bottom\n                    x + w, // start x\n                    y + h / 2,     // start y\n                    x + w, // end x\n                    y + h / 2,     // end y\n                    //'x', // finish path\n                    'e' // close\n                ];\n            },\n            /**\n             * Add rectangle symbol path which eases rotation and omits arcsize problems\n             * compared to the built-in VML roundrect shape. When borders are not rounded,\n             * use the simpler square path, else use the callout path without the arrow.\n             */\n            rect: function (x, y, w, h, options) {\n                return SVGRenderer.prototype.symbols[\n                    !defined(options) || !options.r ? 'square' : 'callout'\n                ].call(0, x, y, w, h, options);\n            }\n        }\n    };\n    Highcharts.VMLRenderer = VMLRenderer = function () {\n        this.init.apply(this, arguments);\n    };\n    VMLRenderer.prototype = merge(SVGRenderer.prototype, VMLRendererExtension);\n\n        // general renderer\n        Renderer = VMLRenderer;\n    }\n\n    // This method is used with exporting in old IE, when emulating SVG (see #2314)\n    SVGRenderer.prototype.measureSpanWidth = function (text, styles) {\n        var measuringSpan = doc.createElement('span'),\n            offsetWidth,\n            textNode = doc.createTextNode(text);\n\n        measuringSpan.appendChild(textNode);\n        css(measuringSpan, styles);\n        this.box.appendChild(measuringSpan);\n        offsetWidth = measuringSpan.offsetWidth;\n        discardElement(measuringSpan); // #2463\n        return offsetWidth;\n    };\n\n\n    /* ****************************************************************************\n     *                                                                            *\n     * END OF INTERNET EXPLORER <= 8 SPECIFIC CODE                                *\n     *                                                                            *\n     *****************************************************************************/\n    /* ****************************************************************************\n     *                                                                            *\n     * START OF ANDROID < 3 SPECIFIC CODE. THIS CAN BE REMOVED IF YOU'RE NOT      *\n     * TARGETING THAT SYSTEM.                                                     *\n     *                                                                            *\n     *****************************************************************************/\n    var CanVGRenderer,\n        CanVGController;\n\n    /**\n     * Downloads a script and executes a callback when done.\n     * @param {String} scriptLocation\n     * @param {Function} callback\n     */\n    function getScript(scriptLocation, callback) {\n        var head = doc.getElementsByTagName('head')[0],\n            script = doc.createElement('script');\n\n        script.type = 'text/javascript';\n        script.src = scriptLocation;\n        script.onload = callback;\n\n        head.appendChild(script);\n    }\n\n    if (useCanVG) {\n        /**\n         * The CanVGRenderer is empty from start to keep the source footprint small.\n         * When requested, the CanVGController downloads the rest of the source packaged\n         * together with the canvg library.\n         */\n        Highcharts.CanVGRenderer = CanVGRenderer = function () {\n            // Override the global SVG namespace to fake SVG/HTML that accepts CSS\n            SVG_NS = 'http://www.w3.org/1999/xhtml';\n        };\n\n        /**\n         * Start with an empty symbols object. This is needed when exporting is used (exporting.src.js will add a few symbols), but\n         * the implementation from SvgRenderer will not be merged in until first render.\n         */\n        CanVGRenderer.prototype.symbols = {};\n\n        /**\n         * Handles on demand download of canvg rendering support.\n         */\n        CanVGController = (function () {\n            // List of renderering calls\n            var deferredRenderCalls = [];\n\n            /**\n             * When downloaded, we are ready to draw deferred charts.\n             */\n            function drawDeferred() {\n                var callLength = deferredRenderCalls.length,\n                    callIndex;\n\n                // Draw all pending render calls\n                for (callIndex = 0; callIndex < callLength; callIndex++) {\n                    deferredRenderCalls[callIndex]();\n                }\n                // Clear the list\n                deferredRenderCalls = [];\n            }\n\n            return {\n                push: function (func, scriptLocation) {\n                    // Only get the script once\n                    if (deferredRenderCalls.length === 0) {\n                        getScript(scriptLocation, drawDeferred);\n                    }\n                    // Register render call\n                    deferredRenderCalls.push(func);\n                }\n            };\n        }());\n\n        Renderer = CanVGRenderer;\n    } // end CanVGRenderer\n\n    /* ****************************************************************************\n     *                                                                            *\n     * END OF ANDROID < 3 SPECIFIC CODE                                           *\n     *                                                                            *\n     *****************************************************************************/\n\n    /**\n     * The Tick class\n     */\n    function Tick(axis, pos, type, noLabel) {\n        this.axis = axis;\n        this.pos = pos;\n        this.type = type || '';\n        this.isNew = true;\n\n        if (!type && !noLabel) {\n            this.addLabel();\n        }\n    }\n\n    Tick.prototype = {\n        /**\n         * Write the tick label\n         */\n        addLabel: function () {\n            var tick = this,\n                axis = tick.axis,\n                options = axis.options,\n                chart = axis.chart,\n                categories = axis.categories,\n                names = axis.names,\n                pos = tick.pos,\n                labelOptions = options.labels,\n                str,\n                tickPositions = axis.tickPositions,\n                isFirst = pos === tickPositions[0],\n                isLast = pos === tickPositions[tickPositions.length - 1],\n                value = categories ?\n                    pick(categories[pos], names[pos], pos) :\n                    pos,\n                label = tick.label,\n                tickPositionInfo = tickPositions.info,\n                dateTimeLabelFormat;\n\n            // Set the datetime label format. If a higher rank is set for this position, use that. If not,\n            // use the general format.\n            if (axis.isDatetimeAxis && tickPositionInfo) {\n                dateTimeLabelFormat = options.dateTimeLabelFormats[tickPositionInfo.higherRanks[pos] || tickPositionInfo.unitName];\n            }\n            // set properties for access in render method\n            tick.isFirst = isFirst;\n            tick.isLast = isLast;\n\n            // get the string\n            str = axis.labelFormatter.call({\n                axis: axis,\n                chart: chart,\n                isFirst: isFirst,\n                isLast: isLast,\n                dateTimeLabelFormat: dateTimeLabelFormat,\n                value: axis.isLog ? correctFloat(axis.lin2log(value)) : value\n            });\n\n            // prepare CSS\n            //css = width && { width: mathMax(1, mathRound(width - 2 * (labelOptions.padding || 10))) + PX };\n\n            // first call\n            if (!defined(label)) {\n\n                tick.label = label =\n                    defined(str) && labelOptions.enabled ?\n                        chart.renderer.text(\n                                str,\n                                0,\n                                0,\n                                labelOptions.useHTML\n                            )\n                            //.attr(attr)\n                            // without position absolute, IE export sometimes is wrong\n                            .css(merge(labelOptions.style))\n                            .add(axis.labelGroup) :\n                        null;\n                tick.labelLength = label && label.getBBox().width; // Un-rotated length\n                tick.rotation = 0; // Base value to detect change for new calls to getBBox\n\n            // update\n            } else if (label) {\n                label.attr({ text: str });\n            }\n        },\n\n        /**\n         * Get the offset height or width of the label\n         */\n        getLabelSize: function () {\n            return this.label ?\n                this.label.getBBox()[this.axis.horiz ? 'height' : 'width'] :\n                0;\n        },\n\n        /**\n         * Handle the label overflow by adjusting the labels to the left and right edge, or\n         * hide them if they collide into the neighbour label.\n         */\n        handleOverflow: function (xy) {\n            var axis = this.axis,\n                pxPos = xy.x,\n                chartWidth = axis.chart.chartWidth,\n                spacing = axis.chart.spacing,\n                leftBound = pick(axis.labelLeft, mathMin(axis.pos, spacing[3])),\n                rightBound = pick(axis.labelRight, mathMax(axis.pos + axis.len, chartWidth - spacing[1])),\n                label = this.label,\n                rotation = this.rotation,\n                factor = { left: 0, center: 0.5, right: 1 }[axis.labelAlign],\n                labelWidth = label.getBBox().width,\n                slotWidth = axis.getSlotWidth(),\n                modifiedSlotWidth = slotWidth,\n                xCorrection = factor,\n                goRight = 1,\n                leftPos,\n                rightPos,\n                textWidth,\n                css = {};\n\n            // Check if the label overshoots the chart spacing box. If it does, move it.\n            // If it now overshoots the slotWidth, add ellipsis.\n            if (!rotation) {\n                leftPos = pxPos - factor * labelWidth;\n                rightPos = pxPos + (1 - factor) * labelWidth;\n\n                if (leftPos < leftBound) {\n                    modifiedSlotWidth = xy.x + modifiedSlotWidth * (1 - factor) - leftBound;\n                } else if (rightPos > rightBound) {\n                    modifiedSlotWidth = rightBound - xy.x + modifiedSlotWidth * factor;\n                    goRight = -1;\n                }\n\n                modifiedSlotWidth = mathMin(slotWidth, modifiedSlotWidth); // #4177\n                if (modifiedSlotWidth < slotWidth && axis.labelAlign === 'center') {\n                    xy.x += goRight * (slotWidth - modifiedSlotWidth - xCorrection * (slotWidth - mathMin(labelWidth, modifiedSlotWidth)));\n                }\n                // If the label width exceeds the available space, set a text width to be\n                // picked up below. Also, if a width has been set before, we need to set a new\n                // one because the reported labelWidth will be limited by the box (#3938).\n                if (labelWidth > modifiedSlotWidth || (axis.autoRotation && label.styles.width)) {\n                    textWidth = modifiedSlotWidth;\n                }\n\n            // Add ellipsis to prevent rotated labels to be clipped against the edge of the chart\n            } else if (rotation < 0 && pxPos - factor * labelWidth < leftBound) {\n                textWidth = mathRound(pxPos / mathCos(rotation * deg2rad) - leftBound);\n            } else if (rotation > 0 && pxPos + factor * labelWidth > rightBound) {\n                textWidth = mathRound((chartWidth - pxPos) / mathCos(rotation * deg2rad));\n            }\n\n            if (textWidth) {\n                css.width = textWidth;\n                if (!axis.options.labels.style.textOverflow) {\n                    css.textOverflow = 'ellipsis';\n                }\n                label.css(css);\n            }\n        },\n\n        /**\n         * Get the x and y position for ticks and labels\n         */\n        getPosition: function (horiz, pos, tickmarkOffset, old) {\n            var axis = this.axis,\n                chart = axis.chart,\n                cHeight = (old && chart.oldChartHeight) || chart.chartHeight;\n\n            return {\n                x: horiz ?\n                    axis.translate(pos + tickmarkOffset, null, null, old) + axis.transB :\n                    axis.left + axis.offset + (axis.opposite ? ((old && chart.oldChartWidth) || chart.chartWidth) - axis.right - axis.left : 0),\n\n                y: horiz ?\n                    cHeight - axis.bottom + axis.offset - (axis.opposite ? axis.height : 0) :\n                    cHeight - axis.translate(pos + tickmarkOffset, null, null, old) - axis.transB\n            };\n\n        },\n\n        /**\n         * Get the x, y position of the tick label\n         */\n        getLabelPosition: function (x, y, label, horiz, labelOptions, tickmarkOffset, index, step) {\n            var axis = this.axis,\n                transA = axis.transA,\n                reversed = axis.reversed,\n                staggerLines = axis.staggerLines,\n                rotCorr = axis.tickRotCorr || { x: 0, y: 0 },\n                yOffset = labelOptions.y,\n                line;\n\n            if (!defined(yOffset)) {\n                if (axis.side === 0) {\n                    yOffset = label.rotation ? -8 : -label.getBBox().height;\n                } else if (axis.side === 2) {\n                    yOffset = rotCorr.y + 8;\n                } else {\n                    // #3140, #3140\n                    yOffset = mathCos(label.rotation * deg2rad) * (rotCorr.y - label.getBBox(false, 0).height / 2);\n                }\n            }\n\n            x = x + labelOptions.x + rotCorr.x - (tickmarkOffset && horiz ?\n                tickmarkOffset * transA * (reversed ? -1 : 1) : 0);\n            y = y + yOffset - (tickmarkOffset && !horiz ?\n                tickmarkOffset * transA * (reversed ? 1 : -1) : 0);\n\n            // Correct for staggered labels\n            if (staggerLines) {\n                line = (index / (step || 1) % staggerLines);\n                if (axis.opposite) {\n                    line = staggerLines - line - 1;\n                }\n                y += line * (axis.labelOffset / staggerLines);\n            }\n\n            return {\n                x: x,\n                y: mathRound(y)\n            };\n        },\n\n        /**\n         * Extendible method to return the path of the marker\n         */\n        getMarkPath: function (x, y, tickLength, tickWidth, horiz, renderer) {\n            return renderer.crispLine([\n                M,\n                x,\n                y,\n                L,\n                x + (horiz ? 0 : -tickLength),\n                y + (horiz ? tickLength : 0)\n            ], tickWidth);\n        },\n\n        /**\n         * Put everything in place\n         *\n         * @param index {Number}\n         * @param old {Boolean} Use old coordinates to prepare an animation into new position\n         */\n        render: function (index, old, opacity) {\n            var tick = this,\n                axis = tick.axis,\n                options = axis.options,\n                chart = axis.chart,\n                renderer = chart.renderer,\n                horiz = axis.horiz,\n                type = tick.type,\n                label = tick.label,\n                pos = tick.pos,\n                labelOptions = options.labels,\n                gridLine = tick.gridLine,\n                gridPrefix = type ? type + 'Grid' : 'grid',\n                tickPrefix = type ? type + 'Tick' : 'tick',\n                gridLineWidth = options[gridPrefix + 'LineWidth'],\n                gridLineColor = options[gridPrefix + 'LineColor'],\n                dashStyle = options[gridPrefix + 'LineDashStyle'],\n                tickSize = axis.tickSize(tickPrefix),\n                tickColor = options[tickPrefix + 'Color'],\n                gridLinePath,\n                mark = tick.mark,\n                markPath,\n                step = /*axis.labelStep || */labelOptions.step,\n                attribs,\n                show = true,\n                tickmarkOffset = axis.tickmarkOffset,\n                xy = tick.getPosition(horiz, pos, tickmarkOffset, old),\n                x = xy.x,\n                y = xy.y,\n                reverseCrisp = ((horiz && x === axis.pos + axis.len) || (!horiz && y === axis.pos)) ? -1 : 1; // #1480, #1687\n\n            opacity = pick(opacity, 1);\n            this.isActive = true;\n\n            // create the grid line\n            if (gridLineWidth) {\n                gridLinePath = axis.getPlotLinePath(pos + tickmarkOffset, gridLineWidth * reverseCrisp, old, true);\n\n                if (gridLine === UNDEFINED) {\n                    attribs = {\n                        stroke: gridLineColor,\n                        'stroke-width': gridLineWidth\n                    };\n                    if (dashStyle) {\n                        attribs.dashstyle = dashStyle;\n                    }\n                    if (!type) {\n                        attribs.zIndex = 1;\n                    }\n                    if (old) {\n                        attribs.opacity = 0;\n                    }\n                    tick.gridLine = gridLine =\n                        gridLineWidth ?\n                            renderer.path(gridLinePath)\n                                .attr(attribs).add(axis.gridGroup) :\n                            null;\n                }\n\n                // If the parameter 'old' is set, the current call will be followed\n                // by another call, therefore do not do any animations this time\n                if (!old && gridLine && gridLinePath) {\n                    gridLine[tick.isNew ? 'attr' : 'animate']({\n                        d: gridLinePath,\n                        opacity: opacity\n                    });\n                }\n            }\n\n            // create the tick mark\n            if (tickSize) {\n                if (axis.opposite) {\n                    tickSize[0] = -tickSize[0];\n                }\n                markPath = tick.getMarkPath(x, y, tickSize[0], tickSize[1] * reverseCrisp, horiz, renderer);\n                if (mark) { // updating\n                    mark.animate({\n                        d: markPath,\n                        opacity: opacity\n                    });\n                } else { // first time\n                    tick.mark = renderer.path(\n                        markPath\n                    ).attr({\n                        stroke: tickColor,\n                        'stroke-width': tickSize[1],\n                        opacity: opacity\n                    }).add(axis.axisGroup);\n                }\n            }\n\n            // the label is created on init - now move it into place\n            if (label && isNumber(x)) {\n                label.xy = xy = tick.getLabelPosition(x, y, label, horiz, labelOptions, tickmarkOffset, index, step);\n\n                // Apply show first and show last. If the tick is both first and last, it is\n                // a single centered tick, in which case we show the label anyway (#2100).\n                if ((tick.isFirst && !tick.isLast && !pick(options.showFirstLabel, 1)) ||\n                        (tick.isLast && !tick.isFirst && !pick(options.showLastLabel, 1))) {\n                    show = false;\n\n                // Handle label overflow and show or hide accordingly\n                } else if (horiz && !axis.isRadial && !labelOptions.step && !labelOptions.rotation && !old && opacity !== 0) {\n                    tick.handleOverflow(xy);\n                }\n\n                // apply step\n                if (step && index % step) {\n                    // show those indices dividable by step\n                    show = false;\n                }\n\n                // Set the new position, and show or hide\n                if (show && isNumber(xy.y)) {\n                    xy.opacity = opacity;\n                    label[tick.isNew ? 'attr' : 'animate'](xy);\n                } else {\n                    stop(label); // #5332\n                    label.attr('y', -9999); // #1338\n                }\n                tick.isNew = false;\n            }\n        },\n\n        /**\n         * Destructor for the tick prototype\n         */\n        destroy: function () {\n            destroyObjectProperties(this, this.axis);\n        }\n    };\n\n    /**\n     * The object wrapper for plot lines and plot bands\n     * @param {Object} options\n     */\n    Highcharts.PlotLineOrBand = function (axis, options) {\n        this.axis = axis;\n\n        if (options) {\n            this.options = options;\n            this.id = options.id;\n        }\n    };\n\n    Highcharts.PlotLineOrBand.prototype = {\n\n        /**\n         * Render the plot line or plot band. If it is already existing,\n         * move it.\n         */\n        render: function () {\n            var plotLine = this,\n                axis = plotLine.axis,\n                horiz = axis.horiz,\n                options = plotLine.options,\n                optionsLabel = options.label,\n                label = plotLine.label,\n                width = options.width,\n                to = options.to,\n                from = options.from,\n                isBand = defined(from) && defined(to),\n                value = options.value,\n                dashStyle = options.dashStyle,\n                svgElem = plotLine.svgElem,\n                path = [],\n                addEvent,\n                eventType,\n                color = options.color,\n                zIndex = pick(options.zIndex, 0),\n                events = options.events,\n                attribs = {},\n                renderer = axis.chart.renderer,\n                log2lin = axis.log2lin;\n\n            // logarithmic conversion\n            if (axis.isLog) {\n                from = log2lin(from);\n                to = log2lin(to);\n                value = log2lin(value);\n            }\n\n            // plot line\n            if (width) {\n                path = axis.getPlotLinePath(value, width);\n                attribs = {\n                    stroke: color,\n                    'stroke-width': width\n                };\n                if (dashStyle) {\n                    attribs.dashstyle = dashStyle;\n                }\n            } else if (isBand) { // plot band\n\n                path = axis.getPlotBandPath(from, to, options);\n                if (color) {\n                    attribs.fill = color;\n                }\n                if (options.borderWidth) {\n                    attribs.stroke = options.borderColor;\n                    attribs['stroke-width'] = options.borderWidth;\n                }\n            } else {\n                return;\n            }\n            // zIndex\n            attribs.zIndex = zIndex;\n\n            // common for lines and bands\n            if (svgElem) {\n                if (path) {\n                    svgElem.show();\n                    svgElem.animate({ d: path });\n                } else {\n                    svgElem.hide();\n                    if (label) {\n                        plotLine.label = label = label.destroy();\n                    }\n                }\n            } else if (path && path.length) {\n                plotLine.svgElem = svgElem = renderer.path(path)\n                    .attr(attribs).add();\n\n                // events\n                if (events) {\n                    addEvent = function (eventType) {\n                        svgElem.on(eventType, function (e) {\n                            events[eventType].apply(plotLine, [e]);\n                        });\n                    };\n                    for (eventType in events) {\n                        addEvent(eventType);\n                    }\n                }\n            }\n\n            // the plot band/line label\n            if (optionsLabel && defined(optionsLabel.text) && path && path.length && \n                    axis.width > 0 && axis.height > 0 && !path.flat) {\n                // apply defaults\n                optionsLabel = merge({\n                    align: horiz && isBand && 'center',\n                    x: horiz ? !isBand && 4 : 10,\n                    verticalAlign: !horiz && isBand && 'middle',\n                    y: horiz ? isBand ? 16 : 10 : isBand ? 6 : -4,\n                    rotation: horiz && !isBand && 90\n                }, optionsLabel);\n\n                this.renderLabel(optionsLabel, path, isBand, zIndex);\n\n            } else if (label) { // move out of sight\n                label.hide();\n            }\n\n            // chainable\n            return plotLine;\n        },\n\n        /**\n         * Render and align label for plot line or band.\n         */\n        renderLabel: function (optionsLabel, path, isBand, zIndex) {\n            var plotLine = this,\n                label = plotLine.label,\n                renderer = plotLine.axis.chart.renderer,\n                attribs,\n                xs,\n                ys,\n                x,\n                y;\n\n            // add the SVG element\n            if (!label) {\n                attribs = {\n                    align: optionsLabel.textAlign || optionsLabel.align,\n                    rotation: optionsLabel.rotation\n                };\n            \n                attribs.zIndex = zIndex;\n            \n                plotLine.label = label = renderer.text(\n                        optionsLabel.text,\n                        0,\n                        0,\n                        optionsLabel.useHTML\n                    )\n                    .attr(attribs)\n                    .css(optionsLabel.style)\n                    .add();\n            }\n\n            // get the bounding box and align the label\n            // #3000 changed to better handle choice between plotband or plotline\n            xs = [path[1], path[4], (isBand ? path[6] : path[1])];\n            ys = [path[2], path[5], (isBand ? path[7] : path[2])];\n            x = arrayMin(xs);\n            y = arrayMin(ys);\n\n            label.align(optionsLabel, false, {\n                x: x,\n                y: y,\n                width: arrayMax(xs) - x,\n                height: arrayMax(ys) - y\n            });\n            label.show();\n        },\n\n        /**\n         * Remove the plot line or band\n         */\n        destroy: function () {\n            // remove it from the lookup\n            erase(this.axis.plotLinesAndBands, this);\n\n            delete this.axis;\n            destroyObjectProperties(this);\n        }\n    };\n\n    /**\n     * Object with members for extending the Axis prototype\n     */\n\n    AxisPlotLineOrBandExtension = {\n\n        /**\n         * Create the path for a plot band\n         */\n        getPlotBandPath: function (from, to) {\n            var toPath = this.getPlotLinePath(to, null, null, true),\n                path = this.getPlotLinePath(from, null, null, true);\n\n            if (path && toPath) {\n\n                // Flat paths don't need labels (#3836)\n                path.flat = path.toString() === toPath.toString();\n\n                path.push(\n                    toPath[4],\n                    toPath[5],\n                    toPath[1],\n                    toPath[2]\n                );\n            } else { // outside the axis area\n                path = null;\n            }\n\n            return path;\n        },\n\n        addPlotBand: function (options) {\n            return this.addPlotBandOrLine(options, 'plotBands');\n        },\n\n        addPlotLine: function (options) {\n            return this.addPlotBandOrLine(options, 'plotLines');\n        },\n\n        /**\n         * Add a plot band or plot line after render time\n         *\n         * @param options {Object} The plotBand or plotLine configuration object\n         */\n        addPlotBandOrLine: function (options, coll) {\n            var obj = new Highcharts.PlotLineOrBand(this, options).render(),\n                userOptions = this.userOptions;\n\n            if (obj) { // #2189\n                // Add it to the user options for exporting and Axis.update\n                if (coll) {\n                    userOptions[coll] = userOptions[coll] || [];\n                    userOptions[coll].push(options);\n                }\n                this.plotLinesAndBands.push(obj);\n            }\n\n            return obj;\n        },\n\n        /**\n         * Remove a plot band or plot line from the chart by id\n         * @param {Object} id\n         */\n        removePlotBandOrLine: function (id) {\n            var plotLinesAndBands = this.plotLinesAndBands,\n                options = this.options,\n                userOptions = this.userOptions,\n                i = plotLinesAndBands.length;\n            while (i--) {\n                if (plotLinesAndBands[i].id === id) {\n                    plotLinesAndBands[i].destroy();\n                }\n            }\n            each([options.plotLines || [], userOptions.plotLines || [], options.plotBands || [], userOptions.plotBands || []], function (arr) {\n                i = arr.length;\n                while (i--) {\n                    if (arr[i].id === id) {\n                        erase(arr, arr[i]);\n                    }\n                }\n            });\n        }\n    };\n\n    /**\n     * Create a new axis object\n     * @param {Object} chart\n     * @param {Object} options\n     */\n    var Axis = Highcharts.Axis = function () {\n        this.init.apply(this, arguments);\n    };\n\n    Axis.prototype = {\n\n        /**\n         * Default options for the X axis - the Y axis has extended defaults\n         */\n        defaultOptions: {\n            // allowDecimals: null,\n            // alternateGridColor: null,\n            // categories: [],\n            dateTimeLabelFormats: {\n                millisecond: '%H:%M:%S.%L',\n                second: '%H:%M:%S',\n                minute: '%H:%M',\n                hour: '%H:%M',\n                day: '%e. %b',\n                week: '%e. %b',\n                month: '%b \\'%y',\n                year: '%Y'\n            },\n            endOnTick: false,\n            gridLineColor: '#D8D8D8',\n            // gridLineDashStyle: 'solid',\n            // gridLineWidth: 0,\n            // reversed: false,\n\n            labels: {\n                enabled: true,\n                // rotation: 0,\n                // align: 'center',\n                // step: null,\n                style: {\n                    color: '#606060',\n                    cursor: 'default',\n                    fontSize: '11px'\n                },\n                x: 0\n                //y: undefined\n                /*formatter: function () {\n                    return this.value;\n                },*/\n            },\n            lineColor: '#C0D0E0',\n            lineWidth: 1,\n            //linkedTo: null,\n            //max: undefined,\n            //min: undefined,\n            minPadding: 0.01,\n            maxPadding: 0.01,\n            //minRange: null,\n            minorGridLineColor: '#E0E0E0',\n            // minorGridLineDashStyle: null,\n            minorGridLineWidth: 1,\n            minorTickColor: '#A0A0A0',\n            //minorTickInterval: null,\n            minorTickLength: 2,\n            minorTickPosition: 'outside', // inside or outside\n            //minorTickWidth: 0,\n            //opposite: false,\n            //offset: 0,\n            //plotBands: [{\n            //    events: {},\n            //    zIndex: 1,\n            //    labels: { align, x, verticalAlign, y, style, rotation, textAlign }\n            //}],\n            //plotLines: [{\n            //    events: {}\n            //  dashStyle: {}\n            //    zIndex:\n            //    labels: { align, x, verticalAlign, y, style, rotation, textAlign }\n            //}],\n            //reversed: false,\n            // showFirstLabel: true,\n            // showLastLabel: true,\n            startOfWeek: 1,\n            startOnTick: false,\n            tickColor: '#C0D0E0',\n            //tickInterval: null,\n            tickLength: 10,\n            tickmarkPlacement: 'between', // on or between\n            tickPixelInterval: 100,\n            tickPosition: 'outside',\n            //tickWidth: 1,\n            title: {\n                //text: null,\n                align: 'middle', // low, middle or high\n                //margin: 0 for horizontal, 10 for vertical axes,\n                //rotation: 0,\n                //side: 'outside',\n                style: {\n                    color: '#707070'\n                }\n                //x: 0,\n                //y: 0\n            },\n            type: 'linear' // linear, logarithmic or datetime\n            //visible: true\n        },\n\n        /**\n         * This options set extends the defaultOptions for Y axes\n         */\n        defaultYAxisOptions: {\n            endOnTick: true,\n            gridLineWidth: 1,\n            tickPixelInterval: 72,\n            showLastLabel: true,\n            labels: {\n                x: -8\n            },\n            lineWidth: 0,\n            maxPadding: 0.05,\n            minPadding: 0.05,\n            startOnTick: true,\n            //tickWidth: 0,\n            title: {\n                rotation: 270,\n                text: 'Values'\n            },\n            stackLabels: {\n                enabled: false,\n                //align: dynamic,\n                //y: dynamic,\n                //x: dynamic,\n                //verticalAlign: dynamic,\n                //textAlign: dynamic,\n                //rotation: 0,\n                formatter: function () {\n                    return Highcharts.numberFormat(this.total, -1);\n                },\n                style: merge(defaultPlotOptions.line.dataLabels.style, { color: '#000000' })\n            }\n        },\n\n        /**\n         * These options extend the defaultOptions for left axes\n         */\n        defaultLeftAxisOptions: {\n            labels: {\n                x: -15\n            },\n            title: {\n                rotation: 270\n            }\n        },\n\n        /**\n         * These options extend the defaultOptions for right axes\n         */\n        defaultRightAxisOptions: {\n            labels: {\n                x: 15\n            },\n            title: {\n                rotation: 90\n            }\n        },\n\n        /**\n         * These options extend the defaultOptions for bottom axes\n         */\n        defaultBottomAxisOptions: {\n            labels: {\n                autoRotation: [-45],\n                x: 0\n                // overflow: undefined,\n                // staggerLines: null\n            },\n            title: {\n                rotation: 0\n            }\n        },\n        /**\n         * These options extend the defaultOptions for top axes\n         */\n        defaultTopAxisOptions: {\n            labels: {\n                autoRotation: [-45],\n                x: 0\n                // overflow: undefined\n                // staggerLines: null\n            },\n            title: {\n                rotation: 0\n            }\n        },\n\n        /**\n         * Initialize the axis\n         */\n        init: function (chart, userOptions) {\n\n\n            var isXAxis = userOptions.isX,\n                axis = this;\n\n            axis.chart = chart;\n\n            // Flag, is the axis horizontal\n            axis.horiz = chart.inverted ? !isXAxis : isXAxis;\n\n            // Flag, isXAxis\n            axis.isXAxis = isXAxis;\n            axis.coll = axis.coll || (isXAxis ? 'xAxis' : 'yAxis');\n\n            axis.opposite = userOptions.opposite; // needed in setOptions\n            axis.side = userOptions.side || (axis.horiz ?\n                    (axis.opposite ? 0 : 2) : // top : bottom\n                    (axis.opposite ? 1 : 3));  // right : left\n\n            axis.setOptions(userOptions);\n\n\n            var options = this.options,\n                type = options.type,\n                isDatetimeAxis = type === 'datetime';\n\n            axis.labelFormatter = options.labels.formatter || axis.defaultLabelFormatter; // can be overwritten by dynamic format\n\n\n            // Flag, stagger lines or not\n            axis.userOptions = userOptions;\n\n            //axis.axisTitleMargin = UNDEFINED,// = options.title.margin,\n            axis.minPixelPadding = 0;\n\n            axis.reversed = options.reversed;\n            axis.visible = options.visible !== false;\n            axis.zoomEnabled = options.zoomEnabled !== false;\n\n            // Initial categories\n            axis.hasNames = type === 'category' || options.categories === true;\n            axis.categories = options.categories || axis.hasNames;\n            axis.names = axis.names || []; // Preserve on update (#3830)\n\n            // Elements\n            //axis.axisGroup = UNDEFINED;\n            //axis.gridGroup = UNDEFINED;\n            //axis.axisTitle = UNDEFINED;\n            //axis.axisLine = UNDEFINED;\n\n            // Shorthand types\n            axis.isLog = type === 'logarithmic';\n            axis.isDatetimeAxis = isDatetimeAxis;\n\n            // Flag, if axis is linked to another axis\n            axis.isLinked = defined(options.linkedTo);\n            // Linked axis.\n            //axis.linkedParent = UNDEFINED;\n\n            // Tick positions\n            //axis.tickPositions = UNDEFINED; // array containing predefined positions\n            // Tick intervals\n            //axis.tickInterval = UNDEFINED;\n            //axis.minorTickInterval = UNDEFINED;\n\n\n            // Major ticks\n            axis.ticks = {};\n            axis.labelEdge = [];\n            // Minor ticks\n            axis.minorTicks = {};\n\n            // List of plotLines/Bands\n            axis.plotLinesAndBands = [];\n\n            // Alternate bands\n            axis.alternateBands = {};\n\n            // Axis metrics\n            //axis.left = UNDEFINED;\n            //axis.top = UNDEFINED;\n            //axis.width = UNDEFINED;\n            //axis.height = UNDEFINED;\n            //axis.bottom = UNDEFINED;\n            //axis.right = UNDEFINED;\n            //axis.transA = UNDEFINED;\n            //axis.transB = UNDEFINED;\n            //axis.oldTransA = UNDEFINED;\n            axis.len = 0;\n            //axis.oldMin = UNDEFINED;\n            //axis.oldMax = UNDEFINED;\n            //axis.oldUserMin = UNDEFINED;\n            //axis.oldUserMax = UNDEFINED;\n            //axis.oldAxisLength = UNDEFINED;\n            axis.minRange = axis.userMinRange = options.minRange || options.maxZoom;\n            axis.range = options.range;\n            axis.offset = options.offset || 0;\n\n\n            // Dictionary for stacks\n            axis.stacks = {};\n            axis.oldStacks = {};\n            axis.stacksTouched = 0;\n\n            // Min and max in the data\n            //axis.dataMin = UNDEFINED,\n            //axis.dataMax = UNDEFINED,\n\n            // The axis range\n            axis.max = null;\n            axis.min = null;\n\n            // User set min and max\n            //axis.userMin = UNDEFINED,\n            //axis.userMax = UNDEFINED,\n\n            // Crosshair options\n            axis.crosshair = pick(options.crosshair, splat(chart.options.tooltip.crosshairs)[isXAxis ? 0 : 1], false);\n            // Run Axis\n\n            var eventType,\n                events = axis.options.events;\n\n            // Register\n            if (inArray(axis, chart.axes) === -1) { // don't add it again on Axis.update()\n                if (isXAxis) { // #2713\n                    chart.axes.splice(chart.xAxis.length, 0, axis);\n                } else {\n                    chart.axes.push(axis);\n                }\n\n                chart[axis.coll].push(axis);\n            }\n\n            axis.series = axis.series || []; // populated by Series\n\n            // inverted charts have reversed xAxes as default\n            if (chart.inverted && isXAxis && axis.reversed === UNDEFINED) {\n                axis.reversed = true;\n            }\n\n            axis.removePlotBand = axis.removePlotBandOrLine;\n            axis.removePlotLine = axis.removePlotBandOrLine;\n\n\n            // register event listeners\n            for (eventType in events) {\n                addEvent(axis, eventType, events[eventType]);\n            }\n\n            // extend logarithmic axis\n            if (axis.isLog) {\n                axis.val2lin = axis.log2lin;\n                axis.lin2val = axis.lin2log;\n            }\n        },\n\n        /**\n         * Merge and set options\n         */\n        setOptions: function (userOptions) {\n            this.options = merge(\n                this.defaultOptions,\n                this.coll === 'yAxis' && this.defaultYAxisOptions,\n                [this.defaultTopAxisOptions, this.defaultRightAxisOptions,\n                    this.defaultBottomAxisOptions, this.defaultLeftAxisOptions][this.side],\n                merge(\n                    defaultOptions[this.coll], // if set in setOptions (#1053)\n                    userOptions\n                )\n            );\n        },\n\n        /**\n         * The default label formatter. The context is a special config object for the label.\n         */\n        defaultLabelFormatter: function () {\n            var axis = this.axis,\n                value = this.value,\n                categories = axis.categories,\n                dateTimeLabelFormat = this.dateTimeLabelFormat,\n                numericSymbols = defaultOptions.lang.numericSymbols,\n                i = numericSymbols && numericSymbols.length,\n                multi,\n                ret,\n                formatOption = axis.options.labels.format,\n\n                // make sure the same symbol is added for all labels on a linear axis\n                numericSymbolDetector = axis.isLog ? value : axis.tickInterval;\n\n            if (formatOption) {\n                ret = format(formatOption, this);\n\n            } else if (categories) {\n                ret = value;\n\n            } else if (dateTimeLabelFormat) { // datetime axis\n                ret = dateFormat(dateTimeLabelFormat, value);\n\n            } else if (i && numericSymbolDetector >= 1000) {\n                // Decide whether we should add a numeric symbol like k (thousands) or M (millions).\n                // If we are to enable this in tooltip or other places as well, we can move this\n                // logic to the numberFormatter and enable it by a parameter.\n                while (i-- && ret === UNDEFINED) {\n                    multi = Math.pow(1000, i + 1);\n                    if (numericSymbolDetector >= multi && (value * 10) % multi === 0 && numericSymbols[i] !== null && value !== 0) { // #5480\n                        ret = Highcharts.numberFormat(value / multi, -1) + numericSymbols[i];\n                    }\n                }\n            }\n\n            if (ret === UNDEFINED) {\n                if (mathAbs(value) >= 10000) { // add thousands separators\n                    ret = Highcharts.numberFormat(value, -1);\n\n                } else { // small numbers\n                    ret = Highcharts.numberFormat(value, -1, UNDEFINED, ''); // #2466\n                }\n            }\n\n            return ret;\n        },\n\n        /**\n         * Get the minimum and maximum for the series of each axis\n         */\n        getSeriesExtremes: function () {\n            var axis = this,\n                chart = axis.chart;\n\n            axis.hasVisibleSeries = false;\n\n            // Reset properties in case we're redrawing (#3353)\n            axis.dataMin = axis.dataMax = axis.threshold = null;\n            axis.softThreshold = !axis.isXAxis;\n\n            if (axis.buildStacks) {\n                axis.buildStacks();\n            }\n\n            // loop through this axis' series\n            each(axis.series, function (series) {\n\n                if (series.visible || !chart.options.chart.ignoreHiddenSeries) {\n\n                    var seriesOptions = series.options,\n                        xData,\n                        threshold = seriesOptions.threshold,\n                        seriesDataMin,\n                        seriesDataMax;\n\n                    axis.hasVisibleSeries = true;\n\n                    // Validate threshold in logarithmic axes\n                    if (axis.isLog && threshold <= 0) {\n                        threshold = null;\n                    }\n\n                    // Get dataMin and dataMax for X axes\n                    if (axis.isXAxis) {\n                        xData = series.xData;\n                        if (xData.length) {\n                            // If xData contains values which is not numbers, then filter them out.\n                            // To prevent performance hit, we only do this after we have already\n                            // found seriesDataMin because in most cases all data is valid. #5234.\n                            seriesDataMin = arrayMin(xData);\n                            if (!isNumber(seriesDataMin) && !(seriesDataMin instanceof Date)) { // Date for #5010\n                                xData = grep(xData, function (x) {\n                                    return isNumber(x);\n                                });\n                                seriesDataMin = arrayMin(xData); // Do it again with valid data\n                            }\n\n                            axis.dataMin = mathMin(pick(axis.dataMin, xData[0]), seriesDataMin);\n                            axis.dataMax = mathMax(pick(axis.dataMax, xData[0]), arrayMax(xData));\n                        \n                        }\n\n                    // Get dataMin and dataMax for Y axes, as well as handle stacking and processed data\n                    } else {\n\n                        // Get this particular series extremes\n                        series.getExtremes();\n                        seriesDataMax = series.dataMax;\n                        seriesDataMin = series.dataMin;\n\n                        // Get the dataMin and dataMax so far. If percentage is used, the min and max are\n                        // always 0 and 100. If seriesDataMin and seriesDataMax is null, then series\n                        // doesn't have active y data, we continue with nulls\n                        if (defined(seriesDataMin) && defined(seriesDataMax)) {\n                            axis.dataMin = mathMin(pick(axis.dataMin, seriesDataMin), seriesDataMin);\n                            axis.dataMax = mathMax(pick(axis.dataMax, seriesDataMax), seriesDataMax);\n                        }\n\n                        // Adjust to threshold\n                        if (defined(threshold)) {\n                            axis.threshold = threshold;\n                        }\n                        // If any series has a hard threshold, it takes precedence\n                        if (!seriesOptions.softThreshold || axis.isLog) {\n                            axis.softThreshold = false;\n                        }\n                    }\n                }\n            });\n        },\n\n        /**\n         * Translate from axis value to pixel position on the chart, or back\n         *\n         */\n        translate: function (val, backwards, cvsCoord, old, handleLog, pointPlacement) {\n            var axis = this.linkedParent || this, // #1417\n                sign = 1,\n                cvsOffset = 0,\n                localA = old ? axis.oldTransA : axis.transA,\n                localMin = old ? axis.oldMin : axis.min,\n                returnValue,\n                minPixelPadding = axis.minPixelPadding,\n                doPostTranslate = (axis.isOrdinal || axis.isBroken || (axis.isLog && handleLog)) && axis.lin2val;\n\n            if (!localA) {\n                localA = axis.transA;\n            }\n\n            // In vertical axes, the canvas coordinates start from 0 at the top like in\n            // SVG.\n            if (cvsCoord) {\n                sign *= -1; // canvas coordinates inverts the value\n                cvsOffset = axis.len;\n            }\n\n            // Handle reversed axis\n            if (axis.reversed) {\n                sign *= -1;\n                cvsOffset -= sign * (axis.sector || axis.len);\n            }\n\n            // From pixels to value\n            if (backwards) { // reverse translation\n\n                val = val * sign + cvsOffset;\n                val -= minPixelPadding;\n                returnValue = val / localA + localMin; // from chart pixel to value\n                if (doPostTranslate) { // log and ordinal axes\n                    returnValue = axis.lin2val(returnValue);\n                }\n\n            // From value to pixels\n            } else {\n                if (doPostTranslate) { // log and ordinal axes\n                    val = axis.val2lin(val);\n                }\n                if (pointPlacement === 'between') {\n                    pointPlacement = 0.5;\n                }\n                returnValue = sign * (val - localMin) * localA + cvsOffset + (sign * minPixelPadding) +\n                    (isNumber(pointPlacement) ? localA * pointPlacement * axis.pointRange : 0);\n            }\n\n            return returnValue;\n        },\n\n        /**\n         * Utility method to translate an axis value to pixel position.\n         * @param {Number} value A value in terms of axis units\n         * @param {Boolean} paneCoordinates Whether to return the pixel coordinate relative to the chart\n         *        or just the axis/pane itself.\n         */\n        toPixels: function (value, paneCoordinates) {\n            return this.translate(value, false, !this.horiz, null, true) + (paneCoordinates ? 0 : this.pos);\n        },\n\n        /*\n         * Utility method to translate a pixel position in to an axis value\n         * @param {Number} pixel The pixel value coordinate\n         * @param {Boolean} paneCoordiantes Whether the input pixel is relative to the chart or just the\n         *        axis/pane itself.\n         */\n        toValue: function (pixel, paneCoordinates) {\n            return this.translate(pixel - (paneCoordinates ? 0 : this.pos), true, !this.horiz, null, true);\n        },\n\n        /**\n         * Create the path for a plot line that goes from the given value on\n         * this axis, across the plot to the opposite side\n         * @param {Number} value\n         * @param {Number} lineWidth Used for calculation crisp line\n         * @param {Number] old Use old coordinates (for resizing and rescaling)\n         */\n        getPlotLinePath: function (value, lineWidth, old, force, translatedValue) {\n            var axis = this,\n                chart = axis.chart,\n                axisLeft = axis.left,\n                axisTop = axis.top,\n                x1,\n                y1,\n                x2,\n                y2,\n                cHeight = (old && chart.oldChartHeight) || chart.chartHeight,\n                cWidth = (old && chart.oldChartWidth) || chart.chartWidth,\n                skip,\n                transB = axis.transB,\n                /**\n                 * Check if x is between a and b. If not, either move to a/b or skip,\n                 * depending on the force parameter.\n                 */\n                between = function (x, a, b) {\n                    if (x < a || x > b) {\n                        if (force) {\n                            x = mathMin(mathMax(a, x), b);\n                        } else {\n                            skip = true;\n                        }\n                    }\n                    return x;\n                };\n\n            translatedValue = pick(translatedValue, axis.translate(value, null, null, old));\n            x1 = x2 = mathRound(translatedValue + transB);\n            y1 = y2 = mathRound(cHeight - translatedValue - transB);\n            if (!isNumber(translatedValue)) { // no min or max\n                skip = true;\n\n            } else if (axis.horiz) {\n                y1 = axisTop;\n                y2 = cHeight - axis.bottom;\n                x1 = x2 = between(x1, axisLeft, axisLeft + axis.width);\n            } else {\n                x1 = axisLeft;\n                x2 = cWidth - axis.right;\n                y1 = y2 = between(y1, axisTop, axisTop + axis.height);\n            }\n            return skip && !force ?\n                null :\n                chart.renderer.crispLine([M, x1, y1, L, x2, y2], lineWidth || 1);\n        },\n\n        /**\n         * Set the tick positions of a linear axis to round values like whole tens or every five.\n         */\n        getLinearTickPositions: function (tickInterval, min, max) {\n            var pos,\n                lastPos,\n                roundedMin = correctFloat(mathFloor(min / tickInterval) * tickInterval),\n                roundedMax = correctFloat(mathCeil(max / tickInterval) * tickInterval),\n                tickPositions = [];\n\n            // For single points, add a tick regardless of the relative position (#2662)\n            if (min === max && isNumber(min)) {\n                return [min];\n            }\n\n            // Populate the intermediate values\n            pos = roundedMin;\n            while (pos <= roundedMax) {\n\n                // Place the tick on the rounded value\n                tickPositions.push(pos);\n\n                // Always add the raw tickInterval, not the corrected one.\n                pos = correctFloat(pos + tickInterval);\n\n                // If the interval is not big enough in the current min - max range to actually increase\n                // the loop variable, we need to break out to prevent endless loop. Issue #619\n                if (pos === lastPos) {\n                    break;\n                }\n\n                // Record the last value\n                lastPos = pos;\n            }\n            return tickPositions;\n        },\n\n        /**\n         * Return the minor tick positions. For logarithmic axes, reuse the same logic\n         * as for major ticks.\n         */\n        getMinorTickPositions: function () {\n            var axis = this,\n                options = axis.options,\n                tickPositions = axis.tickPositions,\n                minorTickInterval = axis.minorTickInterval,\n                minorTickPositions = [],\n                pos,\n                i,\n                pointRangePadding = axis.pointRangePadding || 0,\n                min = axis.min - pointRangePadding, // #1498\n                max = axis.max + pointRangePadding, // #1498\n                range = max - min,\n                len;\n\n            // If minor ticks get too dense, they are hard to read, and may cause long running script. So we don't draw them.\n            if (range && range / minorTickInterval < axis.len / 3) { // #3875\n\n                if (axis.isLog) {\n                    len = tickPositions.length;\n                    for (i = 1; i < len; i++) {\n                        minorTickPositions = minorTickPositions.concat(\n                            axis.getLogTickPositions(minorTickInterval, tickPositions[i - 1], tickPositions[i], true)\n                        );\n                    }\n                } else if (axis.isDatetimeAxis && options.minorTickInterval === 'auto') { // #1314\n                    minorTickPositions = minorTickPositions.concat(\n                        axis.getTimeTicks(\n                            axis.normalizeTimeTickInterval(minorTickInterval),\n                            min,\n                            max,\n                            options.startOfWeek\n                        )\n                    );\n                } else {\n                    for (pos = min + (tickPositions[0] - min) % minorTickInterval; pos <= max; pos += minorTickInterval) {\n                        minorTickPositions.push(pos);\n                    }\n                }\n            }\n\n            if (minorTickPositions.length !== 0) { // don't change the extremes, when there is no minor ticks\n                axis.trimTicks(minorTickPositions, options.startOnTick, options.endOnTick); // #3652 #3743 #1498\n            }\n            return minorTickPositions;\n        },\n\n        /**\n         * Adjust the min and max for the minimum range. Keep in mind that the series data is\n         * not yet processed, so we don't have information on data cropping and grouping, or\n         * updated axis.pointRange or series.pointRange. The data can't be processed until\n         * we have finally established min and max.\n         */\n        adjustForMinRange: function () {\n            var axis = this,\n                options = axis.options,\n                min = axis.min,\n                max = axis.max,\n                zoomOffset,\n                spaceAvailable = axis.dataMax - axis.dataMin >= axis.minRange,\n                closestDataRange,\n                i,\n                distance,\n                xData,\n                loopLength,\n                minArgs,\n                maxArgs,\n                minRange;\n\n            // Set the automatic minimum range based on the closest point distance\n            if (axis.isXAxis && axis.minRange === UNDEFINED && !axis.isLog) {\n\n                if (defined(options.min) || defined(options.max)) {\n                    axis.minRange = null; // don't do this again\n\n                } else {\n\n                    // Find the closest distance between raw data points, as opposed to\n                    // closestPointRange that applies to processed points (cropped and grouped)\n                    each(axis.series, function (series) {\n                        xData = series.xData;\n                        loopLength = series.xIncrement ? 1 : xData.length - 1;\n                        for (i = loopLength; i > 0; i--) {\n                            distance = xData[i] - xData[i - 1];\n                            if (closestDataRange === UNDEFINED || distance < closestDataRange) {\n                                closestDataRange = distance;\n                            }\n                        }\n                    });\n                    axis.minRange = mathMin(closestDataRange * 5, axis.dataMax - axis.dataMin);\n                }\n            }\n\n            // if minRange is exceeded, adjust\n            if (max - min < axis.minRange) {\n                minRange = axis.minRange;\n                zoomOffset = (minRange - max + min) / 2;\n\n                // if min and max options have been set, don't go beyond it\n                minArgs = [min - zoomOffset, pick(options.min, min - zoomOffset)];\n                if (spaceAvailable) { // if space is available, stay within the data range\n                    minArgs[2] = axis.isLog ? axis.log2lin(axis.dataMin) : axis.dataMin;\n                }\n                min = arrayMax(minArgs);\n\n                maxArgs = [min + minRange, pick(options.max, min + minRange)];\n                if (spaceAvailable) { // if space is availabe, stay within the data range\n                    maxArgs[2] = axis.isLog ? axis.log2lin(axis.dataMax) : axis.dataMax;\n                }\n\n                max = arrayMin(maxArgs);\n\n                // now if the max is adjusted, adjust the min back\n                if (max - min < minRange) {\n                    minArgs[0] = max - minRange;\n                    minArgs[1] = pick(options.min, max - minRange);\n                    min = arrayMax(minArgs);\n                }\n            }\n\n            // Record modified extremes\n            axis.min = min;\n            axis.max = max;\n        },\n\n        /**\n         * Find the closestPointRange across all series\n         */\n        getClosest: function () {\n            var ret;\n\n            if (this.categories) {\n                ret = 1;\n            } else {\n                each(this.series, function (series) {\n                    var seriesClosest = series.closestPointRange;\n                    if (!series.noSharedTooltip && defined(seriesClosest)) {\n                        ret = defined(ret) ?\n                            mathMin(ret, seriesClosest) :\n                            seriesClosest;\n                    }\n                });\n            }\n            return ret;\n        },\n\n        /**\n         * When a point name is given and no x, search for the name in the existing categories,\n         * or if categories aren't provided, search names or create a new category (#2522).\n         */\n        nameToX: function (point) {\n            var explicitCategories = isArray(this.categories),\n                names = explicitCategories ? this.categories : this.names,\n                nameX = point.options.x,\n                x;\n\n            point.series.requireSorting = false;\n\n            if (!defined(nameX)) {\n                nameX = this.options.nameToX === false ?\n                    point.series.autoIncrement() : \n                    inArray(point.name, names);\n            }\n            if (nameX === -1) { // The name is not found in currenct categories\n                if (!explicitCategories) {\n                    x = names.length;\n                }\n            } else {\n                x = nameX;\n            }\n\n            // Write the last point's name to the names array\n            this.names[x] = point.name;\n\n            return x;\n        },\n\n        /**\n         * When changes have been done to series data, update the axis.names.\n         */\n        updateNames: function () {\n            var axis = this;\n\n            if (this.names.length > 0) {\n                this.names.length = 0;\n                this.minRange = undefined;\n                each(this.series || [], function (series) {\n            \n                    // When adding a series, points are not yet generated\n                    if (!series.processedXData) {\n                        series.processData();\n                        series.generatePoints();\n                    }\n\n                    each(series.points, function (point, i) {\n                        var x;\n                        if (point.options && point.options.x === undefined) {\n                            x = axis.nameToX(point);\n                            if (x !== point.x) {\n                                point.x = x;\n                                series.xData[i] = x;\n                            }\n                        }\n                    });\n                });\n            }\n        },\n\n        /**\n         * Update translation information\n         */\n        setAxisTranslation: function (saveOld) {\n            var axis = this,\n                range = axis.max - axis.min,\n                pointRange = axis.axisPointRange || 0,\n                closestPointRange,\n                minPointOffset = 0,\n                pointRangePadding = 0,\n                linkedParent = axis.linkedParent,\n                ordinalCorrection,\n                hasCategories = !!axis.categories,\n                transA = axis.transA,\n                isXAxis = axis.isXAxis;\n\n            // Adjust translation for padding. Y axis with categories need to go through the same (#1784).\n            if (isXAxis || hasCategories || pointRange) {\n                if (linkedParent) {\n                    minPointOffset = linkedParent.minPointOffset;\n                    pointRangePadding = linkedParent.pointRangePadding;\n\n                } else {\n                \n                    // Get the closest points\n                    closestPointRange = axis.getClosest();\n\n                    each(axis.series, function (series) {\n                        var seriesPointRange = hasCategories ? \n                            1 : \n                            (isXAxis ? \n                                pick(series.options.pointRange, closestPointRange, 0) : \n                                (axis.axisPointRange || 0)), // #2806\n                            pointPlacement = series.options.pointPlacement;\n\n                        pointRange = mathMax(pointRange, seriesPointRange);\n\n                        if (!axis.single) {\n                            // minPointOffset is the value padding to the left of the axis in order to make\n                            // room for points with a pointRange, typically columns. When the pointPlacement option\n                            // is 'between' or 'on', this padding does not apply.\n                            minPointOffset = mathMax(\n                                minPointOffset,\n                                isString(pointPlacement) ? 0 : seriesPointRange / 2\n                            );\n\n                            // Determine the total padding needed to the length of the axis to make room for the\n                            // pointRange. If the series' pointPlacement is 'on', no padding is added.\n                            pointRangePadding = mathMax(\n                                pointRangePadding,\n                                pointPlacement === 'on' ? 0 : seriesPointRange\n                            );\n                        }\n                    });\n                }\n\n                // Record minPointOffset and pointRangePadding\n                ordinalCorrection = axis.ordinalSlope && closestPointRange ? axis.ordinalSlope / closestPointRange : 1; // #988, #1853\n                axis.minPointOffset = minPointOffset = minPointOffset * ordinalCorrection;\n                axis.pointRangePadding = pointRangePadding = pointRangePadding * ordinalCorrection;\n\n                // pointRange means the width reserved for each point, like in a column chart\n                axis.pointRange = mathMin(pointRange, range);\n\n                // closestPointRange means the closest distance between points. In columns\n                // it is mostly equal to pointRange, but in lines pointRange is 0 while closestPointRange\n                // is some other value\n                if (isXAxis) {\n                    axis.closestPointRange = closestPointRange;\n                }\n            }\n\n            // Secondary values\n            if (saveOld) {\n                axis.oldTransA = transA;\n            }\n            axis.translationSlope = axis.transA = transA = axis.len / ((range + pointRangePadding) || 1);\n            axis.transB = axis.horiz ? axis.left : axis.bottom; // translation addend\n            axis.minPixelPadding = transA * minPointOffset;\n        },\n\n        minFromRange: function () {\n            return this.max - this.range;\n        },\n\n        /**\n         * Set the tick positions to round values and optionally extend the extremes\n         * to the nearest tick\n         */\n        setTickInterval: function (secondPass) {\n            var axis = this,\n                chart = axis.chart,\n                options = axis.options,\n                isLog = axis.isLog,\n                log2lin = axis.log2lin,\n                isDatetimeAxis = axis.isDatetimeAxis,\n                isXAxis = axis.isXAxis,\n                isLinked = axis.isLinked,\n                maxPadding = options.maxPadding,\n                minPadding = options.minPadding,\n                length,\n                linkedParentExtremes,\n                tickIntervalOption = options.tickInterval,\n                minTickInterval,\n                tickPixelIntervalOption = options.tickPixelInterval,\n                categories = axis.categories,\n                threshold = axis.threshold,\n                softThreshold = axis.softThreshold,\n                thresholdMin,\n                thresholdMax,\n                hardMin,\n                hardMax;\n\n            if (!isDatetimeAxis && !categories && !isLinked) {\n                this.getTickAmount();\n            }\n\n            // Min or max set either by zooming/setExtremes or initial options\n            hardMin = pick(axis.userMin, options.min);\n            hardMax = pick(axis.userMax, options.max);\n\n            // Linked axis gets the extremes from the parent axis\n            if (isLinked) {\n                axis.linkedParent = chart[axis.coll][options.linkedTo];\n                linkedParentExtremes = axis.linkedParent.getExtremes();\n                axis.min = pick(linkedParentExtremes.min, linkedParentExtremes.dataMin);\n                axis.max = pick(linkedParentExtremes.max, linkedParentExtremes.dataMax);\n                if (options.type !== axis.linkedParent.options.type) {\n                    error(11, 1); // Can't link axes of different type\n                }\n\n            // Initial min and max from the extreme data values\n            } else {\n\n                // Adjust to hard threshold\n                if (!softThreshold && defined(threshold)) {\n                    if (axis.dataMin >= threshold) {\n                        thresholdMin = threshold;\n                        minPadding = 0;\n                    } else if (axis.dataMax <= threshold) {\n                        thresholdMax = threshold;\n                        maxPadding = 0;\n                    }\n                }\n\n                axis.min = pick(hardMin, thresholdMin, axis.dataMin);\n                axis.max = pick(hardMax, thresholdMax, axis.dataMax);\n\n            }\n\n            if (isLog) {\n                if (!secondPass && mathMin(axis.min, pick(axis.dataMin, axis.min)) <= 0) { // #978\n                    error(10, 1); // Can't plot negative values on log axis\n                }\n                // The correctFloat cures #934, float errors on full tens. But it\n                // was too aggressive for #4360 because of conversion back to lin,\n                // therefore use precision 15.\n                axis.min = correctFloat(log2lin(axis.min), 15);\n                axis.max = correctFloat(log2lin(axis.max), 15);\n            }\n\n            // handle zoomed range\n            if (axis.range && defined(axis.max)) {\n                axis.userMin = axis.min = hardMin = mathMax(axis.min, axis.minFromRange()); // #618\n                axis.userMax = hardMax = axis.max;\n\n                axis.range = null;  // don't use it when running setExtremes\n            }\n\n            // Hook for Highstock Scroller. Consider combining with beforePadding.\n            fireEvent(axis, 'foundExtremes');\n\n            // Hook for adjusting this.min and this.max. Used by bubble series.\n            if (axis.beforePadding) {\n                axis.beforePadding();\n            }\n\n            // adjust min and max for the minimum range\n            axis.adjustForMinRange();\n\n            // Pad the values to get clear of the chart's edges. To avoid tickInterval taking the padding\n            // into account, we do this after computing tick interval (#1337).\n            if (!categories && !axis.axisPointRange && !axis.usePercentage && !isLinked && defined(axis.min) && defined(axis.max)) {\n                length = axis.max - axis.min;\n                if (length) {\n                    if (!defined(hardMin) && minPadding) {\n                        axis.min -= length * minPadding;\n                    }\n                    if (!defined(hardMax)  && maxPadding) {\n                        axis.max += length * maxPadding;\n                    }\n                }\n            }\n\n            // Stay within floor and ceiling\n            if (isNumber(options.floor)) {\n                axis.min = mathMax(axis.min, options.floor);\n            }\n            if (isNumber(options.ceiling)) {\n                axis.max = mathMin(axis.max, options.ceiling);\n            }\n\n            // When the threshold is soft, adjust the extreme value only if\n            // the data extreme and the padded extreme land on either side of the threshold. For example,\n            // a series of [0, 1, 2, 3] would make the yAxis add a tick for -1 because of the\n            // default minPadding and startOnTick options. This is prevented by the softThreshold\n            // option.\n            if (softThreshold && defined(axis.dataMin)) {\n                threshold = threshold || 0;\n                if (!defined(hardMin) && axis.min < threshold && axis.dataMin >= threshold) {\n                    axis.min = threshold;\n                } else if (!defined(hardMax) && axis.max > threshold && axis.dataMax <= threshold) {\n                    axis.max = threshold;\n                }\n            }\n\n\n            // get tickInterval\n            if (axis.min === axis.max || axis.min === undefined || axis.max === undefined) {\n                axis.tickInterval = 1;\n            } else if (isLinked && !tickIntervalOption &&\n                    tickPixelIntervalOption === axis.linkedParent.options.tickPixelInterval) {\n                axis.tickInterval = tickIntervalOption = axis.linkedParent.tickInterval;\n            } else {\n                axis.tickInterval = pick(\n                    tickIntervalOption,\n                    this.tickAmount ? ((axis.max - axis.min) / mathMax(this.tickAmount - 1, 1)) : undefined,\n                    categories ? // for categoried axis, 1 is default, for linear axis use tickPix\n                        1 :\n                        // don't let it be more than the data range\n                        (axis.max - axis.min) * tickPixelIntervalOption / mathMax(axis.len, tickPixelIntervalOption)\n                );\n            }\n\n            // Now we're finished detecting min and max, crop and group series data. This\n            // is in turn needed in order to find tick positions in ordinal axes.\n            if (isXAxis && !secondPass) {\n                each(axis.series, function (series) {\n                    series.processData(axis.min !== axis.oldMin || axis.max !== axis.oldMax);\n                });\n            }\n\n            // set the translation factor used in translate function\n            axis.setAxisTranslation(true);\n\n            // hook for ordinal axes and radial axes\n            if (axis.beforeSetTickPositions) {\n                axis.beforeSetTickPositions();\n            }\n\n            // hook for extensions, used in Highstock ordinal axes\n            if (axis.postProcessTickInterval) {\n                axis.tickInterval = axis.postProcessTickInterval(axis.tickInterval);\n            }\n\n            // In column-like charts, don't cramp in more ticks than there are points (#1943, #4184)\n            if (axis.pointRange && !tickIntervalOption) {\n                axis.tickInterval = mathMax(axis.pointRange, axis.tickInterval);\n            }\n\n            // Before normalizing the tick interval, handle minimum tick interval. This applies only if tickInterval is not defined.\n            minTickInterval = pick(options.minTickInterval, axis.isDatetimeAxis && axis.closestPointRange);\n            if (!tickIntervalOption && axis.tickInterval < minTickInterval) {\n                axis.tickInterval = minTickInterval;\n            }\n\n            // for linear axes, get magnitude and normalize the interval\n            if (!isDatetimeAxis && !isLog && !tickIntervalOption) {\n                axis.tickInterval = normalizeTickInterval(\n                    axis.tickInterval,\n                    null,\n                    getMagnitude(axis.tickInterval),\n                    // If the tick interval is between 0.5 and 5 and the axis max is in the order of\n                    // thousands, chances are we are dealing with years. Don't allow decimals. #3363.\n                    pick(options.allowDecimals, !(axis.tickInterval > 0.5 && axis.tickInterval < 5 && axis.max > 1000 && axis.max < 9999)),\n                    !!this.tickAmount\n                );\n            }\n\n            // Prevent ticks from getting so close that we can't draw the labels\n            if (!this.tickAmount) {\n                axis.tickInterval = axis.unsquish();\n            }\n\n            this.setTickPositions();\n        },\n\n        /**\n         * Now we have computed the normalized tickInterval, get the tick positions\n         */\n        setTickPositions: function () {\n\n            var options = this.options,\n                tickPositions,\n                tickPositionsOption = options.tickPositions,\n                tickPositioner = options.tickPositioner,\n                startOnTick = options.startOnTick,\n                endOnTick = options.endOnTick,\n                single;\n\n            // Set the tickmarkOffset\n            this.tickmarkOffset = (this.categories && options.tickmarkPlacement === 'between' &&\n                this.tickInterval === 1) ? 0.5 : 0; // #3202\n\n\n            // get minorTickInterval\n            this.minorTickInterval = options.minorTickInterval === 'auto' && this.tickInterval ?\n                this.tickInterval / 5 : options.minorTickInterval;\n\n            // Find the tick positions\n            this.tickPositions = tickPositions = tickPositionsOption && tickPositionsOption.slice(); // Work on a copy (#1565)\n            if (!tickPositions) {\n\n                if (this.isDatetimeAxis) {\n                    tickPositions = this.getTimeTicks(\n                        this.normalizeTimeTickInterval(this.tickInterval, options.units),\n                        this.min,\n                        this.max,\n                        options.startOfWeek,\n                        this.ordinalPositions,\n                        this.closestPointRange,\n                        true\n                    );\n                } else if (this.isLog) {\n                    tickPositions = this.getLogTickPositions(this.tickInterval, this.min, this.max);\n                } else {\n                    tickPositions = this.getLinearTickPositions(this.tickInterval, this.min, this.max);\n                }\n\n                // Too dense ticks, keep only the first and last (#4477)\n                if (tickPositions.length > this.len) {\n                    tickPositions = [tickPositions[0], tickPositions.pop()];\n                }\n\n                this.tickPositions = tickPositions;\n\n                // Run the tick positioner callback, that allows modifying auto tick positions.\n                if (tickPositioner) {\n                    tickPositioner = tickPositioner.apply(this, [this.min, this.max]);\n                    if (tickPositioner) {\n                        this.tickPositions = tickPositions = tickPositioner;\n                    }\n                }\n\n            }\n\n            if (!this.isLinked) {\n\n                // reset min/max or remove extremes based on start/end on tick\n                this.trimTicks(tickPositions, startOnTick, endOnTick);\n\n                // When there is only one point, or all points have the same value on this axis, then min\n                // and max are equal and tickPositions.length is 0 or 1. In this case, add some padding\n                // in order to center the point, but leave it with one tick. #1337.\n                if (this.min === this.max && defined(this.min) && !this.tickAmount) {\n                    // Substract half a unit (#2619, #2846, #2515, #3390)\n                    single = true;\n                    this.min -= 0.5;\n                    this.max += 0.5;\n                }\n                this.single = single;\n\n                if (!tickPositionsOption && !tickPositioner) {\n                    this.adjustTickAmount();\n                }\n            }\n        },\n\n        /**\n         * Handle startOnTick and endOnTick by either adapting to padding min/max or rounded min/max\n         */\n        trimTicks: function (tickPositions, startOnTick, endOnTick) {\n            var roundedMin = tickPositions[0],\n                roundedMax = tickPositions[tickPositions.length - 1],\n                minPointOffset = this.minPointOffset || 0;\n\n            if (startOnTick) {\n                this.min = roundedMin;\n            } else {\n                while (this.min - minPointOffset > tickPositions[0]) {\n                    tickPositions.shift();\n                }\n            }\n\n            if (endOnTick) {\n                this.max = roundedMax;\n            } else {\n                while (this.max + minPointOffset < tickPositions[tickPositions.length - 1]) {\n                    tickPositions.pop();\n                }\n            }\n\n            // If no tick are left, set one tick in the middle (#3195)\n            if (tickPositions.length === 0 && defined(roundedMin)) {\n                tickPositions.push((roundedMax + roundedMin) / 2);\n            }\n        },\n\n        /**\n         * Check if there are multiple axes in the same pane\n         * @returns {Boolean} There are other axes\n         */\n        alignToOthers: function () {\n            var others = {}, // Whether there is another axis to pair with this one\n                hasOther,\n                options = this.options;\n\n            if (this.chart.options.chart.alignTicks !== false && options.alignTicks !== false) {\n                each(this.chart[this.coll], function (axis) {\n                    var otherOptions = axis.options,\n                        horiz = axis.horiz,\n                        key = [\n                            horiz ? otherOptions.left : otherOptions.top, \n                            otherOptions.width,\n                            otherOptions.height, \n                            otherOptions.pane\n                        ].join(',');\n\n\n                    if (axis.series.length) { // #4442\n                        if (others[key]) {\n                            hasOther = true; // #4201\n                        } else {\n                            others[key] = 1;\n                        }\n                    }\n                });\n            }\n            return hasOther;\n        },\n\n        /**\n         * Set the max ticks of either the x and y axis collection\n         */\n        getTickAmount: function () {\n            var options = this.options,\n                tickAmount = options.tickAmount,\n                tickPixelInterval = options.tickPixelInterval;\n\n            if (!defined(options.tickInterval) && this.len < tickPixelInterval && !this.isRadial &&\n                    !this.isLog && options.startOnTick && options.endOnTick) {\n                tickAmount = 2;\n            }\n\n            if (!tickAmount && this.alignToOthers()) {\n                // Add 1 because 4 tick intervals require 5 ticks (including first and last)\n                tickAmount = mathCeil(this.len / tickPixelInterval) + 1;\n            }\n\n            // For tick amounts of 2 and 3, compute five ticks and remove the intermediate ones. This\n            // prevents the axis from adding ticks that are too far away from the data extremes.\n            if (tickAmount < 4) {\n                this.finalTickAmt = tickAmount;\n                tickAmount = 5;\n            }\n\n            this.tickAmount = tickAmount;\n        },\n\n        /**\n         * When using multiple axes, adjust the number of ticks to match the highest\n         * number of ticks in that group\n         */\n        adjustTickAmount: function () {\n            var tickInterval = this.tickInterval,\n                tickPositions = this.tickPositions,\n                tickAmount = this.tickAmount,\n                finalTickAmt = this.finalTickAmt,\n                currentTickAmount = tickPositions && tickPositions.length,\n                i,\n                len;\n\n            if (currentTickAmount < tickAmount) {\n                while (tickPositions.length < tickAmount) {\n                    tickPositions.push(correctFloat(\n                        tickPositions[tickPositions.length - 1] + tickInterval\n                    ));\n                }\n                this.transA *= (currentTickAmount - 1) / (tickAmount - 1);\n                this.max = tickPositions[tickPositions.length - 1];\n\n            // We have too many ticks, run second pass to try to reduce ticks\n            } else if (currentTickAmount > tickAmount) {\n                this.tickInterval *= 2;\n                this.setTickPositions();\n            }\n\n            // The finalTickAmt property is set in getTickAmount\n            if (defined(finalTickAmt)) {\n                i = len = tickPositions.length;\n                while (i--) {\n                    if (\n                        (finalTickAmt === 3 && i % 2 === 1) || // Remove every other tick\n                        (finalTickAmt <= 2 && i > 0 && i < len - 1) // Remove all but first and last\n                    ) {\n                        tickPositions.splice(i, 1);\n                    }\n                }\n                this.finalTickAmt = UNDEFINED;\n            }\n        },\n\n        /**\n         * Set the scale based on data min and max, user set min and max or options\n         *\n         */\n        setScale: function () {\n            var axis = this,\n                isDirtyData,\n                isDirtyAxisLength;\n\n            axis.oldMin = axis.min;\n            axis.oldMax = axis.max;\n            axis.oldAxisLength = axis.len;\n\n            // set the new axisLength\n            axis.setAxisSize();\n            //axisLength = horiz ? axisWidth : axisHeight;\n            isDirtyAxisLength = axis.len !== axis.oldAxisLength;\n\n            // is there new data?\n            each(axis.series, function (series) {\n                if (series.isDirtyData || series.isDirty ||\n                        series.xAxis.isDirty) { // when x axis is dirty, we need new data extremes for y as well\n                    isDirtyData = true;\n                }\n            });\n\n            // do we really need to go through all this?\n            if (isDirtyAxisLength || isDirtyData || axis.isLinked || axis.forceRedraw ||\n                axis.userMin !== axis.oldUserMin || axis.userMax !== axis.oldUserMax || axis.alignToOthers()) {\n\n                if (axis.resetStacks) {\n                    axis.resetStacks();\n                }\n\n                axis.forceRedraw = false;\n\n                // get data extremes if needed\n                axis.getSeriesExtremes();\n\n                // get fixed positions based on tickInterval\n                axis.setTickInterval();\n\n                // record old values to decide whether a rescale is necessary later on (#540)\n                axis.oldUserMin = axis.userMin;\n                axis.oldUserMax = axis.userMax;\n\n                // Mark as dirty if it is not already set to dirty and extremes have changed. #595.\n                if (!axis.isDirty) {\n                    axis.isDirty = isDirtyAxisLength || axis.min !== axis.oldMin || axis.max !== axis.oldMax;\n                }\n            } else if (axis.cleanStacks) {\n                axis.cleanStacks();\n            }\n        },\n\n        /**\n         * Set the extremes and optionally redraw\n         * @param {Number} newMin\n         * @param {Number} newMax\n         * @param {Boolean} redraw\n         * @param {Boolean|Object} animation Whether to apply animation, and optionally animation\n         *    configuration\n         * @param {Object} eventArguments\n         *\n         */\n        setExtremes: function (newMin, newMax, redraw, animation, eventArguments) {\n            var axis = this,\n                chart = axis.chart;\n\n            redraw = pick(redraw, true); // defaults to true\n\n            each(axis.series, function (serie) {\n                delete serie.kdTree;\n            });\n\n            // Extend the arguments with min and max\n            eventArguments = extend(eventArguments, {\n                min: newMin,\n                max: newMax\n            });\n\n            // Fire the event\n            fireEvent(axis, 'setExtremes', eventArguments, function () { // the default event handler\n\n                axis.userMin = newMin;\n                axis.userMax = newMax;\n                axis.eventArgs = eventArguments;\n\n                if (redraw) {\n                    chart.redraw(animation);\n                }\n            });\n        },\n\n        /**\n         * Overridable method for zooming chart. Pulled out in a separate method to allow overriding\n         * in stock charts.\n         */\n        zoom: function (newMin, newMax) {\n            var dataMin = this.dataMin,\n                dataMax = this.dataMax,\n                options = this.options,\n                min = mathMin(dataMin, pick(options.min, dataMin)),\n                max = mathMax(dataMax, pick(options.max, dataMax));\n\n            // Prevent pinch zooming out of range. Check for defined is for #1946. #1734.\n            if (!this.allowZoomOutside) {\n                if (defined(dataMin) && newMin <= min) {\n                    newMin = min;\n                }\n                if (defined(dataMax) && newMax >= max) {\n                    newMax = max;\n                }\n            }\n\n            // In full view, displaying the reset zoom button is not required\n            this.displayBtn = newMin !== UNDEFINED || newMax !== UNDEFINED;\n\n            // Do it\n            this.setExtremes(\n                newMin,\n                newMax,\n                false,\n                UNDEFINED,\n                { trigger: 'zoom' }\n            );\n            return true;\n        },\n\n        /**\n         * Update the axis metrics\n         */\n        setAxisSize: function () {\n            var chart = this.chart,\n                options = this.options,\n                offsetLeft = options.offsetLeft || 0,\n                offsetRight = options.offsetRight || 0,\n                horiz = this.horiz,\n                width = pick(options.width, chart.plotWidth - offsetLeft + offsetRight),\n                height = pick(options.height, chart.plotHeight),\n                top = pick(options.top, chart.plotTop),\n                left = pick(options.left, chart.plotLeft + offsetLeft),\n                percentRegex = /%$/;\n\n            // Check for percentage based input values. Rounding fixes problems with\n            // column overflow and plot line filtering (#4898, #4899)\n            if (percentRegex.test(height)) {\n                height = Math.round(parseFloat(height) / 100 * chart.plotHeight);\n            }\n            if (percentRegex.test(top)) {\n                top = Math.round(parseFloat(top) / 100 * chart.plotHeight + chart.plotTop);\n            }\n\n            // Expose basic values to use in Series object and navigator\n            this.left = left;\n            this.top = top;\n            this.width = width;\n            this.height = height;\n            this.bottom = chart.chartHeight - height - top;\n            this.right = chart.chartWidth - width - left;\n\n            // Direction agnostic properties\n            this.len = mathMax(horiz ? width : height, 0); // mathMax fixes #905\n            this.pos = horiz ? left : top; // distance from SVG origin\n        },\n\n        /**\n         * Get the actual axis extremes\n         */\n        getExtremes: function () {\n            var axis = this,\n                isLog = axis.isLog,\n                lin2log = axis.lin2log;\n\n            return {\n                min: isLog ? correctFloat(lin2log(axis.min)) : axis.min,\n                max: isLog ? correctFloat(lin2log(axis.max)) : axis.max,\n                dataMin: axis.dataMin,\n                dataMax: axis.dataMax,\n                userMin: axis.userMin,\n                userMax: axis.userMax\n            };\n        },\n\n        /**\n         * Get the zero plane either based on zero or on the min or max value.\n         * Used in bar and area plots\n         */\n        getThreshold: function (threshold) {\n            var axis = this,\n                isLog = axis.isLog,\n                lin2log = axis.lin2log,\n                realMin = isLog ? lin2log(axis.min) : axis.min,\n                realMax = isLog ? lin2log(axis.max) : axis.max;\n\n            if (threshold === null) {\n                threshold = realMin;\n            } else if (realMin > threshold) {\n                threshold = realMin;\n            } else if (realMax < threshold) {\n                threshold = realMax;\n            }\n\n            return axis.translate(threshold, 0, 1, 0, 1);\n        },\n\n        /**\n         * Compute auto alignment for the axis label based on which side the axis is on\n         * and the given rotation for the label\n         */\n        autoLabelAlign: function (rotation) {\n            var ret,\n                angle = (pick(rotation, 0) - (this.side * 90) + 720) % 360;\n\n            if (angle > 15 && angle < 165) {\n                ret = 'right';\n            } else if (angle > 195 && angle < 345) {\n                ret = 'left';\n            } else {\n                ret = 'center';\n            }\n            return ret;\n        },\n\n        /**\n         * Get the tick length and width for the axis.\n         * @param   {String} prefix 'tick' or 'minorTick'\n         * @returns {Array}        An array of tickLength and tickWidth\n         */\n        tickSize: function (prefix) {\n            var options = this.options,\n                tickLength = options[prefix + 'Length'],\n                tickWidth = pick(options[prefix + 'Width'], prefix === 'tick' && this.isXAxis ? 1 : 0); // X axis defaults to 1\n\n            if (tickWidth && tickLength) {\n                // Negate the length\n                if (options[prefix + 'Position'] === 'inside') {\n                    tickLength = -tickLength;\n                }\n                return [tickLength, tickWidth];\n            }\n            \n        },\n\n        /**\n         * Return the size of the labels\n         */\n        labelMetrics: function () {\n            return this.chart.renderer.fontMetrics(\n                this.options.labels.style.fontSize, \n                this.ticks[0] && this.ticks[0].label\n            );\n        },\n\n        /**\n         * Prevent the ticks from getting so close we can't draw the labels. On a horizontal\n         * axis, this is handled by rotating the labels, removing ticks and adding ellipsis.\n         * On a vertical axis remove ticks and add ellipsis.\n         */\n        unsquish: function () {\n            var labelOptions = this.options.labels,\n                horiz = this.horiz,\n                tickInterval = this.tickInterval,\n                newTickInterval = tickInterval,\n                slotSize = this.len / (((this.categories ? 1 : 0) + this.max - this.min) / tickInterval),\n                rotation,\n                rotationOption = labelOptions.rotation,\n                labelMetrics = this.labelMetrics(),\n                step,\n                bestScore = Number.MAX_VALUE,\n                autoRotation,\n                // Return the multiple of tickInterval that is needed to avoid collision\n                getStep = function (spaceNeeded) {\n                    var step = spaceNeeded / (slotSize || 1);\n                    step = step > 1 ? mathCeil(step) : 1;\n                    return step * tickInterval;\n                };\n\n            if (horiz) {\n                autoRotation = !labelOptions.staggerLines && !labelOptions.step && ( // #3971\n                    defined(rotationOption) ?\n                        [rotationOption] :\n                        slotSize < pick(labelOptions.autoRotationLimit, 80) && labelOptions.autoRotation\n                );\n\n                if (autoRotation) {\n\n                    // Loop over the given autoRotation options, and determine which gives the best score. The\n                    // best score is that with the lowest number of steps and a rotation closest to horizontal.\n                    each(autoRotation, function (rot) {\n                        var score;\n\n                        if (rot === rotationOption || (rot && rot >= -90 && rot <= 90)) { // #3891\n\n                            step = getStep(mathAbs(labelMetrics.h / mathSin(deg2rad * rot)));\n\n                            score = step + mathAbs(rot / 360);\n\n                            if (score < bestScore) {\n                                bestScore = score;\n                                rotation = rot;\n                                newTickInterval = step;\n                            }\n                        }\n                    });\n                }\n\n            } else if (!labelOptions.step) { // #4411\n                newTickInterval = getStep(labelMetrics.h);\n            }\n\n            this.autoRotation = autoRotation;\n            this.labelRotation = pick(rotation, rotationOption);\n\n            return newTickInterval;\n        },\n\n        /**\n         * Get the general slot width for this axis. This may change between the pre-render (from Axis.getOffset) \n         * and the final tick rendering and placement (#5086).\n         */\n        getSlotWidth: function () {\n            var chart = this.chart,\n                horiz = this.horiz,\n                labelOptions = this.options.labels,\n                slotCount = Math.max(this.tickPositions.length - (this.categories ? 0 : 1), 1),\n                marginLeft = chart.margin[3];\n\n            return (horiz && (labelOptions.step || 0) < 2 && !labelOptions.rotation && // #4415\n                ((this.staggerLines || 1) * chart.plotWidth) / slotCount) ||\n                (!horiz && ((marginLeft && (marginLeft - chart.spacing[3])) || chart.chartWidth * 0.33)); // #1580, #1931\n\n        },\n\n        /**\n         * Render the axis labels and determine whether ellipsis or rotation need to be applied\n         */\n        renderUnsquish: function () {\n            var chart = this.chart,\n                renderer = chart.renderer,\n                tickPositions = this.tickPositions,\n                ticks = this.ticks,\n                labelOptions = this.options.labels,\n                horiz = this.horiz,\n                slotWidth = this.getSlotWidth(),\n                innerWidth = mathMax(1, mathRound(slotWidth - 2 * (labelOptions.padding || 5))),\n                attr = {},\n                labelMetrics = this.labelMetrics(),\n                textOverflowOption = labelOptions.style.textOverflow,\n                css,\n                maxLabelLength = 0,\n                label,\n                i,\n                pos;\n\n            // Set rotation option unless it is \"auto\", like in gauges\n            if (!isString(labelOptions.rotation)) {\n                attr.rotation = labelOptions.rotation || 0; // #4443\n            }\n\n            // Get the longest label length\n            each(tickPositions, function (tick) {\n                tick = ticks[tick];\n                if (tick && tick.labelLength > maxLabelLength) {\n                    maxLabelLength = tick.labelLength;\n                }\n            });\n            this.maxLabelLength = maxLabelLength;\n        \n\n            // Handle auto rotation on horizontal axis\n            if (this.autoRotation) {\n\n                // Apply rotation only if the label is too wide for the slot, and\n                // the label is wider than its height.\n                if (maxLabelLength > innerWidth && maxLabelLength > labelMetrics.h) {\n                    attr.rotation = this.labelRotation;\n                } else {\n                    this.labelRotation = 0;\n                }\n\n            // Handle word-wrap or ellipsis on vertical axis\n            } else if (slotWidth) {\n                // For word-wrap or ellipsis\n                css = { width: innerWidth + PX };\n\n                if (!textOverflowOption) {\n                    css.textOverflow = 'clip';\n\n                    // On vertical axis, only allow word wrap if there is room for more lines.\n                    i = tickPositions.length;\n                    while (!horiz && i--) {\n                        pos = tickPositions[i];\n                        label = ticks[pos].label;\n                        if (label) {\n                            // Reset ellipsis in order to get the correct bounding box (#4070)\n                            if (label.styles.textOverflow === 'ellipsis') {\n                                label.css({ textOverflow: 'clip' });\n\n                            // Set the correct width in order to read the bounding box height (#4678, #5034)\n                            } else if (ticks[pos].labelLength > slotWidth) {\n                                label.css({ width: slotWidth + 'px' });\n                            }\n\n                            if (label.getBBox().height > this.len / tickPositions.length - (labelMetrics.h - labelMetrics.f)) {\n                                label.specCss = { textOverflow: 'ellipsis' };\n                            }\n                        }\n                    }\n                }\n            }\n\n\n            // Add ellipsis if the label length is significantly longer than ideal\n            if (attr.rotation) {\n                css = {\n                    width: (maxLabelLength > chart.chartHeight * 0.5 ? chart.chartHeight * 0.33 : chart.chartHeight) + PX\n                };\n                if (!textOverflowOption) {\n                    css.textOverflow = 'ellipsis';\n                }\n            }\n\n            // Set the explicit or automatic label alignment\n            this.labelAlign = labelOptions.align || this.autoLabelAlign(this.labelRotation);\n            if (this.labelAlign) {\n                attr.align = this.labelAlign;\n            }\n\n            // Apply general and specific CSS\n            each(tickPositions, function (pos) {\n                var tick = ticks[pos],\n                    label = tick && tick.label;\n                if (label) {\n                    label.attr(attr); // This needs to go before the CSS in old IE (#4502)\n                    if (css) {\n                        label.css(merge(css, label.specCss));\n                    }\n                    delete label.specCss;\n                    tick.rotation = attr.rotation;\n                }\n            });\n\n            // Note: Why is this not part of getLabelPosition?\n            this.tickRotCorr = renderer.rotCorr(labelMetrics.b, this.labelRotation || 0, this.side !== 0);\n        },\n\n        /**\n         * Return true if the axis has associated data\n         */\n        hasData: function () {\n            return this.hasVisibleSeries || (defined(this.min) && defined(this.max) && !!this.tickPositions);\n        },\n\n        /**\n         * Render the tick labels to a preliminary position to get their sizes\n         */\n        getOffset: function () {\n            var axis = this,\n                chart = axis.chart,\n                renderer = chart.renderer,\n                options = axis.options,\n                tickPositions = axis.tickPositions,\n                ticks = axis.ticks,\n                horiz = axis.horiz,\n                side = axis.side,\n                invertedSide = chart.inverted ? [1, 0, 3, 2][side] : side,\n                hasData,\n                showAxis,\n                titleOffset = 0,\n                titleOffsetOption,\n                titleMargin = 0,\n                axisTitleOptions = options.title,\n                labelOptions = options.labels,\n                labelOffset = 0, // reset\n                labelOffsetPadded,\n                opposite = axis.opposite,\n                axisOffset = chart.axisOffset,\n                clipOffset = chart.clipOffset,\n                clip,\n                directionFactor = [-1, 1, 1, -1][side],\n                n,\n                textAlign,\n                axisParent = axis.axisParent, // Used in color axis\n                lineHeightCorrection,\n                tickSize = this.tickSize('tick');\n\n            // For reuse in Axis.render\n            hasData = axis.hasData();\n            axis.showAxis = showAxis = hasData || pick(options.showEmpty, true);\n\n            // Set/reset staggerLines\n            axis.staggerLines = axis.horiz && labelOptions.staggerLines;\n\n            // Create the axisGroup and gridGroup elements on first iteration\n            if (!axis.axisGroup) {\n                axis.gridGroup = renderer.g('grid')\n                    .attr({ zIndex: options.gridZIndex || 1 })\n                    .add(axisParent);\n                axis.axisGroup = renderer.g('axis')\n                    .attr({ zIndex: options.zIndex || 2 })\n                    .add(axisParent);\n                axis.labelGroup = renderer.g('axis-labels')\n                    .attr({ zIndex: labelOptions.zIndex || 7 })\n                    .addClass(PREFIX + axis.coll.toLowerCase() + '-labels')\n                    .add(axisParent);\n            }\n\n            if (hasData || axis.isLinked) {\n\n                // Generate ticks\n                each(tickPositions, function (pos) {\n                    if (!ticks[pos]) {\n                        ticks[pos] = new Tick(axis, pos);\n                    } else {\n                        ticks[pos].addLabel(); // update labels depending on tick interval\n                    }\n                });\n\n                axis.renderUnsquish();\n\n\n                // Left side must be align: right and right side must have align: left for labels\n                if (labelOptions.reserveSpace !== false && (side === 0 || side === 2 ||\n                        { 1: 'left', 3: 'right' }[side] === axis.labelAlign || axis.labelAlign === 'center')) {\n                    each(tickPositions, function (pos) {\n\n                        // get the highest offset\n                        labelOffset = mathMax(\n                            ticks[pos].getLabelSize(),\n                            labelOffset\n                        );\n                    });\n                }\n\n                if (axis.staggerLines) {\n                    labelOffset *= axis.staggerLines;\n                    axis.labelOffset = labelOffset * (axis.opposite ? -1 : 1);\n                }\n\n\n            } else { // doesn't have data\n                for (n in ticks) {\n                    ticks[n].destroy();\n                    delete ticks[n];\n                }\n            }\n\n            if (axisTitleOptions && axisTitleOptions.text && axisTitleOptions.enabled !== false) {\n                if (!axis.axisTitle) {\n                    textAlign = axisTitleOptions.textAlign;\n                    if (!textAlign) {\n                        textAlign = (horiz ? { \n                            low: 'left',\n                            middle: 'center',\n                            high: 'right'\n                        } : { \n                            low: opposite ? 'right' : 'left',\n                            middle: 'center',\n                            high: opposite ? 'left' : 'right'\n                        })[axisTitleOptions.align];\n                    }\n                    axis.axisTitle = renderer.text(\n                        axisTitleOptions.text,\n                        0,\n                        0,\n                        axisTitleOptions.useHTML\n                    )\n                    .attr({\n                        zIndex: 7,\n                        rotation: axisTitleOptions.rotation || 0,\n                        align: textAlign\n                    })\n                    .addClass(PREFIX + this.coll.toLowerCase() + '-title')\n                    .css(axisTitleOptions.style)\n                    .add(axis.axisGroup);\n                    axis.axisTitle.isNew = true;\n                }\n\n                if (showAxis) {\n                    titleOffset = axis.axisTitle.getBBox()[horiz ? 'height' : 'width'];\n                    titleOffsetOption = axisTitleOptions.offset;\n                    titleMargin = defined(titleOffsetOption) ? 0 : pick(axisTitleOptions.margin, horiz ? 5 : 10);\n                }\n\n                // hide or show the title depending on whether showEmpty is set\n                axis.axisTitle[showAxis ? 'show' : 'hide'](true);\n            }\n\n            // handle automatic or user set offset\n            axis.offset = directionFactor * pick(options.offset, axisOffset[side]);\n\n            axis.tickRotCorr = axis.tickRotCorr || { x: 0, y: 0 }; // polar\n            if (side === 0) {\n                lineHeightCorrection = -axis.labelMetrics().h;\n            } else if (side === 2) {\n                lineHeightCorrection = axis.tickRotCorr.y;\n            } else {\n                lineHeightCorrection = 0;\n            }\n\n            // Find the padded label offset\n            labelOffsetPadded = Math.abs(labelOffset) + titleMargin;\n            if (labelOffset) {\n                labelOffsetPadded -= lineHeightCorrection;\n                labelOffsetPadded += directionFactor * (horiz ? pick(labelOptions.y, axis.tickRotCorr.y + directionFactor * 8) : labelOptions.x);\n            }\n            axis.axisTitleMargin = pick(titleOffsetOption, labelOffsetPadded);\n\n            axisOffset[side] = mathMax(\n                axisOffset[side],\n                axis.axisTitleMargin + titleOffset + directionFactor * axis.offset,\n                labelOffsetPadded, // #3027\n                hasData && tickPositions.length && tickSize ? tickSize[0] : 0 // #4866\n            );\n\n            // Decide the clipping needed to keep the graph inside the plot area and axis lines\n            clip = options.offset ? 0 : mathFloor(options.lineWidth / 2) * 2; // #4308, #4371\n            clipOffset[invertedSide] = mathMax(clipOffset[invertedSide], clip);\n        },\n\n        /**\n         * Get the path for the axis line\n         */\n        getLinePath: function (lineWidth) {\n            var chart = this.chart,\n                opposite = this.opposite,\n                offset = this.offset,\n                horiz = this.horiz,\n                lineLeft = this.left + (opposite ? this.width : 0) + offset,\n                lineTop = chart.chartHeight - this.bottom - (opposite ? this.height : 0) + offset;\n\n            if (opposite) {\n                lineWidth *= -1; // crispify the other way - #1480, #1687\n            }\n\n            return chart.renderer\n                .crispLine([\n                    M,\n                    horiz ?\n                        this.left :\n                        lineLeft,\n                    horiz ?\n                        lineTop :\n                        this.top,\n                    L,\n                    horiz ?\n                        chart.chartWidth - this.right :\n                        lineLeft,\n                    horiz ?\n                        lineTop :\n                        chart.chartHeight - this.bottom\n                ], lineWidth);\n        },\n\n        /**\n         * Position the title\n         */\n        getTitlePosition: function () {\n            // compute anchor points for each of the title align options\n            var horiz = this.horiz,\n                axisLeft = this.left,\n                axisTop = this.top,\n                axisLength = this.len,\n                axisTitleOptions = this.options.title,\n                margin = horiz ? axisLeft : axisTop,\n                opposite = this.opposite,\n                offset = this.offset,\n                xOption = axisTitleOptions.x || 0,\n                yOption = axisTitleOptions.y || 0,\n                fontSize = this.chart.renderer.fontMetrics(axisTitleOptions.style.fontSize).f,\n\n                // the position in the length direction of the axis\n                alongAxis = {\n                    low: margin + (horiz ? 0 : axisLength),\n                    middle: margin + axisLength / 2,\n                    high: margin + (horiz ? axisLength : 0)\n                }[axisTitleOptions.align],\n\n                // the position in the perpendicular direction of the axis\n                offAxis = (horiz ? axisTop + this.height : axisLeft) +\n                    (horiz ? 1 : -1) * // horizontal axis reverses the margin\n                    (opposite ? -1 : 1) * // so does opposite axes\n                    this.axisTitleMargin +\n                    (this.side === 2 ? fontSize : 0);\n\n            return {\n                x: horiz ?\n                    alongAxis + xOption :\n                    offAxis + (opposite ? this.width : 0) + offset + xOption,\n                y: horiz ?\n                    offAxis + yOption - (opposite ? this.height : 0) + offset :\n                    alongAxis + yOption\n            };\n        },\n\n        /**\n         * Render the axis\n         */\n        render: function () {\n            var axis = this,\n                chart = axis.chart,\n                renderer = chart.renderer,\n                options = axis.options,\n                isLog = axis.isLog,\n                lin2log = axis.lin2log,\n                isLinked = axis.isLinked,\n                tickPositions = axis.tickPositions,\n                axisTitle = axis.axisTitle,\n                ticks = axis.ticks,\n                minorTicks = axis.minorTicks,\n                alternateBands = axis.alternateBands,\n                stackLabelOptions = options.stackLabels,\n                alternateGridColor = options.alternateGridColor,\n                tickmarkOffset = axis.tickmarkOffset,\n                lineWidth = options.lineWidth,\n                linePath,\n                hasRendered = chart.hasRendered,\n                slideInTicks = hasRendered && isNumber(axis.oldMin),\n                showAxis = axis.showAxis,\n                animation = animObject(renderer.globalAnimation),\n                from,\n                to;\n\n            // Reset\n            axis.labelEdge.length = 0;\n            //axis.justifyToPlot = overflow === 'justify';\n            axis.overlap = false;\n\n            // Mark all elements inActive before we go over and mark the active ones\n            each([ticks, minorTicks, alternateBands], function (coll) {\n                var pos;\n                for (pos in coll) {\n                    coll[pos].isActive = false;\n                }\n            });\n\n            // If the series has data draw the ticks. Else only the line and title\n            if (axis.hasData() || isLinked) {\n\n                // minor ticks\n                if (axis.minorTickInterval && !axis.categories) {\n                    each(axis.getMinorTickPositions(), function (pos) {\n                        if (!minorTicks[pos]) {\n                            minorTicks[pos] = new Tick(axis, pos, 'minor');\n                        }\n\n                        // render new ticks in old position\n                        if (slideInTicks && minorTicks[pos].isNew) {\n                            minorTicks[pos].render(null, true);\n                        }\n\n                        minorTicks[pos].render(null, false, 1);\n                    });\n                }\n\n                // Major ticks. Pull out the first item and render it last so that\n                // we can get the position of the neighbour label. #808.\n                if (tickPositions.length) { // #1300\n                    each(tickPositions, function (pos, i) {\n\n                        // linked axes need an extra check to find out if\n                        if (!isLinked || (pos >= axis.min && pos <= axis.max)) {\n\n                            if (!ticks[pos]) {\n                                ticks[pos] = new Tick(axis, pos);\n                            }\n\n                            // render new ticks in old position\n                            if (slideInTicks && ticks[pos].isNew) {\n                                ticks[pos].render(i, true, 0.1);\n                            }\n\n                            ticks[pos].render(i);\n                        }\n\n                    });\n                    // In a categorized axis, the tick marks are displayed between labels. So\n                    // we need to add a tick mark and grid line at the left edge of the X axis.\n                    if (tickmarkOffset && (axis.min === 0 || axis.single)) {\n                        if (!ticks[-1]) {\n                            ticks[-1] = new Tick(axis, -1, null, true);\n                        }\n                        ticks[-1].render(-1);\n                    }\n\n                }\n\n                // alternate grid color\n                if (alternateGridColor) {\n                    each(tickPositions, function (pos, i) {\n                        to = tickPositions[i + 1] !== UNDEFINED ? tickPositions[i + 1] + tickmarkOffset : axis.max - tickmarkOffset; \n                        if (i % 2 === 0 && pos < axis.max && to <= axis.max + (chart.polar ? -tickmarkOffset : tickmarkOffset)) { // #2248, #4660\n                            if (!alternateBands[pos]) {\n                                alternateBands[pos] = new Highcharts.PlotLineOrBand(axis);\n                            }\n                            from = pos + tickmarkOffset; // #949\n                            alternateBands[pos].options = {\n                                from: isLog ? lin2log(from) : from,\n                                to: isLog ? lin2log(to) : to,\n                                color: alternateGridColor\n                            };\n                            alternateBands[pos].render();\n                            alternateBands[pos].isActive = true;\n                        }\n                    });\n                }\n\n                // custom plot lines and bands\n                if (!axis._addedPlotLB) { // only first time\n                    each((options.plotLines || []).concat(options.plotBands || []), function (plotLineOptions) {\n                        axis.addPlotBandOrLine(plotLineOptions);\n                    });\n                    axis._addedPlotLB = true;\n                }\n\n            } // end if hasData\n\n            // Remove inactive ticks\n            each([ticks, minorTicks, alternateBands], function (coll) {\n                var pos,\n                    i,\n                    forDestruction = [],\n                    delay = animation.duration,\n                    destroyInactiveItems = function () {\n                        i = forDestruction.length;\n                        while (i--) {\n                            // When resizing rapidly, the same items may be destroyed in different timeouts,\n                            // or the may be reactivated\n                            if (coll[forDestruction[i]] && !coll[forDestruction[i]].isActive) {\n                                coll[forDestruction[i]].destroy();\n                                delete coll[forDestruction[i]];\n                            }\n                        }\n\n                    };\n\n                for (pos in coll) {\n\n                    if (!coll[pos].isActive) {\n                        // Render to zero opacity\n                        coll[pos].render(pos, false, 0);\n                        coll[pos].isActive = false;\n                        forDestruction.push(pos);\n                    }\n                }\n\n                // When the objects are finished fading out, destroy them\n                syncTimeout(\n                    destroyInactiveItems, \n                    coll === alternateBands || !chart.hasRendered || !delay ? 0 : delay\n                );\n            });\n\n            // Static items. As the axis group is cleared on subsequent calls\n            // to render, these items are added outside the group.\n            // axis line\n            if (lineWidth) {\n                linePath = axis.getLinePath(lineWidth);\n                if (!axis.axisLine) {\n                    axis.axisLine = renderer.path(linePath)\n                        .attr({\n                            stroke: options.lineColor,\n                            'stroke-width': lineWidth,\n                            zIndex: 7\n                        })\n                        .add(axis.axisGroup);\n                } else {\n                    axis.axisLine.animate({ d: linePath });\n                }\n\n                // show or hide the line depending on options.showEmpty\n                axis.axisLine[showAxis ? 'show' : 'hide'](true);\n            }\n\n            if (axisTitle && showAxis) {\n\n                axisTitle[axisTitle.isNew ? 'attr' : 'animate'](\n                    axis.getTitlePosition()\n                );\n                axisTitle.isNew = false;\n            }\n\n            // Stacked totals:\n            if (stackLabelOptions && stackLabelOptions.enabled) {\n                axis.renderStackTotals();\n            }\n            // End stacked totals\n\n            axis.isDirty = false;\n        },\n\n        /**\n         * Redraw the axis to reflect changes in the data or axis extremes\n         */\n        redraw: function () {\n\n            if (this.visible) {\n                // render the axis\n                this.render();\n\n                // move plot lines and bands\n                each(this.plotLinesAndBands, function (plotLine) {\n                    plotLine.render();\n                });\n            }\n\n            // mark associated series as dirty and ready for redraw\n            each(this.series, function (series) {\n                series.isDirty = true;\n            });\n\n        },\n\n        /**\n         * Destroys an Axis instance.\n         */\n        destroy: function (keepEvents) {\n            var axis = this,\n                stacks = axis.stacks,\n                stackKey,\n                plotLinesAndBands = axis.plotLinesAndBands,\n                i;\n\n            // Remove the events\n            if (!keepEvents) {\n                removeEvent(axis);\n            }\n\n            // Destroy each stack total\n            for (stackKey in stacks) {\n                destroyObjectProperties(stacks[stackKey]);\n\n                stacks[stackKey] = null;\n            }\n\n            // Destroy collections\n            each([axis.ticks, axis.minorTicks, axis.alternateBands], function (coll) {\n                destroyObjectProperties(coll);\n            });\n            i = plotLinesAndBands.length;\n            while (i--) { // #1975\n                plotLinesAndBands[i].destroy();\n            }\n\n            // Destroy properties\n            each(['stackTotalGroup', 'axisLine', 'axisTitle', 'axisGroup', 'gridGroup', 'labelGroup', 'cross'], function (prop) {\n                if (axis[prop]) {\n                    axis[prop] = axis[prop].destroy();\n                }\n            });\n\n\n            this._addedPlotLB = this.chart._labelPanes = this.ordinalSlope = undefined; // #1611, #2887, #4314, #5316\n        },\n\n        /**\n         * Draw the crosshair\n         * \n         * @param  {Object} e The event arguments from the modified pointer event\n         * @param  {Object} point The Point object\n         */\n        drawCrosshair: function (e, point) {\n\n            var path,\n                options = this.crosshair,\n                pos,\n                attribs,\n                categorized,\n                strokeWidth;\n\n            // Use last available event when updating non-snapped crosshairs without\n            // mouse interaction (#5287)\n            if (!e) {\n                e = this.cross && this.cross.e;\n            }\n\n            if (\n                // Disabled in options\n                !this.crosshair ||\n                // Snap\n                ((defined(point) || !pick(options.snap, true)) === false)\n            ) {\n                this.hideCrosshair();\n            } else {\n\n                // Get the path\n                if (!pick(options.snap, true)) {\n                    pos = (this.horiz ? e.chartX - this.pos : this.len - e.chartY + this.pos);\n                } else if (defined(point)) {\n                    pos = this.isXAxis ? point.plotX : this.len - point.plotY; // #3834\n                }\n\n                if (this.isRadial) {\n                    path = this.getPlotLinePath(this.isXAxis ? point.x : pick(point.stackY, point.y)) || null; // #3189\n                } else {\n                    path = this.getPlotLinePath(null, null, null, null, pos) || null; // #3189\n                }\n\n                if (path === null) {\n                    this.hideCrosshair();\n                    return;\n                }\n\n                categorized = this.categories && !this.isRadial;\n                strokeWidth = pick(options.width, (categorized ? this.transA : 1));\n\n                // Draw the cross\n                if (this.cross) {\n                    this.cross\n                        .attr({\n                            d: path,\n                            visibility: 'visible',\n                            'stroke-width': strokeWidth // #4737\n                        });\n                } else {\n                    attribs = {\n                        'pointer-events': 'none', // #5259\n                        'stroke-width': strokeWidth,\n                        stroke: options.color || (categorized ? 'rgba(155,200,255,0.2)' : '#C0C0C0'),\n                        zIndex: pick(options.zIndex, 2)\n                    };\n                    if (options.dashStyle) {\n                        attribs.dashstyle = options.dashStyle;\n                    }\n                    this.cross = this.chart.renderer.path(path).attr(attribs).add();\n                }\n                this.cross.e = e;\n            }\n\n        },\n\n        /**\n         *    Hide the crosshair.\n         */\n        hideCrosshair: function () {\n            if (this.cross) {\n                this.cross.hide();\n            }\n        }\n    }; // end Axis\n\n    extend(Axis.prototype, AxisPlotLineOrBandExtension);\n\n    /**\n     * Set the tick positions to a time unit that makes sense, for example\n     * on the first of each month or on every Monday. Return an array\n     * with the time positions. Used in datetime axes as well as for grouping\n     * data on a datetime axis.\n     *\n     * @param {Object} normalizedInterval The interval in axis values (ms) and the count\n     * @param {Number} min The minimum in axis values\n     * @param {Number} max The maximum in axis values\n     * @param {Number} startOfWeek\n     */\n    Axis.prototype.getTimeTicks = function (normalizedInterval, min, max, startOfWeek) {\n        var tickPositions = [],\n            i,\n            higherRanks = {},\n            useUTC = defaultOptions.global.useUTC,\n            minYear, // used in months and years as a basis for Date.UTC()\n            minDate = new Date(min - getTZOffset(min)),\n            interval = normalizedInterval.unitRange,\n            count = normalizedInterval.count;\n\n        if (defined(min)) { // #1300\n            minDate[setMilliseconds](interval >= timeUnits.second ? 0 : // #3935\n                count * mathFloor(minDate.getMilliseconds() / count)); // #3652, #3654\n\n            if (interval >= timeUnits.second) { // second\n                minDate[setSeconds](interval >= timeUnits.minute ? 0 : // #3935\n                    count * mathFloor(minDate.getSeconds() / count));\n            }\n\n            if (interval >= timeUnits.minute) { // minute\n                minDate[setMinutes](interval >= timeUnits.hour ? 0 :\n                    count * mathFloor(minDate[getMinutes]() / count));\n            }\n\n            if (interval >= timeUnits.hour) { // hour\n                minDate[setHours](interval >= timeUnits.day ? 0 :\n                    count * mathFloor(minDate[getHours]() / count));\n            }\n\n            if (interval >= timeUnits.day) { // day\n                minDate[setDate](interval >= timeUnits.month ? 1 :\n                    count * mathFloor(minDate[getDate]() / count));\n            }\n\n            if (interval >= timeUnits.month) { // month\n                minDate[setMonth](interval >= timeUnits.year ? 0 :\n                    count * mathFloor(minDate[getMonth]() / count));\n                minYear = minDate[getFullYear]();\n            }\n\n            if (interval >= timeUnits.year) { // year\n                minYear -= minYear % count;\n                minDate[setFullYear](minYear);\n            }\n\n            // week is a special case that runs outside the hierarchy\n            if (interval === timeUnits.week) {\n                // get start of current week, independent of count\n                minDate[setDate](minDate[getDate]() - minDate[getDay]() +\n                    pick(startOfWeek, 1));\n            }\n\n\n            // get tick positions\n            i = 1;\n            if (timezoneOffset || getTimezoneOffset) {\n                minDate = minDate.getTime();\n                minDate = new Date(minDate + getTZOffset(minDate));\n            }\n            minYear = minDate[getFullYear]();\n            var time = minDate.getTime(),\n                minMonth = minDate[getMonth](),\n                minDateDate = minDate[getDate](),\n                variableDayLength = !useUTC || !!getTimezoneOffset, // #4951\n                localTimezoneOffset = (timeUnits.day +\n                        (useUTC ? getTZOffset(minDate) : minDate.getTimezoneOffset() * 60 * 1000)\n                    ) % timeUnits.day; // #950, #3359\n\n            // iterate and add tick positions at appropriate values\n            while (time < max) {\n                tickPositions.push(time);\n\n                // if the interval is years, use Date.UTC to increase years\n                if (interval === timeUnits.year) {\n                    time = makeTime(minYear + i * count, 0);\n\n                // if the interval is months, use Date.UTC to increase months\n                } else if (interval === timeUnits.month) {\n                    time = makeTime(minYear, minMonth + i * count);\n\n                // if we're using global time, the interval is not fixed as it jumps\n                // one hour at the DST crossover\n                } else if (variableDayLength && (interval === timeUnits.day || interval === timeUnits.week)) {\n                    time = makeTime(minYear, minMonth, minDateDate +\n                        i * count * (interval === timeUnits.day ? 1 : 7));\n\n                // else, the interval is fixed and we use simple addition\n                } else {\n                    time += interval * count;\n                }\n\n                i++;\n            }\n\n            // push the last time\n            tickPositions.push(time);\n\n\n            // mark new days if the time is dividible by day (#1649, #1760)\n            each(grep(tickPositions, function (time) {\n                return interval <= timeUnits.hour && time % timeUnits.day === localTimezoneOffset;\n            }), function (time) {\n                higherRanks[time] = 'day';\n            });\n        }\n\n\n        // record information on the chosen unit - for dynamic label formatter\n        tickPositions.info = extend(normalizedInterval, {\n            higherRanks: higherRanks,\n            totalRange: interval * count\n        });\n\n        return tickPositions;\n    };\n\n    /**\n     * Get a normalized tick interval for dates. Returns a configuration object with\n     * unit range (interval), count and name. Used to prepare data for getTimeTicks.\n     * Previously this logic was part of getTimeTicks, but as getTimeTicks now runs\n     * of segments in stock charts, the normalizing logic was extracted in order to\n     * prevent it for running over again for each segment having the same interval.\n     * #662, #697.\n     */\n    Axis.prototype.normalizeTimeTickInterval = function (tickInterval, unitsOption) {\n        var units = unitsOption || [[\n                'millisecond', // unit name\n                [1, 2, 5, 10, 20, 25, 50, 100, 200, 500] // allowed multiples\n            ], [\n                'second',\n                [1, 2, 5, 10, 15, 30]\n            ], [\n                'minute',\n                [1, 2, 5, 10, 15, 30]\n            ], [\n                'hour',\n                [1, 2, 3, 4, 6, 8, 12]\n            ], [\n                'day',\n                [1, 2]\n            ], [\n                'week',\n                [1, 2]\n            ], [\n                'month',\n                [1, 2, 3, 4, 6]\n            ], [\n                'year',\n                null\n            ]],\n            unit = units[units.length - 1], // default unit is years\n            interval = timeUnits[unit[0]],\n            multiples = unit[1],\n            count,\n            i;\n\n        // loop through the units to find the one that best fits the tickInterval\n        for (i = 0; i < units.length; i++) {\n            unit = units[i];\n            interval = timeUnits[unit[0]];\n            multiples = unit[1];\n\n\n            if (units[i + 1]) {\n                // lessThan is in the middle between the highest multiple and the next unit.\n                var lessThan = (interval * multiples[multiples.length - 1] +\n                            timeUnits[units[i + 1][0]]) / 2;\n\n                // break and keep the current unit\n                if (tickInterval <= lessThan) {\n                    break;\n                }\n            }\n        }\n\n        // prevent 2.5 years intervals, though 25, 250 etc. are allowed\n        if (interval === timeUnits.year && tickInterval < 5 * interval) {\n            multiples = [1, 2, 5];\n        }\n\n        // get the count\n        count = normalizeTickInterval(\n            tickInterval / interval,\n            multiples,\n            unit[0] === 'year' ? mathMax(getMagnitude(tickInterval / interval), 1) : 1 // #1913, #2360\n        );\n\n        return {\n            unitRange: interval,\n            count: count,\n            unitName: unit[0]\n        };\n    };\n    /**\n     * Methods defined on the Axis prototype\n     */\n\n    /**\n     * Set the tick positions of a logarithmic axis\n     */\n    Axis.prototype.getLogTickPositions = function (interval, min, max, minor) {\n        var axis = this,\n            options = axis.options,\n            axisLength = axis.len,\n            lin2log = axis.lin2log,\n            log2lin = axis.log2lin,\n            // Since we use this method for both major and minor ticks,\n            // use a local variable and return the result\n            positions = [];\n\n        // Reset\n        if (!minor) {\n            axis._minorAutoInterval = null;\n        }\n\n        // First case: All ticks fall on whole logarithms: 1, 10, 100 etc.\n        if (interval >= 0.5) {\n            interval = mathRound(interval);\n            positions = axis.getLinearTickPositions(interval, min, max);\n\n        // Second case: We need intermediary ticks. For example\n        // 1, 2, 4, 6, 8, 10, 20, 40 etc.\n        } else if (interval >= 0.08) {\n            var roundedMin = mathFloor(min),\n                intermediate,\n                i,\n                j,\n                len,\n                pos,\n                lastPos,\n                break2;\n\n            if (interval > 0.3) {\n                intermediate = [1, 2, 4];\n            } else if (interval > 0.15) { // 0.2 equals five minor ticks per 1, 10, 100 etc\n                intermediate = [1, 2, 4, 6, 8];\n            } else { // 0.1 equals ten minor ticks per 1, 10, 100 etc\n                intermediate = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n            }\n\n            for (i = roundedMin; i < max + 1 && !break2; i++) {\n                len = intermediate.length;\n                for (j = 0; j < len && !break2; j++) {\n                    pos = log2lin(lin2log(i) * intermediate[j]);\n                    if (pos > min && (!minor || lastPos <= max) && lastPos !== UNDEFINED) { // #1670, lastPos is #3113\n                        positions.push(lastPos);\n                    }\n\n                    if (lastPos > max) {\n                        break2 = true;\n                    }\n                    lastPos = pos;\n                }\n            }\n\n        // Third case: We are so deep in between whole logarithmic values that\n        // we might as well handle the tick positions like a linear axis. For\n        // example 1.01, 1.02, 1.03, 1.04.\n        } else {\n            var realMin = lin2log(min),\n                realMax = lin2log(max),\n                tickIntervalOption = options[minor ? 'minorTickInterval' : 'tickInterval'],\n                filteredTickIntervalOption = tickIntervalOption === 'auto' ? null : tickIntervalOption,\n                tickPixelIntervalOption = options.tickPixelInterval / (minor ? 5 : 1),\n                totalPixelLength = minor ? axisLength / axis.tickPositions.length : axisLength;\n\n            interval = pick(\n                filteredTickIntervalOption,\n                axis._minorAutoInterval,\n                (realMax - realMin) * tickPixelIntervalOption / (totalPixelLength || 1)\n            );\n\n            interval = normalizeTickInterval(\n                interval,\n                null,\n                getMagnitude(interval)\n            );\n\n            positions = map(axis.getLinearTickPositions(\n                interval,\n                realMin,\n                realMax\n            ), log2lin);\n\n            if (!minor) {\n                axis._minorAutoInterval = interval / 5;\n            }\n        }\n\n        // Set the axis-level tickInterval variable\n        if (!minor) {\n            axis.tickInterval = interval;\n        }\n        return positions;\n    };\n\n    Axis.prototype.log2lin = function (num) {\n        return math.log(num) / math.LN10;\n    };\n\n    Axis.prototype.lin2log = function (num) {\n        return math.pow(10, num);\n    };\n    /**\n     * The tooltip object\n     * @param {Object} chart The chart instance\n     * @param {Object} options Tooltip options\n     */\n    var Tooltip = Highcharts.Tooltip = function () {\n        this.init.apply(this, arguments);\n    };\n\n    Tooltip.prototype = {\n\n        init: function (chart, options) {\n\n            var borderWidth = options.borderWidth,\n                style = options.style,\n                padding = pInt(style.padding);\n\n            // Save the chart and options\n            this.chart = chart;\n            this.options = options;\n\n            // Keep track of the current series\n            //this.currentSeries = UNDEFINED;\n\n            // List of crosshairs\n            this.crosshairs = [];\n\n            // Current values of x and y when animating\n            this.now = { x: 0, y: 0 };\n\n            // The tooltip is initially hidden\n            this.isHidden = true;\n\n\n            // create the label\n            this.label = chart.renderer.label('', 0, 0, options.shape || 'callout', null, null, options.useHTML, null, 'tooltip')\n                .attr({\n                    padding: padding,\n                    fill: options.backgroundColor,\n                    'stroke-width': borderWidth,\n                    r: options.borderRadius,\n                    zIndex: 8,\n                    display: 'none' // #2301, #2657, #3532, #5570\n                })\n                .css(style)\n                .css({ padding: 0 }) // Remove it from VML, the padding is applied as an attribute instead (#1117)\n                .add();\n\n            // When using canVG the shadow shows up as a gray circle\n            // even if the tooltip is hidden.\n            if (!useCanVG) {\n                this.label.shadow(options.shadow);\n            }\n\n            // Public property for getting the shared state.\n            this.shared = options.shared;\n        },\n\n        /**\n         * Destroy the tooltip and its elements.\n         */\n        destroy: function () {\n            // Destroy and clear local variables\n            if (this.label) {\n                this.label = this.label.destroy();\n            }\n            clearTimeout(this.hideTimer);\n            clearTimeout(this.tooltipTimeout);\n        },\n\n        /**\n         * Provide a soft movement for the tooltip\n         *\n         * @param {Number} x\n         * @param {Number} y\n         * @private\n         */\n        move: function (x, y, anchorX, anchorY) {\n            var tooltip = this,\n                now = tooltip.now,\n                animate = tooltip.options.animation !== false && !tooltip.isHidden &&\n                    // When we get close to the target position, abort animation and land on the right place (#3056)\n                    (mathAbs(x - now.x) > 1 || mathAbs(y - now.y) > 1),\n                skipAnchor = tooltip.followPointer || tooltip.len > 1;\n\n            // Get intermediate values for animation\n            extend(now, {\n                x: animate ? (2 * now.x + x) / 3 : x,\n                y: animate ? (now.y + y) / 2 : y,\n                anchorX: skipAnchor ? UNDEFINED : animate ? (2 * now.anchorX + anchorX) / 3 : anchorX,\n                anchorY: skipAnchor ? UNDEFINED : animate ? (now.anchorY + anchorY) / 2 : anchorY\n            });\n\n            // Move to the intermediate value\n            tooltip.label.attr(now);\n\n\n            // Run on next tick of the mouse tracker\n            if (animate) {\n\n                // Never allow two timeouts\n                clearTimeout(this.tooltipTimeout);\n\n                // Set the fixed interval ticking for the smooth tooltip\n                this.tooltipTimeout = setTimeout(function () {\n                    // The interval function may still be running during destroy, so check that the chart is really there before calling.\n                    if (tooltip) {\n                        tooltip.move(x, y, anchorX, anchorY);\n                    }\n                }, 32);\n\n            }\n        },\n\n        /**\n         * Hide the tooltip\n         */\n        hide: function (delay) {\n            var tooltip = this;\n            clearTimeout(this.hideTimer); // disallow duplicate timers (#1728, #1766)\n            delay = pick(delay, this.options.hideDelay, 500);\n            if (!this.isHidden) {\n                this.hideTimer = syncTimeout(function () {\n                    tooltip.label[delay ? 'fadeOut' : 'hide']();\n                    tooltip.isHidden = true;\n                }, delay);\n            }\n        },\n\n        /**\n         * Extendable method to get the anchor position of the tooltip\n         * from a point or set of points\n         */\n        getAnchor: function (points, mouseEvent) {\n            var ret,\n                chart = this.chart,\n                inverted = chart.inverted,\n                plotTop = chart.plotTop,\n                plotLeft = chart.plotLeft,\n                plotX = 0,\n                plotY = 0,\n                yAxis,\n                xAxis;\n\n            points = splat(points);\n\n            // Pie uses a special tooltipPos\n            ret = points[0].tooltipPos;\n\n            // When tooltip follows mouse, relate the position to the mouse\n            if (this.followPointer && mouseEvent) {\n                if (mouseEvent.chartX === UNDEFINED) {\n                    mouseEvent = chart.pointer.normalize(mouseEvent);\n                }\n                ret = [\n                    mouseEvent.chartX - chart.plotLeft,\n                    mouseEvent.chartY - plotTop\n                ];\n            }\n            // When shared, use the average position\n            if (!ret) {\n                each(points, function (point) {\n                    yAxis = point.series.yAxis;\n                    xAxis = point.series.xAxis;\n                    plotX += point.plotX  + (!inverted && xAxis ? xAxis.left - plotLeft : 0);\n                    plotY += (point.plotLow ? (point.plotLow + point.plotHigh) / 2 : point.plotY) +\n                        (!inverted && yAxis ? yAxis.top - plotTop : 0); // #1151\n                });\n\n                plotX /= points.length;\n                plotY /= points.length;\n\n                ret = [\n                    inverted ? chart.plotWidth - plotY : plotX,\n                    this.shared && !inverted && points.length > 1 && mouseEvent ?\n                        mouseEvent.chartY - plotTop : // place shared tooltip next to the mouse (#424)\n                        inverted ? chart.plotHeight - plotX : plotY\n                ];\n            }\n\n            return map(ret, mathRound);\n        },\n\n        /**\n         * Place the tooltip in a chart without spilling over\n         * and not covering the point it self.\n         */\n        getPosition: function (boxWidth, boxHeight, point) {\n\n            var chart = this.chart,\n                distance = this.distance,\n                ret = {},\n                h = point.h || 0, // #4117\n                swapped,\n                first = ['y', chart.chartHeight, boxHeight, point.plotY + chart.plotTop, chart.plotTop, chart.plotTop + chart.plotHeight],\n                second = ['x', chart.chartWidth, boxWidth, point.plotX + chart.plotLeft, chart.plotLeft, chart.plotLeft + chart.plotWidth],\n                // The far side is right or bottom\n                preferFarSide = !this.followPointer && pick(point.ttBelow, !chart.inverted === !!point.negative), // #4984\n                /**\n                 * Handle the preferred dimension. When the preferred dimension is tooltip\n                 * on top or bottom of the point, it will look for space there.\n                 */\n                firstDimension = function (dim, outerSize, innerSize, point, min, max) {\n                    var roomLeft = innerSize < point - distance,\n                        roomRight = point + distance + innerSize < outerSize,\n                        alignedLeft = point - distance - innerSize,\n                        alignedRight = point + distance;\n\n                    if (preferFarSide && roomRight) {\n                        ret[dim] = alignedRight;\n                    } else if (!preferFarSide && roomLeft) {\n                        ret[dim] = alignedLeft;\n                    } else if (roomLeft) {\n                        ret[dim] = mathMin(max - innerSize, alignedLeft - h < 0 ? alignedLeft : alignedLeft - h);\n                    } else if (roomRight) {\n                        ret[dim] = mathMax(min, alignedRight + h + innerSize > outerSize ? alignedRight : alignedRight + h);\n                    } else {\n                        return false;\n                    }\n                },\n                /**\n                 * Handle the secondary dimension. If the preferred dimension is tooltip\n                 * on top or bottom of the point, the second dimension is to align the tooltip\n                 * above the point, trying to align center but allowing left or right\n                 * align within the chart box.\n                 */\n                secondDimension = function (dim, outerSize, innerSize, point) {\n                    var retVal;\n\n                    // Too close to the edge, return false and swap dimensions\n                    if (point < distance || point > outerSize - distance) {\n                        retVal = false;\n                    // Align left/top\n                    } else if (point < innerSize / 2) {\n                        ret[dim] = 1;\n                    // Align right/bottom\n                    } else if (point > outerSize - innerSize / 2) {\n                        ret[dim] = outerSize - innerSize - 2;\n                    // Align center\n                    } else {\n                        ret[dim] = point - innerSize / 2;\n                    }\n                    return retVal;\n                },\n                /**\n                 * Swap the dimensions\n                 */\n                swap = function (count) {\n                    var temp = first;\n                    first = second;\n                    second = temp;\n                    swapped = count;\n                },\n                run = function () {\n                    if (firstDimension.apply(0, first) !== false) {\n                        if (secondDimension.apply(0, second) === false && !swapped) {\n                            swap(true);\n                            run();\n                        }\n                    } else if (!swapped) {\n                        swap(true);\n                        run();\n                    } else {\n                        ret.x = ret.y = 0;\n                    }\n                };\n\n            // Under these conditions, prefer the tooltip on the side of the point\n            if (chart.inverted || this.len > 1) {\n                swap();\n            }\n            run();\n\n            return ret;\n\n        },\n\n        /**\n         * In case no user defined formatter is given, this will be used. Note that the context\n         * here is an object holding point, series, x, y etc.\n         */\n        defaultFormatter: function (tooltip) {\n            var items = this.points || splat(this),\n                s;\n\n            // build the header\n            s = [tooltip.tooltipFooterHeaderFormatter(items[0])]; //#3397: abstraction to enable formatting of footer and header\n\n            // build the values\n            s = s.concat(tooltip.bodyFormatter(items));\n\n            // footer\n            s.push(tooltip.tooltipFooterHeaderFormatter(items[0], true)); //#3397: abstraction to enable formatting of footer and header\n\n            return s.join('');\n        },\n\n        /**\n         * Refresh the tooltip's text and position.\n         * @param {Object} point\n         */\n        refresh: function (point, mouseEvent) {\n            var tooltip = this,\n                chart = tooltip.chart,\n                label = tooltip.label,\n                options = tooltip.options,\n                x,\n                y,\n                anchor,\n                textConfig = {},\n                text,\n                pointConfig = [],\n                formatter = options.formatter || tooltip.defaultFormatter,\n                hoverPoints = chart.hoverPoints,\n                borderColor,\n                shared = tooltip.shared,\n                currentSeries;\n\n            clearTimeout(this.hideTimer);\n\n            // get the reference point coordinates (pie charts use tooltipPos)\n            tooltip.followPointer = splat(point)[0].series.tooltipOptions.followPointer;\n            anchor = tooltip.getAnchor(point, mouseEvent);\n            x = anchor[0];\n            y = anchor[1];\n\n            // shared tooltip, array is sent over\n            if (shared && !(point.series && point.series.noSharedTooltip)) {\n\n                // hide previous hoverPoints and set new\n\n                chart.hoverPoints = point;\n                if (hoverPoints) {\n                    each(hoverPoints, function (point) {\n                        point.setState();\n                    });\n                }\n\n                each(point, function (item) {\n                    item.setState(HOVER_STATE);\n\n                    pointConfig.push(item.getLabelConfig());\n                });\n\n                textConfig = {\n                    x: point[0].category,\n                    y: point[0].y\n                };\n                textConfig.points = pointConfig;\n                this.len = pointConfig.length;\n                point = point[0];\n\n            // single point tooltip\n            } else {\n                textConfig = point.getLabelConfig();\n            }\n            text = formatter.call(textConfig, tooltip);\n\n            // register the current series\n            currentSeries = point.series;\n            this.distance = pick(currentSeries.tooltipOptions.distance, 16);\n\n            // update the inner HTML\n            if (text === false) {\n                this.hide();\n            } else {\n\n                // show it\n                if (tooltip.isHidden) {\n                    stop(label);\n                    label.attr({\n                        opacity: 1,\n                        display: 'block'\n                    }).show();\n                }\n\n                // update text\n                label.attr({\n                    text: text\n                });\n\n                // set the stroke color of the box\n                borderColor = options.borderColor || point.color || currentSeries.color || '#606060';\n                label.attr({\n                    stroke: borderColor\n                });\n                tooltip.updatePosition({\n                    plotX: x,\n                    plotY: y,\n                    negative: point.negative,\n                    ttBelow: point.ttBelow,\n                    h: anchor[2] || 0\n                });\n\n                this.isHidden = false;\n            }\n            fireEvent(chart, 'tooltipRefresh', {\n                text: text,\n                x: x + chart.plotLeft,\n                y: y + chart.plotTop,\n                borderColor: borderColor\n            });\n        },\n\n        /**\n         * Find the new position and perform the move\n         */\n        updatePosition: function (point) {\n            var chart = this.chart,\n                label = this.label,\n                pos = (this.options.positioner || this.getPosition).call(\n                    this,\n                    label.width,\n                    label.height,\n                    point\n                );\n\n            // do the move\n            this.move(\n                mathRound(pos.x),\n                mathRound(pos.y || 0), // can be undefined (#3977)\n                point.plotX + chart.plotLeft,\n                point.plotY + chart.plotTop\n            );\n        },\n\n        /**\n         * Get the best X date format based on the closest point range on the axis.\n         */\n        getXDateFormat: function (point, options, xAxis) {\n            var xDateFormat,\n                dateTimeLabelFormats = options.dateTimeLabelFormats,\n                closestPointRange = xAxis && xAxis.closestPointRange,\n                n,\n                blank = '01-01 00:00:00.000',\n                strpos = {\n                    millisecond: 15,\n                    second: 12,\n                    minute: 9,\n                    hour: 6,\n                    day: 3\n                },\n                date,\n                lastN = 'millisecond'; // for sub-millisecond data, #4223\n\n            if (closestPointRange) {\n                date = dateFormat('%m-%d %H:%M:%S.%L', point.x);\n                for (n in timeUnits) {\n\n                    // If the range is exactly one week and we're looking at a Sunday/Monday, go for the week format\n                    if (closestPointRange === timeUnits.week && +dateFormat('%w', point.x) === xAxis.options.startOfWeek &&\n                            date.substr(6) === blank.substr(6)) {\n                        n = 'week';\n                        break;\n                    }\n\n                    // The first format that is too great for the range\n                    if (timeUnits[n] > closestPointRange) {\n                        n = lastN;\n                        break;\n                    }\n\n                    // If the point is placed every day at 23:59, we need to show\n                    // the minutes as well. #2637.\n                    if (strpos[n] && date.substr(strpos[n]) !== blank.substr(strpos[n])) {\n                        break;\n                    }\n\n                    // Weeks are outside the hierarchy, only apply them on Mondays/Sundays like in the first condition\n                    if (n !== 'week') {\n                        lastN = n;\n                    }\n                }\n\n                if (n) {\n                    xDateFormat = dateTimeLabelFormats[n];\n                }\n            } else {\n                xDateFormat = dateTimeLabelFormats.day;\n            }\n\n            return xDateFormat || dateTimeLabelFormats.year; // #2546, 2581\n        },\n\n        /**\n         * Format the footer/header of the tooltip\n         * #3397: abstraction to enable formatting of footer and header\n         */\n        tooltipFooterHeaderFormatter: function (labelConfig, isFooter) {\n            var footOrHead = isFooter ? 'footer' : 'header',\n                series = labelConfig.series,\n                tooltipOptions = series.tooltipOptions,\n                xDateFormat = tooltipOptions.xDateFormat,\n                xAxis = series.xAxis,\n                isDateTime = xAxis && xAxis.options.type === 'datetime' && isNumber(labelConfig.key),\n                formatString = tooltipOptions[footOrHead + 'Format'];\n\n            // Guess the best date format based on the closest point distance (#568, #3418)\n            if (isDateTime && !xDateFormat) {\n                xDateFormat = this.getXDateFormat(labelConfig, tooltipOptions, xAxis);\n            }\n\n            // Insert the footer date format if any\n            if (isDateTime && xDateFormat) {\n                formatString = formatString.replace('{point.key}', '{point.key:' + xDateFormat + '}');\n            }\n\n            return format(formatString, {\n                point: labelConfig,\n                series: series\n            });\n        },\n\n        /**\n         * Build the body (lines) of the tooltip by iterating over the items and returning one entry for each item,\n         * abstracting this functionality allows to easily overwrite and extend it.\n         */\n        bodyFormatter: function (items) {\n            return map(items, function (item) {\n                var tooltipOptions = item.series.tooltipOptions;\n                return (tooltipOptions.pointFormatter || item.point.tooltipFormatter).call(item.point, tooltipOptions.pointFormat);\n            });\n        }\n\n    };\n\n    var hoverChartIndex;\n\n    // Global flag for touch support\n    hasTouch = doc && doc.documentElement.ontouchstart !== UNDEFINED;\n\n    /**\n     * The mouse tracker object. All methods starting with \"on\" are primary DOM event handlers.\n     * Subsequent methods should be named differently from what they are doing.\n     * @param {Object} chart The Chart instance\n     * @param {Object} options The root options object\n     */\n    var Pointer = Highcharts.Pointer = function (chart, options) {\n        this.init(chart, options);\n    };\n\n    Pointer.prototype = {\n        /**\n         * Initialize Pointer\n         */\n        init: function (chart, options) {\n\n            var chartOptions = options.chart,\n                chartEvents = chartOptions.events,\n                zoomType = useCanVG ? '' : chartOptions.zoomType,\n                inverted = chart.inverted,\n                zoomX,\n                zoomY;\n\n            // Store references\n            this.options = options;\n            this.chart = chart;\n\n            // Zoom status\n            this.zoomX = zoomX = /x/.test(zoomType);\n            this.zoomY = zoomY = /y/.test(zoomType);\n            this.zoomHor = (zoomX && !inverted) || (zoomY && inverted);\n            this.zoomVert = (zoomY && !inverted) || (zoomX && inverted);\n            this.hasZoom = zoomX || zoomY;\n\n            // Do we need to handle click on a touch device?\n            this.runChartClick = chartEvents && !!chartEvents.click;\n\n            this.pinchDown = [];\n            this.lastValidTouch = {};\n\n            if (Highcharts.Tooltip && options.tooltip.enabled) {\n                chart.tooltip = new Tooltip(chart, options.tooltip);\n                this.followTouchMove = pick(options.tooltip.followTouchMove, true);\n            }\n\n            this.setDOMEvents();\n        },\n\n        /**\n         * Add crossbrowser support for chartX and chartY\n         * @param {Object} e The event object in standard browsers\n         */\n        normalize: function (e, chartPosition) {\n            var chartX,\n                chartY,\n                ePos;\n\n            // IE normalizing\n            e = e || win.event;\n            if (!e.target) {\n                e.target = e.srcElement;\n            }\n\n            // iOS (#2757)\n            ePos = e.touches ?  (e.touches.length ? e.touches.item(0) : e.changedTouches[0]) : e;\n\n            // Get mouse position\n            if (!chartPosition) {\n                this.chartPosition = chartPosition = offset(this.chart.container);\n            }\n\n            // chartX and chartY\n            if (ePos.pageX === UNDEFINED) { // IE < 9. #886.\n                chartX = mathMax(e.x, e.clientX - chartPosition.left); // #2005, #2129: the second case is\n                    // for IE10 quirks mode within framesets\n                chartY = e.y;\n            } else {\n                chartX = ePos.pageX - chartPosition.left;\n                chartY = ePos.pageY - chartPosition.top;\n            }\n\n            return extend(e, {\n                chartX: mathRound(chartX),\n                chartY: mathRound(chartY)\n            });\n        },\n\n        /**\n         * Get the click position in terms of axis values.\n         *\n         * @param {Object} e A pointer event\n         */\n        getCoordinates: function (e) {\n            var coordinates = {\n                xAxis: [],\n                yAxis: []\n            };\n\n            each(this.chart.axes, function (axis) {\n                coordinates[axis.isXAxis ? 'xAxis' : 'yAxis'].push({\n                    axis: axis,\n                    value: axis.toValue(e[axis.horiz ? 'chartX' : 'chartY'])\n                });\n            });\n            return coordinates;\n        },\n\n        /**\n         * With line type charts with a single tracker, get the point closest to the mouse.\n         * Run Point.onMouseOver and display tooltip for the point or points.\n         */\n        runPointActions: function (e) {\n\n            var pointer = this,\n                chart = pointer.chart,\n                series = chart.series,\n                tooltip = chart.tooltip,\n                shared = tooltip ? tooltip.shared : false,\n                followPointer,\n                updatePosition = true,\n                hoverPoint = chart.hoverPoint,\n                hoverSeries = chart.hoverSeries,\n                i,\n                anchor,\n                noSharedTooltip,\n                stickToHoverSeries,\n                directTouch,\n                kdpoints = [],\n                kdpointT;\n\n            // For hovering over the empty parts of the plot area (hoverSeries is undefined).\n            // If there is one series with point tracking (combo chart), don't go to nearest neighbour.\n            if (!shared && !hoverSeries) {\n                for (i = 0; i < series.length; i++) {\n                    if (series[i].directTouch || !series[i].options.stickyTracking) {\n                        series = [];\n                    }\n                }\n            }\n\n            // If it has a hoverPoint and that series requires direct touch (like columns, #3899), or we're on\n            // a noSharedTooltip series among shared tooltip series (#4546), use the hoverPoint . Otherwise,\n            // search the k-d tree.\n            stickToHoverSeries = hoverSeries && (shared ? hoverSeries.noSharedTooltip : hoverSeries.directTouch);\n            if (stickToHoverSeries && hoverPoint) {\n                kdpoints = [hoverPoint];\n\n            // Handle shared tooltip or cases where a series is not yet hovered\n            } else {\n                // When we have non-shared tooltip and sticky tracking is disabled,\n                // search for the closest point only on hovered series: #5533, #5476\n                if (!shared && hoverSeries && !hoverSeries.options.stickyTracking) {\n                    series = [hoverSeries];\n                }\n                // Find nearest points on all series\n                each(series, function (s) {\n                    // Skip hidden series\n                    noSharedTooltip = s.noSharedTooltip && shared;\n                    directTouch = !shared && s.directTouch;\n                    if (s.visible && !noSharedTooltip && !directTouch && pick(s.options.enableMouseTracking, true)) { // #3821\n                        kdpointT = s.searchPoint(e, !noSharedTooltip && s.kdDimensions === 1); // #3828\n                        if (kdpointT && kdpointT.series) { // Point.series becomes null when reset and before redraw (#5197)\n                            kdpoints.push(kdpointT);\n                        }\n                    }\n                });\n\n                // Sort kdpoints by distance to mouse pointer\n                kdpoints.sort(function (p1, p2) {\n                    var isCloserX = p1.distX - p2.distX,\n                        isCloser = p1.dist - p2.dist,\n                        isAbove = p1.series.group.zIndex > p2.series.group.zIndex ? -1 : 1;\n                    // We have two points which are not in the same place on xAxis and shared tooltip:\n                    if (isCloserX !== 0) {\n                        return isCloserX;\n                    }\n                    // Points are not exactly in the same place on x/yAxis:\n                    if (isCloser !== 0) {\n                        return isCloser;\n                    }\n                    // The same xAxis and yAxis position, sort by z-index:\n                    return isAbove;\n                });\n            }\n\n            // Remove points with different x-positions, required for shared tooltip and crosshairs (#4645):\n            if (shared) {\n                i = kdpoints.length;\n                while (i--) {\n                    if (kdpoints[i].clientX !== kdpoints[0].clientX || kdpoints[i].series.noSharedTooltip) {\n                        kdpoints.splice(i, 1);\n                    }\n                }\n            }\n\n            // Refresh tooltip for kdpoint if new hover point or tooltip was hidden // #3926, #4200\n            if (kdpoints[0] && (kdpoints[0] !== pointer.hoverPoint || (tooltip && tooltip.isHidden))) {\n                // Draw tooltip if necessary\n                if (shared && !kdpoints[0].series.noSharedTooltip) {\n                    // Do mouseover on all points (#3919, #3985, #4410)\n                    for (i = 0; i >= 0; i--) {\n                        kdpoints[i].onMouseOver(e, kdpoints[i] !== ((hoverSeries && hoverSeries.directTouch && hoverPoint) || kdpoints[0]));\n                    }\n                    // Make sure that the hoverPoint and hoverSeries are stored for events (e.g. click), #5622\n                    if (hoverSeries && hoverSeries.directTouch && hoverPoint && hoverPoint !== kdpoints[0]) {\n                        hoverPoint.onMouseOver(e, false);\n                    }\n                    if (kdpoints.length && tooltip) {\n                        // Keep the order of series in tooltip:\n                        tooltip.refresh(kdpoints.sort(function (p1, p2) {\n                            return p1.series.index - p2.series.index;\n                        }), e);\n                    }\n                } else {\n                    if (tooltip) {\n                        tooltip.refresh(kdpoints[0], e);\n                    }\n                    if (!hoverSeries || !hoverSeries.directTouch) { // #4448\n                        kdpoints[0].onMouseOver(e);\n                    }\n                }\n                pointer.prevKDPoint = kdpoints[0];\n                updatePosition = false;\n            }\n            // Update positions (regardless of kdpoint or hoverPoint)\n            if (updatePosition) {\n                followPointer = hoverSeries && hoverSeries.tooltipOptions.followPointer;\n                if (tooltip && followPointer && !tooltip.isHidden) {\n                    anchor = tooltip.getAnchor([{}], e);\n                    tooltip.updatePosition({ plotX: anchor[0], plotY: anchor[1] });\n                }\n            }\n\n            // Start the event listener to pick up the tooltip and crosshairs\n            if (!pointer._onDocumentMouseMove) {\n                pointer._onDocumentMouseMove = function (e) {\n                    if (charts[hoverChartIndex]) {\n                        charts[hoverChartIndex].pointer.onDocumentMouseMove(e);\n                    }\n                };\n                addEvent(doc, 'mousemove', pointer._onDocumentMouseMove);\n            }\n\n            // Crosshair. For each hover point, loop over axes and draw cross if that point\n            // belongs to the axis (#4927).\n            each(shared ? kdpoints : [pick(hoverPoint, kdpoints[0])], function drawPointCrosshair(point) { // #5269\n                each(chart.axes, function drawAxisCrosshair(axis) {\n                    // In case of snap = false, point is undefined, and we draw the crosshair anyway (#5066)\n                    if (!point || point.series && point.series[axis.coll] === axis) { // #5658\n                        axis.drawCrosshair(e, point);\n                    }\n                });\n            });\n        },\n\n        /**\n         * Reset the tracking by hiding the tooltip, the hover series state and the hover point\n         *\n         * @param allowMove {Boolean} Instead of destroying the tooltip altogether, allow moving it if possible\n         */\n        reset: function (allowMove, delay) {\n            var pointer = this,\n                chart = pointer.chart,\n                hoverSeries = chart.hoverSeries,\n                hoverPoint = chart.hoverPoint,\n                hoverPoints = chart.hoverPoints,\n                tooltip = chart.tooltip,\n                tooltipPoints = tooltip && tooltip.shared ? hoverPoints : hoverPoint;\n\n            // Check if the points have moved outside the plot area (#1003, #4736, #5101)\n            if (allowMove && tooltipPoints) {\n                each(splat(tooltipPoints), function (point) {\n                    if (point.series.isCartesian && point.plotX === undefined) {\n                        allowMove = false;\n                    }\n                });\n            }\n        \n            // Just move the tooltip, #349\n            if (allowMove) {\n                if (tooltip && tooltipPoints) {\n                    tooltip.refresh(tooltipPoints);\n                    if (hoverPoint) { // #2500\n                        hoverPoint.setState(hoverPoint.state, true);\n                        each(chart.axes, function (axis) {\n                            if (axis.crosshair) {\n                                axis.drawCrosshair(null, hoverPoint);\n                            }\n                        });\n                    }\n                }\n\n            // Full reset\n            } else {\n\n                if (hoverPoint) {\n                    hoverPoint.onMouseOut();\n                }\n\n                if (hoverPoints) {\n                    each(hoverPoints, function (point) {\n                        point.setState();\n                    });\n                }\n\n                if (hoverSeries) {\n                    hoverSeries.onMouseOut();\n                }\n\n                if (tooltip) {\n                    tooltip.hide(delay);\n                }\n\n                if (pointer._onDocumentMouseMove) {\n                    removeEvent(doc, 'mousemove', pointer._onDocumentMouseMove);\n                    pointer._onDocumentMouseMove = null;\n                }\n\n                // Remove crosshairs\n                each(chart.axes, function (axis) {\n                    axis.hideCrosshair();\n                });\n\n                pointer.hoverX = pointer.prevKDPoint = chart.hoverPoints = chart.hoverPoint = null;\n            }\n        },\n\n        /**\n         * Scale series groups to a certain scale and translation\n         */\n        scaleGroups: function (attribs, clip) {\n\n            var chart = this.chart,\n                seriesAttribs;\n\n            // Scale each series\n            each(chart.series, function (series) {\n                seriesAttribs = attribs || series.getPlotBox(); // #1701\n                if (series.xAxis && series.xAxis.zoomEnabled) {\n                    series.group.attr(seriesAttribs);\n                    if (series.markerGroup) {\n                        series.markerGroup.attr(seriesAttribs);\n                        series.markerGroup.clip(clip ? chart.clipRect : null);\n                    }\n                    if (series.dataLabelsGroup) {\n                        series.dataLabelsGroup.attr(seriesAttribs);\n                    }\n                }\n            });\n\n            // Clip\n            chart.clipRect.attr(clip || chart.clipBox);\n        },\n\n        /**\n         * Start a drag operation\n         */\n        dragStart: function (e) {\n            var chart = this.chart;\n\n            // Record the start position\n            chart.mouseIsDown = e.type;\n            chart.cancelClick = false;\n            chart.mouseDownX = this.mouseDownX = e.chartX;\n            chart.mouseDownY = this.mouseDownY = e.chartY;\n        },\n\n        /**\n         * Perform a drag operation in response to a mousemove event while the mouse is down\n         */\n        drag: function (e) {\n\n            var chart = this.chart,\n                chartOptions = chart.options.chart,\n                chartX = e.chartX,\n                chartY = e.chartY,\n                zoomHor = this.zoomHor,\n                zoomVert = this.zoomVert,\n                plotLeft = chart.plotLeft,\n                plotTop = chart.plotTop,\n                plotWidth = chart.plotWidth,\n                plotHeight = chart.plotHeight,\n                clickedInside,\n                size,\n                selectionMarker = this.selectionMarker,\n                mouseDownX = this.mouseDownX,\n                mouseDownY = this.mouseDownY,\n                panKey = chartOptions.panKey && e[chartOptions.panKey + 'Key'];\n\n            // If the device supports both touch and mouse (like IE11), and we are touch-dragging\n            // inside the plot area, don't handle the mouse event. #4339.\n            if (selectionMarker && selectionMarker.touch) {\n                return;\n            }\n\n            // If the mouse is outside the plot area, adjust to cooordinates\n            // inside to prevent the selection marker from going outside\n            if (chartX < plotLeft) {\n                chartX = plotLeft;\n            } else if (chartX > plotLeft + plotWidth) {\n                chartX = plotLeft + plotWidth;\n            }\n\n            if (chartY < plotTop) {\n                chartY = plotTop;\n            } else if (chartY > plotTop + plotHeight) {\n                chartY = plotTop + plotHeight;\n            }\n\n            // determine if the mouse has moved more than 10px\n            this.hasDragged = Math.sqrt(\n                Math.pow(mouseDownX - chartX, 2) +\n                Math.pow(mouseDownY - chartY, 2)\n            );\n\n            if (this.hasDragged > 10) {\n                clickedInside = chart.isInsidePlot(mouseDownX - plotLeft, mouseDownY - plotTop);\n\n                // make a selection\n                if (chart.hasCartesianSeries && (this.zoomX || this.zoomY) && clickedInside && !panKey) {\n                    if (!selectionMarker) {\n                        this.selectionMarker = selectionMarker = chart.renderer.rect(\n                            plotLeft,\n                            plotTop,\n                            zoomHor ? 1 : plotWidth,\n                            zoomVert ? 1 : plotHeight,\n                            0\n                        )\n                        .attr({\n                            fill: chartOptions.selectionMarkerFill || 'rgba(69,114,167,0.25)',\n                            zIndex: 7\n                        })\n                        .add();\n                    }\n                }\n\n                // adjust the width of the selection marker\n                if (selectionMarker && zoomHor) {\n                    size = chartX - mouseDownX;\n                    selectionMarker.attr({\n                        width: mathAbs(size),\n                        x: (size > 0 ? 0 : size) + mouseDownX\n                    });\n                }\n                // adjust the height of the selection marker\n                if (selectionMarker && zoomVert) {\n                    size = chartY - mouseDownY;\n                    selectionMarker.attr({\n                        height: mathAbs(size),\n                        y: (size > 0 ? 0 : size) + mouseDownY\n                    });\n                }\n\n                // panning\n                if (clickedInside && !selectionMarker && chartOptions.panning) {\n                    chart.pan(e, chartOptions.panning);\n                }\n            }\n        },\n\n        /**\n         * On mouse up or touch end across the entire document, drop the selection.\n         */\n        drop: function (e) {\n            var pointer = this,\n                chart = this.chart,\n                hasPinched = this.hasPinched;\n\n            if (this.selectionMarker) {\n                var selectionData = {\n                        originalEvent: e, // #4890\n                        xAxis: [],\n                        yAxis: []\n                    },\n                    selectionBox = this.selectionMarker,\n                    selectionLeft = selectionBox.attr ? selectionBox.attr('x') : selectionBox.x,\n                    selectionTop = selectionBox.attr ? selectionBox.attr('y') : selectionBox.y,\n                    selectionWidth = selectionBox.attr ? selectionBox.attr('width') : selectionBox.width,\n                    selectionHeight = selectionBox.attr ? selectionBox.attr('height') : selectionBox.height,\n                    runZoom;\n\n                // a selection has been made\n                if (this.hasDragged || hasPinched) {\n\n                    // record each axis' min and max\n                    each(chart.axes, function (axis) {\n                        if (axis.zoomEnabled && defined(axis.min) && (hasPinched || pointer[{ xAxis: 'zoomX', yAxis: 'zoomY' }[axis.coll]])) { // #859, #3569\n                            var horiz = axis.horiz,\n                                minPixelPadding = e.type === 'touchend' ? axis.minPixelPadding : 0, // #1207, #3075\n                                selectionMin = axis.toValue((horiz ? selectionLeft : selectionTop) + minPixelPadding),\n                                selectionMax = axis.toValue((horiz ? selectionLeft + selectionWidth : selectionTop + selectionHeight) - minPixelPadding);\n\n                            selectionData[axis.coll].push({\n                                axis: axis,\n                                min: mathMin(selectionMin, selectionMax), // for reversed axes\n                                max: mathMax(selectionMin, selectionMax)\n                            });\n                            runZoom = true;\n                        }\n                    });\n                    if (runZoom) {\n                        fireEvent(chart, 'selection', selectionData, function (args) {\n                            chart.zoom(extend(args, hasPinched ? { animation: false } : null));\n                        });\n                    }\n\n                }\n                this.selectionMarker = this.selectionMarker.destroy();\n\n                // Reset scaling preview\n                if (hasPinched) {\n                    this.scaleGroups();\n                }\n            }\n\n            // Reset all\n            if (chart) { // it may be destroyed on mouse up - #877\n                css(chart.container, { cursor: chart._cursor });\n                chart.cancelClick = this.hasDragged > 10; // #370\n                chart.mouseIsDown = this.hasDragged = this.hasPinched = false;\n                this.pinchDown = [];\n            }\n        },\n\n        onContainerMouseDown: function (e) {\n\n            e = this.normalize(e);\n\n            // issue #295, dragging not always working in Firefox\n            if (e.preventDefault) {\n                e.preventDefault();\n            }\n\n            this.dragStart(e);\n        },\n\n\n\n        onDocumentMouseUp: function (e) {\n            if (charts[hoverChartIndex]) {\n                charts[hoverChartIndex].pointer.drop(e);\n            }\n        },\n\n        /**\n         * Special handler for mouse move that will hide the tooltip when the mouse leaves the plotarea.\n         * Issue #149 workaround. The mouseleave event does not always fire.\n         */\n        onDocumentMouseMove: function (e) {\n            var chart = this.chart,\n                chartPosition = this.chartPosition;\n\n            e = this.normalize(e, chartPosition);\n\n            // If we're outside, hide the tooltip\n            if (chartPosition && !this.inClass(e.target, 'highcharts-tracker') &&\n                    !chart.isInsidePlot(e.chartX - chart.plotLeft, e.chartY - chart.plotTop)) {\n                this.reset();\n            }\n        },\n\n        /**\n         * When mouse leaves the container, hide the tooltip.\n         */\n        onContainerMouseLeave: function (e) {\n            var chart = charts[hoverChartIndex];\n            if (chart && (e.relatedTarget || e.toElement)) { // #4886, MS Touch end fires mouseleave but with no related target\n                chart.pointer.reset();\n                chart.pointer.chartPosition = null; // also reset the chart position, used in #149 fix\n            }\n        },\n\n        // The mousemove, touchmove and touchstart event handler\n        onContainerMouseMove: function (e) {\n\n            var chart = this.chart;\n\n            if (!defined(hoverChartIndex) || !charts[hoverChartIndex] || !charts[hoverChartIndex].mouseIsDown) {\n                hoverChartIndex = chart.index;\n            }\n\n            e = this.normalize(e);\n            e.returnValue = false; // #2251, #3224\n\n            if (chart.mouseIsDown === 'mousedown') {\n                this.drag(e);\n            }\n\n            // Show the tooltip and run mouse over events (#977)\n            if ((this.inClass(e.target, 'highcharts-tracker') ||\n                    chart.isInsidePlot(e.chartX - chart.plotLeft, e.chartY - chart.plotTop)) && !chart.openMenu) {\n                this.runPointActions(e);\n            }\n        },\n\n        /**\n         * Utility to detect whether an element has, or has a parent with, a specific\n         * class name. Used on detection of tracker objects and on deciding whether\n         * hovering the tooltip should cause the active series to mouse out.\n         */\n        inClass: function (element, className) {\n            var elemClassName;\n            while (element) {\n                elemClassName = attr(element, 'class');\n                if (elemClassName) {\n                    if (elemClassName.indexOf(className) !== -1) {\n                        return true;\n                    }\n                    if (elemClassName.indexOf(PREFIX + 'container') !== -1) {\n                        return false;\n                    }\n                }\n                element = element.parentNode;\n            }\n        },\n\n        onTrackerMouseOut: function (e) {\n            var series = this.chart.hoverSeries,\n                relatedTarget = e.relatedTarget || e.toElement;\n\n            if (series && relatedTarget && !series.options.stickyTracking && // #4886\n                    !this.inClass(relatedTarget, PREFIX + 'tooltip') &&\n                    !this.inClass(relatedTarget, PREFIX + 'series-' + series.index)) { // #2499, #4465\n                series.onMouseOut();\n            }\n        },\n\n        onContainerClick: function (e) {\n            var chart = this.chart,\n                hoverPoint = chart.hoverPoint,\n                plotLeft = chart.plotLeft,\n                plotTop = chart.plotTop;\n\n            e = this.normalize(e);\n\n            if (!chart.cancelClick) {\n\n                // On tracker click, fire the series and point events. #783, #1583\n                if (hoverPoint && this.inClass(e.target, PREFIX + 'tracker')) {\n\n                    // the series click event\n                    fireEvent(hoverPoint.series, 'click', extend(e, {\n                        point: hoverPoint\n                    }));\n\n                    // the point click event\n                    if (chart.hoverPoint) { // it may be destroyed (#1844)\n                        hoverPoint.firePointEvent('click', e);\n                    }\n\n                // When clicking outside a tracker, fire a chart event\n                } else {\n                    extend(e, this.getCoordinates(e));\n\n                    // fire a click event in the chart\n                    if (chart.isInsidePlot(e.chartX - plotLeft, e.chartY - plotTop)) {\n                        fireEvent(chart, 'click', e);\n                    }\n                }\n\n\n            }\n        },\n\n        /**\n         * Set the JS DOM events on the container and document. This method should contain\n         * a one-to-one assignment between methods and their handlers. Any advanced logic should\n         * be moved to the handler reflecting the event's name.\n         */\n        setDOMEvents: function () {\n\n            var pointer = this,\n                container = pointer.chart.container;\n\n            container.onmousedown = function (e) {\n                pointer.onContainerMouseDown(e);\n            };\n            container.onmousemove = function (e) {\n                pointer.onContainerMouseMove(e);\n            };\n            container.onclick = function (e) {\n                pointer.onContainerClick(e);\n            };\n            addEvent(container, 'mouseleave', pointer.onContainerMouseLeave);\n            if (chartCount === 1) {\n                addEvent(doc, 'mouseup', pointer.onDocumentMouseUp);\n            }\n            if (hasTouch) {\n                container.ontouchstart = function (e) {\n                    pointer.onContainerTouchStart(e);\n                };\n                container.ontouchmove = function (e) {\n                    pointer.onContainerTouchMove(e);\n                };\n                if (chartCount === 1) {\n                    addEvent(doc, 'touchend', pointer.onDocumentTouchEnd);\n                }\n            }\n\n        },\n\n        /**\n         * Destroys the Pointer object and disconnects DOM events.\n         */\n        destroy: function () {\n            var prop;\n\n            removeEvent(this.chart.container, 'mouseleave', this.onContainerMouseLeave);\n            if (!chartCount) {\n                removeEvent(doc, 'mouseup', this.onDocumentMouseUp);\n                removeEvent(doc, 'touchend', this.onDocumentTouchEnd);\n            }\n\n            // memory and CPU leak\n            clearInterval(this.tooltipTimeout);\n\n            for (prop in this) {\n                this[prop] = null;\n            }\n        }\n    };\n\n\n    /* Support for touch devices */\n    extend(Highcharts.Pointer.prototype, {\n\n        /**\n         * Run translation operations\n         */\n        pinchTranslate: function (pinchDown, touches, transform, selectionMarker, clip, lastValidTouch) {\n            if (this.zoomHor || this.pinchHor) {\n                this.pinchTranslateDirection(true, pinchDown, touches, transform, selectionMarker, clip, lastValidTouch);\n            }\n            if (this.zoomVert || this.pinchVert) {\n                this.pinchTranslateDirection(false, pinchDown, touches, transform, selectionMarker, clip, lastValidTouch);\n            }\n        },\n\n        /**\n         * Run translation operations for each direction (horizontal and vertical) independently\n         */\n        pinchTranslateDirection: function (horiz, pinchDown, touches, transform, selectionMarker, clip, lastValidTouch, forcedScale) {\n            var chart = this.chart,\n                xy = horiz ? 'x' : 'y',\n                XY = horiz ? 'X' : 'Y',\n                sChartXY = 'chart' + XY,\n                wh = horiz ? 'width' : 'height',\n                plotLeftTop = chart['plot' + (horiz ? 'Left' : 'Top')],\n                selectionWH,\n                selectionXY,\n                clipXY,\n                scale = forcedScale || 1,\n                inverted = chart.inverted,\n                bounds = chart.bounds[horiz ? 'h' : 'v'],\n                singleTouch = pinchDown.length === 1,\n                touch0Start = pinchDown[0][sChartXY],\n                touch0Now = touches[0][sChartXY],\n                touch1Start = !singleTouch && pinchDown[1][sChartXY],\n                touch1Now = !singleTouch && touches[1][sChartXY],\n                outOfBounds,\n                transformScale,\n                scaleKey,\n                setScale = function () {\n                    if (!singleTouch && mathAbs(touch0Start - touch1Start) > 20) { // Don't zoom if fingers are too close on this axis\n                        scale = forcedScale || mathAbs(touch0Now - touch1Now) / mathAbs(touch0Start - touch1Start);\n                    }\n\n                    clipXY = ((plotLeftTop - touch0Now) / scale) + touch0Start;\n                    selectionWH = chart['plot' + (horiz ? 'Width' : 'Height')] / scale;\n                };\n\n            // Set the scale, first pass\n            setScale();\n\n            selectionXY = clipXY; // the clip position (x or y) is altered if out of bounds, the selection position is not\n\n            // Out of bounds\n            if (selectionXY < bounds.min) {\n                selectionXY = bounds.min;\n                outOfBounds = true;\n            } else if (selectionXY + selectionWH > bounds.max) {\n                selectionXY = bounds.max - selectionWH;\n                outOfBounds = true;\n            }\n\n            // Is the chart dragged off its bounds, determined by dataMin and dataMax?\n            if (outOfBounds) {\n\n                // Modify the touchNow position in order to create an elastic drag movement. This indicates\n                // to the user that the chart is responsive but can't be dragged further.\n                touch0Now -= 0.8 * (touch0Now - lastValidTouch[xy][0]);\n                if (!singleTouch) {\n                    touch1Now -= 0.8 * (touch1Now - lastValidTouch[xy][1]);\n                }\n\n                // Set the scale, second pass to adapt to the modified touchNow positions\n                setScale();\n\n            } else {\n                lastValidTouch[xy] = [touch0Now, touch1Now];\n            }\n\n            // Set geometry for clipping, selection and transformation\n            if (!inverted) {\n                clip[xy] = clipXY - plotLeftTop;\n                clip[wh] = selectionWH;\n            }\n            scaleKey = inverted ? (horiz ? 'scaleY' : 'scaleX') : 'scale' + XY;\n            transformScale = inverted ? 1 / scale : scale;\n\n            selectionMarker[wh] = selectionWH;\n            selectionMarker[xy] = selectionXY;\n            transform[scaleKey] = scale;\n            transform['translate' + XY] = (transformScale * plotLeftTop) + (touch0Now - (transformScale * touch0Start));\n        },\n\n        /**\n         * Handle touch events with two touches\n         */\n        pinch: function (e) {\n\n            var self = this,\n                chart = self.chart,\n                pinchDown = self.pinchDown,\n                touches = e.touches,\n                touchesLength = touches.length,\n                lastValidTouch = self.lastValidTouch,\n                hasZoom = self.hasZoom,\n                selectionMarker = self.selectionMarker,\n                transform = {},\n                fireClickEvent = touchesLength === 1 && ((self.inClass(e.target, PREFIX + 'tracker') &&\n                    chart.runTrackerClick) || self.runChartClick),\n                clip = {};\n\n            // Don't initiate panning until the user has pinched. This prevents us from\n            // blocking page scrolling as users scroll down a long page (#4210).\n            if (touchesLength > 1) {\n                self.initiated = true;\n            }\n\n            // On touch devices, only proceed to trigger click if a handler is defined\n            if (hasZoom && self.initiated && !fireClickEvent) {\n                e.preventDefault();\n            }\n\n            // Normalize each touch\n            map(touches, function (e) {\n                return self.normalize(e);\n            });\n\n            // Register the touch start position\n            if (e.type === 'touchstart') {\n                each(touches, function (e, i) {\n                    pinchDown[i] = { chartX: e.chartX, chartY: e.chartY };\n                });\n                lastValidTouch.x = [pinchDown[0].chartX, pinchDown[1] && pinchDown[1].chartX];\n                lastValidTouch.y = [pinchDown[0].chartY, pinchDown[1] && pinchDown[1].chartY];\n\n                // Identify the data bounds in pixels\n                each(chart.axes, function (axis) {\n                    if (axis.zoomEnabled) {\n                        var bounds = chart.bounds[axis.horiz ? 'h' : 'v'],\n                            minPixelPadding = axis.minPixelPadding,\n                            min = axis.toPixels(pick(axis.options.min, axis.dataMin)),\n                            max = axis.toPixels(pick(axis.options.max, axis.dataMax)),\n                            absMin = mathMin(min, max),\n                            absMax = mathMax(min, max);\n\n                        // Store the bounds for use in the touchmove handler\n                        bounds.min = mathMin(axis.pos, absMin - minPixelPadding);\n                        bounds.max = mathMax(axis.pos + axis.len, absMax + minPixelPadding);\n                    }\n                });\n                self.res = true; // reset on next move\n\n            // Event type is touchmove, handle panning and pinching\n            } else if (pinchDown.length) { // can be 0 when releasing, if touchend fires first\n\n\n                // Set the marker\n                if (!selectionMarker) {\n                    self.selectionMarker = selectionMarker = extend({\n                        destroy: noop,\n                        touch: true\n                    }, chart.plotBox);\n                }\n\n                self.pinchTranslate(pinchDown, touches, transform, selectionMarker, clip, lastValidTouch);\n\n                self.hasPinched = hasZoom;\n\n                // Scale and translate the groups to provide visual feedback during pinching\n                self.scaleGroups(transform, clip);\n\n                // Optionally move the tooltip on touchmove\n                if (!hasZoom && self.followTouchMove && touchesLength === 1) {\n                    this.runPointActions(self.normalize(e));\n                } else if (self.res) {\n                    self.res = false;\n                    this.reset(false, 0);\n                }\n            }\n        },\n\n        /**\n         * General touch handler shared by touchstart and touchmove.\n         */\n        touch: function (e, start) {\n            var chart = this.chart,\n                hasMoved,\n                pinchDown;\n\n            hoverChartIndex = chart.index;\n\n            if (e.touches.length === 1) {\n\n                e = this.normalize(e);\n\n                if (chart.isInsidePlot(e.chartX - chart.plotLeft, e.chartY - chart.plotTop) && !chart.openMenu) {\n\n                    // Run mouse events and display tooltip etc\n                    if (start) {\n                        this.runPointActions(e);\n                    }\n\n                    // Android fires touchmove events after the touchstart even if the\n                    // finger hasn't moved, or moved only a pixel or two. In iOS however,\n                    // the touchmove doesn't fire unless the finger moves more than ~4px.\n                    // So we emulate this behaviour in Android by checking how much it\n                    // moved, and cancelling on small distances. #3450.\n                    if (e.type === 'touchmove') {\n                        pinchDown = this.pinchDown;\n                        hasMoved = pinchDown[0] ? Math.sqrt( // #5266\n                            Math.pow(pinchDown[0].chartX - e.chartX, 2) +\n                            Math.pow(pinchDown[0].chartY - e.chartY, 2)\n                        ) >= 4 : false;\n                    }\n\n                    if (pick(hasMoved, true)) {\n                        this.pinch(e);\n                    }\n\n                } else if (start) {\n                    // Hide the tooltip on touching outside the plot area (#1203)\n                    this.reset();\n                }\n\n            } else if (e.touches.length === 2) {\n                this.pinch(e);\n            }\n        },\n\n        onContainerTouchStart: function (e) {\n            this.touch(e, true);\n        },\n\n        onContainerTouchMove: function (e) {\n            this.touch(e);\n        },\n\n        onDocumentTouchEnd: function (e) {\n            if (charts[hoverChartIndex]) {\n                charts[hoverChartIndex].pointer.drop(e);\n            }\n        }\n\n    });\n    if (win.PointerEvent || win.MSPointerEvent) {\n\n        // The touches object keeps track of the points being touched at all times\n        var touches = {},\n            hasPointerEvent = !!win.PointerEvent,\n            getWebkitTouches = function () {\n                var key,\n                    fake = [];\n                fake.item = function (i) {\n                    return this[i];\n                };\n                for (key in touches) {\n                    if (touches.hasOwnProperty(key)) {\n                        fake.push({\n                            pageX: touches[key].pageX,\n                            pageY: touches[key].pageY,\n                            target: touches[key].target\n                        });\n                    }\n                }\n                return fake;\n            },\n            translateMSPointer = function (e, method, wktype, func) {\n                var p;\n                if ((e.pointerType === 'touch' || e.pointerType === e.MSPOINTER_TYPE_TOUCH) && charts[hoverChartIndex]) {\n                    func(e);\n                    p = charts[hoverChartIndex].pointer;\n                    p[method]({\n                        type: wktype,\n                        target: e.currentTarget,\n                        preventDefault: noop,\n                        touches: getWebkitTouches()\n                    });\n                }\n            };\n\n        /**\n         * Extend the Pointer prototype with methods for each event handler and more\n         */\n        extend(Pointer.prototype, {\n            onContainerPointerDown: function (e) {\n                translateMSPointer(e, 'onContainerTouchStart', 'touchstart', function (e) {\n                    touches[e.pointerId] = { pageX: e.pageX, pageY: e.pageY, target: e.currentTarget };\n                });\n            },\n            onContainerPointerMove: function (e) {\n                translateMSPointer(e, 'onContainerTouchMove', 'touchmove', function (e) {\n                    touches[e.pointerId] = { pageX: e.pageX, pageY: e.pageY };\n                    if (!touches[e.pointerId].target) {\n                        touches[e.pointerId].target = e.currentTarget;\n                    }\n                });\n            },\n            onDocumentPointerUp: function (e) {\n                translateMSPointer(e, 'onDocumentTouchEnd', 'touchend', function (e) {\n                    delete touches[e.pointerId];\n                });\n            },\n\n            /**\n             * Add or remove the MS Pointer specific events\n             */\n            batchMSEvents: function (fn) {\n                fn(this.chart.container, hasPointerEvent ? 'pointerdown' : 'MSPointerDown', this.onContainerPointerDown);\n                fn(this.chart.container, hasPointerEvent ? 'pointermove' : 'MSPointerMove', this.onContainerPointerMove);\n                fn(doc, hasPointerEvent ? 'pointerup' : 'MSPointerUp', this.onDocumentPointerUp);\n            }\n        });\n\n        // Disable default IE actions for pinch and such on chart element\n        wrap(Pointer.prototype, 'init', function (proceed, chart, options) {\n            proceed.call(this, chart, options);\n            if (this.hasZoom) { // #4014\n                css(chart.container, {\n                    '-ms-touch-action': NONE,\n                    'touch-action': NONE\n                });\n            }\n        });\n\n        // Add IE specific touch events to chart\n        wrap(Pointer.prototype, 'setDOMEvents', function (proceed) {\n            proceed.apply(this);\n            if (this.hasZoom || this.followTouchMove) {\n                this.batchMSEvents(addEvent);\n            }\n        });\n        // Destroy MS events also\n        wrap(Pointer.prototype, 'destroy', function (proceed) {\n            this.batchMSEvents(removeEvent);\n            proceed.call(this);\n        });\n    }\n    /**\n     * The overview of the chart's series\n     */\n    var Legend = Highcharts.Legend = function (chart, options) {\n        this.init(chart, options);\n    };\n\n    Legend.prototype = {\n\n        /**\n         * Initialize the legend\n         */\n        init: function (chart, options) {\n\n            var legend = this,\n                itemStyle = options.itemStyle,\n                padding,\n                itemMarginTop = options.itemMarginTop || 0;\n\n            this.options = options;\n\n            if (!options.enabled) {\n                return;\n            }\n\n            legend.itemStyle = itemStyle;\n            legend.itemHiddenStyle = merge(itemStyle, options.itemHiddenStyle);\n            legend.itemMarginTop = itemMarginTop;\n            legend.padding = padding = pick(options.padding, 8);\n            legend.initialItemX = padding;\n            legend.initialItemY = padding - 5; // 5 is the number of pixels above the text\n            legend.maxItemWidth = 0;\n            legend.chart = chart;\n            legend.itemHeight = 0;\n            legend.symbolWidth = pick(options.symbolWidth, 16);\n            legend.pages = [];\n\n\n            // Render it\n            legend.render();\n\n            // move checkboxes\n            addEvent(legend.chart, 'endResize', function () {\n                legend.positionCheckboxes();\n            });\n\n        },\n\n        /**\n         * Set the colors for the legend item\n         * @param {Object} item A Series or Point instance\n         * @param {Object} visible Dimmed or colored\n         */\n        colorizeItem: function (item, visible) {\n            var legend = this,\n                options = legend.options,\n                legendItem = item.legendItem,\n                legendLine = item.legendLine,\n                legendSymbol = item.legendSymbol,\n                hiddenColor = legend.itemHiddenStyle.color,\n                textColor = visible ? options.itemStyle.color : hiddenColor,\n                symbolColor = visible ? (item.legendColor || item.color || '#CCC') : hiddenColor,\n                markerOptions = item.options && item.options.marker,\n                symbolAttr = { fill: symbolColor },\n                key,\n                val;\n\n            if (legendItem) {\n                legendItem.css({ fill: textColor, color: textColor }); // color for #1553, oldIE\n            }\n            if (legendLine) {\n                legendLine.attr({ stroke: symbolColor });\n            }\n\n            if (legendSymbol) {\n\n                // Apply marker options\n                if (markerOptions && legendSymbol.isMarker) { // #585\n                    symbolAttr.stroke = symbolColor;\n                    markerOptions = item.convertAttribs(markerOptions);\n                    for (key in markerOptions) {\n                        val = markerOptions[key];\n                        if (val !== UNDEFINED) {\n                            symbolAttr[key] = val;\n                        }\n                    }\n                }\n\n                legendSymbol.attr(symbolAttr);\n            }\n        },\n\n        /**\n         * Position the legend item\n         * @param {Object} item A Series or Point instance\n         */\n        positionItem: function (item) {\n            var legend = this,\n                options = legend.options,\n                symbolPadding = options.symbolPadding,\n                ltr = !options.rtl,\n                legendItemPos = item._legendItemPos,\n                itemX = legendItemPos[0],\n                itemY = legendItemPos[1],\n                checkbox = item.checkbox,\n                legendGroup = item.legendGroup;\n\n            if (legendGroup && legendGroup.element) {\n                legendGroup.translate(\n                    ltr ? itemX : legend.legendWidth - itemX - 2 * symbolPadding - 4,\n                    itemY\n                );\n            }\n\n            if (checkbox) {\n                checkbox.x = itemX;\n                checkbox.y = itemY;\n            }\n        },\n\n        /**\n         * Destroy a single legend item\n         * @param {Object} item The series or point\n         */\n        destroyItem: function (item) {\n            var checkbox = item.checkbox;\n\n            // destroy SVG elements\n            each(['legendItem', 'legendLine', 'legendSymbol', 'legendGroup'], function (key) {\n                if (item[key]) {\n                    item[key] = item[key].destroy();\n                }\n            });\n\n            if (checkbox) {\n                discardElement(item.checkbox);\n            }\n        },\n\n        /**\n         * Destroys the legend.\n         */\n        destroy: function () {\n            var legend = this,\n                legendGroup = legend.group,\n                box = legend.box;\n\n            if (box) {\n                legend.box = box.destroy();\n            }\n\n            if (legendGroup) {\n                legend.group = legendGroup.destroy();\n            }\n        },\n\n        /**\n         * Position the checkboxes after the width is determined\n         */\n        positionCheckboxes: function (scrollOffset) {\n            var alignAttr = this.group.alignAttr,\n                translateY,\n                clipHeight = this.clipHeight || this.legendHeight,\n                titleHeight = this.titleHeight;\n\n            if (alignAttr) {\n                translateY = alignAttr.translateY;\n                each(this.allItems, function (item) {\n                    var checkbox = item.checkbox,\n                        top;\n\n                    if (checkbox) {\n                        top = translateY + titleHeight + checkbox.y + (scrollOffset || 0) + 3;\n                        css(checkbox, {\n                            left: (alignAttr.translateX + item.checkboxOffset + checkbox.x - 20) + PX,\n                            top: top + PX,\n                            display: top > translateY - 6 && top < translateY + clipHeight - 6 ? '' : NONE\n                        });\n                    }\n                });\n            }\n        },\n\n        /**\n         * Render the legend title on top of the legend\n         */\n        renderTitle: function () {\n            var options = this.options,\n                padding = this.padding,\n                titleOptions = options.title,\n                titleHeight = 0,\n                bBox;\n\n            if (titleOptions.text) {\n                if (!this.title) {\n                    this.title = this.chart.renderer.label(titleOptions.text, padding - 3, padding - 4, null, null, null, null, null, 'legend-title')\n                        .attr({ zIndex: 1 })\n                        .css(titleOptions.style)\n                        .add(this.group);\n                }\n                bBox = this.title.getBBox();\n                titleHeight = bBox.height;\n                this.offsetWidth = bBox.width; // #1717\n                this.contentGroup.attr({ translateY: titleHeight });\n            }\n            this.titleHeight = titleHeight;\n        },\n\n        /**\n         * Set the legend item text\n         */\n        setText: function (item) {\n            var options = this.options;\n            item.legendItem.attr({\n                text: options.labelFormat ? format(options.labelFormat, item) : options.labelFormatter.call(item)\n            });\n        },\n\n        /**\n         * Render a single specific legend item\n         * @param {Object} item A series or point\n         */\n        renderItem: function (item) {\n            var legend = this,\n                chart = legend.chart,\n                renderer = chart.renderer,\n                options = legend.options,\n                horizontal = options.layout === 'horizontal',\n                symbolWidth = legend.symbolWidth,\n                symbolPadding = options.symbolPadding,\n                itemStyle = legend.itemStyle,\n                itemHiddenStyle = legend.itemHiddenStyle,\n                padding = legend.padding,\n                itemDistance = horizontal ? pick(options.itemDistance, 20) : 0,\n                ltr = !options.rtl,\n                itemHeight,\n                widthOption = options.width,\n                itemMarginBottom = options.itemMarginBottom || 0,\n                itemMarginTop = legend.itemMarginTop,\n                initialItemX = legend.initialItemX,\n                bBox,\n                itemWidth,\n                li = item.legendItem,\n                series = item.series && item.series.drawLegendSymbol ? item.series : item,\n                seriesOptions = series.options,\n                showCheckbox = legend.createCheckboxForItem && seriesOptions && seriesOptions.showCheckbox,\n                useHTML = options.useHTML;\n\n            if (!li) { // generate it once, later move it\n\n                // Generate the group box\n                // A group to hold the symbol and text. Text is to be appended in Legend class.\n                item.legendGroup = renderer.g('legend-item')\n                    .attr({ zIndex: 1 })\n                    .add(legend.scrollGroup);\n\n                // Generate the list item text and add it to the group\n                item.legendItem = li = renderer.text(\n                        '',\n                        ltr ? symbolWidth + symbolPadding : -symbolPadding,\n                        legend.baseline || 0,\n                        useHTML\n                    )\n                    .css(merge(item.visible ? itemStyle : itemHiddenStyle)) // merge to prevent modifying original (#1021)\n                    .attr({\n                        align: ltr ? 'left' : 'right',\n                        zIndex: 2\n                    })\n                    .add(item.legendGroup);\n\n                // Get the baseline for the first item - the font size is equal for all\n                if (!legend.baseline) {\n                    legend.fontMetrics = renderer.fontMetrics(itemStyle.fontSize, li);\n                    legend.baseline = legend.fontMetrics.f + 3 + itemMarginTop;\n                    li.attr('y', legend.baseline);\n                }\n\n                // Draw the legend symbol inside the group box\n                series.drawLegendSymbol(legend, item);\n\n                if (legend.setItemEvents) {\n                    legend.setItemEvents(item, li, useHTML, itemStyle, itemHiddenStyle);\n                }\n\n                // add the HTML checkbox on top\n                if (showCheckbox) {\n                    legend.createCheckboxForItem(item);\n                }\n            }\n\n            // Colorize the items\n            legend.colorizeItem(item, item.visible);\n\n            // Always update the text\n            legend.setText(item);\n\n            // calculate the positions for the next line\n            bBox = li.getBBox();\n\n            itemWidth = item.checkboxOffset =\n                options.itemWidth ||\n                item.legendItemWidth ||\n                symbolWidth + symbolPadding + bBox.width + itemDistance + (showCheckbox ? 20 : 0);\n            legend.itemHeight = itemHeight = mathRound(item.legendItemHeight || bBox.height);\n\n            // if the item exceeds the width, start a new line\n            if (horizontal && legend.itemX - initialItemX + itemWidth >\n                    (widthOption || (chart.chartWidth - 2 * padding - initialItemX - options.x))) {\n                legend.itemX = initialItemX;\n                legend.itemY += itemMarginTop + legend.lastLineHeight + itemMarginBottom;\n                legend.lastLineHeight = 0; // reset for next line (#915, #3976)\n            }\n\n            // If the item exceeds the height, start a new column\n            /*if (!horizontal && legend.itemY + options.y + itemHeight > chart.chartHeight - spacingTop - spacingBottom) {\n                legend.itemY = legend.initialItemY;\n                legend.itemX += legend.maxItemWidth;\n                legend.maxItemWidth = 0;\n            }*/\n\n            // Set the edge positions\n            legend.maxItemWidth = mathMax(legend.maxItemWidth, itemWidth);\n            legend.lastItemY = itemMarginTop + legend.itemY + itemMarginBottom;\n            legend.lastLineHeight = mathMax(itemHeight, legend.lastLineHeight); // #915\n\n            // cache the position of the newly generated or reordered items\n            item._legendItemPos = [legend.itemX, legend.itemY];\n\n            // advance\n            if (horizontal) {\n                legend.itemX += itemWidth;\n\n            } else {\n                legend.itemY += itemMarginTop + itemHeight + itemMarginBottom;\n                legend.lastLineHeight = itemHeight;\n            }\n\n            // the width of the widest item\n            legend.offsetWidth = widthOption || mathMax(\n                (horizontal ? legend.itemX - initialItemX - itemDistance : itemWidth) + padding,\n                legend.offsetWidth\n            );\n        },\n\n        /**\n         * Get all items, which is one item per series for normal series and one item per point\n         * for pie series.\n         */\n        getAllItems: function () {\n            var allItems = [];\n            each(this.chart.series, function (series) {\n                var seriesOptions = series.options;\n\n                // Handle showInLegend. If the series is linked to another series, defaults to false.\n                if (!pick(seriesOptions.showInLegend, !defined(seriesOptions.linkedTo) ? UNDEFINED : false, true)) {\n                    return;\n                }\n\n                // use points or series for the legend item depending on legendType\n                allItems = allItems.concat(\n                        series.legendItems ||\n                        (seriesOptions.legendType === 'point' ?\n                                series.data :\n                                series)\n                );\n            });\n            return allItems;\n        },\n\n        /**\n         * Adjust the chart margins by reserving space for the legend on only one side\n         * of the chart. If the position is set to a corner, top or bottom is reserved\n         * for horizontal legends and left or right for vertical ones.\n         */\n        adjustMargins: function (margin, spacing) {\n            var chart = this.chart,\n                options = this.options,\n                // Use the first letter of each alignment option in order to detect the side\n                alignment = options.align.charAt(0) + options.verticalAlign.charAt(0) + options.layout.charAt(0); // #4189 - use charAt(x) notation instead of [x] for IE7\n\n            if (!options.floating) {\n\n                each([\n                    /(lth|ct|rth)/,\n                    /(rtv|rm|rbv)/,\n                    /(rbh|cb|lbh)/,\n                    /(lbv|lm|ltv)/\n                ], function (alignments, side) {\n                    if (alignments.test(alignment) && !defined(margin[side])) {\n                        // Now we have detected on which side of the chart we should reserve space for the legend\n                        chart[marginNames[side]] = mathMax(\n                            chart[marginNames[side]],\n                            chart.legend[(side + 1) % 2 ? 'legendHeight' : 'legendWidth'] +\n                                [1, -1, -1, 1][side] * options[(side % 2) ? 'x' : 'y'] +\n                                pick(options.margin, 12) +\n                                spacing[side]\n                        );\n                    }\n                });\n            }\n        },\n\n        /**\n         * Render the legend. This method can be called both before and after\n         * chart.render. If called after, it will only rearrange items instead\n         * of creating new ones.\n         */\n        render: function () {\n            var legend = this,\n                chart = legend.chart,\n                renderer = chart.renderer,\n                legendGroup = legend.group,\n                allItems,\n                display,\n                legendWidth,\n                legendHeight,\n                box = legend.box,\n                options = legend.options,\n                padding = legend.padding,\n                legendBorderWidth = options.borderWidth,\n                legendBackgroundColor = options.backgroundColor;\n\n            legend.itemX = legend.initialItemX;\n            legend.itemY = legend.initialItemY;\n            legend.offsetWidth = 0;\n            legend.lastItemY = 0;\n\n            if (!legendGroup) {\n                legend.group = legendGroup = renderer.g('legend')\n                    .attr({ zIndex: 7 })\n                    .add();\n                legend.contentGroup = renderer.g()\n                    .attr({ zIndex: 1 }) // above background\n                    .add(legendGroup);\n                legend.scrollGroup = renderer.g()\n                    .add(legend.contentGroup);\n            }\n\n            legend.renderTitle();\n\n            // add each series or point\n            allItems = legend.getAllItems();\n\n            // sort by legendIndex\n            stableSort(allItems, function (a, b) {\n                return ((a.options && a.options.legendIndex) || 0) - ((b.options && b.options.legendIndex) || 0);\n            });\n\n            // reversed legend\n            if (options.reversed) {\n                allItems.reverse();\n            }\n\n            legend.allItems = allItems;\n            legend.display = display = !!allItems.length;\n\n            // render the items\n            legend.lastLineHeight = 0;\n            each(allItems, function (item) {\n                legend.renderItem(item);\n            });\n\n            // Get the box\n            legendWidth = (options.width || legend.offsetWidth) + padding;\n            legendHeight = legend.lastItemY + legend.lastLineHeight + legend.titleHeight;\n            legendHeight = legend.handleOverflow(legendHeight);\n            legendHeight += padding;\n\n            // Draw the border and/or background\n            if (legendBorderWidth || legendBackgroundColor) {\n\n                if (!box) {\n                    legend.box = box = renderer.rect(\n                        0,\n                        0,\n                        legendWidth,\n                        legendHeight,\n                        options.borderRadius,\n                        legendBorderWidth || 0\n                    ).attr({\n                        stroke: options.borderColor,\n                        'stroke-width': legendBorderWidth || 0,\n                        fill: legendBackgroundColor || NONE\n                    })\n                    .add(legendGroup)\n                    .shadow(options.shadow);\n                    box.isNew = true;\n\n                } else if (legendWidth > 0 && legendHeight > 0) {\n                    box[box.isNew ? 'attr' : 'animate'](\n                        box.crisp({ width: legendWidth, height: legendHeight })\n                    );\n                    box.isNew = false;\n                }\n\n                // hide the border if no items\n                box[display ? 'show' : 'hide']();\n            }\n\n            legend.legendWidth = legendWidth;\n            legend.legendHeight = legendHeight;\n\n            // Now that the legend width and height are established, put the items in the\n            // final position\n            each(allItems, function (item) {\n                legend.positionItem(item);\n            });\n\n            // 1.x compatibility: positioning based on style\n            /*var props = ['left', 'right', 'top', 'bottom'],\n                prop,\n                i = 4;\n            while (i--) {\n                prop = props[i];\n                if (options.style[prop] && options.style[prop] !== 'auto') {\n                    options[i < 2 ? 'align' : 'verticalAlign'] = prop;\n                    options[i < 2 ? 'x' : 'y'] = pInt(options.style[prop]) * (i % 2 ? -1 : 1);\n                }\n            }*/\n\n            if (display) {\n                legendGroup.align(extend({\n                    width: legendWidth,\n                    height: legendHeight\n                }, options), true, 'spacingBox');\n            }\n\n            if (!chart.isResizing) {\n                this.positionCheckboxes();\n            }\n        },\n\n        /**\n         * Set up the overflow handling by adding navigation with up and down arrows below the\n         * legend.\n         */\n        handleOverflow: function (legendHeight) {\n            var legend = this,\n                chart = this.chart,\n                renderer = chart.renderer,\n                options = this.options,\n                optionsY = options.y,\n                alignTop = options.verticalAlign === 'top',\n                spaceHeight = chart.spacingBox.height + (alignTop ? -optionsY : optionsY) - this.padding,\n                maxHeight = options.maxHeight,\n                clipHeight,\n                clipRect = this.clipRect,\n                navOptions = options.navigation,\n                animation = pick(navOptions.animation, true),\n                arrowSize = navOptions.arrowSize || 12,\n                nav = this.nav,\n                pages = this.pages,\n                padding = this.padding,\n                lastY,\n                allItems = this.allItems,\n                clipToHeight = function (height) {\n                    clipRect.attr({\n                        height: height\n                    });\n\n                    // useHTML\n                    if (legend.contentGroup.div) {\n                        legend.contentGroup.div.style.clip = 'rect(' + padding + 'px,9999px,' + (padding + height) + 'px,0)';\n                    }\n                };\n\n\n            // Adjust the height\n            if (options.layout === 'horizontal') {\n                spaceHeight /= 2;\n            }\n            if (maxHeight) {\n                spaceHeight = mathMin(spaceHeight, maxHeight);\n            }\n\n            // Reset the legend height and adjust the clipping rectangle\n            pages.length = 0;\n            if (legendHeight > spaceHeight && navOptions.enabled !== false) {\n\n                this.clipHeight = clipHeight = mathMax(spaceHeight - 20 - this.titleHeight - padding, 0);\n                this.currentPage = pick(this.currentPage, 1);\n                this.fullHeight = legendHeight;\n\n                // Fill pages with Y positions so that the top of each a legend item defines\n                // the scroll top for each page (#2098)\n                each(allItems, function (item, i) {\n                    var y = item._legendItemPos[1],\n                        h = mathRound(item.legendItem.getBBox().height),\n                        len = pages.length;\n\n                    if (!len || (y - pages[len - 1] > clipHeight && (lastY || y) !== pages[len - 1])) {\n                        pages.push(lastY || y);\n                        len++;\n                    }\n\n                    if (i === allItems.length - 1 && y + h - pages[len - 1] > clipHeight) {\n                        pages.push(y);\n                    }\n                    if (y !== lastY) {\n                        lastY = y;\n                    }\n                });\n\n                // Only apply clipping if needed. Clipping causes blurred legend in PDF export (#1787)\n                if (!clipRect) {\n                    clipRect = legend.clipRect = renderer.clipRect(0, padding, 9999, 0);\n                    legend.contentGroup.clip(clipRect);\n                }\n\n                clipToHeight(clipHeight);\n\n                // Add navigation elements\n                if (!nav) {\n                    this.nav = nav = renderer.g().attr({ zIndex: 1 }).add(this.group);\n                    this.up = renderer.symbol('triangle', 0, 0, arrowSize, arrowSize)\n                        .on('click', function () {\n                            legend.scroll(-1, animation);\n                        })\n                        .add(nav);\n                    this.pager = renderer.text('', 15, 10)\n                        .css(navOptions.style)\n                        .add(nav);\n                    this.down = renderer.symbol('triangle-down', 0, 0, arrowSize, arrowSize)\n                        .on('click', function () {\n                            legend.scroll(1, animation);\n                        })\n                        .add(nav);\n                }\n\n                // Set initial position\n                legend.scroll(0);\n\n                legendHeight = spaceHeight;\n\n            } else if (nav) {\n                clipToHeight(chart.chartHeight);\n                nav.hide();\n                this.scrollGroup.attr({\n                    translateY: 1\n                });\n                this.clipHeight = 0; // #1379\n            }\n\n            return legendHeight;\n        },\n\n        /**\n         * Scroll the legend by a number of pages\n         * @param {Object} scrollBy\n         * @param {Object} animation\n         */\n        scroll: function (scrollBy, animation) {\n            var pages = this.pages,\n                pageCount = pages.length,\n                currentPage = this.currentPage + scrollBy,\n                clipHeight = this.clipHeight,\n                navOptions = this.options.navigation,\n                activeColor = navOptions.activeColor,\n                inactiveColor = navOptions.inactiveColor,\n                pager = this.pager,\n                padding = this.padding,\n                scrollOffset;\n\n            // When resizing while looking at the last page\n            if (currentPage > pageCount) {\n                currentPage = pageCount;\n            }\n\n            if (currentPage > 0) {\n\n                if (animation !== UNDEFINED) {\n                    setAnimation(animation, this.chart);\n                }\n\n                this.nav.attr({\n                    translateX: padding,\n                    translateY: clipHeight + this.padding + 7 + this.titleHeight,\n                    visibility: VISIBLE\n                });\n                this.up.attr({\n                        fill: currentPage === 1 ? inactiveColor : activeColor\n                    })\n                    .css({\n                        cursor: currentPage === 1 ? 'default' : 'pointer'\n                    });\n                pager.attr({\n                    text: currentPage + '/' + pageCount\n                });\n                this.down.attr({\n                        x: 18 + this.pager.getBBox().width, // adjust to text width\n                        fill: currentPage === pageCount ? inactiveColor : activeColor\n                    })\n                    .css({\n                        cursor: currentPage === pageCount ? 'default' : 'pointer'\n                    });\n\n                scrollOffset = -pages[currentPage - 1] + this.initialItemY;\n\n                this.scrollGroup.animate({\n                    translateY: scrollOffset\n                });\n\n                this.currentPage = currentPage;\n                this.positionCheckboxes(scrollOffset);\n            }\n\n        }\n\n    };\n\n    /*\n     * LegendSymbolMixin\n     */\n\n    var LegendSymbolMixin = Highcharts.LegendSymbolMixin = {\n\n        /**\n         * Get the series' symbol in the legend\n         *\n         * @param {Object} legend The legend object\n         * @param {Object} item The series (this) or point\n         */\n        drawRectangle: function (legend, item) {\n            var symbolHeight = legend.options.symbolHeight || legend.fontMetrics.f;\n\n            item.legendSymbol = this.chart.renderer.rect(\n                0,\n                legend.baseline - symbolHeight + 1, // #3988\n                legend.symbolWidth,\n                symbolHeight,\n                legend.options.symbolRadius || 0\n            ).attr({\n                zIndex: 3\n            }).add(item.legendGroup);\n\n        },\n\n        /**\n         * Get the series' symbol in the legend. This method should be overridable to create custom\n         * symbols through Highcharts.seriesTypes[type].prototype.drawLegendSymbols.\n         *\n         * @param {Object} legend The legend object\n         */\n        drawLineMarker: function (legend) {\n\n            var options = this.options,\n                markerOptions = options.marker,\n                radius,\n                legendSymbol,\n                symbolWidth = legend.symbolWidth,\n                renderer = this.chart.renderer,\n                legendItemGroup = this.legendGroup,\n                verticalCenter = legend.baseline - mathRound(legend.fontMetrics.b * 0.3),\n                attr;\n\n            // Draw the line\n            if (options.lineWidth) {\n                attr = {\n                    'stroke-width': options.lineWidth\n                };\n                if (options.dashStyle) {\n                    attr.dashstyle = options.dashStyle;\n                }\n                this.legendLine = renderer.path([\n                    M,\n                    0,\n                    verticalCenter,\n                    L,\n                    symbolWidth,\n                    verticalCenter\n                ])\n                .attr(attr)\n                .add(legendItemGroup);\n            }\n\n            // Draw the marker\n            if (markerOptions && markerOptions.enabled !== false) {\n                radius = markerOptions.radius;\n                this.legendSymbol = legendSymbol = renderer.symbol(\n                    this.symbol,\n                    (symbolWidth / 2) - radius,\n                    verticalCenter - radius,\n                    2 * radius,\n                    2 * radius,\n                    markerOptions\n                )\n                .add(legendItemGroup);\n                legendSymbol.isMarker = true;\n            }\n        }\n    };\n\n    // Workaround for #2030, horizontal legend items not displaying in IE11 Preview,\n    // and for #2580, a similar drawing flaw in Firefox 26.\n    // Explore if there's a general cause for this. The problem may be related\n    // to nested group elements, as the legend item texts are within 4 group elements.\n    if (/Trident\\/7\\.0/.test(userAgent) || isFirefox) {\n        wrap(Legend.prototype, 'positionItem', function (proceed, item) {\n            var legend = this,\n                runPositionItem = function () { // If chart destroyed in sync, this is undefined (#2030)\n                    if (item._legendItemPos) {\n                        proceed.call(legend, item);\n                    }\n                };\n\n            // Do it now, for export and to get checkbox placement\n            runPositionItem();\n\n            // Do it after to work around the core issue\n            setTimeout(runPositionItem);\n        });\n    }\n    /**\n     * The Chart class\n     * @param {String|Object} renderTo The DOM element to render to, or its id\n     * @param {Object} options\n     * @param {Function} callback Function to run when the chart has loaded\n     */\n    var Chart = Highcharts.Chart = function () {\n        this.getArgs.apply(this, arguments);\n    };\n\n    Highcharts.chart = function (a, b, c) {\n        return new Chart(a, b, c);\n    };\n\n    Chart.prototype = {\n\n        /**\n         * Hook for modules\n         */\n        callbacks: [],\n\n        /**\n         * Handle the arguments passed to the constructor\n         * @returns {Array} Arguments without renderTo\n         */\n        getArgs: function () {\n            var args = [].slice.call(arguments);\n        \n            // Remove the optional first argument, renderTo, and\n            // set it on this.\n            if (isString(args[0]) || args[0].nodeName) {\n                this.renderTo = args.shift();\n            }\n            this.init(args[0], args[1]);\n        },\n\n        /**\n         * Initialize the chart\n         */\n        init: function (userOptions, callback) {\n\n            // Handle regular options\n            var options,\n                seriesOptions = userOptions.series; // skip merging data points to increase performance\n\n            userOptions.series = null;\n            options = merge(defaultOptions, userOptions); // do the merge\n            options.series = userOptions.series = seriesOptions; // set back the series data\n            this.userOptions = userOptions;\n\n            var optionsChart = options.chart;\n\n            // Create margin & spacing array\n            this.margin = this.splashArray('margin', optionsChart);\n            this.spacing = this.splashArray('spacing', optionsChart);\n\n            var chartEvents = optionsChart.events;\n\n            //this.runChartClick = chartEvents && !!chartEvents.click;\n            this.bounds = { h: {}, v: {} }; // Pixel data bounds for touch zoom\n\n            this.callback = callback;\n            this.isResizing = 0;\n            this.options = options;\n            //chartTitleOptions = UNDEFINED;\n            //chartSubtitleOptions = UNDEFINED;\n\n            this.axes = [];\n            this.series = [];\n            this.hasCartesianSeries = optionsChart.showAxes;\n            //this.axisOffset = UNDEFINED;\n            //this.maxTicks = UNDEFINED; // handle the greatest amount of ticks on grouped axes\n            //this.inverted = UNDEFINED;\n            //this.loadingShown = UNDEFINED;\n            //this.container = UNDEFINED;\n            //this.chartWidth = UNDEFINED;\n            //this.chartHeight = UNDEFINED;\n            //this.marginRight = UNDEFINED;\n            //this.marginBottom = UNDEFINED;\n            //this.containerWidth = UNDEFINED;\n            //this.containerHeight = UNDEFINED;\n            //this.oldChartWidth = UNDEFINED;\n            //this.oldChartHeight = UNDEFINED;\n\n            //this.renderTo = UNDEFINED;\n            //this.renderToClone = UNDEFINED;\n\n            //this.spacingBox = UNDEFINED\n\n            //this.legend = UNDEFINED;\n\n            // Elements\n            //this.chartBackground = UNDEFINED;\n            //this.plotBackground = UNDEFINED;\n            //this.plotBGImage = UNDEFINED;\n            //this.plotBorder = UNDEFINED;\n            //this.loadingDiv = UNDEFINED;\n            //this.loadingSpan = UNDEFINED;\n\n            var chart = this,\n                eventType;\n\n            // Add the chart to the global lookup\n            chart.index = charts.length;\n            charts.push(chart);\n            chartCount++;\n\n            // Set up auto resize\n            if (optionsChart.reflow !== false) {\n                addEvent(chart, 'load', function () {\n                    chart.initReflow();\n                });\n            }\n\n            // Chart event handlers\n            if (chartEvents) {\n                for (eventType in chartEvents) {\n                    addEvent(chart, eventType, chartEvents[eventType]);\n                }\n            }\n\n            chart.xAxis = [];\n            chart.yAxis = [];\n\n            // Expose methods and variables\n            chart.animation = useCanVG ? false : pick(optionsChart.animation, true);\n            chart.pointCount = chart.colorCounter = chart.symbolCounter = 0;\n\n            chart.firstRender();\n        },\n\n        /**\n         * Initialize an individual series, called internally before render time\n         */\n        initSeries: function (options) {\n            var chart = this,\n                optionsChart = chart.options.chart,\n                type = options.type || optionsChart.type || optionsChart.defaultSeriesType,\n                series,\n                constr = seriesTypes[type];\n\n            // No such series type\n            if (!constr) {\n                error(17, true);\n            }\n\n            series = new constr();\n            series.init(this, options);\n            return series;\n        },\n\n        /**\n         * Check whether a given point is within the plot area\n         *\n         * @param {Number} plotX Pixel x relative to the plot area\n         * @param {Number} plotY Pixel y relative to the plot area\n         * @param {Boolean} inverted Whether the chart is inverted\n         */\n        isInsidePlot: function (plotX, plotY, inverted) {\n            var x = inverted ? plotY : plotX,\n                y = inverted ? plotX : plotY;\n\n            return x >= 0 &&\n                x <= this.plotWidth &&\n                y >= 0 &&\n                y <= this.plotHeight;\n        },\n\n        /**\n         * Redraw legend, axes or series based on updated data\n         *\n         * @param {Boolean|Object} animation Whether to apply animation, and optionally animation\n         *    configuration\n         */\n        redraw: function (animation) {\n            var chart = this,\n                axes = chart.axes,\n                series = chart.series,\n                pointer = chart.pointer,\n                legend = chart.legend,\n                redrawLegend = chart.isDirtyLegend,\n                hasStackedSeries,\n                hasDirtyStacks,\n                hasCartesianSeries = chart.hasCartesianSeries,\n                isDirtyBox = chart.isDirtyBox,\n                seriesLength = series.length,\n                i = seriesLength,\n                serie,\n                renderer = chart.renderer,\n                isHiddenChart = renderer.isHidden(),\n                afterRedraw = [];\n\n            setAnimation(animation, chart);\n\n            if (isHiddenChart) {\n                chart.cloneRenderTo();\n            }\n\n            // Adjust title layout (reflow multiline text)\n            chart.layOutTitles();\n\n            // link stacked series\n            while (i--) {\n                serie = series[i];\n\n                if (serie.options.stacking) {\n                    hasStackedSeries = true;\n\n                    if (serie.isDirty) {\n                        hasDirtyStacks = true;\n                        break;\n                    }\n                }\n            }\n            if (hasDirtyStacks) { // mark others as dirty\n                i = seriesLength;\n                while (i--) {\n                    serie = series[i];\n                    if (serie.options.stacking) {\n                        serie.isDirty = true;\n                    }\n                }\n            }\n\n            // Handle updated data in the series\n            each(series, function (serie) {\n                if (serie.isDirty) {\n                    if (serie.options.legendType === 'point') {\n                        if (serie.updateTotals) {\n                            serie.updateTotals();\n                        }\n                        redrawLegend = true;\n                    }\n                }\n                if (serie.isDirtyData) {\n                    fireEvent(serie, 'updatedData');\n                }\n            });\n\n            // handle added or removed series\n            if (redrawLegend && legend.options.enabled) { // series or pie points are added or removed\n                // draw legend graphics\n                legend.render();\n\n                chart.isDirtyLegend = false;\n            }\n\n            // reset stacks\n            if (hasStackedSeries) {\n                chart.getStacks();\n            }\n\n\n            if (hasCartesianSeries) {\n                if (!chart.isResizing) {\n\n                    // reset maxTicks\n                    chart.maxTicks = null;\n\n                    // set axes scales\n                    each(axes, function (axis) {\n                        axis.updateNames();\n                        axis.setScale();\n                    });\n                }\n            }\n\n            chart.getMargins(); // #3098\n\n            if (hasCartesianSeries) {\n                // If one axis is dirty, all axes must be redrawn (#792, #2169)\n                each(axes, function (axis) {\n                    if (axis.isDirty) {\n                        isDirtyBox = true;\n                    }\n                });\n\n                // redraw axes\n                each(axes, function (axis) {\n\n                    // Fire 'afterSetExtremes' only if extremes are set\n                    var key = axis.min + ',' + axis.max;\n                    if (axis.extKey !== key) { // #821, #4452\n                        axis.extKey = key;\n                        afterRedraw.push(function () { // prevent a recursive call to chart.redraw() (#1119)\n                            fireEvent(axis, 'afterSetExtremes', extend(axis.eventArgs, axis.getExtremes())); // #747, #751\n                            delete axis.eventArgs;\n                        });\n                    }\n                    if (isDirtyBox || hasStackedSeries) {\n                        axis.redraw();\n                    }\n                });\n            }\n\n            // the plot areas size has changed\n            if (isDirtyBox) {\n                chart.drawChartBox();\n            }\n\n\n            // redraw affected series\n            each(series, function (serie) {\n                if (serie.isDirty && serie.visible &&\n                        (!serie.isCartesian || serie.xAxis)) { // issue #153\n                    serie.redraw();\n                }\n            });\n\n            // move tooltip or reset\n            if (pointer) {\n                pointer.reset(true);\n            }\n\n            // redraw if canvas\n            renderer.draw();\n\n            // fire the event\n            fireEvent(chart, 'redraw');\n\n            if (isHiddenChart) {\n                chart.cloneRenderTo(true);\n            }\n\n            // Fire callbacks that are put on hold until after the redraw\n            each(afterRedraw, function (callback) {\n                callback.call();\n            });\n        },\n\n        /**\n         * Get an axis, series or point object by id.\n         * @param id {String} The id as given in the configuration options\n         */\n        get: function (id) {\n            var chart = this,\n                axes = chart.axes,\n                series = chart.series;\n\n            var i,\n                j,\n                points;\n\n            // search axes\n            for (i = 0; i < axes.length; i++) {\n                if (axes[i].options.id === id) {\n                    return axes[i];\n                }\n            }\n\n            // search series\n            for (i = 0; i < series.length; i++) {\n                if (series[i].options.id === id) {\n                    return series[i];\n                }\n            }\n\n            // search points\n            for (i = 0; i < series.length; i++) {\n                points = series[i].points || [];\n                for (j = 0; j < points.length; j++) {\n                    if (points[j].id === id) {\n                        return points[j];\n                    }\n                }\n            }\n            return null;\n        },\n\n        /**\n         * Create the Axis instances based on the config options\n         */\n        getAxes: function () {\n            var chart = this,\n                options = this.options,\n                xAxisOptions = options.xAxis = splat(options.xAxis || {}),\n                yAxisOptions = options.yAxis = splat(options.yAxis || {}),\n                optionsArray;\n\n            // make sure the options are arrays and add some members\n            each(xAxisOptions, function (axis, i) {\n                axis.index = i;\n                axis.isX = true;\n            });\n\n            each(yAxisOptions, function (axis, i) {\n                axis.index = i;\n            });\n\n            // concatenate all axis options into one array\n            optionsArray = xAxisOptions.concat(yAxisOptions);\n\n            each(optionsArray, function (axisOptions) {\n                new Axis(chart, axisOptions); // eslint-disable-line no-new\n            });\n        },\n\n\n        /**\n         * Get the currently selected points from all series\n         */\n        getSelectedPoints: function () {\n            var points = [];\n            each(this.series, function (serie) {\n                points = points.concat(grep(serie.points || [], function (point) {\n                    return point.selected;\n                }));\n            });\n            return points;\n        },\n\n        /**\n         * Get the currently selected series\n         */\n        getSelectedSeries: function () {\n            return grep(this.series, function (serie) {\n                return serie.selected;\n            });\n        },\n\n        /**\n         * Show the title and subtitle of the chart\n         *\n         * @param titleOptions {Object} New title options\n         * @param subtitleOptions {Object} New subtitle options\n         *\n         */\n        setTitle: function (titleOptions, subtitleOptions, redraw) {\n            var chart = this,\n                options = chart.options,\n                chartTitleOptions,\n                chartSubtitleOptions;\n\n            chartTitleOptions = options.title = merge(options.title, titleOptions);\n            chartSubtitleOptions = options.subtitle = merge(options.subtitle, subtitleOptions);\n\n            // add title and subtitle\n            each([\n                ['title', titleOptions, chartTitleOptions],\n                ['subtitle', subtitleOptions, chartSubtitleOptions]\n            ], function (arr) {\n                var name = arr[0],\n                    title = chart[name],\n                    titleOptions = arr[1],\n                    chartTitleOptions = arr[2];\n\n                if (title && titleOptions) {\n                    chart[name] = title = title.destroy(); // remove old\n                }\n\n                if (chartTitleOptions && chartTitleOptions.text && !title) {\n                    chart[name] = chart.renderer.text(\n                        chartTitleOptions.text,\n                        0,\n                        0,\n                        chartTitleOptions.useHTML\n                    )\n                    .attr({\n                        align: chartTitleOptions.align,\n                        'class': PREFIX + name,\n                        zIndex: chartTitleOptions.zIndex || 4\n                    })\n                    .css(chartTitleOptions.style)\n                    .add();\n            \n                }\n            });\n            chart.layOutTitles(redraw);\n        },\n\n        /**\n         * Lay out the chart titles and cache the full offset height for use in getMargins\n         */\n        layOutTitles: function (redraw) {\n            var titleOffset = 0,\n                title = this.title,\n                subtitle = this.subtitle,\n                options = this.options,\n                titleOptions = options.title,\n                subtitleOptions = options.subtitle,\n                requiresDirtyBox,\n                renderer = this.renderer,\n                spacingBox = this.spacingBox;\n\n            if (title) {\n                title\n                    .css({ width: (titleOptions.width || spacingBox.width + titleOptions.widthAdjust) + PX })\n                    .align(extend({\n                        y: renderer.fontMetrics(titleOptions.style.fontSize, title).b - 3\n                    }, titleOptions), false, spacingBox);\n\n                if (!titleOptions.floating && !titleOptions.verticalAlign) {\n                    titleOffset = title.getBBox().height;\n                }\n            }\n            if (subtitle) {\n                subtitle\n                    .css({ width: (subtitleOptions.width || spacingBox.width + subtitleOptions.widthAdjust) + PX })\n                    .align(extend({\n                        y: titleOffset + (titleOptions.margin - 13) + renderer.fontMetrics(subtitleOptions.style.fontSize, title).b\n                    }, subtitleOptions), false, spacingBox);\n\n                if (!subtitleOptions.floating && !subtitleOptions.verticalAlign) {\n                    titleOffset = mathCeil(titleOffset + subtitle.getBBox().height);\n                }\n            }\n\n            requiresDirtyBox = this.titleOffset !== titleOffset;\n            this.titleOffset = titleOffset; // used in getMargins\n\n            if (!this.isDirtyBox && requiresDirtyBox) {\n                this.isDirtyBox = requiresDirtyBox;\n                // Redraw if necessary (#2719, #2744)\n                if (this.hasRendered && pick(redraw, true) && this.isDirtyBox) {\n                    this.redraw();\n                }\n            }\n        },\n\n        /**\n         * Get chart width and height according to options and container size\n         */\n        getChartSize: function () {\n            var chart = this,\n                optionsChart = chart.options.chart,\n                widthOption = optionsChart.width,\n                heightOption = optionsChart.height,\n                renderTo = chart.renderToClone || chart.renderTo;\n\n            // Get inner width and height\n            if (!defined(widthOption)) {\n                chart.containerWidth = getStyle(renderTo, 'width');\n            }\n            if (!defined(heightOption)) {\n                chart.containerHeight = getStyle(renderTo, 'height');\n            }\n\n            chart.chartWidth = mathMax(0, widthOption || chart.containerWidth || 600); // #1393, 1460\n            chart.chartHeight = mathMax(0, pick(heightOption,\n                // the offsetHeight of an empty container is 0 in standard browsers, but 19 in IE7:\n                chart.containerHeight > 19 ? chart.containerHeight : 400));\n        },\n\n        /**\n         * Create a clone of the chart's renderTo div and place it outside the viewport to allow\n         * size computation on chart.render and chart.redraw\n         */\n        cloneRenderTo: function (revert) {\n            var clone = this.renderToClone,\n                container = this.container;\n\n            // Destroy the clone and bring the container back to the real renderTo div\n            if (revert) {\n                if (clone) {\n                    while (clone.childNodes.length) { // #5231\n                        this.renderTo.appendChild(clone.firstChild);\n                    }\n                    discardElement(clone);\n                    delete this.renderToClone;\n                }\n\n            // Set up the clone\n            } else {\n                if (container && container.parentNode === this.renderTo) {\n                    this.renderTo.removeChild(container); // do not clone this\n                }\n                this.renderToClone = clone = this.renderTo.cloneNode(0);\n                css(clone, {\n                    position: ABSOLUTE,\n                    top: '-9999px',\n                    display: 'block' // #833\n                });\n                if (clone.style.setProperty) { // #2631\n                    clone.style.setProperty('display', 'block', 'important');\n                }\n                doc.body.appendChild(clone);\n                if (container) {\n                    clone.appendChild(container);\n                }\n            }\n        },\n\n        /**\n         * Get the containing element, determine the size and create the inner container\n         * div to hold the chart\n         */\n        getContainer: function () {\n            var chart = this,\n                container,\n                options = chart.options,\n                optionsChart = options.chart,\n                chartWidth,\n                chartHeight,\n                renderTo = chart.renderTo,\n                indexAttrName = 'data-highcharts-chart',\n                oldChartIndex,\n                Ren,\n                containerId = 'highcharts-' + idCounter++;\n\n            if (!renderTo) {\n                chart.renderTo = renderTo = optionsChart.renderTo;\n            }\n        \n            if (isString(renderTo)) {\n                chart.renderTo = renderTo = doc.getElementById(renderTo);\n            }\n\n            // Display an error if the renderTo is wrong\n            if (!renderTo) {\n                error(13, true);\n            }\n\n            // If the container already holds a chart, destroy it. The check for hasRendered is there\n            // because web pages that are saved to disk from the browser, will preserve the data-highcharts-chart\n            // attribute and the SVG contents, but not an interactive chart. So in this case,\n            // charts[oldChartIndex] will point to the wrong chart if any (#2609).\n            oldChartIndex = pInt(attr(renderTo, indexAttrName));\n            if (isNumber(oldChartIndex) && charts[oldChartIndex] && charts[oldChartIndex].hasRendered) {\n                charts[oldChartIndex].destroy();\n            }\n\n            // Make a reference to the chart from the div\n            attr(renderTo, indexAttrName, chart.index);\n\n            // remove previous chart\n            renderTo.innerHTML = '';\n\n            // If the container doesn't have an offsetWidth, it has or is a child of a node\n            // that has display:none. We need to temporarily move it out to a visible\n            // state to determine the size, else the legend and tooltips won't render\n            // properly. The allowClone option is used in sparklines as a micro optimization,\n            // saving about 1-2 ms each chart.\n            if (!optionsChart.skipClone && !renderTo.offsetWidth) {\n                chart.cloneRenderTo();\n            }\n\n            // get the width and height\n            chart.getChartSize();\n            chartWidth = chart.chartWidth;\n            chartHeight = chart.chartHeight;\n\n            // create the inner container\n            chart.container = container = createElement(DIV, {\n                    className: PREFIX + 'container' +\n                        (optionsChart.className ? ' ' + optionsChart.className : ''),\n                    id: containerId\n                }, extend({\n                    position: RELATIVE,\n                    overflow: HIDDEN, // needed for context menu (avoid scrollbars) and\n                        // content overflow in IE\n                    width: chartWidth + PX,\n                    height: chartHeight + PX,\n                    textAlign: 'left',\n                    lineHeight: 'normal', // #427\n                    zIndex: 0, // #1072\n                    '-webkit-tap-highlight-color': 'rgba(0,0,0,0)'\n                }, optionsChart.style),\n                chart.renderToClone || renderTo\n            );\n\n            // cache the cursor (#1650)\n            chart._cursor = container.style.cursor;\n\n            // Initialize the renderer\n            Ren = Highcharts[optionsChart.renderer] || Renderer;\n            chart.renderer = new Ren(\n                container,\n                chartWidth,\n                chartHeight,\n                optionsChart.style,\n                optionsChart.forExport,\n                options.exporting && options.exporting.allowHTML\n            );\n\n            if (useCanVG) {\n                // If we need canvg library, extend and configure the renderer\n                // to get the tracker for translating mouse events\n                chart.renderer.create(chart, container, chartWidth, chartHeight);\n            }\n            // Add a reference to the charts index\n            chart.renderer.chartIndex = chart.index;\n        },\n\n        /**\n         * Calculate margins by rendering axis labels in a preliminary position. Title,\n         * subtitle and legend have already been rendered at this stage, but will be\n         * moved into their final positions\n         */\n        getMargins: function (skipAxes) {\n            var chart = this,\n                spacing = chart.spacing,\n                margin = chart.margin,\n                titleOffset = chart.titleOffset;\n\n            chart.resetMargins();\n\n            // Adjust for title and subtitle\n            if (titleOffset && !defined(margin[0])) {\n                chart.plotTop = mathMax(chart.plotTop, titleOffset + chart.options.title.margin + spacing[0]);\n            }\n\n            // Adjust for legend\n            if (chart.legend.display) {\n                chart.legend.adjustMargins(margin, spacing);\n            }\n\n            // adjust for scroller\n            if (chart.extraBottomMargin) {\n                chart.marginBottom += chart.extraBottomMargin;\n            }\n            if (chart.extraTopMargin) {\n                chart.plotTop += chart.extraTopMargin;\n            }\n            if (!skipAxes) {\n                this.getAxisMargins();\n            }\n        },\n\n        getAxisMargins: function () {\n\n            var chart = this,\n                axisOffset = chart.axisOffset = [0, 0, 0, 0], // top, right, bottom, left\n                margin = chart.margin;\n\n            // pre-render axes to get labels offset width\n            if (chart.hasCartesianSeries) {\n                each(chart.axes, function (axis) {\n                    if (axis.visible) {\n                        axis.getOffset();\n                    }\n                });\n            }\n\n            // Add the axis offsets\n            each(marginNames, function (m, side) {\n                if (!defined(margin[side])) {\n                    chart[m] += axisOffset[side];\n                }\n            });\n\n            chart.setChartSize();\n\n        },\n\n        /**\n         * Resize the chart to its container if size is not explicitly set\n         */\n        reflow: function (e) {\n            var chart = this,\n                optionsChart = chart.options.chart,\n                renderTo = chart.renderTo,\n                hasUserWidth = defined(optionsChart.width),\n                width = optionsChart.width || getStyle(renderTo, 'width'),\n                height = optionsChart.height || getStyle(renderTo, 'height'),\n                target = e ? e.target : win;\n\n            // Width and height checks for display:none. Target is doc in IE8 and Opera,\n            // win in Firefox, Chrome and IE9.\n            if (!hasUserWidth && !chart.isPrinting && width && height && (target === win || target === doc)) { // #1093\n                if (width !== chart.containerWidth || height !== chart.containerHeight) {\n                    clearTimeout(chart.reflowTimeout);\n                    // When called from window.resize, e is set, else it's called directly (#2224)\n                    chart.reflowTimeout = syncTimeout(function () {\n                        if (chart.container) { // It may have been destroyed in the meantime (#1257)\n                            chart.setSize(undefined, undefined, false);\n                        }\n                    }, e ? 100 : 0);\n                }\n                chart.containerWidth = width;\n                chart.containerHeight = height;\n            }\n        },\n\n        /**\n         * Add the event handlers necessary for auto resizing\n         */\n        initReflow: function () {\n            var chart = this,\n                reflow = function (e) {\n                    chart.reflow(e);\n                };\n\n\n            addEvent(win, 'resize', reflow);\n            addEvent(chart, 'destroy', function () {\n                removeEvent(win, 'resize', reflow);\n            });\n        },\n\n        /**\n         * Resize the chart to a given width and height\n         * @param {Number} width\n         * @param {Number} height\n         * @param {Object|Boolean} animation\n         */\n        setSize: function (width, height, animation) {\n            var chart = this,\n                renderer = chart.renderer,\n                globalAnimation;\n\n            // Handle the isResizing counter\n            chart.isResizing += 1;\n        \n            // set the animation for the current process\n            setAnimation(animation, chart);\n\n            chart.oldChartHeight = chart.chartHeight;\n            chart.oldChartWidth = chart.chartWidth;\n            if (width !== undefined) {\n                chart.options.chart.width = width;\n            }\n            if (height !== undefined) {\n                chart.options.chart.height = height;\n            }\n            chart.getChartSize();\n\n            // Resize the container with the global animation applied if enabled (#2503)\n            globalAnimation = renderer.globalAnimation;\n            (globalAnimation ? animate : css)(chart.container, {\n                width: chart.chartWidth + PX,\n                height: chart.chartHeight + PX\n            }, globalAnimation);\n\n            chart.setChartSize(true);\n            renderer.setSize(chart.chartWidth, chart.chartHeight, animation);\n\n            // handle axes\n            chart.maxTicks = null;\n            each(chart.axes, function (axis) {\n                axis.isDirty = true;\n                axis.setScale();\n            });\n\n            // make sure non-cartesian series are also handled\n            each(chart.series, function (serie) {\n                serie.isDirty = true;\n            });\n\n            chart.isDirtyLegend = true; // force legend redraw\n            chart.isDirtyBox = true; // force redraw of plot and chart border\n\n            chart.layOutTitles(); // #2857\n            chart.getMargins();\n\n            chart.redraw(animation);\n\n\n            chart.oldChartHeight = null;\n            fireEvent(chart, 'resize');\n\n            // Fire endResize and set isResizing back. If animation is disabled, fire without delay\n            syncTimeout(function () {\n                if (chart) {\n                    fireEvent(chart, 'endResize', null, function () {\n                        chart.isResizing -= 1;\n                    });\n                }\n            }, animObject(globalAnimation).duration);\n        },\n\n        /**\n         * Set the public chart properties. This is done before and after the pre-render\n         * to determine margin sizes\n         */\n        setChartSize: function (skipAxes) {\n            var chart = this,\n                inverted = chart.inverted,\n                renderer = chart.renderer,\n                chartWidth = chart.chartWidth,\n                chartHeight = chart.chartHeight,\n                optionsChart = chart.options.chart,\n                spacing = chart.spacing,\n                clipOffset = chart.clipOffset,\n                clipX,\n                clipY,\n                plotLeft,\n                plotTop,\n                plotWidth,\n                plotHeight,\n                plotBorderWidth;\n\n            chart.plotLeft = plotLeft = mathRound(chart.plotLeft);\n            chart.plotTop = plotTop = mathRound(chart.plotTop);\n            chart.plotWidth = plotWidth = mathMax(0, mathRound(chartWidth - plotLeft - chart.marginRight));\n            chart.plotHeight = plotHeight = mathMax(0, mathRound(chartHeight - plotTop - chart.marginBottom));\n\n            chart.plotSizeX = inverted ? plotHeight : plotWidth;\n            chart.plotSizeY = inverted ? plotWidth : plotHeight;\n\n            chart.plotBorderWidth = optionsChart.plotBorderWidth || 0;\n\n            // Set boxes used for alignment\n            chart.spacingBox = renderer.spacingBox = {\n                x: spacing[3],\n                y: spacing[0],\n                width: chartWidth - spacing[3] - spacing[1],\n                height: chartHeight - spacing[0] - spacing[2]\n            };\n            chart.plotBox = renderer.plotBox = {\n                x: plotLeft,\n                y: plotTop,\n                width: plotWidth,\n                height: plotHeight\n            };\n\n            plotBorderWidth = 2 * mathFloor(chart.plotBorderWidth / 2);\n            clipX = mathCeil(mathMax(plotBorderWidth, clipOffset[3]) / 2);\n            clipY = mathCeil(mathMax(plotBorderWidth, clipOffset[0]) / 2);\n            chart.clipBox = {\n                x: clipX,\n                y: clipY,\n                width: mathFloor(chart.plotSizeX - mathMax(plotBorderWidth, clipOffset[1]) / 2 - clipX),\n                height: mathMax(0, mathFloor(chart.plotSizeY - mathMax(plotBorderWidth, clipOffset[2]) / 2 - clipY))\n            };\n\n            if (!skipAxes) {\n                each(chart.axes, function (axis) {\n                    axis.setAxisSize();\n                    axis.setAxisTranslation();\n                });\n            }\n        },\n\n        /**\n         * Initial margins before auto size margins are applied\n         */\n        resetMargins: function () {\n            var chart = this;\n\n            each(marginNames, function (m, side) {\n                chart[m] = pick(chart.margin[side], chart.spacing[side]);\n            });\n            chart.axisOffset = [0, 0, 0, 0]; // top, right, bottom, left\n            chart.clipOffset = [0, 0, 0, 0];\n        },\n\n        /**\n         * Draw the borders and backgrounds for chart and plot area\n         */\n        drawChartBox: function () {\n            var chart = this,\n                optionsChart = chart.options.chart,\n                renderer = chart.renderer,\n                chartWidth = chart.chartWidth,\n                chartHeight = chart.chartHeight,\n                chartBackground = chart.chartBackground,\n                plotBackground = chart.plotBackground,\n                plotBorder = chart.plotBorder,\n                plotBGImage = chart.plotBGImage,\n                chartBorderWidth = optionsChart.borderWidth || 0,\n                chartBackgroundColor = optionsChart.backgroundColor,\n                plotBackgroundColor = optionsChart.plotBackgroundColor,\n                plotBackgroundImage = optionsChart.plotBackgroundImage,\n                plotBorderWidth = optionsChart.plotBorderWidth || 0,\n                mgn,\n                bgAttr,\n                plotLeft = chart.plotLeft,\n                plotTop = chart.plotTop,\n                plotWidth = chart.plotWidth,\n                plotHeight = chart.plotHeight,\n                plotBox = chart.plotBox,\n                clipRect = chart.clipRect,\n                clipBox = chart.clipBox;\n\n            // Chart area\n            mgn = chartBorderWidth + (optionsChart.shadow ? 8 : 0);\n\n            if (chartBorderWidth || chartBackgroundColor) {\n                if (!chartBackground) {\n\n                    bgAttr = {\n                        fill: chartBackgroundColor || NONE\n                    };\n                    if (chartBorderWidth) { // #980\n                        bgAttr.stroke = optionsChart.borderColor;\n                        bgAttr['stroke-width'] = chartBorderWidth;\n                    }\n                    chart.chartBackground = renderer.rect(mgn / 2, mgn / 2, chartWidth - mgn, chartHeight - mgn,\n                            optionsChart.borderRadius, chartBorderWidth)\n                        .attr(bgAttr)\n                        .addClass(PREFIX + 'background')\n                        .add()\n                        .shadow(optionsChart.shadow);\n\n                } else { // resize\n                    chartBackground.animate(\n                        chartBackground.crisp({ width: chartWidth - mgn, height: chartHeight - mgn })\n                    );\n                }\n            }\n\n\n            // Plot background\n            if (plotBackgroundColor) {\n                if (!plotBackground) {\n                    chart.plotBackground = renderer.rect(plotLeft, plotTop, plotWidth, plotHeight, 0)\n                        .attr({\n                            fill: plotBackgroundColor\n                        })\n                        .add()\n                        .shadow(optionsChart.plotShadow);\n                } else {\n                    plotBackground.animate(plotBox);\n                }\n            }\n            if (plotBackgroundImage) {\n                if (!plotBGImage) {\n                    chart.plotBGImage = renderer.image(plotBackgroundImage, plotLeft, plotTop, plotWidth, plotHeight)\n                        .add();\n                } else {\n                    plotBGImage.animate(plotBox);\n                }\n            }\n\n            // Plot clip\n            if (!clipRect) {\n                chart.clipRect = renderer.clipRect(clipBox);\n            } else {\n                clipRect.animate({\n                    width: clipBox.width,\n                    height: clipBox.height\n                });\n            }\n\n            // Plot area border\n            if (plotBorderWidth) {\n                if (!plotBorder) {\n                    chart.plotBorder = renderer.rect(plotLeft, plotTop, plotWidth, plotHeight, 0, -plotBorderWidth)\n                        .attr({\n                            stroke: optionsChart.plotBorderColor,\n                            'stroke-width': plotBorderWidth,\n                            fill: NONE,\n                            zIndex: 1\n                        })\n                        .add();\n                } else {\n                    plotBorder.strokeWidth = -plotBorderWidth;\n                    plotBorder.animate(\n                        plotBorder.crisp({ x: plotLeft, y: plotTop, width: plotWidth, height: plotHeight }) //#3282 plotBorder should be negative\n                    );\n                }\n            }\n\n            // reset\n            chart.isDirtyBox = false;\n        },\n\n        /**\n         * Detect whether a certain chart property is needed based on inspecting its options\n         * and series. This mainly applies to the chart.invert property, and in extensions to\n         * the chart.angular and chart.polar properties.\n         */\n        propFromSeries: function () {\n            var chart = this,\n                optionsChart = chart.options.chart,\n                klass,\n                seriesOptions = chart.options.series,\n                i,\n                value;\n\n\n            each(['inverted', 'angular', 'polar'], function (key) {\n\n                // The default series type's class\n                klass = seriesTypes[optionsChart.type || optionsChart.defaultSeriesType];\n\n                // Get the value from available chart-wide properties\n                value = (\n                    chart[key] || // 1. it is set before\n                    optionsChart[key] || // 2. it is set in the options\n                    (klass && klass.prototype[key]) // 3. it's default series class requires it\n                );\n\n                // 4. Check if any the chart's series require it\n                i = seriesOptions && seriesOptions.length;\n                while (!value && i--) {\n                    klass = seriesTypes[seriesOptions[i].type];\n                    if (klass && klass.prototype[key]) {\n                        value = true;\n                    }\n                }\n\n                // Set the chart property\n                chart[key] = value;\n            });\n\n        },\n\n        /**\n         * Link two or more series together. This is done initially from Chart.render,\n         * and after Chart.addSeries and Series.remove.\n         */\n        linkSeries: function () {\n            var chart = this,\n                chartSeries = chart.series;\n\n            // Reset links\n            each(chartSeries, function (series) {\n                series.linkedSeries.length = 0;\n            });\n\n            // Apply new links\n            each(chartSeries, function (series) {\n                var linkedTo = series.options.linkedTo;\n                if (isString(linkedTo)) {\n                    if (linkedTo === ':previous') {\n                        linkedTo = chart.series[series.index - 1];\n                    } else {\n                        linkedTo = chart.get(linkedTo);\n                    }\n                    if (linkedTo && linkedTo.linkedParent !== series) { // #3341 avoid mutual linking\n                        linkedTo.linkedSeries.push(series);\n                        series.linkedParent = linkedTo;\n                        series.visible = pick(series.options.visible, linkedTo.options.visible, series.visible); // #3879\n                    }\n                }\n            });\n        },\n\n        /**\n         * Render series for the chart\n         */\n        renderSeries: function () {\n            each(this.series, function (serie) {\n                serie.translate();\n                serie.render();\n            });\n        },\n\n        /**\n         * Render labels for the chart\n         */\n        renderLabels: function () {\n            var chart = this,\n                labels = chart.options.labels;\n            if (labels.items) {\n                each(labels.items, function (label) {\n                    var style = extend(labels.style, label.style),\n                        x = pInt(style.left) + chart.plotLeft,\n                        y = pInt(style.top) + chart.plotTop + 12;\n\n                    // delete to prevent rewriting in IE\n                    delete style.left;\n                    delete style.top;\n\n                    chart.renderer.text(\n                        label.html,\n                        x,\n                        y\n                    )\n                    .attr({ zIndex: 2 })\n                    .css(style)\n                    .add();\n\n                });\n            }\n        },\n\n        /**\n         * Render all graphics for the chart\n         */\n        render: function () {\n            var chart = this,\n                axes = chart.axes,\n                renderer = chart.renderer,\n                options = chart.options,\n                tempWidth,\n                tempHeight,\n                redoHorizontal,\n                redoVertical;\n\n            // Title\n            chart.setTitle();\n\n\n            // Legend\n            chart.legend = new Legend(chart, options.legend);\n\n            // Get stacks\n            if (chart.getStacks) {\n                chart.getStacks();\n            }\n\n            // Get chart margins\n            chart.getMargins(true);\n            chart.setChartSize();\n\n            // Record preliminary dimensions for later comparison\n            tempWidth = chart.plotWidth;\n            tempHeight = chart.plotHeight = chart.plotHeight - 21; // 21 is the most common correction for X axis labels\n\n            // Get margins by pre-rendering axes\n            each(axes, function (axis) {\n                axis.setScale();\n            });\n            chart.getAxisMargins();\n\n            // If the plot area size has changed significantly, calculate tick positions again\n            redoHorizontal = tempWidth / chart.plotWidth > 1.1;\n            redoVertical = tempHeight / chart.plotHeight > 1.05; // Height is more sensitive\n\n            if (redoHorizontal || redoVertical) {\n\n                chart.maxTicks = null; // reset for second pass\n                each(axes, function (axis) {\n                    if ((axis.horiz && redoHorizontal) || (!axis.horiz && redoVertical)) {\n                        axis.setTickInterval(true); // update to reflect the new margins\n                    }\n                });\n                chart.getMargins(); // second pass to check for new labels\n            }\n\n            // Draw the borders and backgrounds\n            chart.drawChartBox();\n\n\n            // Axes\n            if (chart.hasCartesianSeries) {\n                each(axes, function (axis) {\n                    if (axis.visible) {\n                        axis.render();\n                    }\n                });\n            }\n\n            // The series\n            if (!chart.seriesGroup) {\n                chart.seriesGroup = renderer.g('series-group')\n                    .attr({ zIndex: 3 })\n                    .add();\n            }\n            chart.renderSeries();\n\n            // Labels\n            chart.renderLabels();\n\n            // Credits\n            chart.showCredits(options.credits);\n\n            // Set flag\n            chart.hasRendered = true;\n\n        },\n\n        /**\n         * Show chart credits based on config options\n         */\n        showCredits: function (credits) {\n            if (credits.enabled && !this.credits) {\n                this.credits = this.renderer.text(\n                    credits.text,\n                    0,\n                    0\n                )\n                .on('click', function () {\n                    if (credits.href) {\n                        win.location.href = credits.href;\n                    }\n                })\n                .attr({\n                    align: credits.position.align,\n                    zIndex: 8\n                })\n                .css(credits.style)\n                .add()\n                .align(credits.position);\n            }\n        },\n\n        /**\n         * Clean up memory usage\n         */\n        destroy: function () {\n            var chart = this,\n                axes = chart.axes,\n                series = chart.series,\n                container = chart.container,\n                i,\n                parentNode = container && container.parentNode;\n\n            // fire the chart.destoy event\n            fireEvent(chart, 'destroy');\n\n            // Delete the chart from charts lookup array\n            charts[chart.index] = UNDEFINED;\n            chartCount--;\n            chart.renderTo.removeAttribute('data-highcharts-chart');\n\n            // remove events\n            removeEvent(chart);\n\n            // ==== Destroy collections:\n            // Destroy axes\n            i = axes.length;\n            while (i--) {\n                axes[i] = axes[i].destroy();\n            }\n\n            // Destroy each series\n            i = series.length;\n            while (i--) {\n                series[i] = series[i].destroy();\n            }\n\n            // ==== Destroy chart properties:\n            each(['title', 'subtitle', 'chartBackground', 'plotBackground', 'plotBGImage',\n                    'plotBorder', 'seriesGroup', 'clipRect', 'credits', 'pointer', 'scroller',\n                    'rangeSelector', 'legend', 'resetZoomButton', 'tooltip', 'renderer'], function (name) {\n                var prop = chart[name];\n\n                if (prop && prop.destroy) {\n                    chart[name] = prop.destroy();\n                }\n            });\n\n            // remove container and all SVG\n            if (container) { // can break in IE when destroyed before finished loading\n                container.innerHTML = '';\n                removeEvent(container);\n                if (parentNode) {\n                    discardElement(container);\n                }\n\n            }\n\n            // clean it all up\n            for (i in chart) {\n                delete chart[i];\n            }\n\n        },\n\n\n        /**\n         * VML namespaces can't be added until after complete. Listening\n         * for Perini's doScroll hack is not enough.\n         */\n        isReadyToRender: function () {\n            var chart = this;\n\n            // Note: win == win.top is required\n            if ((!hasSVG && (win == win.top && doc.readyState !== 'complete')) || (useCanVG && !win.canvg)) { // eslint-disable-line eqeqeq\n                if (useCanVG) {\n                    // Delay rendering until canvg library is downloaded and ready\n                    CanVGController.push(function () {\n                        chart.firstRender();\n                    }, chart.options.global.canvasToolsURL);\n                } else {\n                    doc.attachEvent('onreadystatechange', function () {\n                        doc.detachEvent('onreadystatechange', chart.firstRender);\n                        if (doc.readyState === 'complete') {\n                            chart.firstRender();\n                        }\n                    });\n                }\n                return false;\n            }\n            return true;\n        },\n\n        /**\n         * Prepare for first rendering after all data are loaded\n         */\n        firstRender: function () {\n            var chart = this,\n                options = chart.options;\n\n            // Check whether the chart is ready to render\n            if (!chart.isReadyToRender()) {\n                return;\n            }\n\n            // Create the container\n            chart.getContainer();\n\n            // Run an early event after the container and renderer are established\n            fireEvent(chart, 'init');\n\n\n            chart.resetMargins();\n            chart.setChartSize();\n\n            // Set the common chart properties (mainly invert) from the given series\n            chart.propFromSeries();\n\n            // get axes\n            chart.getAxes();\n\n            // Initialize the series\n            each(options.series || [], function (serieOptions) {\n                chart.initSeries(serieOptions);\n            });\n\n            chart.linkSeries();\n\n            // Run an event after axes and series are initialized, but before render. At this stage,\n            // the series data is indexed and cached in the xData and yData arrays, so we can access\n            // those before rendering. Used in Highstock.\n            fireEvent(chart, 'beforeRender');\n\n            // depends on inverted and on margins being set\n            if (Highcharts.Pointer) {\n                chart.pointer = new Pointer(chart, options);\n            }\n\n            chart.render();\n\n            // add canvas\n            chart.renderer.draw();\n        \n            // Fire the load event if there are no external images\n            if (!chart.renderer.imgCount && chart.onload) {\n                chart.onload();\n            }\n\n            // If the chart was rendered outside the top container, put it back in (#3679)\n            chart.cloneRenderTo(true);\n\n        },\n\n        /** \n         * On chart load\n         */\n        onload: function () {\n            var chart = this;\n\n            // Run callbacks\n            each([this.callback].concat(this.callbacks), function (fn) {\n                if (fn && chart.index !== undefined) { // Chart destroyed in its own callback (#3600)\n                    fn.apply(chart, [chart]);\n                }\n            });\n\n            fireEvent(chart, 'load');\n\n            // Don't run again\n            this.onload = null;\n        },\n\n        /**\n        * Creates arrays for spacing and margin from given options.\n        */\n        splashArray: function (target, options) {\n            var oVar = options[target],\n                tArray = isObject(oVar) ? oVar : [oVar, oVar, oVar, oVar];\n\n            return [pick(options[target + 'Top'], tArray[0]),\n                    pick(options[target + 'Right'], tArray[1]),\n                    pick(options[target + 'Bottom'], tArray[2]),\n                    pick(options[target + 'Left'], tArray[3])];\n        }\n    }; // end Chart\n\n    var CenteredSeriesMixin = Highcharts.CenteredSeriesMixin = {\n        /**\n         * Get the center of the pie based on the size and center options relative to the\n         * plot area. Borrowed by the polar and gauge series types.\n         */\n        getCenter: function () {\n\n            var options = this.options,\n                chart = this.chart,\n                slicingRoom = 2 * (options.slicedOffset || 0),\n                handleSlicingRoom,\n                plotWidth = chart.plotWidth - 2 * slicingRoom,\n                plotHeight = chart.plotHeight - 2 * slicingRoom,\n                centerOption = options.center,\n                positions = [pick(centerOption[0], '50%'), pick(centerOption[1], '50%'), options.size || '100%', options.innerSize || 0],\n                smallestSize = mathMin(plotWidth, plotHeight),\n                i,\n                value;\n\n            for (i = 0; i < 4; ++i) {\n                value = positions[i];\n                handleSlicingRoom = i < 2 || (i === 2 && /%$/.test(value));\n\n                // i == 0: centerX, relative to width\n                // i == 1: centerY, relative to height\n                // i == 2: size, relative to smallestSize\n                // i == 3: innerSize, relative to size\n                positions[i] = relativeLength(value, [plotWidth, plotHeight, smallestSize, positions[2]][i]) +\n                    (handleSlicingRoom ? slicingRoom : 0);\n\n            }\n            // innerSize cannot be larger than size (#3632)\n            if (positions[3] > positions[2]) {\n                positions[3] = positions[2];\n            }\n            return positions;\n        }\n    };\n\n    /**\n     * The Point object and prototype. Inheritable and used as base for PiePoint\n     */\n    var Point = function () {};\n    Point.prototype = {\n\n        /**\n         * Initialize the point\n         * @param {Object} series The series object containing this point\n         * @param {Object} options The data in either number, array or object format\n         */\n        init: function (series, options, x) {\n\n            var point = this,\n                colors;\n            point.series = series;\n            point.color = series.color; // #3445\n            point.applyOptions(options, x);\n            point.pointAttr = {};\n\n            if (series.options.colorByPoint) {\n                colors = series.options.colors || series.chart.options.colors;\n                point.color = point.color || colors[series.colorCounter++];\n                // loop back to zero\n                if (series.colorCounter === colors.length) {\n                    series.colorCounter = 0;\n                }\n            }\n\n            series.chart.pointCount++;\n            return point;\n        },\n        /**\n         * Apply the options containing the x and y data and possible some extra properties.\n         * This is called on point init or from point.update.\n         *\n         * @param {Object} options\n         */\n        applyOptions: function (options, x) {\n            var point = this,\n                series = point.series,\n                pointValKey = series.options.pointValKey || series.pointValKey;\n\n            options = Point.prototype.optionsToObject.call(this, options);\n\n            // copy options directly to point\n            extend(point, options);\n            point.options = point.options ? extend(point.options, options) : options;\n\n            // Since options are copied into the Point instance, some accidental options must be shielded (#5681)\n            if (options.group) {\n                delete point.group;\n            }\n\n            // For higher dimension series types. For instance, for ranges, point.y is mapped to point.low.\n            if (pointValKey) {\n                point.y = point[pointValKey];\n            }\n            point.isNull = pick(\n                point.isValid && !point.isValid(),\n                point.x === null || !isNumber(point.y, true)\n            ); // #3571, check for NaN\n\n            // If no x is set by now, get auto incremented value. All points must have an\n            // x value, however the y value can be null to create a gap in the series\n            if ('name' in point && x === undefined && series.xAxis && series.xAxis.hasNames) {\n                point.x = series.xAxis.nameToX(point);\n            }\n            if (point.x === undefined && series) {\n                if (x === undefined) {\n                    point.x = series.autoIncrement(point);\n                } else {\n                    point.x = x;\n                }\n            }\n        \n            return point;\n        },\n\n        /**\n         * Transform number or array configs into objects\n         */\n        optionsToObject: function (options) {\n            var ret = {},\n                series = this.series,\n                keys = series.options.keys,\n                pointArrayMap = keys || series.pointArrayMap || ['y'],\n                valueCount = pointArrayMap.length,\n                firstItemType,\n                i = 0,\n                j = 0;\n\n            if (isNumber(options) || options === null) {\n                ret[pointArrayMap[0]] = options;\n\n            } else if (isArray(options)) {\n                // with leading x value\n                if (!keys && options.length > valueCount) {\n                    firstItemType = typeof options[0];\n                    if (firstItemType === 'string') {\n                        ret.name = options[0];\n                    } else if (firstItemType === 'number') {\n                        ret.x = options[0];\n                    }\n                    i++;\n                }\n                while (j < valueCount) {\n                    if (!keys || options[i] !== undefined) { // Skip undefined positions for keys\n                        ret[pointArrayMap[j]] = options[i];\n                    }\n                    i++;\n                    j++;\n                }\n            } else if (typeof options === 'object') {\n                ret = options;\n\n                // This is the fastest way to detect if there are individual point dataLabels that need\n                // to be considered in drawDataLabels. These can only occur in object configs.\n                if (options.dataLabels) {\n                    series._hasPointLabels = true;\n                }\n\n                // Same approach as above for markers\n                if (options.marker) {\n                    series._hasPointMarkers = true;\n                }\n            }\n            return ret;\n        },\n\n        /**\n         * Destroy a point to clear memory. Its reference still stays in series.data.\n         */\n        destroy: function () {\n            var point = this,\n                series = point.series,\n                chart = series.chart,\n                hoverPoints = chart.hoverPoints,\n                prop;\n\n            chart.pointCount--;\n\n            if (hoverPoints) {\n                point.setState();\n                erase(hoverPoints, point);\n                if (!hoverPoints.length) {\n                    chart.hoverPoints = null;\n                }\n\n            }\n            if (point === chart.hoverPoint) {\n                point.onMouseOut();\n            }\n\n            // remove all events\n            if (point.graphic || point.dataLabel) { // removeEvent and destroyElements are performance expensive\n                removeEvent(point);\n                point.destroyElements();\n            }\n\n            if (point.legendItem) { // pies have legend items\n                chart.legend.destroyItem(point);\n            }\n\n            for (prop in point) {\n                point[prop] = null;\n            }\n\n\n        },\n\n        /**\n         * Destroy SVG elements associated with the point\n         */\n        destroyElements: function () {\n            var point = this,\n                props = ['graphic', 'dataLabel', 'dataLabelUpper', 'connector', 'shadowGroup'],\n                prop,\n                i = 6;\n            while (i--) {\n                prop = props[i];\n                if (point[prop]) {\n                    point[prop] = point[prop].destroy();\n                }\n            }\n        },\n\n        /**\n         * Return the configuration hash needed for the data label and tooltip formatters\n         */\n        getLabelConfig: function () {\n            return {\n                x: this.category,\n                y: this.y,\n                color: this.color,\n                key: this.name || this.category,\n                series: this.series,\n                point: this,\n                percentage: this.percentage,\n                total: this.total || this.stackTotal\n            };\n        },\n\n        /**\n         * Extendable method for formatting each point's tooltip line\n         *\n         * @return {String} A string to be concatenated in to the common tooltip text\n         */\n        tooltipFormatter: function (pointFormat) {\n\n            // Insert options for valueDecimals, valuePrefix, and valueSuffix\n            var series = this.series,\n                seriesTooltipOptions = series.tooltipOptions,\n                valueDecimals = pick(seriesTooltipOptions.valueDecimals, ''),\n                valuePrefix = seriesTooltipOptions.valuePrefix || '',\n                valueSuffix = seriesTooltipOptions.valueSuffix || '';\n\n            // Loop over the point array map and replace unformatted values with sprintf formatting markup\n            each(series.pointArrayMap || ['y'], function (key) {\n                key = '{point.' + key; // without the closing bracket\n                if (valuePrefix || valueSuffix) {\n                    pointFormat = pointFormat.replace(key + '}', valuePrefix + key + '}' + valueSuffix);\n                }\n                pointFormat = pointFormat.replace(key + '}', key + ':,.' + valueDecimals + 'f}');\n            });\n\n            return format(pointFormat, {\n                point: this,\n                series: this.series\n            });\n        },\n\n        /**\n         * Fire an event on the Point object.\n         * @param {String} eventType\n         * @param {Object} eventArgs Additional event arguments\n         * @param {Function} defaultFunction Default event handler\n         */\n        firePointEvent: function (eventType, eventArgs, defaultFunction) {\n            var point = this,\n                series = this.series,\n                seriesOptions = series.options;\n\n            // load event handlers on demand to save time on mouseover/out\n            if (seriesOptions.point.events[eventType] || (point.options && point.options.events && point.options.events[eventType])) {\n                this.importEvents();\n            }\n\n            // add default handler if in selection mode\n            if (eventType === 'click' && seriesOptions.allowPointSelect) {\n                defaultFunction = function (event) {\n                    // Control key is for Windows, meta (= Cmd key) for Mac, Shift for Opera\n                    if (point.select) { // Could be destroyed by prior event handlers (#2911)\n                        point.select(null, event.ctrlKey || event.metaKey || event.shiftKey);\n                    }\n                };\n            }\n\n            fireEvent(this, eventType, eventArgs, defaultFunction);\n        },\n        visible: true\n    };\n    /**\n     * @classDescription The base function which all other series types inherit from. The data in the series is stored\n     * in various arrays.\n     *\n     * - First, series.options.data contains all the original config options for\n     * each point whether added by options or methods like series.addPoint.\n     * - Next, series.data contains those values converted to points, but in case the series data length\n     * exceeds the cropThreshold, or if the data is grouped, series.data doesn't contain all the points. It\n     * only contains the points that have been created on demand.\n     * - Then there's series.points that contains all currently visible point objects. In case of cropping,\n     * the cropped-away points are not part of this array. The series.points array starts at series.cropStart\n     * compared to series.data and series.options.data. If however the series data is grouped, these can't\n     * be correlated one to one.\n     * - series.xData and series.processedXData contain clean x values, equivalent to series.data and series.points.\n     * - series.yData and series.processedYData contain clean x values, equivalent to series.data and series.points.\n     *\n     * @param {Object} chart\n     * @param {Object} options\n     */\n    var Series = Highcharts.Series = function () {};\n\n    Series.prototype = {\n\n        isCartesian: true,\n        type: 'line',\n        pointClass: Point,\n        sorted: true, // requires the data to be sorted\n        requireSorting: true,\n        pointAttrToOptions: { // mapping between SVG attributes and the corresponding options\n            stroke: 'lineColor',\n            'stroke-width': 'lineWidth',\n            fill: 'fillColor',\n            r: 'radius'\n        },\n        directTouch: false,\n        axisTypes: ['xAxis', 'yAxis'],\n        colorCounter: 0,\n        parallelArrays: ['x', 'y'], // each point's x and y values are stored in this.xData and this.yData\n        init: function (chart, options) {\n            var series = this,\n                eventType,\n                events,\n                chartSeries = chart.series,\n                sortByIndex = function (a, b) {\n                    return pick(a.options.index, a._i) - pick(b.options.index, b._i);\n                };\n\n            series.chart = chart;\n            series.options = options = series.setOptions(options); // merge with plotOptions\n            series.linkedSeries = [];\n\n            // bind the axes\n            series.bindAxes();\n\n            // set some variables\n            extend(series, {\n                name: options.name,\n                state: NORMAL_STATE,\n                pointAttr: {},\n                visible: options.visible !== false, // true by default\n                selected: options.selected === true // false by default\n            });\n\n            // special\n            if (useCanVG) {\n                options.animation = false;\n            }\n\n            // register event listeners\n            events = options.events;\n            for (eventType in events) {\n                addEvent(series, eventType, events[eventType]);\n            }\n            if (\n                (events && events.click) ||\n                (options.point && options.point.events && options.point.events.click) ||\n                options.allowPointSelect\n            ) {\n                chart.runTrackerClick = true;\n            }\n\n            series.getColor();\n            series.getSymbol();\n\n            // Set the data\n            each(series.parallelArrays, function (key) {\n                series[key + 'Data'] = [];\n            });\n            series.setData(options.data, false);\n\n            // Mark cartesian\n            if (series.isCartesian) {\n                chart.hasCartesianSeries = true;\n            }\n\n            // Register it in the chart\n            chartSeries.push(series);\n            series._i = chartSeries.length - 1;\n\n            // Sort series according to index option (#248, #1123, #2456)\n            stableSort(chartSeries, sortByIndex);\n            if (this.yAxis) {\n                stableSort(this.yAxis.series, sortByIndex);\n            }\n\n            each(chartSeries, function (series, i) {\n                series.index = i;\n                series.name = series.name || 'Series ' + (i + 1);\n            });\n\n        },\n\n        /**\n         * Set the xAxis and yAxis properties of cartesian series, and register the series\n         * in the axis.series array\n         */\n        bindAxes: function () {\n            var series = this,\n                seriesOptions = series.options,\n                chart = series.chart,\n                axisOptions;\n\n            each(series.axisTypes || [], function (AXIS) { // repeat for xAxis and yAxis\n\n                each(chart[AXIS], function (axis) { // loop through the chart's axis objects\n                    axisOptions = axis.options;\n\n                    // apply if the series xAxis or yAxis option mathches the number of the\n                    // axis, or if undefined, use the first axis\n                    if ((seriesOptions[AXIS] === axisOptions.index) ||\n                            (seriesOptions[AXIS] !== UNDEFINED && seriesOptions[AXIS] === axisOptions.id) ||\n                            (seriesOptions[AXIS] === UNDEFINED && axisOptions.index === 0)) {\n\n                        // register this series in the axis.series lookup\n                        axis.series.push(series);\n\n                        // set this series.xAxis or series.yAxis reference\n                        series[AXIS] = axis;\n\n                        // mark dirty for redraw\n                        axis.isDirty = true;\n                    }\n                });\n\n                // The series needs an X and an Y axis\n                if (!series[AXIS] && series.optionalAxis !== AXIS) {\n                    error(18, true);\n                }\n\n            });\n        },\n\n        /**\n         * For simple series types like line and column, the data values are held in arrays like\n         * xData and yData for quick lookup to find extremes and more. For multidimensional series\n         * like bubble and map, this can be extended with arrays like zData and valueData by\n         * adding to the series.parallelArrays array.\n         */\n        updateParallelArrays: function (point, i) {\n            var series = point.series,\n                args = arguments,\n                fn = isNumber(i) ?\n                    // Insert the value in the given position\n                    function (key) {\n                        var val = key === 'y' && series.toYData ? series.toYData(point) : point[key];\n                        series[key + 'Data'][i] = val;\n                    } :\n                    // Apply the method specified in i with the following arguments as arguments\n                    function (key) {\n                        Array.prototype[i].apply(series[key + 'Data'], Array.prototype.slice.call(args, 2));\n                    };\n\n            each(series.parallelArrays, fn);\n        },\n\n        /**\n         * Return an auto incremented x value based on the pointStart and pointInterval options.\n         * This is only used if an x value is not given for the point that calls autoIncrement.\n         */\n        autoIncrement: function () {\n\n            var options = this.options,\n                xIncrement = this.xIncrement,\n                date,\n                pointInterval,\n                pointIntervalUnit = options.pointIntervalUnit;\n\n            xIncrement = pick(xIncrement, options.pointStart, 0);\n\n            this.pointInterval = pointInterval = pick(this.pointInterval, options.pointInterval, 1);\n\n            // Added code for pointInterval strings\n            if (pointIntervalUnit) {\n                date = new Date(xIncrement);\n\n                if (pointIntervalUnit === 'day') {\n                    date = +date[setDate](date[getDate]() + pointInterval);\n                } else if (pointIntervalUnit === 'month') {\n                    date = +date[setMonth](date[getMonth]() + pointInterval);\n                } else if (pointIntervalUnit === 'year') {\n                    date = +date[setFullYear](date[getFullYear]() + pointInterval);\n                }\n                pointInterval = date - xIncrement;\n            }\n\n            this.xIncrement = xIncrement + pointInterval;\n            return xIncrement;\n        },\n    \n        /**\n         * Set the series options by merging from the options tree\n         * @param {Object} itemOptions\n         */\n        setOptions: function (itemOptions) {\n            var chart = this.chart,\n                chartOptions = chart.options,\n                plotOptions = chartOptions.plotOptions,\n                userOptions = chart.userOptions || {},\n                userPlotOptions = userOptions.plotOptions || {},\n                typeOptions = plotOptions[this.type],\n                options,\n                zones;\n\n            this.userOptions = itemOptions;\n\n            // General series options take precedence over type options because otherwise, default\n            // type options like column.animation would be overwritten by the general option.\n            // But issues have been raised here (#3881), and the solution may be to distinguish\n            // between default option and userOptions like in the tooltip below.\n            options = merge(\n                typeOptions,\n                plotOptions.series,\n                itemOptions\n            );\n\n            // The tooltip options are merged between global and series specific options\n            this.tooltipOptions = merge(\n                defaultOptions.tooltip,\n                defaultOptions.plotOptions[this.type].tooltip,\n                userOptions.tooltip,\n                userPlotOptions.series && userPlotOptions.series.tooltip,\n                userPlotOptions[this.type] && userPlotOptions[this.type].tooltip,\n                itemOptions.tooltip\n            );\n\n            // Delete marker object if not allowed (#1125)\n            if (typeOptions.marker === null) {\n                delete options.marker;\n            }\n\n            // Handle color zones\n            this.zoneAxis = options.zoneAxis;\n            zones = this.zones = (options.zones || []).slice();\n            if ((options.negativeColor || options.negativeFillColor) && !options.zones) {\n                zones.push({\n                    value: options[this.zoneAxis + 'Threshold'] || options.threshold || 0,\n                    color: options.negativeColor,\n                    fillColor: options.negativeFillColor\n                });\n            }\n            if (zones.length) { // Push one extra zone for the rest\n                if (defined(zones[zones.length - 1].value)) {\n                    zones.push({\n                        color: this.color,\n                        fillColor: this.fillColor\n                    });\n                }\n            }\n            return options;\n        },\n\n        getCyclic: function (prop, value, defaults) {\n            var i,\n                userOptions = this.userOptions,\n                indexName = '_' + prop + 'Index',\n                counterName = prop + 'Counter';\n\n            if (!value) {\n                if (defined(userOptions[indexName])) { // after Series.update()\n                    i = userOptions[indexName];\n                } else {\n                    userOptions[indexName] = i = this.chart[counterName] % defaults.length;\n                    this.chart[counterName] += 1;\n                }\n                value = defaults[i];\n            }\n            this[prop] = value;\n        },\n\n        /**\n         * Get the series' color\n         */\n        getColor: function () {\n            if (this.options.colorByPoint) {\n                this.options.color = null; // #4359, selected slice got series.color even when colorByPoint was set.\n            } else {\n                this.getCyclic('color', this.options.color || defaultPlotOptions[this.type].color, this.chart.options.colors);\n            }\n        },\n        /**\n         * Get the series' symbol\n         */\n        getSymbol: function () {\n            var seriesMarkerOption = this.options.marker;\n\n            this.getCyclic('symbol', seriesMarkerOption.symbol, this.chart.options.symbols);\n\n            // don't substract radius in image symbols (#604)\n            if (/^url/.test(this.symbol)) {\n                seriesMarkerOption.radius = 0;\n            }\n        },\n\n        drawLegendSymbol: LegendSymbolMixin.drawLineMarker,\n\n        /**\n         * Replace the series data with a new set of data\n         * @param {Object} data\n         * @param {Object} redraw\n         */\n        setData: function (data, redraw, animation, updatePoints) {\n            var series = this,\n                oldData = series.points,\n                oldDataLength = (oldData && oldData.length) || 0,\n                dataLength,\n                options = series.options,\n                chart = series.chart,\n                firstPoint = null,\n                xAxis = series.xAxis,\n                i,\n                turboThreshold = options.turboThreshold,\n                pt,\n                xData = this.xData,\n                yData = this.yData,\n                pointArrayMap = series.pointArrayMap,\n                valueCount = pointArrayMap && pointArrayMap.length;\n\n            data = data || [];\n            dataLength = data.length;\n            redraw = pick(redraw, true);\n\n            // If the point count is the same as is was, just run Point.update which is\n            // cheaper, allows animation, and keeps references to points.\n            if (updatePoints !== false && dataLength && oldDataLength === dataLength && !series.cropped && !series.hasGroupedData && series.visible) {\n                each(data, function (point, i) {\n                    // .update doesn't exist on a linked, hidden series (#3709)\n                    if (oldData[i].update && point !== options.data[i]) {\n                        oldData[i].update(point, false, null, false);\n                    }\n                });\n\n            } else {\n\n                // Reset properties\n                series.xIncrement = null;\n\n                series.colorCounter = 0; // for series with colorByPoint (#1547)\n\n                // Update parallel arrays\n                each(this.parallelArrays, function (key) {\n                    series[key + 'Data'].length = 0;\n                });\n\n                // In turbo mode, only one- or twodimensional arrays of numbers are allowed. The\n                // first value is tested, and we assume that all the rest are defined the same\n                // way. Although the 'for' loops are similar, they are repeated inside each\n                // if-else conditional for max performance.\n                if (turboThreshold && dataLength > turboThreshold) {\n\n                    // find the first non-null point\n                    i = 0;\n                    while (firstPoint === null && i < dataLength) {\n                        firstPoint = data[i];\n                        i++;\n                    }\n\n\n                    if (isNumber(firstPoint)) { // assume all points are numbers\n                        for (i = 0; i < dataLength; i++) {\n                            xData[i] = this.autoIncrement();\n                            yData[i] = data[i];\n                        }\n                    } else if (isArray(firstPoint)) { // assume all points are arrays\n                        if (valueCount) { // [x, low, high] or [x, o, h, l, c]\n                            for (i = 0; i < dataLength; i++) {\n                                pt = data[i];\n                                xData[i] = pt[0];\n                                yData[i] = pt.slice(1, valueCount + 1);\n                            }\n                        } else { // [x, y]\n                            for (i = 0; i < dataLength; i++) {\n                                pt = data[i];\n                                xData[i] = pt[0];\n                                yData[i] = pt[1];\n                            }\n                        }\n                    } else {\n                        error(12); // Highcharts expects configs to be numbers or arrays in turbo mode\n                    }\n                } else {\n                    for (i = 0; i < dataLength; i++) {\n                        if (data[i] !== UNDEFINED) { // stray commas in oldIE\n                            pt = { series: series };\n                            series.pointClass.prototype.applyOptions.apply(pt, [data[i]]);\n                            series.updateParallelArrays(pt, i);\n                        }\n                    }\n                }\n\n                // Forgetting to cast strings to numbers is a common caveat when handling CSV or JSON\n                if (isString(yData[0])) {\n                    error(14, true);\n                }\n\n                series.data = [];\n                series.options.data = series.userOptions.data = data;\n\n                // destroy old points\n                i = oldDataLength;\n                while (i--) {\n                    if (oldData[i] && oldData[i].destroy) {\n                        oldData[i].destroy();\n                    }\n                }\n\n                // reset minRange (#878)\n                if (xAxis) {\n                    xAxis.minRange = xAxis.userMinRange;\n                }\n\n                // redraw\n                series.isDirty = series.isDirtyData = chart.isDirtyBox = true;\n                animation = false;\n            }\n\n            // Typically for pie series, points need to be processed and generated\n            // prior to rendering the legend\n            if (options.legendType === 'point') {\n                this.processData();\n                this.generatePoints();\n            }\n\n            if (redraw) {\n                chart.redraw(animation);\n            }\n        },\n\n        /**\n         * Process the data by cropping away unused data points if the series is longer\n         * than the crop threshold. This saves computing time for lage series.\n         */\n        processData: function (force) {\n            var series = this,\n                processedXData = series.xData, // copied during slice operation below\n                processedYData = series.yData,\n                dataLength = processedXData.length,\n                croppedData,\n                cropStart = 0,\n                cropped,\n                distance,\n                closestPointRange,\n                xAxis = series.xAxis,\n                i, // loop variable\n                options = series.options,\n                cropThreshold = options.cropThreshold,\n                getExtremesFromAll = series.getExtremesFromAll || options.getExtremesFromAll, // #4599\n                isCartesian = series.isCartesian,\n                xExtremes,\n                val2lin = xAxis && xAxis.val2lin,\n                isLog = xAxis && xAxis.isLog,\n                min,\n                max;\n\n            // If the series data or axes haven't changed, don't go through this. Return false to pass\n            // the message on to override methods like in data grouping.\n            if (isCartesian && !series.isDirty && !xAxis.isDirty && !series.yAxis.isDirty && !force) {\n                return false;\n            }\n\n            if (xAxis) {\n                xExtremes = xAxis.getExtremes(); // corrected for log axis (#3053)\n                min = xExtremes.min;\n                max = xExtremes.max;\n            }\n\n            // optionally filter out points outside the plot area\n            if (isCartesian && series.sorted && !getExtremesFromAll && (!cropThreshold || dataLength > cropThreshold || series.forceCrop)) {\n\n                // it's outside current extremes\n                if (processedXData[dataLength - 1] < min || processedXData[0] > max) {\n                    processedXData = [];\n                    processedYData = [];\n\n                // only crop if it's actually spilling out\n                } else if (processedXData[0] < min || processedXData[dataLength - 1] > max) {\n                    croppedData = this.cropData(series.xData, series.yData, min, max);\n                    processedXData = croppedData.xData;\n                    processedYData = croppedData.yData;\n                    cropStart = croppedData.start;\n                    cropped = true;\n                }\n            }\n\n\n            // Find the closest distance between processed points\n            i = processedXData.length || 1;\n            while (--i) {\n                distance = isLog ?\n                    val2lin(processedXData[i]) - val2lin(processedXData[i - 1]) :\n                    processedXData[i] - processedXData[i - 1];\n\n                if (distance > 0 && (closestPointRange === UNDEFINED || distance < closestPointRange)) {\n                    closestPointRange = distance;\n\n                // Unsorted data is not supported by the line tooltip, as well as data grouping and\n                // navigation in Stock charts (#725) and width calculation of columns (#1900)\n                } else if (distance < 0 && series.requireSorting) {\n                    error(15);\n                }\n            }\n\n            // Record the properties\n            series.cropped = cropped; // undefined or true\n            series.cropStart = cropStart;\n            series.processedXData = processedXData;\n            series.processedYData = processedYData;\n\n            series.closestPointRange = closestPointRange;\n\n        },\n\n        /**\n         * Iterate over xData and crop values between min and max. Returns object containing crop start/end\n         * cropped xData with corresponding part of yData, dataMin and dataMax within the cropped range\n         */\n        cropData: function (xData, yData, min, max) {\n            var dataLength = xData.length,\n                cropStart = 0,\n                cropEnd = dataLength,\n                cropShoulder = pick(this.cropShoulder, 1), // line-type series need one point outside\n                i,\n                j;\n\n            // iterate up to find slice start\n            for (i = 0; i < dataLength; i++) {\n                if (xData[i] >= min) {\n                    cropStart = mathMax(0, i - cropShoulder);\n                    break;\n                }\n            }\n\n            // proceed to find slice end\n            for (j = i; j < dataLength; j++) {\n                if (xData[j] > max) {\n                    cropEnd = j + cropShoulder;\n                    break;\n                }\n            }\n\n            return {\n                xData: xData.slice(cropStart, cropEnd),\n                yData: yData.slice(cropStart, cropEnd),\n                start: cropStart,\n                end: cropEnd\n            };\n        },\n\n\n        /**\n         * Generate the data point after the data has been processed by cropping away\n         * unused points and optionally grouped in Highcharts Stock.\n         */\n        generatePoints: function () {\n            var series = this,\n                options = series.options,\n                dataOptions = options.data,\n                data = series.data,\n                dataLength,\n                processedXData = series.processedXData,\n                processedYData = series.processedYData,\n                pointClass = series.pointClass,\n                processedDataLength = processedXData.length,\n                cropStart = series.cropStart || 0,\n                cursor,\n                hasGroupedData = series.hasGroupedData,\n                point,\n                points = [],\n                i;\n\n            if (!data && !hasGroupedData) {\n                var arr = [];\n                arr.length = dataOptions.length;\n                data = series.data = arr;\n            }\n\n            for (i = 0; i < processedDataLength; i++) {\n                cursor = cropStart + i;\n                if (!hasGroupedData) {\n                    if (data[cursor]) {\n                        point = data[cursor];\n                    } else if (dataOptions[cursor] !== UNDEFINED) { // #970\n                        data[cursor] = point = (new pointClass()).init(series, dataOptions[cursor], processedXData[i]);\n                    }\n                    points[i] = point;\n                } else {\n                    // splat the y data in case of ohlc data array\n                    points[i] = (new pointClass()).init(series, [processedXData[i]].concat(splat(processedYData[i])));\n                    points[i].dataGroup = series.groupMap[i];\n                }\n                points[i].index = cursor; // For faster access in Point.update\n            }\n\n            // Hide cropped-away points - this only runs when the number of points is above cropThreshold, or when\n            // swithching view from non-grouped data to grouped data (#637)\n            if (data && (processedDataLength !== (dataLength = data.length) || hasGroupedData)) {\n                for (i = 0; i < dataLength; i++) {\n                    if (i === cropStart && !hasGroupedData) { // when has grouped data, clear all points\n                        i += processedDataLength;\n                    }\n                    if (data[i]) {\n                        data[i].destroyElements();\n                        data[i].plotX = UNDEFINED; // #1003\n                    }\n                }\n            }\n\n            series.data = data;\n            series.points = points;\n        },\n\n        /**\n         * Calculate Y extremes for visible data\n         */\n        getExtremes: function (yData) {\n            var xAxis = this.xAxis,\n                yAxis = this.yAxis,\n                xData = this.processedXData,\n                yDataLength,\n                activeYData = [],\n                activeCounter = 0,\n                xExtremes = xAxis.getExtremes(), // #2117, need to compensate for log X axis\n                xMin = xExtremes.min,\n                xMax = xExtremes.max,\n                validValue,\n                withinRange,\n                x,\n                y,\n                i,\n                j;\n\n            yData = yData || this.stackedYData || this.processedYData || [];\n            yDataLength = yData.length;\n\n            for (i = 0; i < yDataLength; i++) {\n\n                x = xData[i];\n                y = yData[i];\n\n                // For points within the visible range, including the first point outside the\n                // visible range, consider y extremes\n                validValue = (isNumber(y, true) || isArray(y)) && (!yAxis.isLog || (y.length || y > 0));\n                withinRange = this.getExtremesFromAll || this.options.getExtremesFromAll || this.cropped ||\n                    ((xData[i + 1] || x) >= xMin &&    (xData[i - 1] || x) <= xMax);\n\n                if (validValue && withinRange) {\n\n                    j = y.length;\n                    if (j) { // array, like ohlc or range data\n                        while (j--) {\n                            if (y[j] !== null) {\n                                activeYData[activeCounter++] = y[j];\n                            }\n                        }\n                    } else {\n                        activeYData[activeCounter++] = y;\n                    }\n                }\n            }\n            this.dataMin = arrayMin(activeYData);\n            this.dataMax = arrayMax(activeYData);\n        },\n\n        /**\n         * Translate data points from raw data values to chart specific positioning data\n         * needed later in drawPoints, drawGraph and drawTracker.\n         */\n        translate: function () {\n            if (!this.processedXData) { // hidden series\n                this.processData();\n            }\n            this.generatePoints();\n            var series = this,\n                options = series.options,\n                stacking = options.stacking,\n                xAxis = series.xAxis,\n                categories = xAxis.categories,\n                yAxis = series.yAxis,\n                points = series.points,\n                dataLength = points.length,\n                hasModifyValue = !!series.modifyValue,\n                i,\n                pointPlacement = options.pointPlacement,\n                dynamicallyPlaced = pointPlacement === 'between' || isNumber(pointPlacement),\n                threshold = options.threshold,\n                stackThreshold = options.startFromThreshold ? threshold : 0,\n                plotX,\n                plotY,\n                lastPlotX,\n                stackIndicator,\n                closestPointRangePx = Number.MAX_VALUE;\n\n            // Translate each point\n            for (i = 0; i < dataLength; i++) {\n                var point = points[i],\n                    xValue = point.x,\n                    yValue = point.y,\n                    yBottom = point.low,\n                    stack = stacking && yAxis.stacks[(series.negStacks && yValue < (stackThreshold ? 0 : threshold) ? '-' : '') + series.stackKey],\n                    pointStack,\n                    stackValues;\n\n                // Discard disallowed y values for log axes (#3434)\n                if (yAxis.isLog && yValue !== null && yValue <= 0) {\n                    point.isNull = true;\n                }\n\n                // Get the plotX translation\n                point.plotX = plotX = correctFloat( // #5236\n                    mathMin(mathMax(-1e5, xAxis.translate(xValue, 0, 0, 0, 1, pointPlacement, this.type === 'flags')), 1e5) // #3923\n                );\n\n                // Calculate the bottom y value for stacked series\n                if (stacking && series.visible && !point.isNull && stack && stack[xValue]) {\n                    stackIndicator = series.getStackIndicator(stackIndicator, xValue, series.index);\n                    pointStack = stack[xValue];\n                    stackValues = pointStack.points[stackIndicator.key];\n                    yBottom = stackValues[0];\n                    yValue = stackValues[1];\n\n                    if (yBottom === stackThreshold && stackIndicator.key === stack[xValue].base) {\n                        yBottom = pick(threshold, yAxis.min);\n                    }\n                    if (yAxis.isLog && yBottom <= 0) { // #1200, #1232\n                        yBottom = null;\n                    }\n\n                    point.total = point.stackTotal = pointStack.total;\n                    point.percentage = pointStack.total && (point.y / pointStack.total * 100);\n                    point.stackY = yValue;\n\n                    // Place the stack label\n                    pointStack.setOffset(series.pointXOffset || 0, series.barW || 0);\n\n                }\n\n                // Set translated yBottom or remove it\n                point.yBottom = defined(yBottom) ?\n                    yAxis.translate(yBottom, 0, 1, 0, 1) :\n                    null;\n\n                // general hook, used for Highstock compare mode\n                if (hasModifyValue) {\n                    yValue = series.modifyValue(yValue, point);\n                }\n\n                // Set the the plotY value, reset it for redraws\n                point.plotY = plotY = (typeof yValue === 'number' && yValue !== Infinity) ?\n                    mathMin(mathMax(-1e5, yAxis.translate(yValue, 0, 1, 0, 1)), 1e5) : // #3201\n                    UNDEFINED;\n                point.isInside = plotY !== UNDEFINED && plotY >= 0 && plotY <= yAxis.len && // #3519\n                    plotX >= 0 && plotX <= xAxis.len;\n\n\n                // Set client related positions for mouse tracking\n                point.clientX = dynamicallyPlaced ? correctFloat(xAxis.translate(xValue, 0, 0, 0, 1, pointPlacement)) : plotX; // #1514, #5383, #5518\n\n                point.negative = point.y < (threshold || 0);\n\n                // some API data\n                point.category = categories && categories[point.x] !== UNDEFINED ?\n                    categories[point.x] : point.x;\n\n                // Determine auto enabling of markers (#3635, #5099)\n                if (!point.isNull) {\n                    if (lastPlotX !== undefined) {\n                        closestPointRangePx = mathMin(closestPointRangePx, mathAbs(plotX - lastPlotX));\n                    }\n                    lastPlotX = plotX;\n                }\n\n            }\n            series.closestPointRangePx = closestPointRangePx;\n        },\n\n        /**\n         * Return the series points with null points filtered out\n         */\n        getValidPoints: function (points, insideOnly) {\n            var chart = this.chart;\n            return grep(points || this.points || [], function isValidPoint(point) { // #3916, #5029\n                if (insideOnly && !chart.isInsidePlot(point.plotX, point.plotY, chart.inverted)) { // #5085\n                    return false;\n                }\n                return !point.isNull;\n            });\n        },\n\n        /**\n         * Set the clipping for the series. For animated series it is called twice, first to initiate\n         * animating the clip then the second time without the animation to set the final clip.\n         */\n        setClip: function (animation) {\n            var chart = this.chart,\n                options = this.options,\n                renderer = chart.renderer,\n                inverted = chart.inverted,\n                seriesClipBox = this.clipBox,\n                clipBox = seriesClipBox || chart.clipBox,\n                sharedClipKey = this.sharedClipKey || ['_sharedClip', animation && animation.duration, animation && animation.easing, clipBox.height, options.xAxis, options.yAxis].join(','), // #4526\n                clipRect = chart[sharedClipKey],\n                markerClipRect = chart[sharedClipKey + 'm'];\n\n            // If a clipping rectangle with the same properties is currently present in the chart, use that.\n            if (!clipRect) {\n\n                // When animation is set, prepare the initial positions\n                if (animation) {\n                    clipBox.width = 0;\n\n                    chart[sharedClipKey + 'm'] = markerClipRect = renderer.clipRect(\n                        -99, // include the width of the first marker\n                        inverted ? -chart.plotLeft : -chart.plotTop,\n                        99,\n                        inverted ? chart.chartWidth : chart.chartHeight\n                    );\n                }\n                chart[sharedClipKey] = clipRect = renderer.clipRect(clipBox);\n                // Create hashmap for series indexes\n                clipRect.count = { length: 0 };\n\n            }\n            if (animation) {\n                if (!clipRect.count[this.index]) {\n                    clipRect.count[this.index] = true;\n                    clipRect.count.length += 1;\n                }\n            }\n\n            if (options.clip !== false) {\n                this.group.clip(animation || seriesClipBox ? clipRect : chart.clipRect);\n                this.markerGroup.clip(markerClipRect);\n                this.sharedClipKey = sharedClipKey;\n            }\n\n            // Remove the shared clipping rectangle when all series are shown\n            if (!animation) {\n                if (clipRect.count[this.index]) {\n                    delete clipRect.count[this.index];\n                    clipRect.count.length -= 1;\n                }\n\n                if (clipRect.count.length === 0 && sharedClipKey && chart[sharedClipKey]) {\n                    if (!seriesClipBox) {\n                        chart[sharedClipKey] = chart[sharedClipKey].destroy();\n                    }\n                    if (chart[sharedClipKey + 'm']) {\n                        chart[sharedClipKey + 'm'] = chart[sharedClipKey + 'm'].destroy();\n                    }\n                }\n            }\n        },\n\n        /**\n         * Animate in the series\n         */\n        animate: function (init) {\n            var series = this,\n                chart = series.chart,\n                clipRect,\n                animation = animObject(series.options.animation),\n                sharedClipKey;\n\n            // Initialize the animation. Set up the clipping rectangle.\n            if (init) {\n\n                series.setClip(animation);\n\n            // Run the animation\n            } else {\n                sharedClipKey = this.sharedClipKey;\n                clipRect = chart[sharedClipKey];\n                if (clipRect) {\n                    clipRect.animate({\n                        width: chart.plotSizeX\n                    }, animation);\n                }\n                if (chart[sharedClipKey + 'm']) {\n                    chart[sharedClipKey + 'm'].animate({\n                        width: chart.plotSizeX + 99\n                    }, animation);\n                }\n\n                // Delete this function to allow it only once\n                series.animate = null;\n\n            }\n        },\n\n        /**\n         * This runs after animation to land on the final plot clipping\n         */\n        afterAnimate: function () {\n            this.setClip();\n            fireEvent(this, 'afterAnimate');\n        },\n\n        /**\n         * Draw the markers\n         */\n        drawPoints: function () {\n            var series = this,\n                pointAttr,\n                points = series.points,\n                chart = series.chart,\n                plotX,\n                plotY,\n                i,\n                point,\n                radius,\n                symbol,\n                isImage,\n                graphic,\n                options = series.options,\n                seriesMarkerOptions = options.marker,\n                seriesPointAttr = series.pointAttr[''],\n                pointMarkerOptions,\n                hasPointMarker,\n                enabled,\n                isInside,\n                markerGroup = series.markerGroup,\n                xAxis = series.xAxis,\n                globallyEnabled = pick(\n                    seriesMarkerOptions.enabled,\n                    xAxis.isRadial,\n                    series.closestPointRangePx > 2 * seriesMarkerOptions.radius\n                );\n\n            if (seriesMarkerOptions.enabled !== false || series._hasPointMarkers) {\n\n                i = points.length;\n                while (i--) {\n                    point = points[i];\n                    plotX = mathFloor(point.plotX); // #1843\n                    plotY = point.plotY;\n                    graphic = point.graphic;\n                    pointMarkerOptions = point.marker || {};\n                    hasPointMarker = !!point.marker;\n                    enabled = (globallyEnabled && pointMarkerOptions.enabled === UNDEFINED) || pointMarkerOptions.enabled;\n                    isInside = point.isInside;\n\n                    // only draw the point if y is defined\n                    if (enabled && isNumber(plotY) && point.y !== null) {\n\n                        // shortcuts\n                        pointAttr = point.pointAttr[point.selected ? SELECT_STATE : NORMAL_STATE] || seriesPointAttr;\n                        radius = pointAttr.r;\n                        symbol = pick(pointMarkerOptions.symbol, series.symbol);\n                        isImage = symbol.indexOf('url') === 0;\n\n                        if (graphic) { // update\n                            graphic[isInside ? 'show' : 'hide'](true) // Since the marker group isn't clipped, each individual marker must be toggled\n                                .attr(pointAttr) // #4759\n                                .animate(extend({\n                                    x: plotX - radius,\n                                    y: plotY - radius\n                                }, graphic.symbolName ? { // don't apply to image symbols #507\n                                    width: 2 * radius,\n                                    height: 2 * radius\n                                } : {}));\n                        } else if (isInside && (radius > 0 || isImage)) {\n                            point.graphic = graphic = chart.renderer.symbol(\n                                symbol,\n                                plotX - radius,\n                                plotY - radius,\n                                2 * radius,\n                                2 * radius,\n                                hasPointMarker ? pointMarkerOptions : seriesMarkerOptions\n                            )\n                            .attr(pointAttr)\n                            .add(markerGroup);\n                        }\n\n                    } else if (graphic) {\n                        point.graphic = graphic.destroy(); // #1269\n                    }\n                }\n            }\n\n        },\n\n        /**\n         * Convert state properties from API naming conventions to SVG attributes\n         *\n         * @param {Object} options API options object\n         * @param {Object} base1 SVG attribute object to inherit from\n         * @param {Object} base2 Second level SVG attribute object to inherit from\n         */\n        convertAttribs: function (options, base1, base2, base3) {\n            var conversion = this.pointAttrToOptions,\n                attr,\n                option,\n                obj = {};\n\n            options = options || {};\n            base1 = base1 || {};\n            base2 = base2 || {};\n            base3 = base3 || {};\n\n            for (attr in conversion) {\n                option = conversion[attr];\n                obj[attr] = pick(options[option], base1[attr], base2[attr], base3[attr]);\n            }\n            return obj;\n        },\n\n        /**\n         * Get the state attributes. Each series type has its own set of attributes\n         * that are allowed to change on a point's state change. Series wide attributes are stored for\n         * all series, and additionally point specific attributes are stored for all\n         * points with individual marker options. If such options are not defined for the point,\n         * a reference to the series wide attributes is stored in point.pointAttr.\n         */\n        getAttribs: function () {\n            var series = this,\n                seriesOptions = series.options,\n                normalOptions = defaultPlotOptions[series.type].marker ? seriesOptions.marker : seriesOptions,\n                stateOptions = normalOptions.states,\n                stateOptionsHover = stateOptions[HOVER_STATE],\n                pointStateOptionsHover,\n                seriesColor = series.color,\n                seriesNegativeColor = series.options.negativeColor,\n                normalDefaults = {\n                    stroke: seriesColor,\n                    fill: seriesColor\n                },\n                points = series.points || [], // #927\n                i,\n                j,\n                threshold,\n                point,\n                seriesPointAttr = [],\n                pointAttr,\n                pointAttrToOptions = series.pointAttrToOptions,\n                hasPointSpecificOptions = series.hasPointSpecificOptions,\n                defaultLineColor = normalOptions.lineColor,\n                defaultFillColor = normalOptions.fillColor,\n                turboThreshold = seriesOptions.turboThreshold,\n                zones = series.zones,\n                zoneAxis = series.zoneAxis || 'y',\n                zoneColor, \n                attr,\n                key;\n\n            // series type specific modifications\n            if (seriesOptions.marker) { // line, spline, area, areaspline, scatter\n\n                // if no hover radius is given, default to normal radius + 2\n                stateOptionsHover.radius = +stateOptionsHover.radius || +normalOptions.radius + +stateOptionsHover.radiusPlus;\n                stateOptionsHover.lineWidth = stateOptionsHover.lineWidth || normalOptions.lineWidth + stateOptionsHover.lineWidthPlus;\n\n            } else { // column, bar, pie\n\n                // if no hover color is given, brighten the normal color\n                stateOptionsHover.color = stateOptionsHover.color ||\n                    Color(stateOptionsHover.color || seriesColor)\n                        .brighten(stateOptionsHover.brightness).get();\n\n                // if no hover negativeColor is given, brighten the normal negativeColor\n                stateOptionsHover.negativeColor = stateOptionsHover.negativeColor ||\n                    Color(stateOptionsHover.negativeColor || seriesNegativeColor)\n                        .brighten(stateOptionsHover.brightness).get();\n            }\n\n            // general point attributes for the series normal state\n            seriesPointAttr[NORMAL_STATE] = series.convertAttribs(normalOptions, normalDefaults);\n\n            // HOVER_STATE and SELECT_STATE states inherit from normal state except the default radius\n            each([HOVER_STATE, SELECT_STATE], function (state) {\n                seriesPointAttr[state] =\n                        series.convertAttribs(stateOptions[state], seriesPointAttr[NORMAL_STATE]);\n            });\n\n            // set it\n            series.pointAttr = seriesPointAttr;\n\n\n            // Generate the point-specific attribute collections if specific point\n            // options are given. If not, create a referance to the series wide point\n            // attributes\n            i = points.length;\n            if (!turboThreshold || i < turboThreshold || hasPointSpecificOptions) {\n                while (i--) {\n                    point = points[i];\n                    normalOptions = (point.options && point.options.marker) || point.options;\n                    if (normalOptions && normalOptions.enabled === false) {\n                        normalOptions.radius = 0;\n                    }\n\n                    zoneColor = null;\n                    if (zones.length) {\n                        j = 0;\n                        threshold = zones[j];\n                        while (point[zoneAxis] >= threshold.value) {\n                            threshold = zones[++j];\n                        }\n\n                        point.color = point.fillColor = zoneColor = pick(threshold.color, series.color); // #3636, #4267, #4430 - inherit color from series, when color is undefined\n\n                    }\n\n                    hasPointSpecificOptions = seriesOptions.colorByPoint || point.color; // #868\n\n                    // check if the point has specific visual options\n                    if (point.options) {\n                        for (key in pointAttrToOptions) {\n                            if (defined(normalOptions[pointAttrToOptions[key]])) {\n                                hasPointSpecificOptions = true;\n                            }\n                        }\n                    }\n\n                    // a specific marker config object is defined for the individual point:\n                    // create it's own attribute collection\n                    if (hasPointSpecificOptions) {\n                        normalOptions = normalOptions || {};\n                        pointAttr = [];\n                        stateOptions = normalOptions.states || {}; // reassign for individual point\n                        pointStateOptionsHover = stateOptions[HOVER_STATE] = stateOptions[HOVER_STATE] || {};\n\n                        // Handle colors for column and pies\n                        if (!seriesOptions.marker || (point.negative && !pointStateOptionsHover.fillColor && !stateOptionsHover.fillColor)) { // column, bar, point or negative threshold for series with markers (#3636)\n                            // If no hover color is given, brighten the normal color. #1619, #2579\n                            pointStateOptionsHover[series.pointAttrToOptions.fill] = pointStateOptionsHover.color || (!point.options.color && stateOptionsHover[(point.negative && seriesNegativeColor ? 'negativeColor' : 'color')]) ||\n                                Color(point.color)\n                                    .brighten(pointStateOptionsHover.brightness || stateOptionsHover.brightness)\n                                    .get();\n                        }\n\n                        // normal point state inherits series wide normal state\n                        attr = { color: point.color }; // #868\n                        if (!defaultFillColor) { // Individual point color or negative color markers (#2219)\n                            attr.fillColor = point.color;\n                        }\n                        if (!defaultLineColor) {\n                            attr.lineColor = point.color; // Bubbles take point color, line markers use white\n                        }\n                        // Color is explicitly set to null or undefined (#1288, #4068)\n                        if (normalOptions.hasOwnProperty('color') && !normalOptions.color) {\n                            delete normalOptions.color;\n                        }\n\n                        // When zone is set, but series.states.hover.color is not set, apply zone color on hover, #4670: \n                        if (zoneColor && !stateOptionsHover.fillColor) {\n                            pointStateOptionsHover.fillColor = zoneColor;\n                        }\n\n                        pointAttr[NORMAL_STATE] = series.convertAttribs(extend(attr, normalOptions), seriesPointAttr[NORMAL_STATE]);\n\n                        // inherit from point normal and series hover\n                        pointAttr[HOVER_STATE] = series.convertAttribs(\n                            stateOptions[HOVER_STATE],\n                            seriesPointAttr[HOVER_STATE],\n                            pointAttr[NORMAL_STATE]\n                        );\n\n                        // inherit from point normal and series hover\n                        pointAttr[SELECT_STATE] = series.convertAttribs(\n                            stateOptions[SELECT_STATE],\n                            seriesPointAttr[SELECT_STATE],\n                            pointAttr[NORMAL_STATE]\n                        );\n\n\n                    // no marker config object is created: copy a reference to the series-wide\n                    // attribute collection\n                    } else {\n                        pointAttr = seriesPointAttr;\n                    }\n\n                    point.pointAttr = pointAttr;\n                }\n            }\n        },\n\n        /**\n         * Clear DOM objects and free up memory\n         */\n        destroy: function () {\n            var series = this,\n                chart = series.chart,\n                issue134 = /AppleWebKit\\/533/.test(userAgent),\n                destroy,\n                i,\n                data = series.data || [],\n                point,\n                prop,\n                axis;\n\n            // add event hook\n            fireEvent(series, 'destroy');\n\n            // remove all events\n            removeEvent(series);\n\n            // erase from axes\n            each(series.axisTypes || [], function (AXIS) {\n                axis = series[AXIS];\n                if (axis) {\n                    erase(axis.series, series);\n                    axis.isDirty = axis.forceRedraw = true;\n                }\n            });\n\n            // remove legend items\n            if (series.legendItem) {\n                series.chart.legend.destroyItem(series);\n            }\n\n            // destroy all points with their elements\n            i = data.length;\n            while (i--) {\n                point = data[i];\n                if (point && point.destroy) {\n                    point.destroy();\n                }\n            }\n            series.points = null;\n\n            // Clear the animation timeout if we are destroying the series during initial animation\n            clearTimeout(series.animationTimeout);\n\n            // Destroy all SVGElements associated to the series\n            for (prop in series) {\n                if (series[prop] instanceof SVGElement && !series[prop].survive) { // Survive provides a hook for not destroying\n\n                    // issue 134 workaround\n                    destroy = issue134 && prop === 'group' ?\n                        'hide' :\n                        'destroy';\n\n                    series[prop][destroy]();\n                }\n            }\n\n            // remove from hoverSeries\n            if (chart.hoverSeries === series) {\n                chart.hoverSeries = null;\n            }\n            erase(chart.series, series);\n\n            // clear all members\n            for (prop in series) {\n                delete series[prop];\n            }\n        },\n\n        /**\n         * Get the graph path\n         */\n        getGraphPath: function (points, nullsAsZeroes, connectCliffs) {\n            var series = this,\n                options = series.options,\n                step = options.step,\n                reversed,\n                graphPath = [],\n                xMap = [],\n                gap;\n\n            points = points || series.points;\n\n            // Bottom of a stack is reversed\n            reversed = points.reversed;\n            if (reversed) {\n                points.reverse();\n            }\n            // Reverse the steps (#5004)\n            step = { right: 1, center: 2 }[step] || (step && 3);\n            if (step && reversed) {\n                step = 4 - step;\n            }\n\n            // Remove invalid points, especially in spline (#5015)\n            if (options.connectNulls && !nullsAsZeroes && !connectCliffs) {\n                points = this.getValidPoints(points);\n            }\n\n            // Build the line\n            each(points, function (point, i) {\n\n                var plotX = point.plotX,\n                    plotY = point.plotY,\n                    lastPoint = points[i - 1],\n                    pathToPoint; // the path to this point from the previous\n\n                if ((point.leftCliff || (lastPoint && lastPoint.rightCliff)) && !connectCliffs) {\n                    gap = true; // ... and continue\n                }\n\n                // Line series, nullsAsZeroes is not handled\n                if (point.isNull && !defined(nullsAsZeroes) && i > 0) {\n                    gap = !options.connectNulls;\n\n                // Area series, nullsAsZeroes is set\n                } else if (point.isNull && !nullsAsZeroes) {\n                    gap = true;\n\n                } else {\n\n                    if (i === 0 || gap) {\n                        pathToPoint = [M, point.plotX, point.plotY];\n                \n                    } else if (series.getPointSpline) { // generate the spline as defined in the SplineSeries object\n                    \n                        pathToPoint = series.getPointSpline(points, point, i);\n\n                    } else if (step) {\n\n                        if (step === 1) { // right\n                            pathToPoint = [\n                                L,\n                                lastPoint.plotX,\n                                plotY\n                            ];\n                        \n                        } else if (step === 2) { // center\n                            pathToPoint = [\n                                L,\n                                (lastPoint.plotX + plotX) / 2,\n                                lastPoint.plotY,\n                                L,\n                                (lastPoint.plotX + plotX) / 2,\n                                plotY\n                            ];\n                        \n                        } else {\n                            pathToPoint = [\n                                L,\n                                plotX,\n                                lastPoint.plotY\n                            ];\n                        }\n                        pathToPoint.push(L, plotX, plotY);\n\n                    } else {\n                        // normal line to next point\n                        pathToPoint = [\n                            L,\n                            plotX,\n                            plotY\n                        ];\n                    }\n\n                    // Prepare for animation. When step is enabled, there are two path nodes for each x value.\n                    xMap.push(point.x);\n                    if (step) {\n                        xMap.push(point.x);\n                    }\n\n                    graphPath.push.apply(graphPath, pathToPoint);\n                    gap = false;\n                }\n            });\n\n            graphPath.xMap = xMap;\n            series.graphPath = graphPath;\n\n            return graphPath;\n\n        },\n\n        /**\n         * Draw the actual graph\n         */\n        drawGraph: function () {\n            var series = this,\n                options = this.options,\n                props = [['graph', options.lineColor || this.color, options.dashStyle]],\n                lineWidth = options.lineWidth,\n                roundCap = options.linecap !== 'square',\n                graphPath = (this.gappedPath || this.getGraphPath).call(this),\n                zones = this.zones;\n\n            each(zones, function (threshold, i) {\n                props.push(['zoneGraph' + i, threshold.color || series.color, threshold.dashStyle || options.dashStyle]);\n            });\n\n            // Draw the graph\n            each(props, function (prop, i) {\n                var graphKey = prop[0],\n                    graph = series[graphKey],\n                    attribs;\n\n                if (graph) {\n                    graph.endX = graphPath.xMap;\n                    graph.animate({ d: graphPath });\n\n                } else if (lineWidth && graphPath.length) { // #1487\n                    attribs = {\n                        stroke: prop[1],\n                        'stroke-width': lineWidth,\n                        fill: 'none',\n                        zIndex: 1 // #1069\n                    };\n                    if (prop[2]) {\n                        attribs.dashstyle = prop[2];\n                    } else if (roundCap) {\n                        attribs['stroke-linecap'] = attribs['stroke-linejoin'] = 'round';\n                    }\n\n                    graph = series[graphKey] = series.chart.renderer.path(graphPath)\n                        .attr(attribs)\n                        .add(series.group)\n                        .shadow((i < 2) && options.shadow); // add shadow to normal series (0) or to first zone (1) #3932\n                }\n\n                // Helpers for animation\n                if (graph) {\n                    graph.startX = graphPath.xMap;\n                    //graph.shiftUnit = options.step ? 2 : 1;\n                    graph.isArea = graphPath.isArea; // For arearange animation\n                }\n            });\n        },\n\n        /**\n         * Clip the graphs into the positive and negative coloured graphs\n         */\n        applyZones: function () {\n            var series = this,\n                chart = this.chart,\n                renderer = chart.renderer,\n                zones = this.zones,\n                translatedFrom,\n                translatedTo,\n                clips = this.clips || [],\n                clipAttr,\n                graph = this.graph,\n                area = this.area,\n                chartSizeMax = mathMax(chart.chartWidth, chart.chartHeight),\n                axis = this[(this.zoneAxis || 'y') + 'Axis'],\n                extremes,\n                reversed,\n                inverted = chart.inverted,\n                horiz,\n                pxRange,\n                pxPosMin,\n                pxPosMax,\n                ignoreZones = false;\n\n            if (zones.length && (graph || area) && axis && axis.min !== UNDEFINED) {\n                reversed = axis.reversed;\n                horiz = axis.horiz;\n                // The use of the Color Threshold assumes there are no gaps\n                // so it is safe to hide the original graph and area\n                if (graph) {\n                    graph.hide();\n                }\n                if (area) {\n                    area.hide();\n                }\n\n                // Create the clips\n                extremes = axis.getExtremes();\n                each(zones, function (threshold, i) {\n\n                    translatedFrom = reversed ?\n                        (horiz ? chart.plotWidth : 0) :\n                        (horiz ? 0 : axis.toPixels(extremes.min));\n                    translatedFrom = mathMin(mathMax(pick(translatedTo, translatedFrom), 0), chartSizeMax);\n                    translatedTo = mathMin(mathMax(mathRound(axis.toPixels(pick(threshold.value, extremes.max), true)), 0), chartSizeMax);\n\n                    if (ignoreZones) {\n                        translatedFrom = translatedTo = axis.toPixels(extremes.max);\n                    }\n\n                    pxRange = Math.abs(translatedFrom - translatedTo);\n                    pxPosMin = mathMin(translatedFrom, translatedTo);\n                    pxPosMax = mathMax(translatedFrom, translatedTo);\n                    if (axis.isXAxis) {\n                        clipAttr = {\n                            x: inverted ? pxPosMax : pxPosMin,\n                            y: 0,\n                            width: pxRange,\n                            height: chartSizeMax\n                        };\n                        if (!horiz) {\n                            clipAttr.x = chart.plotHeight - clipAttr.x;\n                        }\n                    } else {\n                        clipAttr = {\n                            x: 0,\n                            y: inverted ? pxPosMax : pxPosMin,\n                            width: chartSizeMax,\n                            height: pxRange\n                        };\n                        if (horiz) {\n                            clipAttr.y = chart.plotWidth - clipAttr.y;\n                        }\n                    }\n\n                    /// VML SUPPPORT\n                    if (inverted && renderer.isVML) {\n                        if (axis.isXAxis) {\n                            clipAttr = {\n                                x: 0,\n                                y: reversed ? pxPosMin : pxPosMax,\n                                height: clipAttr.width,\n                                width: chart.chartWidth\n                            };\n                        } else {\n                            clipAttr = {\n                                x: clipAttr.y - chart.plotLeft - chart.spacingBox.x,\n                                y: 0,\n                                width: clipAttr.height,\n                                height: chart.chartHeight\n                            };\n                        }\n                    }\n                    /// END OF VML SUPPORT\n\n                    if (clips[i]) {\n                        clips[i].animate(clipAttr);\n                    } else {\n                        clips[i] = renderer.clipRect(clipAttr);\n\n                        if (graph) {\n                            series['zoneGraph' + i].clip(clips[i]);\n                        }\n\n                        if (area) {\n                            series['zoneArea' + i].clip(clips[i]);\n                        }\n                    }\n                    // if this zone extends out of the axis, ignore the others\n                    ignoreZones = threshold.value > extremes.max;\n                });\n                this.clips = clips;\n            }\n        },\n\n        /**\n         * Initialize and perform group inversion on series.group and series.markerGroup\n         */\n        invertGroups: function () {\n            var series = this,\n                chart = series.chart;\n\n            // Pie, go away (#1736)\n            if (!series.xAxis) {\n                return;\n            }\n\n            // A fixed size is needed for inversion to work\n            function setInvert() {\n                var size = {\n                    width: series.yAxis.len,\n                    height: series.xAxis.len\n                };\n\n                each(['group', 'markerGroup'], function (groupName) {\n                    if (series[groupName]) {\n                        series[groupName].attr(size).invert();\n                    }\n                });\n            }\n\n            addEvent(chart, 'resize', setInvert); // do it on resize\n            addEvent(series, 'destroy', function () {\n                removeEvent(chart, 'resize', setInvert);\n            });\n\n            // Do it now\n            setInvert(); // do it now\n\n            // On subsequent render and redraw, just do setInvert without setting up events again\n            series.invertGroups = setInvert;\n        },\n\n        /**\n         * General abstraction for creating plot groups like series.group, series.dataLabelsGroup and\n         * series.markerGroup. On subsequent calls, the group will only be adjusted to the updated plot size.\n         */\n        plotGroup: function (prop, name, visibility, zIndex, parent) {\n            var group = this[prop],\n                isNew = !group;\n\n            // Generate it on first call\n            if (isNew) {\n                this[prop] = group = this.chart.renderer.g(name)\n                    .attr({\n                        zIndex: zIndex || 0.1 // IE8 and pointer logic use this\n                    })\n                    .add(parent);\n\n                group.addClass('highcharts-series-' + this.index);\n            }\n\n            // Place it on first and subsequent (redraw) calls\n            group.attr({ visibility: visibility })[isNew ? 'attr' : 'animate'](this.getPlotBox());\n            return group;\n        },\n\n        /**\n         * Get the translation and scale for the plot area of this series\n         */\n        getPlotBox: function () {\n            var chart = this.chart,\n                xAxis = this.xAxis,\n                yAxis = this.yAxis;\n\n            // Swap axes for inverted (#2339)\n            if (chart.inverted) {\n                xAxis = yAxis;\n                yAxis = this.xAxis;\n            }\n            return {\n                translateX: xAxis ? xAxis.left : chart.plotLeft,\n                translateY: yAxis ? yAxis.top : chart.plotTop,\n                scaleX: 1, // #1623\n                scaleY: 1\n            };\n        },\n\n        /**\n         * Render the graph and markers\n         */\n        render: function () {\n            var series = this,\n                chart = series.chart,\n                group,\n                options = series.options,\n                // Animation doesn't work in IE8 quirks when the group div is hidden,\n                // and looks bad in other oldIE\n                animDuration = !!series.animate && chart.renderer.isSVG && animObject(options.animation).duration,\n                visibility = series.visible ? 'inherit' : 'hidden', // #2597\n                zIndex = options.zIndex,\n                hasRendered = series.hasRendered,\n                chartSeriesGroup = chart.seriesGroup;\n\n            // the group\n            group = series.plotGroup(\n                'group',\n                'series',\n                visibility,\n                zIndex,\n                chartSeriesGroup\n            );\n\n            series.markerGroup = series.plotGroup(\n                'markerGroup',\n                'markers',\n                visibility,\n                zIndex,\n                chartSeriesGroup\n            );\n\n            // initiate the animation\n            if (animDuration) {\n                series.animate(true);\n            }\n\n            // cache attributes for shapes\n            series.getAttribs();\n\n            // SVGRenderer needs to know this before drawing elements (#1089, #1795)\n            group.inverted = series.isCartesian ? chart.inverted : false;\n\n            // draw the graph if any\n            if (series.drawGraph) {\n                series.drawGraph();\n                series.applyZones();\n            }\n\n            each(series.points, function (point) {\n                if (point.redraw) {\n                    point.redraw();\n                }\n            });\n\n            // draw the data labels (inn pies they go before the points)\n            if (series.drawDataLabels) {\n                series.drawDataLabels();\n            }\n\n            // draw the points\n            if (series.visible) {\n                series.drawPoints();\n            }\n\n\n            // draw the mouse tracking area\n            if (series.drawTracker && series.options.enableMouseTracking !== false) {\n                series.drawTracker();\n            }\n\n            // Handle inverted series and tracker groups\n            if (chart.inverted) {\n                series.invertGroups();\n            }\n\n            // Initial clipping, must be defined after inverting groups for VML. Applies to columns etc. (#3839).\n            if (options.clip !== false && !series.sharedClipKey && !hasRendered) {\n                group.clip(chart.clipRect);\n            }\n\n            // Run the animation\n            if (animDuration) {\n                series.animate();\n            }\n\n            // Call the afterAnimate function on animation complete (but don't overwrite the animation.complete option\n            // which should be available to the user).\n            if (!hasRendered) {\n                series.animationTimeout = syncTimeout(function () {\n                    series.afterAnimate();\n                }, animDuration);\n            }\n\n            series.isDirty = series.isDirtyData = false; // means data is in accordance with what you see\n            // (See #322) series.isDirty = series.isDirtyData = false; // means data is in accordance with what you see\n            series.hasRendered = true;\n        },\n\n        /**\n         * Redraw the series after an update in the axes.\n         */\n        redraw: function () {\n            var series = this,\n                chart = series.chart,\n                wasDirty = series.isDirty || series.isDirtyData, // cache it here as it is set to false in render, but used after\n                group = series.group,\n                xAxis = series.xAxis,\n                yAxis = series.yAxis;\n\n            // reposition on resize\n            if (group) {\n                if (chart.inverted) {\n                    group.attr({\n                        width: chart.plotWidth,\n                        height: chart.plotHeight\n                    });\n                }\n\n                group.animate({\n                    translateX: pick(xAxis && xAxis.left, chart.plotLeft),\n                    translateY: pick(yAxis && yAxis.top, chart.plotTop)\n                });\n            }\n\n            series.translate();\n            series.render();\n            if (wasDirty) { // #3868, #3945\n                delete this.kdTree;\n            }\n        },\n\n        /**\n         * KD Tree && PointSearching Implementation\n         */\n\n        kdDimensions: 1,\n        kdAxisArray: ['clientX', 'plotY'],\n\n        searchPoint: function (e, compareX) {\n            var series = this,\n                xAxis = series.xAxis,\n                yAxis = series.yAxis,\n                inverted = series.chart.inverted;\n\n            return this.searchKDTree({\n                clientX: inverted ? xAxis.len - e.chartY + xAxis.pos : e.chartX - xAxis.pos,\n                plotY: inverted ? yAxis.len - e.chartX + yAxis.pos : e.chartY - yAxis.pos\n            }, compareX);\n        },\n\n        buildKDTree: function () {\n            var series = this,\n                dimensions = series.kdDimensions;\n\n            // Internal function\n            function _kdtree(points, depth, dimensions) {\n                var axis,\n                    median,\n                    length = points && points.length;\n\n                if (length) {\n\n                    // alternate between the axis\n                    axis = series.kdAxisArray[depth % dimensions];\n\n                    // sort point array\n                    points.sort(function (a, b) {\n                        return a[axis] - b[axis];\n                    });\n\n                    median = Math.floor(length / 2);\n\n                    // build and return nod\n                    return {\n                        point: points[median],\n                        left: _kdtree(points.slice(0, median), depth + 1, dimensions),\n                        right: _kdtree(points.slice(median + 1), depth + 1, dimensions)\n                    };\n\n                }\n            }\n\n            // Start the recursive build process with a clone of the points array and null points filtered out (#3873)\n            function startRecursive() {\n                series.kdTree = _kdtree(\n                    series.getValidPoints(\n                        null,\n                        !series.directTouch // For line-type series restrict to plot area, but column-type series not (#3916, #4511)\n                    ),\n                    dimensions,\n                    dimensions\n                );\n            }\n            delete series.kdTree;\n\n            // For testing tooltips, don't build async\n            syncTimeout(startRecursive, series.options.kdNow ? 0 : 1);\n        },\n\n        searchKDTree: function (point, compareX) {\n            var series = this,\n                kdX = this.kdAxisArray[0],\n                kdY = this.kdAxisArray[1],\n                kdComparer = compareX ? 'distX' : 'dist';\n\n            // Set the one and two dimensional distance on the point object\n            function setDistance(p1, p2) {\n                var x = (defined(p1[kdX]) && defined(p2[kdX])) ? Math.pow(p1[kdX] - p2[kdX], 2) : null,\n                    y = (defined(p1[kdY]) && defined(p2[kdY])) ? Math.pow(p1[kdY] - p2[kdY], 2) : null,\n                    r = (x || 0) + (y || 0);\n\n                p2.dist = defined(r) ? Math.sqrt(r) : Number.MAX_VALUE;\n                p2.distX = defined(x) ? Math.sqrt(x) : Number.MAX_VALUE;\n            }\n            function _search(search, tree, depth, dimensions) {\n                var point = tree.point,\n                    axis = series.kdAxisArray[depth % dimensions],\n                    tdist,\n                    sideA,\n                    sideB,\n                    ret = point,\n                    nPoint1,\n                    nPoint2;\n\n                setDistance(search, point);\n\n                // Pick side based on distance to splitting point\n                tdist = search[axis] - point[axis];\n                sideA = tdist < 0 ? 'left' : 'right';\n                sideB = tdist < 0 ? 'right' : 'left';\n\n                // End of tree\n                if (tree[sideA]) {\n                    nPoint1 = _search(search, tree[sideA], depth + 1, dimensions);\n\n                    ret = (nPoint1[kdComparer] < ret[kdComparer] ? nPoint1 : point);\n                }\n                if (tree[sideB]) {\n                    // compare distance to current best to splitting point to decide wether to check side B or not\n                    if (Math.sqrt(tdist * tdist) < ret[kdComparer]) {\n                        nPoint2 = _search(search, tree[sideB], depth + 1, dimensions);\n                        ret = (nPoint2[kdComparer] < ret[kdComparer] ? nPoint2 : ret);\n                    }\n                }\n\n                return ret;\n            }\n\n            if (!this.kdTree) {\n                this.buildKDTree();\n            }\n\n            if (this.kdTree) {\n                return _search(point,\n                    this.kdTree, this.kdDimensions, this.kdDimensions);\n            }\n        }\n\n    }; // end Series prototype\n\n    /**\n     * The class for stack items\n     */\n    function StackItem(axis, options, isNegative, x, stackOption) {\n\n        var inverted = axis.chart.inverted;\n\n        this.axis = axis;\n\n        // Tells if the stack is negative\n        this.isNegative = isNegative;\n\n        // Save the options to be able to style the label\n        this.options = options;\n\n        // Save the x value to be able to position the label later\n        this.x = x;\n\n        // Initialize total value\n        this.total = null;\n\n        // This will keep each points' extremes stored by series.index and point index\n        this.points = {};\n\n        // Save the stack option on the series configuration object, and whether to treat it as percent\n        this.stack = stackOption;\n        this.leftCliff = 0;\n        this.rightCliff = 0;\n\n        // The align options and text align varies on whether the stack is negative and\n        // if the chart is inverted or not.\n        // First test the user supplied value, then use the dynamic.\n        this.alignOptions = {\n            align: options.align || (inverted ? (isNegative ? 'left' : 'right') : 'center'),\n            verticalAlign: options.verticalAlign || (inverted ? 'middle' : (isNegative ? 'bottom' : 'top')),\n            y: pick(options.y, inverted ? 4 : (isNegative ? 14 : -6)),\n            x: pick(options.x, inverted ? (isNegative ? -6 : 6) : 0)\n        };\n\n        this.textAlign = options.textAlign || (inverted ? (isNegative ? 'right' : 'left') : 'center');\n    }\n\n    StackItem.prototype = {\n        destroy: function () {\n            destroyObjectProperties(this, this.axis);\n        },\n\n        /**\n         * Renders the stack total label and adds it to the stack label group.\n         */\n        render: function (group) {\n            var options = this.options,\n                formatOption = options.format,\n                str = formatOption ?\n                    format(formatOption, this) :\n                    options.formatter.call(this);  // format the text in the label\n\n            // Change the text to reflect the new total and set visibility to hidden in case the serie is hidden\n            if (this.label) {\n                this.label.attr({ text: str, visibility: 'hidden' });\n            // Create new label\n            } else {\n                this.label =\n                    this.axis.chart.renderer.text(str, null, null, options.useHTML)        // dummy positions, actual position updated with setOffset method in columnseries\n                        .css(options.style)                // apply style\n                        .attr({\n                            align: this.textAlign,                // fix the text-anchor\n                            rotation: options.rotation,    // rotation\n                            visibility: HIDDEN                    // hidden until setOffset is called\n                        })\n                        .add(group);                            // add to the labels-group\n            }\n        },\n\n        /**\n         * Sets the offset that the stack has from the x value and repositions the label.\n         */\n        setOffset: function (xOffset, xWidth) {\n            var stackItem = this,\n                axis = stackItem.axis,\n                chart = axis.chart,\n                inverted = chart.inverted,\n                reversed = axis.reversed,\n                neg = (this.isNegative && !reversed) || (!this.isNegative && reversed), // #4056\n                y = axis.translate(axis.usePercentage ? 100 : this.total, 0, 0, 0, 1), // stack value translated mapped to chart coordinates\n                yZero = axis.translate(0),                        // stack origin\n                h = mathAbs(y - yZero),                            // stack height\n                x = chart.xAxis[0].translate(this.x) + xOffset,    // stack x position\n                plotHeight = chart.plotHeight,\n                stackBox = {    // this is the box for the complete stack\n                    x: inverted ? (neg ? y : y - h) : x,\n                    y: inverted ? plotHeight - x - xWidth : (neg ? (plotHeight - y - h) : plotHeight - y),\n                    width: inverted ? h : xWidth,\n                    height: inverted ? xWidth : h\n                },\n                label = this.label,\n                alignAttr;\n\n            if (label) {\n                label.align(this.alignOptions, null, stackBox);    // align the label to the box\n\n                // Set visibility (#678)\n                alignAttr = label.alignAttr;\n                label[this.options.crop === false || chart.isInsidePlot(alignAttr.x, alignAttr.y) ? 'show' : 'hide'](true);\n            }\n        }\n    };\n\n    /**\n     * Generate stacks for each series and calculate stacks total values\n     */\n    Chart.prototype.getStacks = function () {\n        var chart = this;\n\n        // reset stacks for each yAxis\n        each(chart.yAxis, function (axis) {\n            if (axis.stacks && axis.hasVisibleSeries) {\n                axis.oldStacks = axis.stacks;\n            }\n        });\n\n        each(chart.series, function (series) {\n            if (series.options.stacking && (series.visible === true || chart.options.chart.ignoreHiddenSeries === false)) {\n                series.stackKey = series.type + pick(series.options.stack, '');\n            }\n        });\n    };\n\n\n    // Stacking methods defined on the Axis prototype\n\n    /**\n     * Build the stacks from top down\n     */\n    Axis.prototype.buildStacks = function () {\n        var axisSeries = this.series,\n            series,\n            reversedStacks = pick(this.options.reversedStacks, true),\n            len = axisSeries.length,\n            i;\n        if (!this.isXAxis) {\n            this.usePercentage = false;\n            i = len;\n            while (i--) {\n                axisSeries[reversedStacks ? i : len - i - 1].setStackedPoints();\n            }\n\n            i = len;\n            while (i--) {\n                series = axisSeries[reversedStacks ? i : len - i - 1];\n                if (series.setStackCliffs) {\n                    series.setStackCliffs();\n                }\n            }\n            // Loop up again to compute percent stack\n            if (this.usePercentage) {\n                for (i = 0; i < len; i++) {\n                    axisSeries[i].setPercentStacks();\n                }\n            }\n        }\n    };\n\n    Axis.prototype.renderStackTotals = function () {\n        var axis = this,\n            chart = axis.chart,\n            renderer = chart.renderer,\n            stacks = axis.stacks,\n            stackKey,\n            oneStack,\n            stackCategory,\n            stackTotalGroup = axis.stackTotalGroup;\n\n        // Create a separate group for the stack total labels\n        if (!stackTotalGroup) {\n            axis.stackTotalGroup = stackTotalGroup =\n                renderer.g('stack-labels')\n                    .attr({\n                        visibility: VISIBLE,\n                        zIndex: 6\n                    })\n                    .add();\n        }\n\n        // plotLeft/Top will change when y axis gets wider so we need to translate the\n        // stackTotalGroup at every render call. See bug #506 and #516\n        stackTotalGroup.translate(chart.plotLeft, chart.plotTop);\n\n        // Render each stack total\n        for (stackKey in stacks) {\n            oneStack = stacks[stackKey];\n            for (stackCategory in oneStack) {\n                oneStack[stackCategory].render(stackTotalGroup);\n            }\n        }\n    };\n\n    /**\n     * Set all the stacks to initial states and destroy unused ones.\n     */\n    Axis.prototype.resetStacks = function () {\n        var stacks = this.stacks,\n            type,\n            i;\n        if (!this.isXAxis) {\n            for (type in stacks) {\n                for (i in stacks[type]) {\n\n                    // Clean up memory after point deletion (#1044, #4320)\n                    if (stacks[type][i].touched < this.stacksTouched) {\n                        stacks[type][i].destroy();\n                        delete stacks[type][i];\n\n                    // Reset stacks\n                    } else {\n                        stacks[type][i].total = null;\n                        stacks[type][i].cum = 0;\n                    }\n                }\n            }\n        }\n    };\n\n    Axis.prototype.cleanStacks = function () {\n        var stacks, type, i;\n\n        if (!this.isXAxis) {\n            if (this.oldStacks) {\n                stacks = this.stacks = this.oldStacks;\n            }\n\n            // reset stacks\n            for (type in stacks) {\n                for (i in stacks[type]) {\n                    stacks[type][i].cum = stacks[type][i].total;\n                }\n            }\n        }\n    };\n\n\n    // Stacking methods defnied for Series prototype\n\n    /**\n     * Adds series' points value to corresponding stack\n     */\n    Series.prototype.setStackedPoints = function () {\n        if (!this.options.stacking || (this.visible !== true && this.chart.options.chart.ignoreHiddenSeries !== false)) {\n            return;\n        }\n\n        var series = this,\n            xData = series.processedXData,\n            yData = series.processedYData,\n            stackedYData = [],\n            yDataLength = yData.length,\n            seriesOptions = series.options,\n            threshold = seriesOptions.threshold,\n            stackThreshold = seriesOptions.startFromThreshold ? threshold : 0,\n            stackOption = seriesOptions.stack,\n            stacking = seriesOptions.stacking,\n            stackKey = series.stackKey,\n            negKey = '-' + stackKey,\n            negStacks = series.negStacks,\n            yAxis = series.yAxis,\n            stacks = yAxis.stacks,\n            oldStacks = yAxis.oldStacks,\n            stackIndicator,\n            isNegative,\n            stack,\n            other,\n            key,\n            pointKey,\n            i,\n            x,\n            y;\n\n\n        yAxis.stacksTouched += 1;\n\n        // loop over the non-null y values and read them into a local array\n        for (i = 0; i < yDataLength; i++) {\n            x = xData[i];\n            y = yData[i];\n            stackIndicator = series.getStackIndicator(stackIndicator, x, series.index);\n            pointKey = stackIndicator.key;\n            // Read stacked values into a stack based on the x value,\n            // the sign of y and the stack key. Stacking is also handled for null values (#739)\n            isNegative = negStacks && y < (stackThreshold ? 0 : threshold);\n            key = isNegative ? negKey : stackKey;\n\n            // Create empty object for this stack if it doesn't exist yet\n            if (!stacks[key]) {\n                stacks[key] = {};\n            }\n\n            // Initialize StackItem for this x\n            if (!stacks[key][x]) {\n                if (oldStacks[key] && oldStacks[key][x]) {\n                    stacks[key][x] = oldStacks[key][x];\n                    stacks[key][x].total = null;\n                } else {\n                    stacks[key][x] = new StackItem(yAxis, yAxis.options.stackLabels, isNegative, x, stackOption);\n                }\n            }\n\n            // If the StackItem doesn't exist, create it first\n            stack = stacks[key][x];\n            if (y !== null) {\n                stack.points[pointKey] = stack.points[series.index] = [pick(stack.cum, stackThreshold)];\n\n                // Record the base of the stack\n                if (!defined(stack.cum)) {\n                    stack.base = pointKey;\n                }\n                stack.touched = yAxis.stacksTouched;\n        \n\n                // In area charts, if there are multiple points on the same X value, let the \n                // area fill the full span of those points\n                if (stackIndicator.index > 0 && series.singleStacks === false) {\n                    stack.points[pointKey][0] = stack.points[series.index + ',' + x + ',0'][0];\n                }\n            }\n\n            // Add value to the stack total\n            if (stacking === 'percent') {\n\n                // Percent stacked column, totals are the same for the positive and negative stacks\n                other = isNegative ? stackKey : negKey;\n                if (negStacks && stacks[other] && stacks[other][x]) {\n                    other = stacks[other][x];\n                    stack.total = other.total = mathMax(other.total, stack.total) + mathAbs(y) || 0;\n\n                // Percent stacked areas\n                } else {\n                    stack.total = correctFloat(stack.total + (mathAbs(y) || 0));\n                }\n            } else {\n                stack.total = correctFloat(stack.total + (y || 0));\n            }\n\n            stack.cum = pick(stack.cum, stackThreshold) + (y || 0);\n\n            if (y !== null) {\n                stack.points[pointKey].push(stack.cum);\n                stackedYData[i] = stack.cum;\n            }\n\n        }\n\n        if (stacking === 'percent') {\n            yAxis.usePercentage = true;\n        }\n\n        this.stackedYData = stackedYData; // To be used in getExtremes\n\n        // Reset old stacks\n        yAxis.oldStacks = {};\n    };\n\n    /**\n     * Iterate over all stacks and compute the absolute values to percent\n     */\n    Series.prototype.setPercentStacks = function () {\n        var series = this,\n            stackKey = series.stackKey,\n            stacks = series.yAxis.stacks,\n            processedXData = series.processedXData,\n            stackIndicator;\n\n        each([stackKey, '-' + stackKey], function (key) {\n            var i = processedXData.length,\n                x,\n                stack,\n                pointExtremes,\n                totalFactor;\n\n            while (i--) {\n                x = processedXData[i];\n                stackIndicator = series.getStackIndicator(stackIndicator, x, series.index);\n                stack = stacks[key] && stacks[key][x];\n                pointExtremes = stack && stack.points[stackIndicator.key];\n                if (pointExtremes) {\n                    totalFactor = stack.total ? 100 / stack.total : 0;\n                    pointExtremes[0] = correctFloat(pointExtremes[0] * totalFactor); // Y bottom value\n                    pointExtremes[1] = correctFloat(pointExtremes[1] * totalFactor); // Y value\n                    series.stackedYData[i] = pointExtremes[1];\n                }\n            }\n        });\n    };\n\n    /**\n    * Get stack indicator, according to it's x-value, to determine points with the same x-value\n    */\n    Series.prototype.getStackIndicator = function (stackIndicator, x, index) {\n        if (!defined(stackIndicator) || stackIndicator.x !== x) {\n            stackIndicator = {\n                x: x,\n                index: 0\n            };\n        } else {\n            stackIndicator.index++;\n        }\n\n        stackIndicator.key = [index, x, stackIndicator.index].join(',');\n\n        return stackIndicator;\n    };\n\n    // Extend the Chart prototype for dynamic methods\n    extend(Chart.prototype, {\n\n        /**\n         * Add a series dynamically after  time\n         *\n         * @param {Object} options The config options\n         * @param {Boolean} redraw Whether to redraw the chart after adding. Defaults to true.\n         * @param {Boolean|Object} animation Whether to apply animation, and optionally animation\n         *    configuration\n         *\n         * @return {Object} series The newly created series object\n         */\n        addSeries: function (options, redraw, animation) {\n            var series,\n                chart = this;\n\n            if (options) {\n                redraw = pick(redraw, true); // defaults to true\n\n                fireEvent(chart, 'addSeries', { options: options }, function () {\n                    series = chart.initSeries(options);\n\n                    chart.isDirtyLegend = true; // the series array is out of sync with the display\n                    chart.linkSeries();\n                    if (redraw) {\n                        chart.redraw(animation);\n                    }\n                });\n            }\n\n            return series;\n        },\n\n        /**\n         * Add an axis to the chart\n         * @param {Object} options The axis option\n         * @param {Boolean} isX Whether it is an X axis or a value axis\n         */\n        addAxis: function (options, isX, redraw, animation) {\n            var key = isX ? 'xAxis' : 'yAxis',\n                chartOptions = this.options,\n                userOptions = merge(options, {\n                    index: this[key].length,\n                    isX: isX\n                });\n\n            new Axis(this, userOptions); // eslint-disable-line no-new\n\n            // Push the new axis options to the chart options\n            chartOptions[key] = splat(chartOptions[key] || {});\n            chartOptions[key].push(userOptions);\n\n            if (pick(redraw, true)) {\n                this.redraw(animation);\n            }\n        },\n\n        /**\n         * Dim the chart and show a loading text or symbol\n         * @param {String} str An optional text to show in the loading label instead of the default one\n         */\n        showLoading: function (str) {\n            var chart = this,\n                options = chart.options,\n                loadingDiv = chart.loadingDiv,\n                loadingOptions = options.loading,\n                setLoadingSize = function () {\n                    if (loadingDiv) {\n                        css(loadingDiv, {\n                            left: chart.plotLeft + PX,\n                            top: chart.plotTop + PX,\n                            width: chart.plotWidth + PX,\n                            height: chart.plotHeight + PX\n                        });\n                    }\n                };\n\n            // create the layer at the first call\n            if (!loadingDiv) {\n                chart.loadingDiv = loadingDiv = createElement(DIV, {\n                    className: PREFIX + 'loading'\n                }, extend(loadingOptions.style, {\n                    zIndex: 10,\n                    display: NONE\n                }), chart.container);\n\n                chart.loadingSpan = createElement(\n                    'span',\n                    null,\n                    loadingOptions.labelStyle,\n                    loadingDiv\n                );\n                addEvent(chart, 'redraw', setLoadingSize); // #1080\n            }\n\n            // update text\n            chart.loadingSpan.innerHTML = str || options.lang.loading;\n\n            // show it\n            if (!chart.loadingShown) {\n                css(loadingDiv, {\n                    opacity: 0,\n                    display: ''\n                });\n                animate(loadingDiv, {\n                    opacity: loadingOptions.style.opacity\n                }, {\n                    duration: loadingOptions.showDuration || 0\n                });\n                chart.loadingShown = true;\n            }\n            setLoadingSize();\n        },\n\n        /**\n         * Hide the loading layer\n         */\n        hideLoading: function () {\n            var options = this.options,\n                loadingDiv = this.loadingDiv;\n\n            if (loadingDiv) {\n                animate(loadingDiv, {\n                    opacity: 0\n                }, {\n                    duration: options.loading.hideDuration || 100,\n                    complete: function () {\n                        css(loadingDiv, { display: NONE });\n                    }\n                });\n            }\n            this.loadingShown = false;\n        }\n    });\n\n    // extend the Point prototype for dynamic methods\n    extend(Point.prototype, {\n        /**\n         * Update the point with new options (typically x/y data) and optionally redraw the series.\n         *\n         * @param {Object} options Point options as defined in the series.data array\n         * @param {Boolean} redraw Whether to redraw the chart or wait for an explicit call\n         * @param {Boolean|Object} animation Whether to apply animation, and optionally animation\n         *    configuration\n         *\n         */\n        update: function (options, redraw, animation, runEvent) {\n            var point = this,\n                series = point.series,\n                graphic = point.graphic,\n                i,\n                chart = series.chart,\n                seriesOptions = series.options;\n\n            redraw = pick(redraw, true);\n\n            function update() {\n\n                point.applyOptions(options);\n\n                // Update visuals\n                if (point.y === null && graphic) { // #4146\n                    point.graphic = graphic.destroy();\n                }\n                if (isObject(options, true)) {\n                    // Defer the actual redraw until getAttribs has been called (#3260)\n                    point.redraw = function () {\n                        if (graphic && graphic.element) {\n                            if (options && options.marker && options.marker.symbol) {\n                                point.graphic = graphic.destroy();\n                            }\n                        }\n                        if (options && options.dataLabels && point.dataLabel) { // #2468\n                            point.dataLabel = point.dataLabel.destroy();\n                        }\n                        point.redraw = null;\n                    };\n                }\n\n                // record changes in the parallel arrays\n                i = point.index;\n                series.updateParallelArrays(point, i);\n            \n                // Record the options to options.data. If there is an object from before,\n                // use point options, otherwise use raw options. (#4701)\n                seriesOptions.data[i] = isObject(seriesOptions.data[i], true) ? point.options : options;\n\n                // redraw\n                series.isDirty = series.isDirtyData = true;\n                if (!series.fixedBox && series.hasCartesianSeries) { // #1906, #2320\n                    chart.isDirtyBox = true;\n                }\n\n                if (seriesOptions.legendType === 'point') { // #1831, #1885\n                    chart.isDirtyLegend = true;\n                }\n                if (redraw) {\n                    chart.redraw(animation);\n                }\n            }\n\n            // Fire the event with a default handler of doing the update\n            if (runEvent === false) { // When called from setData\n                update();\n            } else {\n                point.firePointEvent('update', { options: options }, update);\n            }\n        },\n\n        /**\n         * Remove a point and optionally redraw the series and if necessary the axes\n         * @param {Boolean} redraw Whether to redraw the chart or wait for an explicit call\n         * @param {Boolean|Object} animation Whether to apply animation, and optionally animation\n         *    configuration\n         */\n        remove: function (redraw, animation) {\n            this.series.removePoint(inArray(this, this.series.data), redraw, animation);\n        }\n    });\n\n    // Extend the series prototype for dynamic methods\n    extend(Series.prototype, {\n        /**\n         * Add a point dynamically after chart load time\n         * @param {Object} options Point options as given in series.data\n         * @param {Boolean} redraw Whether to redraw the chart or wait for an explicit call\n         * @param {Boolean} shift If shift is true, a point is shifted off the start\n         *    of the series as one is appended to the end.\n         * @param {Boolean|Object} animation Whether to apply animation, and optionally animation\n         *    configuration\n         */\n        addPoint: function (options, redraw, shift, animation) {\n            var series = this,\n                seriesOptions = series.options,\n                data = series.data,\n                chart = series.chart,\n                names = series.xAxis && series.xAxis.names,\n                dataOptions = seriesOptions.data,\n                point,\n                isInTheMiddle,\n                xData = series.xData,\n                i,\n                x;\n\n            // Optional redraw, defaults to true\n            redraw = pick(redraw, true);\n\n            // Get options and push the point to xData, yData and series.options. In series.generatePoints\n            // the Point instance will be created on demand and pushed to the series.data array.\n            point = { series: series };\n            series.pointClass.prototype.applyOptions.apply(point, [options]);\n            x = point.x;\n\n            // Get the insertion point\n            i = xData.length;\n            if (series.requireSorting && x < xData[i - 1]) {\n                isInTheMiddle = true;\n                while (i && xData[i - 1] > x) {\n                    i--;\n                }\n            }\n\n            series.updateParallelArrays(point, 'splice', i, 0, 0); // insert undefined item\n            series.updateParallelArrays(point, i); // update it\n\n            if (names && point.name) {\n                names[x] = point.name;\n            }\n            dataOptions.splice(i, 0, options);\n\n            if (isInTheMiddle) {\n                series.data.splice(i, 0, null);\n                series.processData();\n            }\n\n            // Generate points to be added to the legend (#1329)\n            if (seriesOptions.legendType === 'point') {\n                series.generatePoints();\n            }\n\n            // Shift the first point off the parallel arrays\n            if (shift) {\n                if (data[0] && data[0].remove) {\n                    data[0].remove(false);\n                } else {\n                    data.shift();\n                    series.updateParallelArrays(point, 'shift');\n\n                    dataOptions.shift();\n                }\n            }\n\n            // redraw\n            series.isDirty = true;\n            series.isDirtyData = true;\n\n            if (redraw) {\n                series.getAttribs(); // #1937\n                chart.redraw(animation); // Animation is set anyway on redraw, #5665\n            }\n        },\n\n        /**\n         * Remove a point (rendered or not), by index\n         */\n        removePoint: function (i, redraw, animation) {\n\n            var series = this,\n                data = series.data,\n                point = data[i],\n                points = series.points,\n                chart = series.chart,\n                remove = function () {\n\n                    if (points && points.length === data.length) { // #4935\n                        points.splice(i, 1);\n                    }\n                    data.splice(i, 1);\n                    series.options.data.splice(i, 1);\n                    series.updateParallelArrays(point || { series: series }, 'splice', i, 1);\n\n                    if (point) {\n                        point.destroy();\n                    }\n\n                    // redraw\n                    series.isDirty = true;\n                    series.isDirtyData = true;\n                    if (redraw) {\n                        chart.redraw();\n                    }\n                };\n\n            setAnimation(animation, chart);\n            redraw = pick(redraw, true);\n\n            // Fire the event with a default handler of removing the point\n            if (point) {\n                point.firePointEvent('remove', null, remove);\n            } else {\n                remove();\n            }\n        },\n\n        /**\n         * Remove a series and optionally redraw the chart\n         *\n         * @param {Boolean} redraw Whether to redraw the chart or wait for an explicit call\n         * @param {Boolean|Object} animation Whether to apply animation, and optionally animation\n         *    configuration\n         */\n        remove: function (redraw, animation, withEvent) {\n            var series = this,\n                chart = series.chart;\n\n            function remove() {\n\n                // Destroy elements\n                series.destroy();\n\n                // Redraw\n                chart.isDirtyLegend = chart.isDirtyBox = true;\n                chart.linkSeries();\n\n                if (pick(redraw, true)) {\n                    chart.redraw(animation);\n                }\n            }\n\n            // Fire the event with a default handler of removing the point\n            if (withEvent !== false) {\n                fireEvent(series, 'remove', null, remove);\n            } else {\n                remove();\n            }\n        },\n\n        /**\n         * Update the series with a new set of options\n         */\n        update: function (newOptions, redraw) {\n            var series = this,\n                chart = this.chart,\n                // must use user options when changing type because this.options is merged\n                // in with type specific plotOptions\n                oldOptions = this.userOptions,\n                oldType = this.type,\n                proto = seriesTypes[oldType].prototype,\n                preserve = ['group', 'markerGroup', 'dataLabelsGroup'],\n                n;\n\n            // If we're changing type or zIndex, create new groups (#3380, #3404)\n            if ((newOptions.type && newOptions.type !== oldType) || newOptions.zIndex !== undefined) {\n                preserve.length = 0;\n            }\n\n            // Make sure groups are not destroyed (#3094)\n            each(preserve, function (prop) {\n                preserve[prop] = series[prop];\n                delete series[prop];\n            });\n\n            // Do the merge, with some forced options\n            newOptions = merge(oldOptions, {\n                animation: false,\n                index: this.index,\n                pointStart: this.xData[0] // when updating after addPoint\n            }, { data: this.options.data }, newOptions);\n\n            // Destroy the series and delete all properties. Reinsert all methods\n            // and properties from the new type prototype (#2270, #3719)\n            this.remove(false, null, false);\n            for (n in proto) {\n                this[n] = UNDEFINED;\n            }\n            extend(this, seriesTypes[newOptions.type || oldType].prototype);\n\n            // Re-register groups (#3094)\n            each(preserve, function (prop) {\n                series[prop] = preserve[prop];\n            });\n\n            this.init(chart, newOptions);\n            chart.linkSeries(); // Links are lost in this.remove (#3028)\n            if (pick(redraw, true)) {\n                chart.redraw(false);\n            }\n        }\n    });\n\n    // Extend the Axis.prototype for dynamic methods\n    extend(Axis.prototype, {\n\n        /**\n         * Update the axis with a new options structure\n         */\n        update: function (newOptions, redraw) {\n            var chart = this.chart;\n\n            newOptions = chart.options[this.coll][this.options.index] = merge(this.userOptions, newOptions);\n\n            this.destroy(true);\n\n            this.init(chart, extend(newOptions, { events: UNDEFINED }));\n\n            chart.isDirtyBox = true;\n            if (pick(redraw, true)) {\n                chart.redraw();\n            }\n        },\n\n        /**\n         * Remove the axis from the chart\n         */\n        remove: function (redraw) {\n            var chart = this.chart,\n                key = this.coll, // xAxis or yAxis\n                axisSeries = this.series,\n                i = axisSeries.length;\n\n            // Remove associated series (#2687)\n            while (i--) {\n                if (axisSeries[i]) {\n                    axisSeries[i].remove(false);\n                }\n            }\n\n            // Remove the axis\n            erase(chart.axes, this);\n            erase(chart[key], this);\n            chart.options[key].splice(this.options.index, 1);\n            each(chart[key], function (axis, i) { // Re-index, #1706\n                axis.options.index = i;\n            });\n            this.destroy();\n            chart.isDirtyBox = true;\n\n            if (pick(redraw, true)) {\n                chart.redraw();\n            }\n        },\n\n        /**\n         * Update the axis title by options\n         */\n        setTitle: function (newTitleOptions, redraw) {\n            this.update({ title: newTitleOptions }, redraw);\n        },\n\n        /**\n         * Set new axis categories and optionally redraw\n         * @param {Array} categories\n         * @param {Boolean} redraw\n         */\n        setCategories: function (categories, redraw) {\n            this.update({ categories: categories }, redraw);\n        }\n\n    });\n\n\n    /**\n     * LineSeries object\n     */\n    var LineSeries = extendClass(Series);\n    seriesTypes.line = LineSeries;\n\n    /**\n     * Set the default options for area\n     */\n    defaultPlotOptions.area = merge(defaultSeriesOptions, {\n        softThreshold: false,\n        threshold: 0\n        // trackByArea: false,\n        // lineColor: null, // overrides color, but lets fillColor be unaltered\n        // fillOpacity: 0.75,\n        // fillColor: null\n    });\n\n    /**\n     * AreaSeries object\n     */\n    var AreaSeries = extendClass(Series, {\n        type: 'area',\n        singleStacks: false,\n        /** \n         * Return an array of stacked points, where null and missing points are replaced by \n         * dummy points in order for gaps to be drawn correctly in stacks.\n         */\n        getStackPoints: function () {\n            var series = this,\n                segment = [],\n                keys = [],\n                xAxis = this.xAxis,\n                yAxis = this.yAxis,\n                stack = yAxis.stacks[this.stackKey],\n                pointMap = {},\n                points = this.points,\n                seriesIndex = series.index,\n                yAxisSeries = yAxis.series,\n                seriesLength = yAxisSeries.length,\n                visibleSeries,\n                upOrDown = pick(yAxis.options.reversedStacks, true) ? 1 : -1,\n                i,\n                x;\n\n            if (this.options.stacking) {\n                // Create a map where we can quickly look up the points by their X value.\n                for (i = 0; i < points.length; i++) {\n                    pointMap[points[i].x] = points[i];\n                }\n\n                // Sort the keys (#1651)\n                for (x in stack) {\n                    if (stack[x].total !== null) { // nulled after switching between grouping and not (#1651, #2336)\n                        keys.push(x);\n                    }\n                }\n                keys.sort(function (a, b) {\n                    return a - b;\n                });\n\n                visibleSeries = map(yAxisSeries, function () {\n                    return this.visible;\n                });\n\n                each(keys, function (x, idx) {\n                    var y = 0,\n                        stackPoint,\n                        stackedValues;\n\n                    if (pointMap[x] && !pointMap[x].isNull) {\n                        segment.push(pointMap[x]);\n\n                        // Find left and right cliff. -1 goes left, 1 goes right.\n                        each([-1, 1], function (direction) {\n                            var nullName = direction === 1 ? 'rightNull' : 'leftNull',\n                                cliffName = direction === 1 ? 'rightCliff' : 'leftCliff',\n                                cliff = 0,\n                                otherStack = stack[keys[idx + direction]];\n\n                            // If there is a stack next to this one, to the left or to the right...\n                            if (otherStack) {\n                                i = seriesIndex;\n                                while (i >= 0 && i < seriesLength) { // Can go either up or down, depending on reversedStacks\n                                    stackPoint = otherStack.points[i];\n                                    if (!stackPoint) {\n                                        // If the next point in this series is missing, mark the point\n                                        // with point.leftNull or point.rightNull = true.\n                                        if (i === seriesIndex) {\n                                            pointMap[x][nullName] = true;\n\n                                        // If there are missing points in the next stack in any of the \n                                        // series below this one, we need to substract the missing values\n                                        // and add a hiatus to the left or right.\n                                        } else if (visibleSeries[i]) {\n                                            stackedValues = stack[x].points[i];\n                                            if (stackedValues) {\n                                                cliff -= stackedValues[1] - stackedValues[0];\n                                            }\n                                        }\n                                    }\n                                    // When reversedStacks is true, loop up, else loop down\n                                    i += upOrDown; \n                                }                \n                            }\n                            pointMap[x][cliffName] = cliff;\n                        });\n\n\n                    // There is no point for this X value in this series, so we \n                    // insert a dummy point in order for the areas to be drawn\n                    // correctly.\n                    } else {\n\n                        // Loop down the stack to find the series below this one that has\n                        // a value (#1991)\n                        i = seriesIndex;\n                        while (i >= 0 && i < seriesLength) {\n                            stackPoint = stack[x].points[i];\n                            if (stackPoint) {\n                                y = stackPoint[1];\n                                break;\n                            }\n                            // When reversedStacks is true, loop up, else loop down\n                            i += upOrDown;\n                        }\n\n                        y = yAxis.toPixels(y, true);\n                        segment.push({ \n                            isNull: true,\n                            plotX: xAxis.toPixels(x, true),\n                            plotY: y,\n                            yBottom: y\n                        });\n                    }\n                });\n\n            } \n\n            return segment;\n        },\n\n        getGraphPath: function (points) {\n            var getGraphPath = Series.prototype.getGraphPath,\n                graphPath,\n                options = this.options,\n                stacking = options.stacking,\n                yAxis = this.yAxis,\n                topPath,\n                //topPoints = [],\n                bottomPath,\n                bottomPoints = [],\n                graphPoints = [],\n                seriesIndex = this.index,\n                i,\n                areaPath,\n                plotX,\n                stacks = yAxis.stacks[this.stackKey],\n                threshold = options.threshold,\n                translatedThreshold = yAxis.getThreshold(options.threshold),\n                isNull,\n                yBottom,\n                connectNulls = options.connectNulls || stacking === 'percent',\n                /**\n                 * To display null points in underlying stacked series, this series graph must be \n                 * broken, and the area also fall down to fill the gap left by the null point. #2069\n                 */\n                addDummyPoints = function (i, otherI, side) {\n                    var point = points[i],\n                        stackedValues = stacking && stacks[point.x].points[seriesIndex],\n                        nullVal = point[side + 'Null'] || 0,\n                        cliffVal = point[side + 'Cliff'] || 0,\n                        top,\n                        bottom,\n                        isNull = true;\n\n                    if (cliffVal || nullVal) {\n\n                        top = (nullVal ? stackedValues[0] : stackedValues[1]) + cliffVal;\n                        bottom = stackedValues[0] + cliffVal;\n                        isNull = !!nullVal;\n                \n                    } else if (!stacking && points[otherI] && points[otherI].isNull) {\n                        top = bottom = threshold;\n                    }\n\n                    // Add to the top and bottom line of the area\n                    if (top !== undefined) {\n                        graphPoints.push({\n                            plotX: plotX,\n                            plotY: top === null ? translatedThreshold : yAxis.getThreshold(top),\n                            isNull: isNull\n                        });\n                        bottomPoints.push({\n                            plotX: plotX,\n                            plotY: bottom === null ? translatedThreshold : yAxis.getThreshold(bottom),\n                            doCurve: false // #1041, gaps in areaspline areas\n                        });\n                    }\n                };\n\n            // Find what points to use\n            points = points || this.points;\n        \n            // Fill in missing points\n            if (stacking) {\n                points = this.getStackPoints();\n            }\n\n            for (i = 0; i < points.length; i++) {\n                isNull = points[i].isNull;\n                plotX = pick(points[i].rectPlotX, points[i].plotX);\n                yBottom = pick(points[i].yBottom, translatedThreshold);\n\n                if (!isNull || connectNulls) {\n\n                    if (!connectNulls) {\n                        addDummyPoints(i, i - 1, 'left');\n                    }\n\n                    if (!(isNull && !stacking && connectNulls)) { // Skip null point when stacking is false and connectNulls true\n                        graphPoints.push(points[i]);\n                        bottomPoints.push({\n                            x: i,\n                            plotX: plotX,\n                            plotY: yBottom\n                        });\n                    }\n\n                    if (!connectNulls) {\n                        addDummyPoints(i, i + 1, 'right');\n                    }\n                }\n            }\n\n            topPath = getGraphPath.call(this, graphPoints, true, true);\n        \n            bottomPoints.reversed = true;\n            bottomPath = getGraphPath.call(this, bottomPoints, true, true);\n            if (bottomPath.length) {\n                bottomPath[0] = L;\n            }\n\n            areaPath = topPath.concat(bottomPath);\n            graphPath = getGraphPath.call(this, graphPoints, false, connectNulls); // TODO: don't set leftCliff and rightCliff when connectNulls?\n\n            areaPath.xMap = topPath.xMap;\n            this.areaPath = areaPath;\n            return graphPath;\n        },\n\n        /**\n         * Draw the graph and the underlying area. This method calls the Series base\n         * function and adds the area. The areaPath is calculated in the getSegmentPath\n         * method called from Series.prototype.drawGraph.\n         */\n        drawGraph: function () {\n\n            // Define or reset areaPath\n            this.areaPath = [];\n\n            // Call the base method\n            Series.prototype.drawGraph.apply(this);\n\n            // Define local variables\n            var series = this,\n                areaPath = this.areaPath,\n                options = this.options,\n                zones = this.zones,\n                props = [['area', this.color, options.fillColor]]; // area name, main color, fill color\n\n            each(zones, function (threshold, i) {\n                props.push(['zoneArea' + i, threshold.color || series.color, threshold.fillColor || options.fillColor]);\n            });\n            each(props, function (prop) {\n                var areaKey = prop[0],\n                    area = series[areaKey],\n                    attr;\n\n                // Create or update the area\n                if (area) { // update\n                    area.endX = areaPath.xMap;\n                    area.animate({ d: areaPath });\n\n                } else { // create\n                    attr = {\n                        fill: prop[2] || prop[1],\n                        zIndex: 0 // #1069\n                    };\n                    if (!prop[2]) {\n                        attr['fill-opacity'] = pick(options.fillOpacity, 0.75);\n                    }\n                    area = series[areaKey] = series.chart.renderer.path(areaPath)\n                        .attr(attr)\n                        .add(series.group);\n                    area.isArea = true;\n                }\n                area.startX = areaPath.xMap;\n                area.shiftUnit = options.step ? 2 : 1;\n            });\n        },\n\n        drawLegendSymbol: LegendSymbolMixin.drawRectangle\n    });\n\n    seriesTypes.area = AreaSeries;\n    /**\n     * Set the default options for spline\n     */\n    defaultPlotOptions.spline = merge(defaultSeriesOptions);\n\n    /**\n     * SplineSeries object\n     */\n    var SplineSeries = extendClass(Series, {\n        type: 'spline',\n\n        /**\n         * Get the spline segment from a given point's previous neighbour to the given point\n         */\n        getPointSpline: function (points, point, i) {\n            var smoothing = 1.5, // 1 means control points midway between points, 2 means 1/3 from the point, 3 is 1/4 etc\n                denom = smoothing + 1,\n                plotX = point.plotX,\n                plotY = point.plotY,\n                lastPoint = points[i - 1],\n                nextPoint = points[i + 1],\n                leftContX,\n                leftContY,\n                rightContX,\n                rightContY,\n                ret;\n\n            function doCurve(otherPoint) {\n                return otherPoint && !otherPoint.isNull && otherPoint.doCurve !== false;\n            }\n\n            // Find control points\n            if (doCurve(lastPoint) && doCurve(nextPoint)) {\n                var lastX = lastPoint.plotX,\n                    lastY = lastPoint.plotY,\n                    nextX = nextPoint.plotX,\n                    nextY = nextPoint.plotY,\n                    correction = 0;\n\n                leftContX = (smoothing * plotX + lastX) / denom;\n                leftContY = (smoothing * plotY + lastY) / denom;\n                rightContX = (smoothing * plotX + nextX) / denom;\n                rightContY = (smoothing * plotY + nextY) / denom;\n\n                // Have the two control points make a straight line through main point\n                if (rightContX !== leftContX) { // #5016, division by zero\n                    correction = ((rightContY - leftContY) * (rightContX - plotX)) /\n                        (rightContX - leftContX) + plotY - rightContY;\n                }\n\n                leftContY += correction;\n                rightContY += correction;\n\n                // to prevent false extremes, check that control points are between\n                // neighbouring points' y values\n                if (leftContY > lastY && leftContY > plotY) {\n                    leftContY = mathMax(lastY, plotY);\n                    rightContY = 2 * plotY - leftContY; // mirror of left control point\n                } else if (leftContY < lastY && leftContY < plotY) {\n                    leftContY = mathMin(lastY, plotY);\n                    rightContY = 2 * plotY - leftContY;\n                }\n                if (rightContY > nextY && rightContY > plotY) {\n                    rightContY = mathMax(nextY, plotY);\n                    leftContY = 2 * plotY - rightContY;\n                } else if (rightContY < nextY && rightContY < plotY) {\n                    rightContY = mathMin(nextY, plotY);\n                    leftContY = 2 * plotY - rightContY;\n                }\n\n                // record for drawing in next point\n                point.rightContX = rightContX;\n                point.rightContY = rightContY;\n\n            \n            }\n\n            // Visualize control points for debugging\n            /*\n            if (leftContX) {\n                this.chart.renderer.circle(leftContX + this.chart.plotLeft, leftContY + this.chart.plotTop, 2)\n                    .attr({\n                        stroke: 'red',\n                        'stroke-width': 2,\n                        fill: 'none',\n                        zIndex: 9\n                    })\n                    .add();\n                this.chart.renderer.path(['M', leftContX + this.chart.plotLeft, leftContY + this.chart.plotTop,\n                    'L', plotX + this.chart.plotLeft, plotY + this.chart.plotTop])\n                    .attr({\n                        stroke: 'red',\n                        'stroke-width': 2,\n                        zIndex: 9\n                    })\n                    .add();\n            }\n            if (rightContX) {\n                this.chart.renderer.circle(rightContX + this.chart.plotLeft, rightContY + this.chart.plotTop, 2)\n                    .attr({\n                        stroke: 'green',\n                        'stroke-width': 2,\n                        fill: 'none',\n                        zIndex: 9\n                    })\n                    .add();\n                this.chart.renderer.path(['M', rightContX + this.chart.plotLeft, rightContY + this.chart.plotTop,\n                    'L', plotX + this.chart.plotLeft, plotY + this.chart.plotTop])\n                    .attr({\n                        stroke: 'green',\n                        'stroke-width': 2,\n                        zIndex: 9\n                    })\n                    .add();\n            }\n            // */\n            ret = [\n                'C',\n                pick(lastPoint.rightContX, lastPoint.plotX),\n                pick(lastPoint.rightContY, lastPoint.plotY),\n                pick(leftContX, plotX),\n                pick(leftContY, plotY),\n                plotX,\n                plotY\n            ];\n            lastPoint.rightContX = lastPoint.rightContY = null; // reset for updating series later\n            return ret;\n        }\n    });\n    seriesTypes.spline = SplineSeries;\n\n    /**\n     * Set the default options for areaspline\n     */\n    defaultPlotOptions.areaspline = merge(defaultPlotOptions.area);\n\n    /**\n     * AreaSplineSeries object\n     */\n    var areaProto = AreaSeries.prototype,\n        AreaSplineSeries = extendClass(SplineSeries, {\n            type: 'areaspline',\n            getStackPoints: areaProto.getStackPoints,\n            getGraphPath: areaProto.getGraphPath,\n            setStackCliffs: areaProto.setStackCliffs,\n            drawGraph: areaProto.drawGraph,\n            drawLegendSymbol: LegendSymbolMixin.drawRectangle\n        });\n\n    seriesTypes.areaspline = AreaSplineSeries;\n\n    /**\n     * Set the default options for column\n     */\n    defaultPlotOptions.column = merge(defaultSeriesOptions, {\n        borderColor: '#FFFFFF',\n        //borderWidth: 1,\n        borderRadius: 0,\n        //colorByPoint: undefined,\n        groupPadding: 0.2,\n        //grouping: true,\n        marker: null, // point options are specified in the base options\n        pointPadding: 0.1,\n        //pointWidth: null,\n        minPointLength: 0,\n        cropThreshold: 50, // when there are more points, they will not animate out of the chart on xAxis.setExtremes\n        pointRange: null, // null means auto, meaning 1 in a categorized axis and least distance between points if not categories\n        states: {\n            hover: {\n                brightness: 0.1,\n                shadow: false,\n                halo: false\n            },\n            select: {\n                color: '#C0C0C0',\n                borderColor: '#000000',\n                shadow: false\n            }\n        },\n        dataLabels: {\n            align: null, // auto\n            verticalAlign: null, // auto\n            y: null\n        },\n        softThreshold: false,\n        startFromThreshold: true, // false doesn't work well: http://jsfiddle.net/highcharts/hz8fopan/14/\n        stickyTracking: false,\n        tooltip: {\n            distance: 6\n        },\n        threshold: 0\n    });\n\n    /**\n     * ColumnSeries object\n     */\n    var ColumnSeries = extendClass(Series, {\n        type: 'column',\n        pointAttrToOptions: { // mapping between SVG attributes and the corresponding options\n            stroke: 'borderColor',\n            fill: 'color',\n            r: 'borderRadius'\n        },\n        cropShoulder: 0,\n        directTouch: true, // When tooltip is not shared, this series (and derivatives) requires direct touch/hover. KD-tree does not apply.\n        trackerGroups: ['group', 'dataLabelsGroup'],\n        negStacks: true, // use separate negative stacks, unlike area stacks where a negative\n            // point is substracted from previous (#1910)\n\n        /**\n         * Initialize the series\n         */\n        init: function () {\n            Series.prototype.init.apply(this, arguments);\n\n            var series = this,\n                chart = series.chart;\n\n            // if the series is added dynamically, force redraw of other\n            // series affected by a new column\n            if (chart.hasRendered) {\n                each(chart.series, function (otherSeries) {\n                    if (otherSeries.type === series.type) {\n                        otherSeries.isDirty = true;\n                    }\n                });\n            }\n        },\n\n        /**\n         * Return the width and x offset of the columns adjusted for grouping, groupPadding, pointPadding,\n         * pointWidth etc.\n         */\n        getColumnMetrics: function () {\n\n            var series = this,\n                options = series.options,\n                xAxis = series.xAxis,\n                yAxis = series.yAxis,\n                reversedXAxis = xAxis.reversed,\n                stackKey,\n                stackGroups = {},\n                columnCount = 0;\n\n            // Get the total number of column type series.\n            // This is called on every series. Consider moving this logic to a\n            // chart.orderStacks() function and call it on init, addSeries and removeSeries\n            if (options.grouping === false) {\n                columnCount = 1;\n            } else {\n                each(series.chart.series, function (otherSeries) {\n                    var otherOptions = otherSeries.options,\n                        otherYAxis = otherSeries.yAxis,\n                        columnIndex;\n                    if (otherSeries.type === series.type && otherSeries.visible &&\n                            yAxis.len === otherYAxis.len && yAxis.pos === otherYAxis.pos) {  // #642, #2086\n                        if (otherOptions.stacking) {\n                            stackKey = otherSeries.stackKey;\n                            if (stackGroups[stackKey] === UNDEFINED) {\n                                stackGroups[stackKey] = columnCount++;\n                            }\n                            columnIndex = stackGroups[stackKey];\n                        } else if (otherOptions.grouping !== false) { // #1162\n                            columnIndex = columnCount++;\n                        }\n                        otherSeries.columnIndex = columnIndex;\n                    }\n                });\n            }\n\n            var categoryWidth = mathMin(\n                    mathAbs(xAxis.transA) * (xAxis.ordinalSlope || options.pointRange || xAxis.closestPointRange || xAxis.tickInterval || 1), // #2610\n                    xAxis.len // #1535\n                ),\n                groupPadding = categoryWidth * options.groupPadding,\n                groupWidth = categoryWidth - 2 * groupPadding,\n                pointOffsetWidth = groupWidth / columnCount,\n                pointWidth = mathMin(\n                    options.maxPointWidth || xAxis.len,\n                    pick(options.pointWidth, pointOffsetWidth * (1 - 2 * options.pointPadding))\n                ),\n                pointPadding = (pointOffsetWidth - pointWidth) / 2,\n                colIndex = (series.columnIndex || 0) + (reversedXAxis ? 1 : 0), // #1251, #3737\n                pointXOffset = pointPadding + (groupPadding + colIndex *\n                    pointOffsetWidth - (categoryWidth / 2)) *\n                    (reversedXAxis ? -1 : 1);\n\n            // Save it for reading in linked series (Error bars particularly)\n            series.columnMetrics = {\n                width: pointWidth,\n                offset: pointXOffset\n            };\n            return series.columnMetrics;\n\n        },\n\n        /**\n         * Make the columns crisp. The edges are rounded to the nearest full pixel.\n         */\n        crispCol: function (x, y, w, h) {\n            var chart = this.chart,\n                borderWidth = this.borderWidth,\n                xCrisp = -(borderWidth % 2 ? 0.5 : 0),\n                yCrisp = borderWidth % 2 ? 0.5 : 1,\n                right,\n                bottom,\n                fromTop;\n\n            if (chart.inverted && chart.renderer.isVML) {\n                yCrisp += 1;\n            }\n\n            // Horizontal. We need to first compute the exact right edge, then round it\n            // and compute the width from there.\n            right = Math.round(x + w) + xCrisp;\n            x = Math.round(x) + xCrisp;\n            w = right - x;\n\n            // Vertical\n            bottom = Math.round(y + h) + yCrisp;\n            fromTop = mathAbs(y) <= 0.5 && bottom > 0.5; // #4504, #4656\n            y = Math.round(y) + yCrisp;\n            h = bottom - y;\n\n            // Top edges are exceptions\n            if (fromTop && h) { // #5146\n                y -= 1;\n                h += 1;\n            }\n\n            return {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n        },\n\n        /**\n         * Translate each point to the plot area coordinate system and find shape positions\n         */\n        translate: function () {\n            var series = this,\n                chart = series.chart,\n                options = series.options,\n                borderWidth = series.borderWidth = pick(\n                    options.borderWidth,\n                    series.closestPointRange * series.xAxis.transA < 2 ? 0 : 1 // #3635\n                ),\n                yAxis = series.yAxis,\n                threshold = options.threshold,\n                translatedThreshold = series.translatedThreshold = yAxis.getThreshold(threshold),\n                minPointLength = pick(options.minPointLength, 5),\n                metrics = series.getColumnMetrics(),\n                pointWidth = metrics.width,\n                seriesBarW = series.barW = mathMax(pointWidth, 1 + 2 * borderWidth), // postprocessed for border width\n                pointXOffset = series.pointXOffset = metrics.offset;\n\n            if (chart.inverted) {\n                translatedThreshold -= 0.5; // #3355\n            }\n\n            // When the pointPadding is 0, we want the columns to be packed tightly, so we allow individual\n            // columns to have individual sizes. When pointPadding is greater, we strive for equal-width\n            // columns (#2694).\n            if (options.pointPadding) {\n                seriesBarW = mathCeil(seriesBarW);\n            }\n\n            Series.prototype.translate.apply(series);\n\n            // Record the new values\n            each(series.points, function (point) {\n                var yBottom = mathMin(pick(point.yBottom, translatedThreshold), 9e4), // #3575\n                    safeDistance = 999 + mathAbs(yBottom),\n                    plotY = mathMin(mathMax(-safeDistance, point.plotY), yAxis.len + safeDistance), // Don't draw too far outside plot area (#1303, #2241, #4264)\n                    barX = point.plotX + pointXOffset,\n                    barW = seriesBarW,\n                    barY = mathMin(plotY, yBottom),\n                    up,\n                    barH = mathMax(plotY, yBottom) - barY;\n\n                // Handle options.minPointLength\n                if (mathAbs(barH) < minPointLength) {\n                    if (minPointLength) {\n                        barH = minPointLength;\n                        up = (!yAxis.reversed && !point.negative) || (yAxis.reversed && point.negative);\n                        barY = mathAbs(barY - translatedThreshold) > minPointLength ? // stacked\n                                yBottom - minPointLength : // keep position\n                                translatedThreshold - (up ? minPointLength : 0); // #1485, #4051\n                    }\n                }\n\n                // Cache for access in polar\n                point.barX = barX;\n                point.pointWidth = pointWidth;\n\n                // Fix the tooltip on center of grouped columns (#1216, #424, #3648)\n                point.tooltipPos = chart.inverted ?\n                    [yAxis.len + yAxis.pos - chart.plotLeft - plotY, series.xAxis.len - barX - barW / 2, barH] :\n                    [barX + barW / 2, plotY + yAxis.pos - chart.plotTop, barH];\n\n                // Register shape type and arguments to be used in drawPoints\n                point.shapeType = 'rect';\n                point.shapeArgs = series.crispCol.apply(\n                    series,\n                    point.isNull ? \n                        [point.plotX, yAxis.len / 2, 0, 0] : // #3169, drilldown from null must have a position to work from\n                        [barX, barY, barW, barH]\n                );\n            });\n\n        },\n\n        getSymbol: noop,\n\n        /**\n         * Use a solid rectangle like the area series types\n         */\n        drawLegendSymbol: LegendSymbolMixin.drawRectangle,\n\n\n        /**\n         * Columns have no graph\n         */\n        drawGraph: noop,\n\n        /**\n         * Draw the columns. For bars, the series.group is rotated, so the same coordinates\n         * apply for columns and bars. This method is inherited by scatter series.\n         *\n         */\n        drawPoints: function () {\n            var series = this,\n                chart = this.chart,\n                options = series.options,\n                renderer = chart.renderer,\n                animationLimit = options.animationLimit || 250,\n                shapeArgs,\n                pointAttr;\n\n            // draw the columns\n            each(series.points, function (point) {\n                var plotY = point.plotY,\n                    graphic = point.graphic,\n                    borderAttr;\n\n                if (isNumber(plotY) && point.y !== null) {\n                    shapeArgs = point.shapeArgs;\n\n                    borderAttr = defined(series.borderWidth) ? {\n                        'stroke-width': series.borderWidth\n                    } : {};\n\n                    pointAttr = point.pointAttr[point.selected ? SELECT_STATE : NORMAL_STATE] || series.pointAttr[NORMAL_STATE];\n\n                    if (graphic) { // update\n                        stop(graphic);\n                        graphic.attr(borderAttr).attr(pointAttr)[chart.pointCount < animationLimit ? 'animate' : 'attr'](merge(shapeArgs)); // #4267\n\n                    } else {\n                        point.graphic = graphic = renderer[point.shapeType](shapeArgs)\n                            .attr(borderAttr)\n                            .attr(pointAttr)\n                            .add(point.group || series.group)\n                            .shadow(options.shadow, null, options.stacking && !options.borderRadius);\n                    }\n\n                } else if (graphic) {\n                    point.graphic = graphic.destroy(); // #1269\n                }\n            });\n        },\n\n        /**\n         * Animate the column heights one by one from zero\n         * @param {Boolean} init Whether to initialize the animation or run it\n         */\n        animate: function (init) {\n            var series = this,\n                yAxis = this.yAxis,\n                options = series.options,\n                inverted = this.chart.inverted,\n                attr = {},\n                translatedThreshold;\n\n            if (hasSVG) { // VML is too slow anyway\n                if (init) {\n                    attr.scaleY = 0.001;\n                    translatedThreshold = mathMin(yAxis.pos + yAxis.len, mathMax(yAxis.pos, yAxis.toPixels(options.threshold)));\n                    if (inverted) {\n                        attr.translateX = translatedThreshold - yAxis.len;\n                    } else {\n                        attr.translateY = translatedThreshold;\n                    }\n                    series.group.attr(attr);\n\n                } else { // run the animation\n\n                    attr[inverted ? 'translateX' : 'translateY'] = yAxis.pos;\n                    series.group.animate(attr, extend(animObject(series.options.animation), {\n                        // Do the scale synchronously to ensure smooth updating (#5030)\n                        step: function (val, fx) {\n                            series.group.attr({\n                                scaleY: mathMax(0.001, fx.pos) // #5250\n                            });\n                        }\n                    }));\n\n                    // delete this function to allow it only once\n                    series.animate = null;\n                }\n            }\n        },\n\n        /**\n         * Remove this series from the chart\n         */\n        remove: function () {\n            var series = this,\n                chart = series.chart;\n\n            // column and bar series affects other series of the same type\n            // as they are either stacked or grouped\n            if (chart.hasRendered) {\n                each(chart.series, function (otherSeries) {\n                    if (otherSeries.type === series.type) {\n                        otherSeries.isDirty = true;\n                    }\n                });\n            }\n\n            Series.prototype.remove.apply(series, arguments);\n        }\n    });\n    seriesTypes.column = ColumnSeries;\n    /**\n     * Set the default options for bar\n     */\n    defaultPlotOptions.bar = merge(defaultPlotOptions.column);\n    /**\n     * The Bar series class\n     */\n    var BarSeries = extendClass(ColumnSeries, {\n        type: 'bar',\n        inverted: true\n    });\n    seriesTypes.bar = BarSeries;\n\n    /**\n     * Set the default options for scatter\n     */\n    defaultPlotOptions.scatter = merge(defaultSeriesOptions, {\n        lineWidth: 0,\n        marker: {\n            enabled: true // Overrides auto-enabling in line series (#3647)\n        },\n        tooltip: {\n            headerFormat: '<span style=\"color:{point.color}\">\\u25CF</span> <span style=\"font-size: 10px;\"> {series.name}</span><br/>',\n            pointFormat: 'x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>'\n        }\n    });\n\n    /**\n     * The scatter series class\n     */\n    var ScatterSeries = extendClass(Series, {\n        type: 'scatter',\n        sorted: false,\n        requireSorting: false,\n        noSharedTooltip: true,\n        trackerGroups: ['group', 'markerGroup', 'dataLabelsGroup'],\n        takeOrdinalPosition: false, // #2342\n        kdDimensions: 2,\n        drawGraph: function () {\n            if (this.options.lineWidth) {\n                Series.prototype.drawGraph.call(this);\n            }\n        }\n    });\n\n    seriesTypes.scatter = ScatterSeries;\n\n    /**\n     * Set the default options for pie\n     */\n    defaultPlotOptions.pie = merge(defaultSeriesOptions, {\n        borderColor: '#FFFFFF',\n        borderWidth: 1,\n        center: [null, null],\n        clip: false,\n        colorByPoint: true, // always true for pies\n        dataLabels: {\n            // align: null,\n            // connectorWidth: 1,\n            // connectorColor: point.color,\n            // connectorPadding: 5,\n            distance: 30,\n            enabled: true,\n            formatter: function () { // #2945\n                return this.y === null ? undefined : this.point.name;\n            },\n            // softConnector: true,\n            x: 0\n            // y: 0\n        },\n        ignoreHiddenPoint: true,\n        //innerSize: 0,\n        legendType: 'point',\n        marker: null, // point options are specified in the base options\n        size: null,\n        showInLegend: false,\n        slicedOffset: 10,\n        states: {\n            hover: {\n                brightness: 0.1,\n                shadow: false\n            }\n        },\n        stickyTracking: false,\n        tooltip: {\n            followPointer: true\n        }\n    });\n\n    /**\n     * Extended point object for pies\n     */\n    var PiePoint = extendClass(Point, {\n        /**\n         * Initiate the pie slice\n         */\n        init: function () {\n\n            Point.prototype.init.apply(this, arguments);\n\n            var point = this,\n                toggleSlice;\n\n            point.name = pick(point.name, 'Slice');\n\n            // add event listener for select\n            toggleSlice = function (e) {\n                point.slice(e.type === 'select');\n            };\n            addEvent(point, 'select', toggleSlice);\n            addEvent(point, 'unselect', toggleSlice);\n\n            return point;\n        },\n\n        /**\n         * Toggle the visibility of the pie slice\n         * @param {Boolean} vis Whether to show the slice or not. If undefined, the\n         *    visibility is toggled\n         */\n        setVisible: function (vis, redraw) {\n            var point = this,\n                series = point.series,\n                chart = series.chart,\n                ignoreHiddenPoint = series.options.ignoreHiddenPoint;\n\n            redraw = pick(redraw, ignoreHiddenPoint);\n\n            if (vis !== point.visible) {\n\n                // If called without an argument, toggle visibility\n                point.visible = point.options.visible = vis = vis === UNDEFINED ? !point.visible : vis;\n                series.options.data[inArray(point, series.data)] = point.options; // update userOptions.data\n\n                // Show and hide associated elements. This is performed regardless of redraw or not,\n                // because chart.redraw only handles full series.\n                each(['graphic', 'dataLabel', 'connector', 'shadowGroup'], function (key) {\n                    if (point[key]) {\n                        point[key][vis ? 'show' : 'hide'](true);\n                    }\n                });\n\n                if (point.legendItem) {\n                    chart.legend.colorizeItem(point, vis);\n                }\n\n                // #4170, hide halo after hiding point\n                if (!vis && point.state === 'hover') {\n                    point.setState('');\n                }\n\n                // Handle ignore hidden slices\n                if (ignoreHiddenPoint) {\n                    series.isDirty = true;\n                }\n\n                if (redraw) {\n                    chart.redraw();\n                }\n            }\n        },\n\n        /**\n         * Set or toggle whether the slice is cut out from the pie\n         * @param {Boolean} sliced When undefined, the slice state is toggled\n         * @param {Boolean} redraw Whether to redraw the chart. True by default.\n         */\n        slice: function (sliced, redraw, animation) {\n            var point = this,\n                series = point.series,\n                chart = series.chart,\n                translation;\n\n            setAnimation(animation, chart);\n\n            // redraw is true by default\n            redraw = pick(redraw, true);\n\n            // if called without an argument, toggle\n            point.sliced = point.options.sliced = sliced = defined(sliced) ? sliced : !point.sliced;\n            series.options.data[inArray(point, series.data)] = point.options; // update userOptions.data\n\n            translation = sliced ? point.slicedTranslation : {\n                translateX: 0,\n                translateY: 0\n            };\n\n            point.graphic.animate(translation);\n\n            if (point.shadowGroup) {\n                point.shadowGroup.animate(translation);\n            }\n\n        },\n\n        haloPath: function (size) {\n            var shapeArgs = this.shapeArgs,\n                chart = this.series.chart;\n\n            return this.sliced || !this.visible ? [] : this.series.chart.renderer.symbols.arc(chart.plotLeft + shapeArgs.x, chart.plotTop + shapeArgs.y, shapeArgs.r + size, shapeArgs.r + size, {\n                innerR: this.shapeArgs.r,\n                start: shapeArgs.start,\n                end: shapeArgs.end\n            });\n        }\n    });\n\n    /**\n     * The Pie series class\n     */\n    var PieSeries = {\n        type: 'pie',\n        isCartesian: false,\n        pointClass: PiePoint,\n        requireSorting: false,\n        directTouch: true,\n        noSharedTooltip: true,\n        trackerGroups: ['group', 'dataLabelsGroup'],\n        axisTypes: [],\n        pointAttrToOptions: { // mapping between SVG attributes and the corresponding options\n            stroke: 'borderColor',\n            'stroke-width': 'borderWidth',\n            fill: 'color'\n        },\n\n        /**\n         * Animate the pies in\n         */\n        animate: function (init) {\n            var series = this,\n                points = series.points,\n                startAngleRad = series.startAngleRad;\n\n            if (!init) {\n                each(points, function (point) {\n                    var graphic = point.graphic,\n                        args = point.shapeArgs;\n\n                    if (graphic) {\n                        // start values\n                        graphic.attr({\n                            r: point.startR || (series.center[3] / 2), // animate from inner radius (#779)\n                            start: startAngleRad,\n                            end: startAngleRad\n                        });\n\n                        // animate\n                        graphic.animate({\n                            r: args.r,\n                            start: args.start,\n                            end: args.end\n                        }, series.options.animation);\n                    }\n                });\n\n                // delete this function to allow it only once\n                series.animate = null;\n            }\n        },\n\n        /**\n         * Recompute total chart sum and update percentages of points.\n         */\n        updateTotals: function () {\n            var i,\n                total = 0,\n                points = this.points,\n                len = points.length,\n                point,\n                ignoreHiddenPoint = this.options.ignoreHiddenPoint;\n\n            // Get the total sum\n            for (i = 0; i < len; i++) {\n                point = points[i];\n                // Disallow negative values (#1530, #3623, #5322)\n                if (point.y < 0) {\n                    point.y = null;\n                }\n                total += (ignoreHiddenPoint && !point.visible) ? 0 : point.y;\n            }\n            this.total = total;\n\n            // Set each point's properties\n            for (i = 0; i < len; i++) {\n                point = points[i];\n                point.percentage = (total > 0 && (point.visible || !ignoreHiddenPoint)) ? point.y / total * 100 : 0;\n                point.total = total;\n            }\n        },\n\n        /**\n         * Extend the generatePoints method by adding total and percentage properties to each point\n         */\n        generatePoints: function () {\n            Series.prototype.generatePoints.call(this);\n            this.updateTotals();\n        },\n\n        /**\n         * Do translation for pie slices\n         */\n        translate: function (positions) {\n            this.generatePoints();\n\n            var series = this,\n                cumulative = 0,\n                precision = 1000, // issue #172\n                options = series.options,\n                slicedOffset = options.slicedOffset,\n                connectorOffset = slicedOffset + options.borderWidth,\n                start,\n                end,\n                angle,\n                startAngle = options.startAngle || 0,\n                startAngleRad = series.startAngleRad = mathPI / 180 * (startAngle - 90),\n                endAngleRad = series.endAngleRad = mathPI / 180 * ((pick(options.endAngle, startAngle + 360)) - 90),\n                circ = endAngleRad - startAngleRad, //2 * mathPI,\n                points = series.points,\n                radiusX, // the x component of the radius vector for a given point\n                radiusY,\n                labelDistance = options.dataLabels.distance,\n                ignoreHiddenPoint = options.ignoreHiddenPoint,\n                i,\n                len = points.length,\n                point;\n\n            // Get positions - either an integer or a percentage string must be given.\n            // If positions are passed as a parameter, we're in a recursive loop for adjusting\n            // space for data labels.\n            if (!positions) {\n                series.center = positions = series.getCenter();\n            }\n\n            // utility for getting the x value from a given y, used for anticollision logic in data labels\n            series.getX = function (y, left) {\n\n                angle = math.asin(mathMin((y - positions[1]) / (positions[2] / 2 + labelDistance), 1));\n\n                return positions[0] +\n                    (left ? -1 : 1) *\n                    (mathCos(angle) * (positions[2] / 2 + labelDistance));\n            };\n\n            // Calculate the geometry for each point\n            for (i = 0; i < len; i++) {\n\n                point = points[i];\n\n                // set start and end angle\n                start = startAngleRad + (cumulative * circ);\n                if (!ignoreHiddenPoint || point.visible) {\n                    cumulative += point.percentage / 100;\n                }\n                end = startAngleRad + (cumulative * circ);\n\n                // set the shape\n                point.shapeType = 'arc';\n                point.shapeArgs = {\n                    x: positions[0],\n                    y: positions[1],\n                    r: positions[2] / 2,\n                    innerR: positions[3] / 2,\n                    start: mathRound(start * precision) / precision,\n                    end: mathRound(end * precision) / precision\n                };\n\n                // The angle must stay within -90 and 270 (#2645)\n                angle = (end + start) / 2;\n                if (angle > 1.5 * mathPI) {\n                    angle -= 2 * mathPI;\n                } else if (angle < -mathPI / 2) {\n                    angle += 2 * mathPI;\n                }\n\n                // Center for the sliced out slice\n                point.slicedTranslation = {\n                    translateX: mathRound(mathCos(angle) * slicedOffset),\n                    translateY: mathRound(mathSin(angle) * slicedOffset)\n                };\n\n                // set the anchor point for tooltips\n                radiusX = mathCos(angle) * positions[2] / 2;\n                radiusY = mathSin(angle) * positions[2] / 2;\n                point.tooltipPos = [\n                    positions[0] + radiusX * 0.7,\n                    positions[1] + radiusY * 0.7\n                ];\n\n                point.half = angle < -mathPI / 2 || angle > mathPI / 2 ? 1 : 0;\n                point.angle = angle;\n\n                // set the anchor point for data labels\n                connectorOffset = mathMin(connectorOffset, labelDistance / 2); // #1678\n                point.labelPos = [\n                    positions[0] + radiusX + mathCos(angle) * labelDistance, // first break of connector\n                    positions[1] + radiusY + mathSin(angle) * labelDistance, // a/a\n                    positions[0] + radiusX + mathCos(angle) * connectorOffset, // second break, right outside pie\n                    positions[1] + radiusY + mathSin(angle) * connectorOffset, // a/a\n                    positions[0] + radiusX, // landing point for connector\n                    positions[1] + radiusY, // a/a\n                    labelDistance < 0 ? // alignment\n                        'center' :\n                        point.half ? 'right' : 'left', // alignment\n                    angle // center angle\n                ];\n\n            }\n        },\n\n        drawGraph: null,\n\n        /**\n         * Draw the data points\n         */\n        drawPoints: function () {\n            var series = this,\n                chart = series.chart,\n                renderer = chart.renderer,\n                groupTranslation,\n                //center,\n                graphic,\n                //group,\n                shadow = series.options.shadow,\n                shadowGroup,\n                pointAttr,\n                shapeArgs,\n                attr;\n\n            if (shadow && !series.shadowGroup) {\n                series.shadowGroup = renderer.g('shadow')\n                    .add(series.group);\n            }\n\n            // draw the slices\n            each(series.points, function (point) {\n                if (point.y !== null) {\n                    graphic = point.graphic;\n                    shapeArgs = point.shapeArgs;\n                    shadowGroup = point.shadowGroup;\n                    pointAttr = point.pointAttr[point.selected ? SELECT_STATE : NORMAL_STATE];\n                    if (!pointAttr.stroke) {\n                        pointAttr.stroke = pointAttr.fill;\n                    }\n\n                    // put the shadow behind all points\n                    if (shadow && !shadowGroup) {\n                        shadowGroup = point.shadowGroup = renderer.g('shadow')\n                            .add(series.shadowGroup);\n                    }\n\n                    // if the point is sliced, use special translation, else use plot area traslation\n                    groupTranslation = point.sliced ? point.slicedTranslation : {\n                        translateX: 0,\n                        translateY: 0\n                    };\n\n                    //group.translate(groupTranslation[0], groupTranslation[1]);\n                    if (shadowGroup) {\n                        shadowGroup.attr(groupTranslation);\n                    }\n\n                    // draw the slice\n                    if (graphic) {\n                        graphic\n                            .setRadialReference(series.center)\n                            .attr(pointAttr)\n                            .animate(extend(shapeArgs, groupTranslation));\n                    } else {\n                        attr = { 'stroke-linejoin': 'round' };\n                        if (!point.visible) {\n                            attr.visibility = 'hidden';\n                        }\n\n                        point.graphic = graphic = renderer[point.shapeType](shapeArgs)\n                            .setRadialReference(series.center)\n                            .attr(pointAttr)\n                            .attr(attr)\n                            .attr(groupTranslation)\n                            .add(series.group)\n                            .shadow(shadow, shadowGroup);\n                    }\n                }\n            });\n\n        },\n\n\n        searchPoint: noop,\n\n        /**\n         * Utility for sorting data labels\n         */\n        sortByAngle: function (points, sign) {\n            points.sort(function (a, b) {\n                return a.angle !== undefined && (b.angle - a.angle) * sign;\n            });\n        },\n\n        /**\n         * Use a simple symbol from LegendSymbolMixin\n         */\n        drawLegendSymbol: LegendSymbolMixin.drawRectangle,\n\n        /**\n         * Use the getCenter method from drawLegendSymbol\n         */\n        getCenter: CenteredSeriesMixin.getCenter,\n\n        /**\n         * Pies don't have point marker symbols\n         */\n        getSymbol: noop\n\n    };\n    PieSeries = extendClass(Series, PieSeries);\n    seriesTypes.pie = PieSeries;\n\n    /**\n     * Draw the data labels\n     */\n    Series.prototype.drawDataLabels = function () {\n\n        var series = this,\n            seriesOptions = series.options,\n            cursor = seriesOptions.cursor,\n            options = seriesOptions.dataLabels,\n            points = series.points,\n            pointOptions,\n            generalOptions,\n            hasRendered = series.hasRendered || 0,\n            str,\n            dataLabelsGroup,\n            defer = pick(options.defer, true),\n            renderer = series.chart.renderer;\n\n        if (options.enabled || series._hasPointLabels) {\n\n            // Process default alignment of data labels for columns\n            if (series.dlProcessOptions) {\n                series.dlProcessOptions(options);\n            }\n\n            // Create a separate group for the data labels to avoid rotation\n            dataLabelsGroup = series.plotGroup(\n                'dataLabelsGroup',\n                'data-labels',\n                defer && !hasRendered ? 'hidden' : 'visible', // #5133\n                options.zIndex || 6\n            );\n\n            if (defer) {\n                dataLabelsGroup.attr({ opacity: +hasRendered }); // #3300\n                if (!hasRendered) {\n                    addEvent(series, 'afterAnimate', function () {\n                        if (series.visible) { // #2597, #3023, #3024\n                            dataLabelsGroup.show(true);\n                        }\n                        dataLabelsGroup[seriesOptions.animation ? 'animate' : 'attr']({ opacity: 1 }, { duration: 200 });\n                    });\n                }\n            }\n\n            // Make the labels for each point\n            generalOptions = options;\n            each(points, function (point) {\n\n                var enabled,\n                    dataLabel = point.dataLabel,\n                    labelConfig,\n                    attr,\n                    name,\n                    rotation,\n                    connector = point.connector,\n                    isNew = true,\n                    style,\n                    moreStyle = {};\n\n                // Determine if each data label is enabled\n                pointOptions = point.dlOptions || (point.options && point.options.dataLabels); // dlOptions is used in treemaps\n                enabled = pick(pointOptions && pointOptions.enabled, generalOptions.enabled) && point.y !== null; // #2282, #4641\n\n\n                // If the point is outside the plot area, destroy it. #678, #820\n                if (dataLabel && !enabled) {\n                    point.dataLabel = dataLabel.destroy();\n\n                // Individual labels are disabled if the are explicitly disabled\n                // in the point options, or if they fall outside the plot area.\n                } else if (enabled) {\n\n                    // Create individual options structure that can be extended without\n                    // affecting others\n                    options = merge(generalOptions, pointOptions);\n                    style = options.style;\n\n                    rotation = options.rotation;\n\n                    // Get the string\n                    labelConfig = point.getLabelConfig();\n                    str = options.format ?\n                        format(options.format, labelConfig) :\n                        options.formatter.call(labelConfig, options);\n\n                    // Determine the color\n                    style.color = pick(options.color, style.color, series.color, 'black');\n\n\n                    // update existing label\n                    if (dataLabel) {\n\n                        if (defined(str)) {\n                            dataLabel\n                                .attr({\n                                    text: str\n                                });\n                            isNew = false;\n\n                        } else { // #1437 - the label is shown conditionally\n                            point.dataLabel = dataLabel = dataLabel.destroy();\n                            if (connector) {\n                                point.connector = connector.destroy();\n                            }\n                        }\n\n                    // create new label\n                    } else if (defined(str)) {\n                        attr = {\n                            //align: align,\n                            fill: options.backgroundColor,\n                            stroke: options.borderColor,\n                            'stroke-width': options.borderWidth,\n                            r: options.borderRadius || 0,\n                            rotation: rotation,\n                            padding: options.padding,\n                            zIndex: 1\n                        };\n\n                        // Get automated contrast color\n                        if (style.color === 'contrast') {\n                            moreStyle.color = options.inside || options.distance < 0 || !!seriesOptions.stacking ?\n                                renderer.getContrast(point.color || series.color) :\n                                '#000000';\n                        }\n                        if (cursor) {\n                            moreStyle.cursor = cursor;\n                        }\n\n\n                        // Remove unused attributes (#947)\n                        for (name in attr) {\n                            if (attr[name] === UNDEFINED) {\n                                delete attr[name];\n                            }\n                        }\n\n                        dataLabel = point.dataLabel = renderer[rotation ? 'text' : 'label']( // labels don't support rotation\n                            str,\n                            0,\n                            -9999,\n                            options.shape,\n                            null,\n                            null,\n                            options.useHTML\n                        )\n                        .attr(attr)\n                        .css(extend(style, moreStyle))\n                        .add(dataLabelsGroup)\n                        .shadow(options.shadow);\n\n                    }\n\n                    if (dataLabel) {\n                        // Now the data label is created and placed at 0,0, so we need to align it\n                        series.alignDataLabel(point, dataLabel, options, null, isNew);\n                    }\n                }\n            });\n        }\n    };\n\n    /**\n     * Align each individual data label\n     */\n    Series.prototype.alignDataLabel = function (point, dataLabel, options, alignTo, isNew) {\n        var chart = this.chart,\n            inverted = chart.inverted,\n            plotX = pick(point.plotX, -9999),\n            plotY = pick(point.plotY, -9999),\n            bBox = dataLabel.getBBox(),\n            baseline = chart.renderer.fontMetrics(options.style.fontSize).b,\n            rotation = options.rotation,\n            normRotation,\n            negRotation,\n            align = options.align,\n            rotCorr, // rotation correction\n            // Math.round for rounding errors (#2683), alignTo to allow column labels (#2700)\n            visible = this.visible && (point.series.forceDL || chart.isInsidePlot(plotX, mathRound(plotY), inverted) ||\n                (alignTo && chart.isInsidePlot(plotX, inverted ? alignTo.x + 1 : alignTo.y + alignTo.height - 1, inverted))),\n            alignAttr, // the final position;\n            justify = pick(options.overflow, 'justify') === 'justify';\n\n        if (visible) {\n\n            // The alignment box is a singular point\n            alignTo = extend({\n                x: inverted ? chart.plotWidth - plotY : plotX,\n                y: mathRound(inverted ? chart.plotHeight - plotX : plotY),\n                width: 0,\n                height: 0\n            }, alignTo);\n\n            // Add the text size for alignment calculation\n            extend(options, {\n                width: bBox.width,\n                height: bBox.height\n            });\n\n            // Allow a hook for changing alignment in the last moment, then do the alignment\n            if (rotation) {\n                justify = false; // Not supported for rotated text\n                rotCorr = chart.renderer.rotCorr(baseline, rotation); // #3723\n                alignAttr = {\n                    x: alignTo.x + options.x + alignTo.width / 2 + rotCorr.x,\n                    y: alignTo.y + options.y + { top: 0, middle: 0.5, bottom: 1 }[options.verticalAlign] * alignTo.height\n                };\n                dataLabel[isNew ? 'attr' : 'animate'](alignAttr)\n                    .attr({ // #3003\n                        align: align\n                    });\n\n                // Compensate for the rotated label sticking out on the sides\n                normRotation = (rotation + 720) % 360;\n                negRotation = normRotation > 180 && normRotation < 360;\n\n                if (align === 'left') {\n                    alignAttr.y -= negRotation ? bBox.height : 0;\n                } else if (align === 'center') {\n                    alignAttr.x -= bBox.width / 2;\n                    alignAttr.y -= bBox.height / 2;\n                } else if (align === 'right') {\n                    alignAttr.x -= bBox.width;\n                    alignAttr.y -= negRotation ? 0 : bBox.height;\n                }\n            \n\n            } else {\n                dataLabel.align(options, null, alignTo);\n                alignAttr = dataLabel.alignAttr;\n            }\n\n            // Handle justify or crop\n            if (justify) {\n                this.justifyDataLabel(dataLabel, options, alignAttr, bBox, alignTo, isNew);\n            \n            // Now check that the data label is within the plot area\n            } else if (pick(options.crop, true)) {\n                visible = chart.isInsidePlot(alignAttr.x, alignAttr.y) && chart.isInsidePlot(alignAttr.x + bBox.width, alignAttr.y + bBox.height);\n            }\n\n            // When we're using a shape, make it possible with a connector or an arrow pointing to thie point\n            if (options.shape && !rotation) {\n                dataLabel.attr({\n                    anchorX: point.plotX,\n                    anchorY: point.plotY\n                });\n            }\n        }\n\n        // Show or hide based on the final aligned position\n        if (!visible) {\n            stop(dataLabel);\n            dataLabel.attr({ y: -9999 });\n            dataLabel.placed = false; // don't animate back in\n        }\n\n    };\n\n    /**\n     * If data labels fall partly outside the plot area, align them back in, in a way that\n     * doesn't hide the point.\n     */\n    Series.prototype.justifyDataLabel = function (dataLabel, options, alignAttr, bBox, alignTo, isNew) {\n        var chart = this.chart,\n            align = options.align,\n            verticalAlign = options.verticalAlign,\n            off,\n            justified,\n            padding = dataLabel.box ? 0 : (dataLabel.padding || 0);\n\n        // Off left\n        off = alignAttr.x + padding;\n        if (off < 0) {\n            if (align === 'right') {\n                options.align = 'left';\n            } else {\n                options.x = -off;\n            }\n            justified = true;\n        }\n\n        // Off right\n        off = alignAttr.x + bBox.width - padding;\n        if (off > chart.plotWidth) {\n            if (align === 'left') {\n                options.align = 'right';\n            } else {\n                options.x = chart.plotWidth - off;\n            }\n            justified = true;\n        }\n\n        // Off top\n        off = alignAttr.y + padding;\n        if (off < 0) {\n            if (verticalAlign === 'bottom') {\n                options.verticalAlign = 'top';\n            } else {\n                options.y = -off;\n            }\n            justified = true;\n        }\n\n        // Off bottom\n        off = alignAttr.y + bBox.height - padding;\n        if (off > chart.plotHeight) {\n            if (verticalAlign === 'top') {\n                options.verticalAlign = 'bottom';\n            } else {\n                options.y = chart.plotHeight - off;\n            }\n            justified = true;\n        }\n\n        if (justified) {\n            dataLabel.placed = !isNew;\n            dataLabel.align(options, null, alignTo);\n        }\n    };\n\n    /**\n     * Override the base drawDataLabels method by pie specific functionality\n     */\n    if (seriesTypes.pie) {\n        seriesTypes.pie.prototype.drawDataLabels = function () {\n            var series = this,\n                data = series.data,\n                point,\n                chart = series.chart,\n                options = series.options.dataLabels,\n                connectorPadding = pick(options.connectorPadding, 10),\n                connectorWidth = pick(options.connectorWidth, 1),\n                plotWidth = chart.plotWidth,\n                plotHeight = chart.plotHeight,\n                connector,\n                connectorPath,\n                softConnector = pick(options.softConnector, true),\n                distanceOption = options.distance,\n                seriesCenter = series.center,\n                radius = seriesCenter[2] / 2,\n                centerY = seriesCenter[1],\n                outside = distanceOption > 0,\n                dataLabel,\n                dataLabelWidth,\n                labelPos,\n                labelHeight,\n                halves = [// divide the points into right and left halves for anti collision\n                    [], // right\n                    []  // left\n                ],\n                x,\n                y,\n                visibility,\n                rankArr,\n                i,\n                j,\n                overflow = [0, 0, 0, 0], // top, right, bottom, left\n                sort = function (a, b) {\n                    return b.y - a.y;\n                };\n\n            // get out if not enabled\n            if (!series.visible || (!options.enabled && !series._hasPointLabels)) {\n                return;\n            }\n\n            // run parent method\n            Series.prototype.drawDataLabels.apply(series);\n\n            each(data, function (point) {\n                if (point.dataLabel && point.visible) { // #407, #2510\n\n                    // Arrange points for detection collision\n                    halves[point.half].push(point);\n\n                    // Reset positions (#4905)\n                    point.dataLabel._pos = null;\n                }\n            });\n\n            /* Loop over the points in each half, starting from the top and bottom\n             * of the pie to detect overlapping labels.\n             */\n            i = 2;\n            while (i--) {\n\n                var slots = [],\n                    slotsLength,\n                    usedSlots = [],\n                    points = halves[i],\n                    pos,\n                    bottom,\n                    length = points.length,\n                    slotIndex;\n\n                if (!length) {\n                    continue;\n                }\n\n                // Sort by angle\n                series.sortByAngle(points, i - 0.5);\n\n                // Assume equal label heights on either hemisphere (#2630)\n                j = labelHeight = 0;\n                while (!labelHeight && points[j]) { // #1569\n                    labelHeight = points[j] && points[j].dataLabel && (points[j].dataLabel.getBBox().height || 21); // 21 is for #968\n                    j++;\n                }\n\n                // Only do anti-collision when we are outside the pie and have connectors (#856)\n                if (distanceOption > 0) {\n\n                    // Build the slots\n                    bottom = mathMin(centerY + radius + distanceOption, chart.plotHeight);\n                    for (pos = mathMax(0, centerY - radius - distanceOption); pos <= bottom; pos += labelHeight) {\n                        slots.push(pos);\n                    }\n                    slotsLength = slots.length;\n\n\n                    /* Visualize the slots\n                    if (!series.slotElements) {\n                        series.slotElements = [];\n                    }\n                    if (i === 1) {\n                        series.slotElements.forEach(function (elem) {\n                            elem.destroy();\n                        });\n                        series.slotElements.length = 0;\n                    }\n\n                    slots.forEach(function (pos, no) {\n                        var slotX = series.getX(pos, i) + chart.plotLeft - (i ? 100 : 0),\n                            slotY = pos + chart.plotTop;\n\n                        if (isNumber(slotX)) {\n                            series.slotElements.push(chart.renderer.rect(slotX, slotY - 7, 100, labelHeight, 1)\n                                .attr({\n                                    'stroke-width': 1,\n                                    stroke: 'silver',\n                                    fill: 'rgba(0,0,255,0.1)'\n                                })\n                                .add());\n                            series.slotElements.push(chart.renderer.text('Slot '+ no, slotX, slotY + 4)\n                                .attr({\n                                    fill: 'silver'\n                                }).add());\n                        }\n                    });\n                    // */\n\n                    // if there are more values than available slots, remove lowest values\n                    if (length > slotsLength) {\n                        // create an array for sorting and ranking the points within each quarter\n                        rankArr = [].concat(points);\n                        rankArr.sort(sort);\n                        j = length;\n                        while (j--) {\n                            rankArr[j].rank = j;\n                        }\n                        j = length;\n                        while (j--) {\n                            if (points[j].rank >= slotsLength) {\n                                points.splice(j, 1);\n                            }\n                        }\n                        length = points.length;\n                    }\n\n                    // The label goes to the nearest open slot, but not closer to the edge than\n                    // the label's index.\n                    for (j = 0; j < length; j++) {\n\n                        point = points[j];\n                        labelPos = point.labelPos;\n\n                        var closest = 9999,\n                            distance,\n                            slotI;\n\n                        // find the closest slot index\n                        for (slotI = 0; slotI < slotsLength; slotI++) {\n                            distance = mathAbs(slots[slotI] - labelPos[1]);\n                            if (distance < closest) {\n                                closest = distance;\n                                slotIndex = slotI;\n                            }\n                        }\n\n                        // if that slot index is closer to the edges of the slots, move it\n                        // to the closest appropriate slot\n                        if (slotIndex < j && slots[j] !== null) { // cluster at the top\n                            slotIndex = j;\n                        } else if (slotsLength  < length - j + slotIndex && slots[j] !== null) { // cluster at the bottom\n                            slotIndex = slotsLength - length + j;\n                            while (slots[slotIndex] === null) { // make sure it is not taken\n                                slotIndex++;\n                            }\n                        } else {\n                            // Slot is taken, find next free slot below. In the next run, the next slice will find the\n                            // slot above these, because it is the closest one\n                            while (slots[slotIndex] === null) { // make sure it is not taken\n                                slotIndex++;\n                            }\n                        }\n\n                        usedSlots.push({ i: slotIndex, y: slots[slotIndex] });\n                        slots[slotIndex] = null; // mark as taken\n                    }\n                    // sort them in order to fill in from the top\n                    usedSlots.sort(sort);\n                }\n\n                // now the used slots are sorted, fill them up sequentially\n                for (j = 0; j < length; j++) {\n\n                    var slot, naturalY;\n\n                    point = points[j];\n                    labelPos = point.labelPos;\n                    dataLabel = point.dataLabel;\n                    visibility = point.visible === false ? HIDDEN : 'inherit';\n                    naturalY = labelPos[1];\n\n                    if (distanceOption > 0) {\n                        slot = usedSlots.pop();\n                        slotIndex = slot.i;\n\n                        // if the slot next to currrent slot is free, the y value is allowed\n                        // to fall back to the natural position\n                        y = slot.y;\n                        if ((naturalY > y && slots[slotIndex + 1] !== null) ||\n                                (naturalY < y &&  slots[slotIndex - 1] !== null)) {\n                            y = mathMin(mathMax(0, naturalY), chart.plotHeight);\n                        }\n\n                    } else {\n                        y = naturalY;\n                    }\n\n                    // get the x - use the natural x position for first and last slot, to prevent the top\n                    // and botton slice connectors from touching each other on either side\n                    x = options.justify ?\n                        seriesCenter[0] + (i ? -1 : 1) * (radius + distanceOption) :\n                        series.getX(y === centerY - radius - distanceOption || y === centerY + radius + distanceOption ? naturalY : y, i);\n\n\n                    // Record the placement and visibility\n                    dataLabel._attr = {\n                        visibility: visibility,\n                        align: labelPos[6]\n                    };\n                    dataLabel._pos = {\n                        x: x + options.x +\n                            ({ left: connectorPadding, right: -connectorPadding }[labelPos[6]] || 0),\n                        y: y + options.y - 10 // 10 is for the baseline (label vs text)\n                    };\n                    dataLabel.connX = x;\n                    dataLabel.connY = y;\n\n\n                    // Detect overflowing data labels\n                    if (this.options.size === null) {\n                        dataLabelWidth = dataLabel.width;\n                        // Overflow left\n                        if (x - dataLabelWidth < connectorPadding) {\n                            overflow[3] = mathMax(mathRound(dataLabelWidth - x + connectorPadding), overflow[3]);\n\n                        // Overflow right\n                        } else if (x + dataLabelWidth > plotWidth - connectorPadding) {\n                            overflow[1] = mathMax(mathRound(x + dataLabelWidth - plotWidth + connectorPadding), overflow[1]);\n                        }\n\n                        // Overflow top\n                        if (y - labelHeight / 2 < 0) {\n                            overflow[0] = mathMax(mathRound(-y + labelHeight / 2), overflow[0]);\n\n                        // Overflow left\n                        } else if (y + labelHeight / 2 > plotHeight) {\n                            overflow[2] = mathMax(mathRound(y + labelHeight / 2 - plotHeight), overflow[2]);\n                        }\n                    }\n                } // for each point\n            } // for each half\n\n            // Do not apply the final placement and draw the connectors until we have verified\n            // that labels are not spilling over.\n            if (arrayMax(overflow) === 0 || this.verifyDataLabelOverflow(overflow)) {\n\n                // Place the labels in the final position\n                this.placeDataLabels();\n\n                // Draw the connectors\n                if (outside && connectorWidth) {\n                    each(this.points, function (point) {\n                        connector = point.connector;\n                        labelPos = point.labelPos;\n                        dataLabel = point.dataLabel;\n\n                        if (dataLabel && dataLabel._pos && point.visible) {\n                            visibility = dataLabel._attr.visibility;\n                            x = dataLabel.connX;\n                            y = dataLabel.connY;\n                            connectorPath = softConnector ? [\n                                M,\n                                x + (labelPos[6] === 'left' ? 5 : -5), y, // end of the string at the label\n                                'C',\n                                x, y, // first break, next to the label\n                                2 * labelPos[2] - labelPos[4], 2 * labelPos[3] - labelPos[5],\n                                labelPos[2], labelPos[3], // second break\n                                L,\n                                labelPos[4], labelPos[5] // base\n                            ] : [\n                                M,\n                                x + (labelPos[6] === 'left' ? 5 : -5), y, // end of the string at the label\n                                L,\n                                labelPos[2], labelPos[3], // second break\n                                L,\n                                labelPos[4], labelPos[5] // base\n                            ];\n\n                            if (connector) {\n                                connector.animate({ d: connectorPath });\n                                connector.attr('visibility', visibility);\n\n                            } else {\n                                point.connector = connector = series.chart.renderer.path(connectorPath).attr({\n                                    'stroke-width': connectorWidth,\n                                    stroke: options.connectorColor || point.color || '#606060',\n                                    visibility: visibility\n                                    //zIndex: 0 // #2722 (reversed)\n                                })\n                                .add(series.dataLabelsGroup);\n                            }\n                        } else if (connector) {\n                            point.connector = connector.destroy();\n                        }\n                    });\n                }\n            }\n        };\n        /**\n         * Perform the final placement of the data labels after we have verified that they\n         * fall within the plot area.\n         */\n        seriesTypes.pie.prototype.placeDataLabels = function () {\n            each(this.points, function (point) {\n                var dataLabel = point.dataLabel,\n                    _pos;\n\n                if (dataLabel && point.visible) {\n                    _pos = dataLabel._pos;\n                    if (_pos) {\n                        dataLabel.attr(dataLabel._attr);\n                        dataLabel[dataLabel.moved ? 'animate' : 'attr'](_pos);\n                        dataLabel.moved = true;\n                    } else if (dataLabel) {\n                        dataLabel.attr({ y: -9999 });\n                    }\n                }\n            });\n        };\n\n        seriesTypes.pie.prototype.alignDataLabel =  noop;\n\n        /**\n         * Verify whether the data labels are allowed to draw, or we should run more translation and data\n         * label positioning to keep them inside the plot area. Returns true when data labels are ready\n         * to draw.\n         */\n        seriesTypes.pie.prototype.verifyDataLabelOverflow = function (overflow) {\n\n            var center = this.center,\n                options = this.options,\n                centerOption = options.center,\n                minSize = options.minSize || 80,\n                newSize = minSize,\n                ret;\n\n            // Handle horizontal size and center\n            if (centerOption[0] !== null) { // Fixed center\n                newSize = mathMax(center[2] - mathMax(overflow[1], overflow[3]), minSize);\n\n            } else { // Auto center\n                newSize = mathMax(\n                    center[2] - overflow[1] - overflow[3], // horizontal overflow\n                    minSize\n                );\n                center[0] += (overflow[3] - overflow[1]) / 2; // horizontal center\n            }\n\n            // Handle vertical size and center\n            if (centerOption[1] !== null) { // Fixed center\n                newSize = mathMax(mathMin(newSize, center[2] - mathMax(overflow[0], overflow[2])), minSize);\n\n            } else { // Auto center\n                newSize = mathMax(\n                    mathMin(\n                        newSize,\n                        center[2] - overflow[0] - overflow[2] // vertical overflow\n                    ),\n                    minSize\n                );\n                center[1] += (overflow[0] - overflow[2]) / 2; // vertical center\n            }\n\n            // If the size must be decreased, we need to run translate and drawDataLabels again\n            if (newSize < center[2]) {\n                center[2] = newSize;\n                center[3] = Math.min(relativeLength(options.innerSize || 0, newSize), newSize); // #3632\n                this.translate(center);\n            \n                if (this.drawDataLabels) {\n                    this.drawDataLabels();\n                }\n            // Else, return true to indicate that the pie and its labels is within the plot area\n            } else {\n                ret = true;\n            }\n            return ret;\n        };\n    }\n\n    if (seriesTypes.column) {\n\n        /**\n         * Override the basic data label alignment by adjusting for the position of the column\n         */\n        seriesTypes.column.prototype.alignDataLabel = function (point, dataLabel, options,  alignTo, isNew) {\n            var inverted = this.chart.inverted,\n                series = point.series,\n                dlBox = point.dlBox || point.shapeArgs, // data label box for alignment\n                below = pick(point.below, point.plotY > pick(this.translatedThreshold, series.yAxis.len)), // point.below is used in range series\n                inside = pick(options.inside, !!this.options.stacking), // draw it inside the box?\n                overshoot;\n\n            // Align to the column itself, or the top of it\n            if (dlBox) { // Area range uses this method but not alignTo\n                alignTo = merge(dlBox);\n\n                if (alignTo.y < 0) {\n                    alignTo.height += alignTo.y;\n                    alignTo.y = 0;\n                }\n                overshoot = alignTo.y + alignTo.height - series.yAxis.len;\n                if (overshoot > 0) {\n                    alignTo.height -= overshoot;\n                }\n\n                if (inverted) {\n                    alignTo = {\n                        x: series.yAxis.len - alignTo.y - alignTo.height,\n                        y: series.xAxis.len - alignTo.x - alignTo.width,\n                        width: alignTo.height,\n                        height: alignTo.width\n                    };\n                }\n\n                // Compute the alignment box\n                if (!inside) {\n                    if (inverted) {\n                        alignTo.x += below ? 0 : alignTo.width;\n                        alignTo.width = 0;\n                    } else {\n                        alignTo.y += below ? alignTo.height : 0;\n                        alignTo.height = 0;\n                    }\n                }\n            }\n\n\n            // When alignment is undefined (typically columns and bars), display the individual\n            // point below or above the point depending on the threshold\n            options.align = pick(\n                options.align,\n                !inverted || inside ? 'center' : below ? 'right' : 'left'\n            );\n            options.verticalAlign = pick(\n                options.verticalAlign,\n                inverted || inside ? 'middle' : below ? 'top' : 'bottom'\n            );\n\n            // Call the parent method\n            Series.prototype.alignDataLabel.call(this, point, dataLabel, options, alignTo, isNew);\n        };\n    }\n\n\n\n    /**\n     * Highcharts module to hide overlapping data labels. This module is included in Highcharts.\n     */\n    (function (H) {\n        var Chart = H.Chart,\n            each = H.each,\n            pick = H.pick,\n            addEvent = H.addEvent;\n\n        // Collect potensial overlapping data labels. Stack labels probably don't need to be \n        // considered because they are usually accompanied by data labels that lie inside the columns.\n        Chart.prototype.callbacks.push(function (chart) {\n            function collectAndHide() {\n                var labels = [];\n\n                each(chart.series, function (series) {\n                    var dlOptions = series.options.dataLabels,\n                        collections = series.dataLabelCollections || ['dataLabel']; // Range series have two collections\n                    if ((dlOptions.enabled || series._hasPointLabels) && !dlOptions.allowOverlap && series.visible) { // #3866\n                        each(collections, function (coll) {\n                            each(series.points, function (point) {\n                                if (point[coll]) {\n                                    point[coll].labelrank = pick(point.labelrank, point.shapeArgs && point.shapeArgs.height); // #4118\n                                    labels.push(point[coll]);\n                                }\n                            });\n                        });\n                    }\n                });\n                chart.hideOverlappingLabels(labels);\n            }\n\n            // Do it now ...\n            collectAndHide();\n\n            // ... and after each chart redraw\n            addEvent(chart, 'redraw', collectAndHide);\n\n        });\n\n        /**\n         * Hide overlapping labels. Labels are moved and faded in and out on zoom to provide a smooth \n         * visual imression.\n         */    \n        Chart.prototype.hideOverlappingLabels = function (labels) {\n\n            var len = labels.length,\n                label,\n                i,\n                j,\n                label1,\n                label2,\n                isIntersecting,\n                pos1,\n                pos2,\n                parent1,\n                parent2,\n                padding,\n                intersectRect = function (x1, y1, w1, h1, x2, y2, w2, h2) {\n                    return !(\n                        x2 > x1 + w1 ||\n                        x2 + w2 < x1 ||\n                        y2 > y1 + h1 ||\n                        y2 + h2 < y1\n                    );\n                };\n    \n            // Mark with initial opacity\n            for (i = 0; i < len; i++) {\n                label = labels[i];\n                if (label) {\n                    label.oldOpacity = label.opacity;\n                    label.newOpacity = 1;\n                }\n            }\n\n            // Prevent a situation in a gradually rising slope, that each label\n            // will hide the previous one because the previous one always has\n            // lower rank.\n            labels.sort(function (a, b) {\n                return (b.labelrank || 0) - (a.labelrank || 0);\n            });\n\n            // Detect overlapping labels\n            for (i = 0; i < len; i++) {\n                label1 = labels[i];\n\n                for (j = i + 1; j < len; ++j) {\n                    label2 = labels[j];\n                    if (label1 && label2 && label1.placed && label2.placed && label1.newOpacity !== 0 && label2.newOpacity !== 0) {\n                        pos1 = label1.alignAttr;\n                        pos2 = label2.alignAttr;\n                        parent1 = label1.parentGroup; // Different panes have different positions\n                        parent2 = label2.parentGroup;\n                        padding = 2 * (label1.box ? 0 : label1.padding); // Substract the padding if no background or border (#4333)\n                        isIntersecting = intersectRect(\n                            pos1.x + parent1.translateX,\n                            pos1.y + parent1.translateY,\n                            label1.width - padding,\n                            label1.height - padding,\n                            pos2.x + parent2.translateX,\n                            pos2.y + parent2.translateY,\n                            label2.width - padding,\n                            label2.height - padding\n                        );\n\n                        if (isIntersecting) {\n                            (label1.labelrank < label2.labelrank ? label1 : label2).newOpacity = 0;\n                        }\n                    }\n                }\n            }\n\n            // Hide or show\n            each(labels, function (label) {\n                var complete,\n                    newOpacity;\n\n                if (label) {\n                    newOpacity = label.newOpacity;\n\n                    if (label.oldOpacity !== newOpacity && label.placed) {\n\n                        // Make sure the label is completely hidden to avoid catching clicks (#4362)\n                        if (newOpacity) {\n                            label.show(true);\n                        } else {\n                            complete = function () {\n                                label.hide();\n                            };\n                        }\n\n                        // Animate or set the opacity                \n                        label.alignAttr.opacity = newOpacity;\n                        label[label.isOld ? 'animate' : 'attr'](label.alignAttr, null, complete);\n                    \n                    }\n                    label.isOld = true;\n                }\n            });\n        };\n    }(Highcharts));\n    /**\n     * TrackerMixin for points and graphs\n     */\n\n    var TrackerMixin = Highcharts.TrackerMixin = {\n\n        drawTrackerPoint: function () {\n            var series = this,\n                chart = series.chart,\n                pointer = chart.pointer,\n                cursor = series.options.cursor,\n                css = cursor && { cursor: cursor },\n                onMouseOver = function (e) {\n                    var target = e.target,\n                        point;\n\n                    while (target && !point) {\n                        point = target.point;\n                        target = target.parentNode;\n                    }\n\n                    if (point !== UNDEFINED && point !== chart.hoverPoint) { // undefined on graph in scatterchart\n                        point.onMouseOver(e);\n                    }\n                };\n\n            // Add reference to the point\n            each(series.points, function (point) {\n                if (point.graphic) {\n                    point.graphic.element.point = point;\n                }\n                if (point.dataLabel) {\n                    point.dataLabel.element.point = point;\n                }\n            });\n\n            // Add the event listeners, we need to do this only once\n            if (!series._hasTracking) {\n                each(series.trackerGroups, function (key) {\n                    if (series[key]) { // we don't always have dataLabelsGroup\n                        series[key]\n                            .addClass(PREFIX + 'tracker')\n                            .on('mouseover', onMouseOver)\n                            .on('mouseout', function (e) {\n                                pointer.onTrackerMouseOut(e);\n                            })\n                            .css(css);\n                        if (hasTouch) {\n                            series[key].on('touchstart', onMouseOver);\n                        }\n                    }\n                });\n                series._hasTracking = true;\n            }\n        },\n\n        /**\n         * Draw the tracker object that sits above all data labels and markers to\n         * track mouse events on the graph or points. For the line type charts\n         * the tracker uses the same graphPath, but with a greater stroke width\n         * for better control.\n         */\n        drawTrackerGraph: function () {\n            var series = this,\n                options = series.options,\n                trackByArea = options.trackByArea,\n                trackerPath = [].concat(trackByArea ? series.areaPath : series.graphPath),\n                trackerPathLength = trackerPath.length,\n                chart = series.chart,\n                pointer = chart.pointer,\n                renderer = chart.renderer,\n                snap = chart.options.tooltip.snap,\n                tracker = series.tracker,\n                cursor = options.cursor,\n                css = cursor && { cursor: cursor },\n                i,\n                onMouseOver = function () {\n                    if (chart.hoverSeries !== series) {\n                        series.onMouseOver();\n                    }\n                },\n                /*\n                 * Empirical lowest possible opacities for TRACKER_FILL for an element to stay invisible but clickable\n                 * IE6: 0.002\n                 * IE7: 0.002\n                 * IE8: 0.002\n                 * IE9: 0.00000000001 (unlimited)\n                 * IE10: 0.0001 (exporting only)\n                 * FF: 0.00000000001 (unlimited)\n                 * Chrome: 0.000001\n                 * Safari: 0.000001\n                 * Opera: 0.00000000001 (unlimited)\n                 */\n                TRACKER_FILL = 'rgba(192,192,192,' + (hasSVG ? 0.0001 : 0.002) + ')';\n\n            // Extend end points. A better way would be to use round linecaps,\n            // but those are not clickable in VML.\n            if (trackerPathLength && !trackByArea) {\n                i = trackerPathLength + 1;\n                while (i--) {\n                    if (trackerPath[i] === M) { // extend left side\n                        trackerPath.splice(i + 1, 0, trackerPath[i + 1] - snap, trackerPath[i + 2], L);\n                    }\n                    if ((i && trackerPath[i] === M) || i === trackerPathLength) { // extend right side\n                        trackerPath.splice(i, 0, L, trackerPath[i - 2] + snap, trackerPath[i - 1]);\n                    }\n                }\n            }\n\n            // handle single points\n            /*for (i = 0; i < singlePoints.length; i++) {\n                singlePoint = singlePoints[i];\n                trackerPath.push(M, singlePoint.plotX - snap, singlePoint.plotY,\n                L, singlePoint.plotX + snap, singlePoint.plotY);\n            }*/\n\n            // draw the tracker\n            if (tracker) {\n                tracker.attr({ d: trackerPath });\n            } else { // create\n\n                series.tracker = renderer.path(trackerPath)\n                .attr({\n                    'stroke-linejoin': 'round', // #1225\n                    visibility: series.visible ? VISIBLE : HIDDEN,\n                    stroke: TRACKER_FILL,\n                    fill: trackByArea ? TRACKER_FILL : NONE,\n                    'stroke-width': options.lineWidth + (trackByArea ? 0 : 2 * snap),\n                    zIndex: 2\n                })\n                .add(series.group);\n\n                // The tracker is added to the series group, which is clipped, but is covered\n                // by the marker group. So the marker group also needs to capture events.\n                each([series.tracker, series.markerGroup], function (tracker) {\n                    tracker.addClass(PREFIX + 'tracker')\n                        .on('mouseover', onMouseOver)\n                        .on('mouseout', function (e) {\n                            pointer.onTrackerMouseOut(e);\n                        })\n                        .css(css);\n\n                    if (hasTouch) {\n                        tracker.on('touchstart', onMouseOver);\n                    }\n                });\n            }\n        }\n    };\n    /* End TrackerMixin */\n\n\n    /**\n     * Add tracking event listener to the series group, so the point graphics\n     * themselves act as trackers\n     */\n\n    if (seriesTypes.column) {\n        ColumnSeries.prototype.drawTracker = TrackerMixin.drawTrackerPoint;\n    }\n\n    if (seriesTypes.pie) {\n        seriesTypes.pie.prototype.drawTracker = TrackerMixin.drawTrackerPoint;\n    }\n\n    if (seriesTypes.scatter) {\n        ScatterSeries.prototype.drawTracker = TrackerMixin.drawTrackerPoint;\n    }\n\n    /*\n     * Extend Legend for item events\n     */\n    extend(Legend.prototype, {\n\n        setItemEvents: function (item, legendItem, useHTML, itemStyle, itemHiddenStyle) {\n            var legend = this;\n            // Set the events on the item group, or in case of useHTML, the item itself (#1249)\n            (useHTML ? legendItem : item.legendGroup).on('mouseover', function () {\n                item.setState(HOVER_STATE);\n                legendItem.css(legend.options.itemHoverStyle);\n            })\n            .on('mouseout', function () {\n                legendItem.css(item.visible ? itemStyle : itemHiddenStyle);\n                item.setState();\n            })\n            .on('click', function (event) {\n                var strLegendItemClick = 'legendItemClick',\n                    fnLegendItemClick = function () {\n                        if (item.setVisible) {\n                            item.setVisible();\n                        }\n                    };\n\n                // Pass over the click/touch event. #4.\n                event = {\n                    browserEvent: event\n                };\n\n                // click the name or symbol\n                if (item.firePointEvent) { // point\n                    item.firePointEvent(strLegendItemClick, event, fnLegendItemClick);\n                } else {\n                    fireEvent(item, strLegendItemClick, event, fnLegendItemClick);\n                }\n            });\n        },\n\n        createCheckboxForItem: function (item) {\n            var legend = this;\n\n            item.checkbox = createElement('input', {\n                type: 'checkbox',\n                checked: item.selected,\n                defaultChecked: item.selected // required by IE7\n            }, legend.options.itemCheckboxStyle, legend.chart.container);\n\n            addEvent(item.checkbox, 'click', function (event) {\n                var target = event.target;\n                fireEvent(\n                    item.series || item, \n                    'checkboxClick', \n                    { // #3712\n                        checked: target.checked,\n                        item: item\n                    },\n                    function () {\n                        item.select();\n                    }\n                );\n            });\n        }\n    });\n\n    /*\n     * Add pointer cursor to legend itemstyle in defaultOptions\n     */\n    defaultOptions.legend.itemStyle.cursor = 'pointer';\n\n\n    /*\n     * Extend the Chart object with interaction\n     */\n\n    extend(Chart.prototype, {\n        /**\n         * Display the zoom button\n         */\n        showResetZoom: function () {\n            var chart = this,\n                lang = defaultOptions.lang,\n                btnOptions = chart.options.chart.resetZoomButton,\n                theme = btnOptions.theme,\n                states = theme.states,\n                alignTo = btnOptions.relativeTo === 'chart' ? null : 'plotBox';\n\n            function zoomOut() {\n                chart.zoomOut();\n            }\n\n            this.resetZoomButton = chart.renderer.button(lang.resetZoom, null, null, zoomOut, theme, states && states.hover)\n                .attr({\n                    align: btnOptions.position.align,\n                    title: lang.resetZoomTitle\n                })\n                .add()\n                .align(btnOptions.position, false, alignTo);\n\n        },\n\n        /**\n         * Zoom out to 1:1\n         */\n        zoomOut: function () {\n            var chart = this;\n            fireEvent(chart, 'selection', { resetSelection: true }, function () {\n                chart.zoom();\n            });\n        },\n\n        /**\n         * Zoom into a given portion of the chart given by axis coordinates\n         * @param {Object} event\n         */\n        zoom: function (event) {\n            var chart = this,\n                hasZoomed,\n                pointer = chart.pointer,\n                displayButton = false,\n                resetZoomButton;\n\n            // If zoom is called with no arguments, reset the axes\n            if (!event || event.resetSelection) {\n                each(chart.axes, function (axis) {\n                    hasZoomed = axis.zoom();\n                });\n            } else { // else, zoom in on all axes\n                each(event.xAxis.concat(event.yAxis), function (axisData) {\n                    var axis = axisData.axis,\n                        isXAxis = axis.isXAxis;\n\n                    // don't zoom more than minRange\n                    if (pointer[isXAxis ? 'zoomX' : 'zoomY'] || pointer[isXAxis ? 'pinchX' : 'pinchY']) {\n                        hasZoomed = axis.zoom(axisData.min, axisData.max);\n                        if (axis.displayBtn) {\n                            displayButton = true;\n                        }\n                    }\n                });\n            }\n\n            // Show or hide the Reset zoom button\n            resetZoomButton = chart.resetZoomButton;\n            if (displayButton && !resetZoomButton) {\n                chart.showResetZoom();\n            } else if (!displayButton && isObject(resetZoomButton)) {\n                chart.resetZoomButton = resetZoomButton.destroy();\n            }\n\n\n            // Redraw\n            if (hasZoomed) {\n                chart.redraw(\n                    pick(chart.options.chart.animation, event && event.animation, chart.pointCount < 100) // animation\n                );\n            }\n        },\n\n        /**\n         * Pan the chart by dragging the mouse across the pane. This function is called\n         * on mouse move, and the distance to pan is computed from chartX compared to\n         * the first chartX position in the dragging operation.\n         */\n        pan: function (e, panning) {\n\n            var chart = this,\n                hoverPoints = chart.hoverPoints,\n                doRedraw;\n\n            // remove active points for shared tooltip\n            if (hoverPoints) {\n                each(hoverPoints, function (point) {\n                    point.setState();\n                });\n            }\n\n            each(panning === 'xy' ? [1, 0] : [1], function (isX) { // xy is used in maps\n                var axis = chart[isX ? 'xAxis' : 'yAxis'][0],\n                    horiz = axis.horiz,\n                    mousePos = e[horiz ? 'chartX' : 'chartY'],\n                    mouseDown = horiz ? 'mouseDownX' : 'mouseDownY',\n                    startPos = chart[mouseDown],\n                    halfPointRange = (axis.pointRange || 0) / 2,\n                    extremes = axis.getExtremes(),\n                    newMin = axis.toValue(startPos - mousePos, true) + halfPointRange,\n                    newMax = axis.toValue(startPos + axis.len - mousePos, true) - halfPointRange,\n                    goingLeft = startPos > mousePos; // #3613\n            \n                if (axis.series.length &&\n                        (goingLeft || newMin > mathMin(extremes.dataMin, extremes.min)) &&    \n                        (!goingLeft || newMax < mathMax(extremes.dataMax, extremes.max))) {\n                    axis.setExtremes(newMin, newMax, false, false, { trigger: 'pan' });\n                    doRedraw = true;\n                }\n\n                chart[mouseDown] = mousePos; // set new reference for next run\n            });\n\n            if (doRedraw) {\n                chart.redraw(false);\n            }\n            css(chart.container, { cursor: 'move' });\n        }\n    });\n\n    /*\n     * Extend the Point object with interaction\n     */\n    extend(Point.prototype, {\n        /**\n         * Toggle the selection status of a point\n         * @param {Boolean} selected Whether to select or unselect the point.\n         * @param {Boolean} accumulate Whether to add to the previous selection. By default,\n         *         this happens if the control key (Cmd on Mac) was pressed during clicking.\n         */\n        select: function (selected, accumulate) {\n            var point = this,\n                series = point.series,\n                chart = series.chart;\n\n            selected = pick(selected, !point.selected);\n\n            // fire the event with the default handler\n            point.firePointEvent(selected ? 'select' : 'unselect', { accumulate: accumulate }, function () {\n                point.selected = point.options.selected = selected;\n                series.options.data[inArray(point, series.data)] = point.options;\n\n                point.setState(selected && SELECT_STATE);\n\n                // unselect all other points unless Ctrl or Cmd + click\n                if (!accumulate) {\n                    each(chart.getSelectedPoints(), function (loopPoint) {\n                        if (loopPoint.selected && loopPoint !== point) {\n                            loopPoint.selected = loopPoint.options.selected = false;\n                            series.options.data[inArray(loopPoint, series.data)] = loopPoint.options;\n                            loopPoint.setState(NORMAL_STATE);\n                            loopPoint.firePointEvent('unselect');\n                        }\n                    });\n                }\n            });\n        },\n\n        /**\n         * Runs on mouse over the point\n         *\n         * @param {Object} e The event arguments\n         * @param {Boolean} byProximity Falsy for kd points that are closest to the mouse, or to\n         *        actually hovered points. True for other points in shared tooltip.\n         */\n        onMouseOver: function (e, byProximity) {\n            var point = this,\n                series = point.series,\n                chart = series.chart,\n                tooltip = chart.tooltip,\n                hoverPoint = chart.hoverPoint;\n\n            if (chart.hoverSeries !== series) {\n                series.onMouseOver();\n            }\n\n            // set normal state to previous series\n            if (hoverPoint && hoverPoint !== point) {\n                hoverPoint.onMouseOut();\n            }\n\n            if (point.series) { // It may have been destroyed, #4130\n\n                // trigger the event\n                point.firePointEvent('mouseOver');\n\n                // update the tooltip\n                if (tooltip && (!tooltip.shared || series.noSharedTooltip)) {\n                    tooltip.refresh(point, e);\n                }\n\n                // hover this\n                point.setState(HOVER_STATE);\n                if (!byProximity) {\n                    chart.hoverPoint = point;\n                }\n            }\n        },\n\n        /**\n         * Runs on mouse out from the point\n         */\n        onMouseOut: function () {\n            var chart = this.series.chart,\n                hoverPoints = chart.hoverPoints;\n\n            this.firePointEvent('mouseOut');\n\n            if (!hoverPoints || inArray(this, hoverPoints) === -1) { // #887, #2240\n                this.setState();\n                chart.hoverPoint = null;\n            }\n        },\n\n        /**\n         * Import events from the series' and point's options. Only do it on\n         * demand, to save processing time on hovering.\n         */\n        importEvents: function () {\n            if (!this.hasImportedEvents) {\n                var point = this,\n                    options = merge(point.series.options.point, point.options),\n                    events = options.events,\n                    eventType;\n\n                point.events = events;\n\n                for (eventType in events) {\n                    addEvent(point, eventType, events[eventType]);\n                }\n                this.hasImportedEvents = true;\n\n            }\n        },\n\n        /**\n         * Set the point's state\n         * @param {String} state\n         */\n        setState: function (state, move) {\n            var point = this,\n                plotX = mathFloor(point.plotX), // #4586\n                plotY = point.plotY,\n                series = point.series,\n                stateOptions = series.options.states,\n                markerOptions = defaultPlotOptions[series.type].marker && series.options.marker,\n                normalDisabled = markerOptions && !markerOptions.enabled,\n                markerStateOptions = markerOptions && markerOptions.states[state],\n                stateDisabled = markerStateOptions && markerStateOptions.enabled === false,\n                stateMarkerGraphic = series.stateMarkerGraphic,\n                pointMarker = point.marker || {},\n                chart = series.chart,\n                radius,\n                halo = series.halo,\n                haloOptions,\n                newSymbol,\n                pointAttr;\n\n            state = state || NORMAL_STATE; // empty string\n            pointAttr = point.pointAttr[state] || series.pointAttr[state];\n\n            if (\n                    // already has this state\n                    (state === point.state && !move) ||\n                    // selected points don't respond to hover\n                    (point.selected && state !== SELECT_STATE) ||\n                    // series' state options is disabled\n                    (stateOptions[state] && stateOptions[state].enabled === false) ||\n                    // general point marker's state options is disabled\n                    (state && (stateDisabled || (normalDisabled && markerStateOptions.enabled === false))) ||\n                    // individual point marker's state options is disabled\n                    (state && pointMarker.states && pointMarker.states[state] && pointMarker.states[state].enabled === false) // #1610\n\n                ) {\n                return;\n            }\n\n            // apply hover styles to the existing point\n            if (point.graphic) {\n                radius = markerOptions && point.graphic.symbolName && pointAttr.r;\n                point.graphic.attr(merge(\n                    pointAttr,\n                    radius ? { // new symbol attributes (#507, #612)\n                        x: plotX - radius,\n                        y: plotY - radius,\n                        width: 2 * radius,\n                        height: 2 * radius\n                    } : {}\n                ));\n\n                // Zooming in from a range with no markers to a range with markers\n                if (stateMarkerGraphic) {\n                    stateMarkerGraphic.hide();\n                }\n            } else {\n                // if a graphic is not applied to each point in the normal state, create a shared\n                // graphic for the hover state\n                if (state && markerStateOptions) {\n                    radius = markerStateOptions.radius;\n                    newSymbol = pointMarker.symbol || series.symbol;\n\n                    // If the point has another symbol than the previous one, throw away the\n                    // state marker graphic and force a new one (#1459)\n                    if (stateMarkerGraphic && stateMarkerGraphic.currentSymbol !== newSymbol) {\n                        stateMarkerGraphic = stateMarkerGraphic.destroy();\n                    }\n\n                    // Add a new state marker graphic\n                    if (!stateMarkerGraphic) {\n                        if (newSymbol) {\n                            series.stateMarkerGraphic = stateMarkerGraphic = chart.renderer.symbol(\n                                newSymbol,\n                                plotX - radius,\n                                plotY - radius,\n                                2 * radius,\n                                2 * radius\n                            )\n                            .attr(pointAttr)\n                            .add(series.markerGroup);\n                            stateMarkerGraphic.currentSymbol = newSymbol;\n                        }\n\n                    // Move the existing graphic\n                    } else {\n                        stateMarkerGraphic[move ? 'animate' : 'attr']({ // #1054\n                            x: plotX - radius,\n                            y: plotY - radius\n                        });\n                    }\n                }\n\n                if (stateMarkerGraphic) {\n                    stateMarkerGraphic[state && chart.isInsidePlot(plotX, plotY, chart.inverted) ? 'show' : 'hide'](); // #2450\n                    stateMarkerGraphic.element.point = point; // #4310\n                }\n            }\n\n            // Show me your halo\n            haloOptions = stateOptions[state] && stateOptions[state].halo;\n            if (haloOptions && haloOptions.size) {\n                if (!halo) {\n                    series.halo = halo = chart.renderer.path()\n                        .add(chart.seriesGroup);\n                }\n                halo.attr(extend({\n                    'fill': point.color || series.color,\n                    'fill-opacity': haloOptions.opacity,\n                    'zIndex': -1 // #4929, IE8 added halo above everything\n                },\n                haloOptions.attributes))[move ? 'animate' : 'attr']({\n                    d: point.haloPath(haloOptions.size)\n                });\n            } else if (halo) {\n                halo.attr({ d: [] });\n            }\n\n            point.state = state;\n        },\n\n        /**\n         * Get the circular path definition for the halo\n         * @param  {Number} size The radius of the circular halo\n         * @returns {Array} The path definition\n         */\n        haloPath: function (size) {\n            var series = this.series,\n                chart = series.chart,\n                plotBox = series.getPlotBox(),\n                inverted = chart.inverted,\n                plotX = Math.floor(this.plotX);\n\n            return chart.renderer.symbols.circle(\n                plotBox.translateX + (inverted ? series.yAxis.len - this.plotY : plotX) - size, \n                plotBox.translateY + (inverted ? series.xAxis.len - plotX : this.plotY) - size, \n                size * 2, \n                size * 2\n            );\n        }\n    });\n\n    /*\n     * Extend the Series object with interaction\n     */\n\n    extend(Series.prototype, {\n        /**\n         * Series mouse over handler\n         */\n        onMouseOver: function () {\n            var series = this,\n                chart = series.chart,\n                hoverSeries = chart.hoverSeries;\n\n            // set normal state to previous series\n            if (hoverSeries && hoverSeries !== series) {\n                hoverSeries.onMouseOut();\n            }\n\n            // trigger the event, but to save processing time,\n            // only if defined\n            if (series.options.events.mouseOver) {\n                fireEvent(series, 'mouseOver');\n            }\n\n            // hover this\n            series.setState(HOVER_STATE);\n            chart.hoverSeries = series;\n        },\n\n        /**\n         * Series mouse out handler\n         */\n        onMouseOut: function () {\n            // trigger the event only if listeners exist\n            var series = this,\n                options = series.options,\n                chart = series.chart,\n                tooltip = chart.tooltip,\n                hoverPoint = chart.hoverPoint;\n\n            chart.hoverSeries = null; // #182, set to null before the mouseOut event fires\n\n            // trigger mouse out on the point, which must be in this series\n            if (hoverPoint) {\n                hoverPoint.onMouseOut();\n            }\n\n            // fire the mouse out event\n            if (series && options.events.mouseOut) {\n                fireEvent(series, 'mouseOut');\n            }\n\n\n            // hide the tooltip\n            if (tooltip && !options.stickyTracking && (!tooltip.shared || series.noSharedTooltip)) {\n                tooltip.hide();\n            }\n\n            // set normal state\n            series.setState();\n        },\n\n        /**\n         * Set the state of the graph\n         */\n        setState: function (state) {\n            var series = this,\n                options = series.options,\n                graph = series.graph,\n                stateOptions = options.states,\n                lineWidth = options.lineWidth,\n                attribs,\n                i = 0;\n\n            state = state || NORMAL_STATE;\n\n            if (series.state !== state) {\n                series.state = state;\n\n                if (stateOptions[state] && stateOptions[state].enabled === false) {\n                    return;\n                }\n\n                if (state) {\n                    lineWidth = stateOptions[state].lineWidth || lineWidth + (stateOptions[state].lineWidthPlus || 0); // #4035\n                }\n\n                if (graph && !graph.dashstyle) { // hover is turned off for dashed lines in VML\n                    attribs = {\n                        'stroke-width': lineWidth\n                    };\n                    // use attr because animate will cause any other animation on the graph to stop\n                    graph.attr(attribs);\n                    while (series['zoneGraph' + i]) {\n                        series['zoneGraph' + i].attr(attribs);\n                        i = i + 1;\n                    }\n                }\n            }\n        },\n\n        /**\n         * Set the visibility of the graph\n         *\n         * @param vis {Boolean} True to show the series, false to hide. If UNDEFINED,\n         *                the visibility is toggled.\n         */\n        setVisible: function (vis, redraw) {\n            var series = this,\n                chart = series.chart,\n                legendItem = series.legendItem,\n                showOrHide,\n                ignoreHiddenSeries = chart.options.chart.ignoreHiddenSeries,\n                oldVisibility = series.visible;\n\n            // if called without an argument, toggle visibility\n            series.visible = vis = series.options.visible = series.userOptions.visible = vis === undefined ? !oldVisibility : vis; // #5618\n            showOrHide = vis ? 'show' : 'hide';\n\n            // show or hide elements\n            each(['group', 'dataLabelsGroup', 'markerGroup', 'tracker'], function (key) {\n                if (series[key]) {\n                    series[key][showOrHide]();\n                }\n            });\n\n\n            // hide tooltip (#1361)\n            if (chart.hoverSeries === series || (chart.hoverPoint && chart.hoverPoint.series) === series) {\n                series.onMouseOut();\n            }\n\n\n            if (legendItem) {\n                chart.legend.colorizeItem(series, vis);\n            }\n\n\n            // rescale or adapt to resized chart\n            series.isDirty = true;\n            // in a stack, all other series are affected\n            if (series.options.stacking) {\n                each(chart.series, function (otherSeries) {\n                    if (otherSeries.options.stacking && otherSeries.visible) {\n                        otherSeries.isDirty = true;\n                    }\n                });\n            }\n\n            // show or hide linked series\n            each(series.linkedSeries, function (otherSeries) {\n                otherSeries.setVisible(vis, false);\n            });\n\n            if (ignoreHiddenSeries) {\n                chart.isDirtyBox = true;\n            }\n            if (redraw !== false) {\n                chart.redraw();\n            }\n\n            fireEvent(series, showOrHide);\n        },\n\n        /**\n         * Show the graph\n         */\n        show: function () {\n            this.setVisible(true);\n        },\n\n        /**\n         * Hide the graph\n         */\n        hide: function () {\n            this.setVisible(false);\n        },\n\n\n        /**\n         * Set the selected state of the graph\n         *\n         * @param selected {Boolean} True to select the series, false to unselect. If\n         *                UNDEFINED, the selection state is toggled.\n         */\n        select: function (selected) {\n            var series = this;\n            // if called without an argument, toggle\n            series.selected = selected = (selected === UNDEFINED) ? !series.selected : selected;\n\n            if (series.checkbox) {\n                series.checkbox.checked = selected;\n            }\n\n            fireEvent(series, selected ? 'select' : 'unselect');\n        },\n\n        drawTracker: TrackerMixin.drawTrackerGraph\n    });\n\n    // global variables\n    extend(Highcharts, {\n\n        // Constructors\n        Color: Color,\n        Point: Point,\n        Tick: Tick,\n        Renderer: Renderer,\n        SVGElement: SVGElement,\n        SVGRenderer: SVGRenderer,\n\n        // Various\n        arrayMin: arrayMin,\n        arrayMax: arrayMax,\n        charts: charts,\n        correctFloat: correctFloat,\n        dateFormat: dateFormat,\n        error: error,\n        format: format,\n        pathAnim: pathAnim,\n        getOptions: getOptions,\n        hasBidiBug: hasBidiBug,\n        isTouchDevice: isTouchDevice,\n        setOptions: setOptions,\n        addEvent: addEvent,\n        removeEvent: removeEvent,\n        createElement: createElement,\n        discardElement: discardElement,\n        css: css,\n        each: each,\n        map: map,\n        merge: merge,\n        splat: splat,\n        stableSort: stableSort,\n        extendClass: extendClass,\n        pInt: pInt,\n        svg: hasSVG,\n        canvas: useCanVG,\n        vml: !hasSVG && !useCanVG,\n        product: PRODUCT,\n        version: VERSION\n    });\n    \n    return Highcharts;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/highcharts/highcharts.js\n// module id = 3582\n// module chunks = 2 7","/*\n Highcharts JS v4.2.3 (2016-02-08)\n\n (c) 2009-2016 Torstein Honsi\n\n License: www.highcharts.com/license\n*/\n(function(m){typeof module===\"object\"&&module.exports?module.exports=m:m(Highcharts)})(function(m){function J(a,b,c){this.init(a,b,c)}var O=m.arrayMin,P=m.arrayMax,s=m.each,F=m.extend,t=m.merge,Q=m.map,q=m.pick,A=m.pInt,o=m.getOptions().plotOptions,k=m.seriesTypes,u=m.extendClass,K=m.splat,v=m.wrap,L=m.Axis,y=m.Tick,G=m.Point,R=m.Pointer,S=m.CenteredSeriesMixin,B=m.TrackerMixin,w=m.Series,x=Math,E=x.round,C=x.floor,M=x.max,T=m.Color,r=function(){};F(J.prototype,{init:function(a,b,c){var d=this,g=\nd.defaultOptions;d.chart=b;d.options=a=t(g,b.angular?{background:{}}:void 0,a);(a=a.background)&&s([].concat(K(a)).reverse(),function(a){var g=a.backgroundColor,b=c.userOptions,a=t(d.defaultBackgroundOptions,a);if(g)a.backgroundColor=g;a.color=a.backgroundColor;c.options.plotBands.unshift(a);b.plotBands=b.plotBands||[];b.plotBands!==c.options.plotBands&&b.plotBands.unshift(a)})},defaultOptions:{center:[\"50%\",\"50%\"],size:\"85%\",startAngle:0},defaultBackgroundOptions:{shape:\"circle\",borderWidth:1,borderColor:\"silver\",\nbackgroundColor:{linearGradient:{x1:0,y1:0,x2:0,y2:1},stops:[[0,\"#FFF\"],[1,\"#DDD\"]]},from:-Number.MAX_VALUE,innerRadius:0,to:Number.MAX_VALUE,outerRadius:\"105%\"}});var z=L.prototype,y=y.prototype,U={getOffset:r,redraw:function(){this.isDirty=!1},render:function(){this.isDirty=!1},setScale:r,setCategories:r,setTitle:r},N={isRadial:!0,defaultRadialGaugeOptions:{labels:{align:\"center\",x:0,y:null},minorGridLineWidth:0,minorTickInterval:\"auto\",minorTickLength:10,minorTickPosition:\"inside\",minorTickWidth:1,\ntickLength:10,tickPosition:\"inside\",tickWidth:2,title:{rotation:0},zIndex:2},defaultRadialXOptions:{gridLineWidth:1,labels:{align:null,distance:15,x:0,y:null},maxPadding:0,minPadding:0,showLastLabel:!1,tickLength:0},defaultRadialYOptions:{gridLineInterpolation:\"circle\",labels:{align:\"right\",x:-3,y:-2},showLastLabel:!1,title:{x:4,text:null,rotation:90}},setOptions:function(a){a=this.options=t(this.defaultOptions,this.defaultRadialOptions,a);if(!a.plotBands)a.plotBands=[]},getOffset:function(){z.getOffset.call(this);\nthis.chart.axisOffset[this.side]=0;this.center=this.pane.center=S.getCenter.call(this.pane)},getLinePath:function(a,b){var c=this.center,b=q(b,c[2]/2-this.offset);return this.chart.renderer.symbols.arc(this.left+c[0],this.top+c[1],b,b,{start:this.startAngleRad,end:this.endAngleRad,open:!0,innerR:0})},setAxisTranslation:function(){z.setAxisTranslation.call(this);if(this.center)this.transA=this.isCircular?(this.endAngleRad-this.startAngleRad)/(this.max-this.min||1):this.center[2]/2/(this.max-this.min||\n1),this.minPixelPadding=this.isXAxis?this.transA*this.minPointOffset:0},beforeSetTickPositions:function(){this.autoConnect&&(this.max+=this.categories&&1||this.pointRange||this.closestPointRange||0)},setAxisSize:function(){z.setAxisSize.call(this);if(this.isRadial){this.center=this.pane.center=m.CenteredSeriesMixin.getCenter.call(this.pane);if(this.isCircular)this.sector=this.endAngleRad-this.startAngleRad;this.len=this.width=this.height=this.center[2]*q(this.sector,1)/2}},getPosition:function(a,\nb){return this.postTranslate(this.isCircular?this.translate(a):0,q(this.isCircular?b:this.translate(a),this.center[2]/2)-this.offset)},postTranslate:function(a,b){var c=this.chart,d=this.center,a=this.startAngleRad+a;return{x:c.plotLeft+d[0]+Math.cos(a)*b,y:c.plotTop+d[1]+Math.sin(a)*b}},getPlotBandPath:function(a,b,c){var d=this.center,g=this.startAngleRad,e=d[2]/2,j=[q(c.outerRadius,\"100%\"),c.innerRadius,q(c.thickness,10)],l=/%$/,i,f=this.isCircular;this.options.gridLineInterpolation===\"polygon\"?\nd=this.getPlotLinePath(a).concat(this.getPlotLinePath(b,!0)):(a=Math.max(a,this.min),b=Math.min(b,this.max),f||(j[0]=this.translate(a),j[1]=this.translate(b)),j=Q(j,function(a){l.test(a)&&(a=A(a,10)*e/100);return a}),c.shape===\"circle\"||!f?(a=-Math.PI/2,b=Math.PI*1.5,i=!0):(a=g+this.translate(a),b=g+this.translate(b)),d=this.chart.renderer.symbols.arc(this.left+d[0],this.top+d[1],j[0],j[0],{start:Math.min(a,b),end:Math.max(a,b),innerR:q(j[1],j[0]-j[2]),open:i}));return d},getPlotLinePath:function(a,\nb){var c=this,d=c.center,g=c.chart,e=c.getPosition(a),j,l,i;c.isCircular?i=[\"M\",d[0]+g.plotLeft,d[1]+g.plotTop,\"L\",e.x,e.y]:c.options.gridLineInterpolation===\"circle\"?(a=c.translate(a))&&(i=c.getLinePath(0,a)):(s(g.xAxis,function(a){a.pane===c.pane&&(j=a)}),i=[],a=c.translate(a),d=j.tickPositions,j.autoConnect&&(d=d.concat([d[0]])),b&&(d=[].concat(d).reverse()),s(d,function(e,b){l=j.getPosition(e,a);i.push(b?\"L\":\"M\",l.x,l.y)}));return i},getTitlePosition:function(){var a=this.center,b=this.chart,\nc=this.options.title;return{x:b.plotLeft+a[0]+(c.x||0),y:b.plotTop+a[1]-{high:0.5,middle:0.25,low:0}[c.align]*a[2]+(c.y||0)}}};v(z,\"init\",function(a,b,c){var h;var d=b.angular,g=b.polar,e=c.isX,j=d&&e,l,i;i=b.options;var f=c.pane||0;if(d){if(F(this,j?U:N),l=!e)this.defaultRadialOptions=this.defaultRadialGaugeOptions}else if(g)F(this,N),this.defaultRadialOptions=(l=e)?this.defaultRadialXOptions:t(this.defaultYAxisOptions,this.defaultRadialYOptions);a.call(this,b,c);if(!j&&(d||g)){a=this.options;if(!b.panes)b.panes=\n[];this.pane=(h=b.panes[f]=b.panes[f]||new J(K(i.pane)[f],b,this),f=h);f=f.options;b.inverted=!1;i.chart.zoomType=null;this.startAngleRad=b=(f.startAngle-90)*Math.PI/180;this.endAngleRad=i=(q(f.endAngle,f.startAngle+360)-90)*Math.PI/180;this.offset=a.offset||0;if((this.isCircular=l)&&c.max===void 0&&i-b===2*Math.PI)this.autoConnect=!0}});v(z,\"autoLabelAlign\",function(a){if(!this.isRadial)return a.apply(this,[].slice.call(arguments,1))});v(y,\"getPosition\",function(a,b,c,d,g){var e=this.axis;return e.getPosition?\ne.getPosition(c):a.call(this,b,c,d,g)});v(y,\"getLabelPosition\",function(a,b,c,d,g,e,j,l,i){var f=this.axis,h=e.y,n=20,k=e.align,m=(f.translate(this.pos)+f.startAngleRad+Math.PI/2)/Math.PI*180%360;f.isRadial?(a=f.getPosition(this.pos,f.center[2]/2+q(e.distance,-25)),e.rotation===\"auto\"?d.attr({rotation:m}):h===null&&(h=f.chart.renderer.fontMetrics(d.styles.fontSize).b-d.getBBox().height/2),k===null&&(f.isCircular?(this.label.getBBox().width>f.len*f.tickInterval/(f.max-f.min)&&(n=0),k=m>n&&m<180-n?\n\"left\":m>180+n&&m<360-n?\"right\":\"center\"):k=\"center\",d.attr({align:k})),a.x+=e.x,a.y+=h):a=a.call(this,b,c,d,g,e,j,l,i);return a});v(y,\"getMarkPath\",function(a,b,c,d,g,e,j){var l=this.axis;l.isRadial?(a=l.getPosition(this.pos,l.center[2]/2+d),b=[\"M\",b,c,\"L\",a.x,a.y]):b=a.call(this,b,c,d,g,e,j);return b});o.arearange=t(o.area,{lineWidth:1,marker:null,threshold:null,tooltip:{pointFormat:'<span style=\"color:{series.color}\">\\u25cf</span> {series.name}: <b>{point.low}</b> - <b>{point.high}</b><br/>'},\ntrackByArea:!0,dataLabels:{align:null,verticalAlign:null,xLow:0,xHigh:0,yLow:0,yHigh:0},states:{hover:{halo:!1}}});k.arearange=u(k.area,{type:\"arearange\",pointArrayMap:[\"low\",\"high\"],dataLabelCollections:[\"dataLabel\",\"dataLabelUpper\"],toYData:function(a){return[a.low,a.high]},pointValKey:\"low\",deferTranslatePolar:!0,highToXY:function(a){var b=this.chart,c=this.xAxis.postTranslate(a.rectPlotX,this.yAxis.len-a.plotHigh);a.plotHighX=c.x-b.plotLeft;a.plotHigh=c.y-b.plotTop},translate:function(){var a=\nthis,b=a.yAxis;k.area.prototype.translate.apply(a);s(a.points,function(a){var d=a.low,g=a.high,e=a.plotY;g===null||d===null?a.isNull=!0:(a.plotLow=e,a.plotHigh=b.translate(g,0,1,0,1))});this.chart.polar&&s(this.points,function(b){a.highToXY(b)})},getGraphPath:function(){var a=this.points,b=[],c=[],d=a.length,g=w.prototype.getGraphPath,e,j,l;l=this.options;for(var i=l.step,d=a.length;d--;)e=a[d],!e.isNull&&(!a[d+1]||a[d+1].isNull)&&c.push({plotX:e.plotX,plotY:e.plotLow}),j={plotX:e.plotX,plotY:e.plotHigh,\nisNull:e.isNull},c.push(j),b.push(j),!e.isNull&&(!a[d-1]||a[d-1].isNull)&&c.push({plotX:e.plotX,plotY:e.plotLow});a=g.call(this,a);if(i)i===!0&&(i=\"left\"),l.step={left:\"right\",center:\"center\",right:\"left\"}[i];b=g.call(this,b);c=g.call(this,c);l.step=i;l=[].concat(a,b);!this.chart.polar&&c[0]===\"M\"&&(c[0]=\"L\");this.areaPath=this.areaPath.concat(a,c);return l},drawDataLabels:function(){var a=this.data,b=a.length,c,d=[],g=w.prototype,e=this.options.dataLabels,j=e.align,l=e.verticalAlign,i=e.inside,f,\nh,n=this.chart.inverted;if(e.enabled||this._hasPointLabels){for(c=b;c--;)if(f=a[c]){h=i?f.plotHigh<f.plotLow:f.plotHigh>f.plotLow;f.y=f.high;f._plotY=f.plotY;f.plotY=f.plotHigh;d[c]=f.dataLabel;f.dataLabel=f.dataLabelUpper;f.below=h;if(n){if(!j)e.align=h?\"right\":\"left\"}else if(!l)e.verticalAlign=h?\"top\":\"bottom\";e.x=e.xHigh;e.y=e.yHigh}g.drawDataLabels&&g.drawDataLabels.apply(this,arguments);for(c=b;c--;)if(f=a[c]){h=i?f.plotHigh<f.plotLow:f.plotHigh>f.plotLow;f.dataLabelUpper=f.dataLabel;f.dataLabel=\nd[c];f.y=f.low;f.plotY=f._plotY;f.below=!h;if(n){if(!j)e.align=h?\"left\":\"right\"}else if(!l)e.verticalAlign=h?\"bottom\":\"top\";e.x=e.xLow;e.y=e.yLow}g.drawDataLabels&&g.drawDataLabels.apply(this,arguments)}e.align=j;e.verticalAlign=l},alignDataLabel:function(){k.column.prototype.alignDataLabel.apply(this,arguments)},setStackedPoints:r,getSymbol:r,drawPoints:r});o.areasplinerange=t(o.arearange);k.areasplinerange=u(k.arearange,{type:\"areasplinerange\",getPointSpline:k.spline.prototype.getPointSpline});\n(function(){var a=k.column.prototype;o.columnrange=t(o.column,o.arearange,{lineWidth:1,pointRange:null});k.columnrange=u(k.arearange,{type:\"columnrange\",translate:function(){var b=this,c=b.yAxis,d=b.xAxis,g=b.chart,e;a.translate.apply(b);s(b.points,function(a){var l=a.shapeArgs,i=b.options.minPointLength,f,h;a.plotHigh=e=c.translate(a.high,0,1,0,1);a.plotLow=a.plotY;h=e;f=a.plotY-e;Math.abs(f)<i?(i-=f,f+=i,h-=i/2):f<0&&(f*=-1,h-=f);l.height=f;l.y=h;a.tooltipPos=g.inverted?[c.len+c.pos-g.plotLeft-\nh-f/2,d.len+d.pos-g.plotTop-l.x-l.width/2,f]:[d.left-g.plotLeft+l.x+l.width/2,c.pos-g.plotTop+h+f/2,f]})},directTouch:!0,trackerGroups:[\"group\",\"dataLabelsGroup\"],drawGraph:r,crispCol:a.crispCol,pointAttrToOptions:a.pointAttrToOptions,drawPoints:a.drawPoints,drawTracker:a.drawTracker,animate:a.animate,getColumnMetrics:a.getColumnMetrics})})();o.gauge=t(o.line,{dataLabels:{enabled:!0,defer:!1,y:15,borderWidth:1,borderColor:\"silver\",borderRadius:3,crop:!1,verticalAlign:\"top\",zIndex:2},dial:{},pivot:{},\ntooltip:{headerFormat:\"\"},showInLegend:!1});B={type:\"gauge\",pointClass:u(G,{setState:function(a){this.state=a}}),angular:!0,drawGraph:r,fixedBox:!0,forceDL:!0,trackerGroups:[\"group\",\"dataLabelsGroup\"],translate:function(){var a=this.yAxis,b=this.options,c=a.center;this.generatePoints();s(this.points,function(d){var g=t(b.dial,d.dial),e=A(q(g.radius,80))*c[2]/200,j=A(q(g.baseLength,70))*e/100,l=A(q(g.rearLength,10))*e/100,i=g.baseWidth||3,f=g.topWidth||1,h=b.overshoot,n=a.startAngleRad+a.translate(d.y,\nnull,null,null,!0);h&&typeof h===\"number\"?(h=h/180*Math.PI,n=Math.max(a.startAngleRad-h,Math.min(a.endAngleRad+h,n))):b.wrap===!1&&(n=Math.max(a.startAngleRad,Math.min(a.endAngleRad,n)));n=n*180/Math.PI;d.shapeType=\"path\";d.shapeArgs={d:g.path||[\"M\",-l,-i/2,\"L\",j,-i/2,e,-f/2,e,f/2,j,i/2,-l,i/2,\"z\"],translateX:c[0],translateY:c[1],rotation:n};d.plotX=c[0];d.plotY=c[1]})},drawPoints:function(){var a=this,b=a.yAxis.center,c=a.pivot,d=a.options,g=d.pivot,e=a.chart.renderer;s(a.points,function(b){var g=\nb.graphic,c=b.shapeArgs,f=c.d,h=t(d.dial,b.dial);g?(g.animate(c),c.d=f):b.graphic=e[b.shapeType](c).attr({stroke:h.borderColor||\"none\",\"stroke-width\":h.borderWidth||0,fill:h.backgroundColor||\"black\",rotation:c.rotation,zIndex:1}).add(a.group)});c?c.animate({translateX:b[0],translateY:b[1]}):a.pivot=e.circle(0,0,q(g.radius,5)).attr({\"stroke-width\":g.borderWidth||0,stroke:g.borderColor||\"silver\",fill:g.backgroundColor||\"black\",zIndex:2}).translate(b[0],b[1]).add(a.group)},animate:function(a){var b=\nthis;if(!a)s(b.points,function(a){var d=a.graphic;d&&(d.attr({rotation:b.yAxis.startAngleRad*180/Math.PI}),d.animate({rotation:a.shapeArgs.rotation},b.options.animation))}),b.animate=null},render:function(){this.group=this.plotGroup(\"group\",\"series\",this.visible?\"visible\":\"hidden\",this.options.zIndex,this.chart.seriesGroup);w.prototype.render.call(this);this.group.clip(this.chart.clipRect)},setData:function(a,b){w.prototype.setData.call(this,a,!1);this.processData();this.generatePoints();q(b,!0)&&\nthis.chart.redraw()},drawTracker:B&&B.drawTrackerPoint};k.gauge=u(k.line,B);o.boxplot=t(o.column,{fillColor:\"#FFFFFF\",lineWidth:1,medianWidth:2,states:{hover:{brightness:-0.3}},threshold:null,tooltip:{pointFormat:'<span style=\"color:{point.color}\">\\u25cf</span> <b> {series.name}</b><br/>Maximum: {point.high}<br/>Upper quartile: {point.q3}<br/>Median: {point.median}<br/>Lower quartile: {point.q1}<br/>Minimum: {point.low}<br/>'},whiskerLength:\"50%\",whiskerWidth:2});k.boxplot=u(k.column,{type:\"boxplot\",\npointArrayMap:[\"low\",\"q1\",\"median\",\"q3\",\"high\"],toYData:function(a){return[a.low,a.q1,a.median,a.q3,a.high]},pointValKey:\"high\",pointAttrToOptions:{fill:\"fillColor\",stroke:\"color\",\"stroke-width\":\"lineWidth\"},drawDataLabels:r,translate:function(){var a=this.yAxis,b=this.pointArrayMap;k.column.prototype.translate.apply(this);s(this.points,function(c){s(b,function(b){c[b]!==null&&(c[b+\"Plot\"]=a.translate(c[b],0,1,0,1))})})},drawPoints:function(){var a=this,b=a.options,c=a.chart.renderer,d,g,e,j,l,i,\nf,h,n,k,m,H,I,o,t,r,v,u,w,x,B,A,y=a.doQuartiles!==!1,z,D=a.options.whiskerLength;s(a.points,function(p){n=p.graphic;B=p.shapeArgs;m={};o={};r={};A=p.color||a.color;if(p.plotY!==void 0)if(d=p.pointAttr[p.selected?\"selected\":\"\"],v=B.width,u=C(B.x),w=u+v,x=E(v/2),g=C(y?p.q1Plot:p.lowPlot),e=C(y?p.q3Plot:p.lowPlot),j=C(p.highPlot),l=C(p.lowPlot),m.stroke=p.stemColor||b.stemColor||A,m[\"stroke-width\"]=q(p.stemWidth,b.stemWidth,b.lineWidth),m.dashstyle=p.stemDashStyle||b.stemDashStyle,o.stroke=p.whiskerColor||\nb.whiskerColor||A,o[\"stroke-width\"]=q(p.whiskerWidth,b.whiskerWidth,b.lineWidth),r.stroke=p.medianColor||b.medianColor||A,r[\"stroke-width\"]=q(p.medianWidth,b.medianWidth,b.lineWidth),f=m[\"stroke-width\"]%2/2,h=u+x+f,k=[\"M\",h,e,\"L\",h,j,\"M\",h,g,\"L\",h,l],y&&(f=d[\"stroke-width\"]%2/2,h=C(h)+f,g=C(g)+f,e=C(e)+f,u+=f,w+=f,H=[\"M\",u,e,\"L\",u,g,\"L\",w,g,\"L\",w,e,\"L\",u,e,\"z\"]),D&&(f=o[\"stroke-width\"]%2/2,j+=f,l+=f,z=/%$/.test(D)?x*parseFloat(D)/100:D/2,I=[\"M\",h-z,j,\"L\",h+z,j,\"M\",h-z,l,\"L\",h+z,l]),f=r[\"stroke-width\"]%\n2/2,i=E(p.medianPlot)+f,t=[\"M\",u,i,\"L\",w,i],n)p.stem.animate({d:k}),D&&p.whiskers.animate({d:I}),y&&p.box.animate({d:H}),p.medianShape.animate({d:t});else{p.graphic=n=c.g().add(a.group);p.stem=c.path(k).attr(m).add(n);if(D)p.whiskers=c.path(I).attr(o).add(n);if(y)p.box=c.path(H).attr(d).add(n);p.medianShape=c.path(t).attr(r).add(n)}})},setStackedPoints:r});o.errorbar=t(o.boxplot,{color:\"#000000\",grouping:!1,linkedTo:\":previous\",tooltip:{pointFormat:'<span style=\"color:{point.color}\">\\u25cf</span> {series.name}: <b>{point.low}</b> - <b>{point.high}</b><br/>'},\nwhiskerWidth:null});k.errorbar=u(k.boxplot,{type:\"errorbar\",pointArrayMap:[\"low\",\"high\"],toYData:function(a){return[a.low,a.high]},pointValKey:\"high\",doQuartiles:!1,drawDataLabels:k.arearange?k.arearange.prototype.drawDataLabels:r,getColumnMetrics:function(){return this.linkedParent&&this.linkedParent.columnMetrics||k.column.prototype.getColumnMetrics.call(this)}});o.waterfall=t(o.column,{lineWidth:1,lineColor:\"#333\",dashStyle:\"dot\",borderColor:\"#333\",dataLabels:{inside:!0},states:{hover:{lineWidthPlus:0}}});\nk.waterfall=u(k.column,{type:\"waterfall\",upColorProp:\"fill\",pointValKey:\"y\",translate:function(){var a=this.options,b=this.yAxis,c,d,g,e,j,l,i,f,h,n=q(a.minPointLength,5),m=a.threshold,o=a.stacking;k.column.prototype.translate.apply(this);this.minPointLengthOffset=0;i=f=m;d=this.points;for(c=0,a=d.length;c<a;c++){g=d[c];l=this.processedYData[c];e=g.shapeArgs;h=(j=o&&b.stacks[(this.negStacks&&l<m?\"-\":\"\")+this.stackKey])?j[g.x].points[this.index+\",\"+c]:[0,l];if(g.isSum)g.y=l;else if(g.isIntermediateSum)g.y=\nl-f;j=M(i,i+g.y)+h[0];e.y=b.translate(j,0,1);if(g.isSum)e.y=b.translate(h[1],0,1),e.height=Math.min(b.translate(h[0],0,1),b.len)-e.y+this.minPointLengthOffset;else if(g.isIntermediateSum)e.y=b.translate(h[1],0,1),e.height=Math.min(b.translate(f,0,1),b.len)-e.y+this.minPointLengthOffset,f=h[1];else{if(i!==0)e.height=l>0?b.translate(i,0,1)-e.y:b.translate(i,0,1)-b.translate(i-l,0,1);i+=l}e.height<0&&(e.y+=e.height,e.height*=-1);g.plotY=e.y=E(e.y)-this.borderWidth%2/2;e.height=M(E(e.height),0.001);g.yBottom=\ne.y+e.height;if(e.height<=n)e.height=n,this.minPointLengthOffset+=n;e.y-=this.minPointLengthOffset;e=g.plotY+(g.negative?e.height:0)-this.minPointLengthOffset;this.chart.inverted?g.tooltipPos[0]=b.len-e:g.tooltipPos[1]=e}},processData:function(a){var b=this.yData,c=this.options.data,d,g=b.length,e,j,l,i,f,h;j=e=l=i=this.options.threshold||0;for(h=0;h<g;h++)f=b[h],d=c&&c[h]?c[h]:{},f===\"sum\"||d.isSum?b[h]=j:f===\"intermediateSum\"||d.isIntermediateSum?b[h]=e:(j+=f,e+=f),l=Math.min(j,l),i=Math.max(j,\ni);w.prototype.processData.call(this,a);this.dataMin=l;this.dataMax=i},toYData:function(a){return a.isSum?a.x===0?null:\"sum\":a.isIntermediateSum?a.x===0?null:\"intermediateSum\":a.y},getAttribs:function(){k.column.prototype.getAttribs.apply(this,arguments);var a=this,b=a.options,c=b.states,d=b.upColor||a.color,b=m.Color(d).brighten(0.1).get(),g=t(a.pointAttr),e=a.upColorProp;g[\"\"][e]=d;g.hover[e]=c.hover.upColor||b;g.select[e]=c.select.upColor||d;s(a.points,function(e){if(!e.options.color)e.y>0?(e.pointAttr=\ng,e.color=d):e.pointAttr=a.pointAttr})},getGraphPath:function(){var a=this.data,b=a.length,c=E(this.options.lineWidth+this.borderWidth)%2/2,d=[],g,e,j;for(j=1;j<b;j++)e=a[j].shapeArgs,g=a[j-1].shapeArgs,e=[\"M\",g.x+g.width,g.y+c,\"L\",e.x,g.y+c],a[j-1].y<0&&(e[2]+=g.height,e[5]+=g.height),d=d.concat(e);return d},getExtremes:r,drawGraph:w.prototype.drawGraph});o.polygon=t(o.scatter,{marker:{enabled:!1}});k.polygon=u(k.scatter,{type:\"polygon\",fillGraph:!0,getSegmentPath:function(a){return w.prototype.getSegmentPath.call(this,\na).concat(\"z\")},drawGraph:w.prototype.drawGraph,drawLegendSymbol:m.LegendSymbolMixin.drawRectangle});o.bubble=t(o.scatter,{dataLabels:{formatter:function(){return this.point.z},inside:!0,verticalAlign:\"middle\"},marker:{lineColor:null,lineWidth:1},minSize:8,maxSize:\"20%\",softThreshold:!1,states:{hover:{halo:{size:5}}},tooltip:{pointFormat:\"({point.x}, {point.y}), Size: {point.z}\"},turboThreshold:0,zThreshold:0,zoneAxis:\"z\"});B=u(G,{haloPath:function(){return G.prototype.haloPath.call(this,this.shapeArgs.r+\nthis.series.options.states.hover.halo.size)},ttBelow:!1});k.bubble=u(k.scatter,{type:\"bubble\",pointClass:B,pointArrayMap:[\"y\",\"z\"],parallelArrays:[\"x\",\"y\",\"z\"],trackerGroups:[\"group\",\"dataLabelsGroup\"],bubblePadding:!0,zoneAxis:\"z\",pointAttrToOptions:{stroke:\"lineColor\",\"stroke-width\":\"lineWidth\",fill:\"fillColor\"},applyOpacity:function(a){var b=this.options.marker,c=q(b.fillOpacity,0.5),a=a||b.fillColor||this.color;c!==1&&(a=T(a).setOpacity(c).get(\"rgba\"));return a},convertAttribs:function(){var a=\nw.prototype.convertAttribs.apply(this,arguments);a.fill=this.applyOpacity(a.fill);return a},getRadii:function(a,b,c,d){var g,e,j,l=this.zData,i=[],f=this.options,h=f.sizeBy!==\"width\",n=f.zThreshold,k=b-a;for(e=0,g=l.length;e<g;e++)j=l[e],f.sizeByAbsoluteValue&&j!==null&&(j=Math.abs(j-n),b=Math.max(b-n,Math.abs(a-n)),a=0),j===null?j=null:j<a?j=c/2-1:(j=k>0?(j-a)/k:0.5,h&&j>=0&&(j=Math.sqrt(j)),j=x.ceil(c+j*(d-c))/2),i.push(j);this.radii=i},animate:function(a){var b=this.options.animation;if(!a)s(this.points,\nfunction(a){var d=a.graphic,a=a.shapeArgs;d&&a&&(d.attr(\"r\",1),d.animate({r:a.r},b))}),this.animate=null},translate:function(){var a,b=this.data,c,d,g=this.radii;k.scatter.prototype.translate.call(this);for(a=b.length;a--;)c=b[a],d=g?g[a]:0,typeof d===\"number\"&&d>=this.minPxSize/2?(c.shapeType=\"circle\",c.shapeArgs={x:c.plotX,y:c.plotY,r:d},c.dlBox={x:c.plotX-d,y:c.plotY-d,width:2*d,height:2*d}):c.shapeArgs=c.plotY=c.dlBox=void 0},drawLegendSymbol:function(a,b){var c=this.chart.renderer,d=c.fontMetrics(a.itemStyle.fontSize).f/\n2;b.legendSymbol=c.circle(d,a.baseline-d,d).attr({zIndex:3}).add(b.legendGroup);b.legendSymbol.isMarker=!0},drawPoints:k.column.prototype.drawPoints,alignDataLabel:k.column.prototype.alignDataLabel,buildKDTree:r,applyZones:r});L.prototype.beforePadding=function(){var a=this,b=this.len,c=this.chart,d=0,g=b,e=this.isXAxis,j=e?\"xData\":\"yData\",l=this.min,i={},f=x.min(c.plotWidth,c.plotHeight),h=Number.MAX_VALUE,n=-Number.MAX_VALUE,k=this.max-l,m=b/k,o=[];s(this.series,function(b){var g=b.options;if(b.bubblePadding&&\n(b.visible||!c.options.chart.ignoreHiddenSeries))if(a.allowZoomOutside=!0,o.push(b),e)s([\"minSize\",\"maxSize\"],function(a){var b=g[a],e=/%$/.test(b),b=A(b);i[a]=e?f*b/100:b}),b.minPxSize=i.minSize,b.maxPxSize=i.maxSize,b=b.zData,b.length&&(h=q(g.zMin,x.min(h,x.max(O(b),g.displayNegative===!1?g.zThreshold:-Number.MAX_VALUE))),n=q(g.zMax,x.max(n,P(b))))});s(o,function(a){var b=a[j],c=b.length,f;e&&a.getRadii(h,n,a.minPxSize,a.maxPxSize);if(k>0)for(;c--;)typeof b[c]===\"number\"&&(f=a.radii[c],d=Math.min((b[c]-\nl)*m-f,d),g=Math.max((b[c]-l)*m+f,g))});o.length&&k>0&&!this.isLog&&(g-=b,m*=(b+d-g)/b,s([[\"min\",\"userMin\",d],[\"max\",\"userMax\",g]],function(b){q(a.options[b[0]],a[b[1]])===void 0&&(a[b[0]]+=b[2]/m)}))};(function(){function a(a,b){var c=this.chart,d=this.options.animation,i=this.group,f=this.markerGroup,h=this.xAxis.center,n=c.plotLeft,k=c.plotTop;if(c.polar){if(c.renderer.isSVG)d===!0&&(d={}),b?(c={translateX:h[0]+n,translateY:h[1]+k,scaleX:0.001,scaleY:0.001},i.attr(c),f&&f.attr(c)):(c={translateX:n,\ntranslateY:k,scaleX:1,scaleY:1},i.animate(c,d),f&&f.animate(c,d),this.animate=null)}else a.call(this,b)}var b=w.prototype,c=R.prototype,d;b.searchPointByAngle=function(a){var b=this.chart,c=this.xAxis.pane.center;return this.searchKDTree({clientX:180+Math.atan2(a.chartX-c[0]-b.plotLeft,a.chartY-c[1]-b.plotTop)*(-180/Math.PI)})};v(b,\"buildKDTree\",function(a){if(this.chart.polar)this.kdByAngle?this.searchPoint=this.searchPointByAngle:this.kdDimensions=2;a.apply(this)});b.toXY=function(a){var b,c=this.chart,\nd=a.plotX;b=a.plotY;a.rectPlotX=d;a.rectPlotY=b;b=this.xAxis.postTranslate(a.plotX,this.yAxis.len-b);a.plotX=a.polarPlotX=b.x-c.plotLeft;a.plotY=a.polarPlotY=b.y-c.plotTop;this.kdByAngle?(c=(d/Math.PI*180+this.xAxis.pane.options.startAngle)%360,c<0&&(c+=360),a.clientX=c):a.clientX=a.plotX};k.spline&&v(k.spline.prototype,\"getPointSpline\",function(a,b,c,d){var i,f,h,n,k,m,o;if(this.chart.polar){i=c.plotX;f=c.plotY;a=b[d-1];h=b[d+1];this.connectEnds&&(a||(a=b[b.length-2]),h||(h=b[1]));if(a&&h)n=a.plotX,\nk=a.plotY,b=h.plotX,m=h.plotY,n=(1.5*i+n)/2.5,k=(1.5*f+k)/2.5,h=(1.5*i+b)/2.5,o=(1.5*f+m)/2.5,b=Math.sqrt(Math.pow(n-i,2)+Math.pow(k-f,2)),m=Math.sqrt(Math.pow(h-i,2)+Math.pow(o-f,2)),n=Math.atan2(k-f,n-i),k=Math.atan2(o-f,h-i),o=Math.PI/2+(n+k)/2,Math.abs(n-o)>Math.PI/2&&(o-=Math.PI),n=i+Math.cos(o)*b,k=f+Math.sin(o)*b,h=i+Math.cos(Math.PI+o)*m,o=f+Math.sin(Math.PI+o)*m,c.rightContX=h,c.rightContY=o;d?(c=[\"C\",a.rightContX||a.plotX,a.rightContY||a.plotY,n||i,k||f,i,f],a.rightContX=a.rightContY=null):\nc=[\"M\",i,f]}else c=a.call(this,b,c,d);return c});v(b,\"translate\",function(a){var b=this.chart;a.call(this);if(b.polar&&(this.kdByAngle=b.tooltip&&b.tooltip.shared,!this.preventPostTranslate)){a=this.points;for(b=a.length;b--;)this.toXY(a[b])}});v(b,\"getGraphPath\",function(a,b){var c=this;if(this.chart.polar){b=b||this.points;if(this.options.connectEnds!==!1&&b[0].y!==null)this.connectEnds=!0,b.splice(b.length,0,b[0]);s(b,function(a){a.polarPlotY===void 0&&c.toXY(a)})}return a.apply(this,[].slice.call(arguments,\n1))});v(b,\"animate\",a);if(k.column)d=k.column.prototype,v(d,\"animate\",a),v(d,\"translate\",function(a){var b=this.xAxis,c=this.yAxis.len,d=b.center,i=b.startAngleRad,f=this.chart.renderer,h,k;this.preventPostTranslate=!0;a.call(this);if(b.isRadial){b=this.points;for(k=b.length;k--;)h=b[k],a=h.barX+i,h.shapeType=\"path\",h.shapeArgs={d:f.symbols.arc(d[0],d[1],c-h.plotY,null,{start:a,end:a+h.pointWidth,innerR:c-q(h.yBottom,c)})},this.toXY(h),h.tooltipPos=[h.plotX,h.plotY],h.ttBelow=h.plotY>d[1]}}),v(d,\n\"alignDataLabel\",function(a,c,d,l,i,f){if(this.chart.polar){a=c.rectPlotX/Math.PI*180;if(l.align===null)l.align=a>20&&a<160?\"left\":a>200&&a<340?\"right\":\"center\";if(l.verticalAlign===null)l.verticalAlign=a<45||a>315?\"bottom\":a>135&&a<225?\"top\":\"middle\";b.alignDataLabel.call(this,c,d,l,i,f)}else a.call(this,c,d,l,i,f)});v(c,\"getCoordinates\",function(a,b){var c=this.chart,d={xAxis:[],yAxis:[]};c.polar?s(c.axes,function(a){var f=a.isXAxis,g=a.center,k=b.chartX-g[0]-c.plotLeft,g=b.chartY-g[1]-c.plotTop;\nd[f?\"xAxis\":\"yAxis\"].push({axis:a,value:a.translate(f?Math.PI-Math.atan2(k,g):Math.sqrt(Math.pow(k,2)+Math.pow(g,2)),!0)})}):d=a.call(this,b);return d})})()});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/highcharts-more/more.js\n// module id = 3583\n// module chunks = 2 7","\"use strict\";\n\n//*------------------------------------------------------------------*\n\nexports.LegendDifferential = require('./src/LegendDifferential.jsx');\nexports.LegendBaseline = require('./src/LegendBaseline.jsx');\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/expression-atlas-legend/index.js","\"use strict\";\n\n//*------------------------------------------------------------------*\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\n\n//*------------------------------------------------------------------*\n\nvar LegendRow = require('./LegendRow.jsx');\nvar HelpTooltips = require('expression-atlas-help-tooltips');\n\n//*------------------------------------------------------------------*\n\nrequire('./gxaLegend.css');\n\n//*------------------------------------------------------------------*\n\nvar LegendDifferential = React.createClass({\n\n    propTypes: {\n        atlasBaseURL: React.PropTypes.string.isRequired,\n        minDownLevel: React.PropTypes.number.isRequired,\n        maxDownLevel: React.PropTypes.number.isRequired,\n        minUpLevel: React.PropTypes.number.isRequired,\n        maxUpLevel: React.PropTypes.number.isRequired\n    },\n\n    render: function () {\n        return (\n            <div className=\"gxaLegend\">\n                <div style={{display: \"inline-table\"}}>\n                    {isNaN(this.props.minDownLevel) && isNaN(this.props.maxDownLevel) ?\n                        null :\n                        <LegendRow lowExpressionLevel={<span>{this.props.minDownLevel}</span>}\n                                   highExpressionLevel={<span>{this.props.maxDownLevel}</span>}\n                                   lowValueColour=\"#C0C0C0\"\n                                   highValueColour=\"#0000FF\"/>\n                    }\n                    {isNaN(this.props.minUpLevel) && isNaN(this.props.maxUpLevel) ?\n                        null :\n                        <LegendRow lowExpressionLevel={<span>{this.props.minUpLevel}</span>}\n                                   highExpressionLevel={<span>{this.props.maxUpLevel}</span>}\n                                   lowValueColour=\"#FFAFAF\"\n                                   highValueColour=\"#FF0000\"/>\n                    }\n                </div>\n                <div ref=\"legendHelp\" data-help-loc=\"#gradient-differential\" className=\"gxaLegendHelp\"></div>\n            </div>\n        );\n    },\n\n    componentDidMount: function () {\n        HelpTooltips(this.props.atlasBaseURL, \"experiment\", ReactDOM.findDOMNode(this.refs.legendHelp));\n    }\n});\n\n//*------------------------------------------------------------------*\n\nmodule.exports = LegendDifferential;\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/expression-atlas-legend/src/LegendDifferential.jsx","const React = require('react');\n\nrequire('./gxaGradient.css');\n\nconst LegendRow = React.createClass({\n\n    propTypes: {\n        lowValueColour: React.PropTypes.string.isRequired,\n        highValueColour: React.PropTypes.string.isRequired,\n        lowExpressionLevel: React.PropTypes.element.isRequired,\n        highExpressionLevel: React.PropTypes.element.isRequired\n    },\n\n    render: function () {\n        const spanStyle = {\n            backgroundImage: `linear-gradient(to right, ${this.props.lowValueColour}, ${this.props.highValueColour})`\n        };\n\n        return (\n          this.props.lowExpressionLevel || this.props.highExpressionLevel\n          ? <div style={{display: \"table-row\"}}>\n                <div className=\"gxaGradientLevel gxaGradientLevelMin\">{this.props.lowExpressionLevel}</div>\n                <div style={{display: \"table-cell\"}}>\n                    <span className=\"gxaGradientColour\" style={spanStyle} />\n                </div>\n                <div className=\"gxaGradientLevel gxaGradientLevelMax\">{this.props.highExpressionLevel}</div>\n            </div>\n          : null  \n        );\n    }\n});\n\nmodule.exports = LegendRow;\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/expression-atlas-legend/src/LegendRow.jsx","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../css-loader/index.js!./gxaGradient.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../css-loader/index.js!./gxaGradient.css\", function() {\n\t\t\tvar newContent = require(\"!!../../css-loader/index.js!./gxaGradient.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/expression-atlas-legend/src/gxaGradient.css\n// module id = 3587\n// module chunks = 2 7","exports = module.exports = require(\"../../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".gxaGradientColour {\\n    overflow: auto;\\n    vertical-align: middle;\\n    width: 200px;\\n    height: 15px;\\n    margin: 2px 6px 2px 6px;\\n    display: inline-block;\\n}\\n\\n.gxaGradientLevel {\\n    white-space: nowrap;\\n    font-size: 10px;\\n    vertical-align: middle;\\n    display: table-cell;\\n}\\n\\n.gxaGradientLevelMin {\\n    text-align: right;\\n}\\n\\n.gxaGradientLevelMax {\\n    text-align: left;\\n}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/css-loader!./atlas_bundles/heatmap/~/expression-atlas-legend/src/gxaGradient.css\n// module id = 3588\n// module chunks = 2 7","\"use strict\";\n\n//*------------------------------------------------------------------*\n\nmodule.exports = require('./src/helpTooltipsModule.js');\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/expression-atlas-help-tooltips/index.js","\"use strict\";\n\n//*------------------------------------------------------------------*\n\nvar $ = require('jquery');\nrequire('jquery-ui-bundle');\n\n//*------------------------------------------------------------------*\n\nrequire('./gxaHelpTooltip.css');\n\n//*------------------------------------------------------------------*\n\nfunction buildHelpAnchor() {\n    return $(\"<a/>\", {\n        class: \"help-icon\",\n        href: \"#\",\n        title: \"\",\n        text: \"?\"\n    });\n}\n\nfunction getHelpFileName(pageName){\n    return \"help-tooltips.\" + pageName + \"-page.html\";\n}\n\nfunction initTooltips(atlasBaseURL, pageName, parentElementId) {\n\n    var anchor = buildHelpAnchor();\n\n    var helpSelector = (typeof parentElementId === \"object\") ? parentElementId : (parentElementId == \"\") ? \"[data-help-loc]\" : \"#\" + parentElementId + \" [data-help-loc]\";\n\n    $(helpSelector)\n        .append(anchor)\n        .click(function (e) {\n            e.preventDefault();\n        })\n        .tooltip(\n        {\n            tooltipClass: \"gxaHelpTooltip\",\n            content: function (callback) {\n                var tooltipHelpHtmlId = $(this).parent().attr(\"data-help-loc\");\n\n                $.get(atlasBaseURL + \"/resources/html/\" + getHelpFileName(pageName),\n                    function (response, status, xhr) {\n                        var tooltipContent;\n\n                        if (status === \"error\") {\n                            tooltipContent = \"Sorry but there was an error: \" + xhr.status + \" \" + xhr.statusText;\n                            callback(tooltipContent);\n                            return;\n                        }\n\n                        tooltipContent = $(response).filter(tooltipHelpHtmlId).text();\n                        if (!tooltipContent) {\n                            tooltipContent = \"Missing help section for id = \" + tooltipHelpHtmlId + \" in html file \" + getHelpFileName(pageName);\n                        }\n\n                        callback(tooltipContent);\n                    }\n                );\n            }\n        }\n    );\n\n}\n\n//*------------------------------------------------------------------*\n\nmodule.exports = function (atlasBaseURL, pageName, parentElementId) {\n    initTooltips(atlasBaseURL, pageName, parentElementId);\n};\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/expression-atlas-help-tooltips/src/helpTooltipsModule.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../css-loader/index.js!./gxaHelpTooltip.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../css-loader/index.js!./gxaHelpTooltip.css\", function() {\n\t\t\tvar newContent = require(\"!!../../css-loader/index.js!./gxaHelpTooltip.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/expression-atlas-help-tooltips/src/gxaHelpTooltip.css\n// module id = 3591\n// module chunks = 2 7","exports = module.exports = require(\"../../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".gxaHelpTooltip {\\n    background: white;\\n    border-width: 1px !important;\\n    border: solid cornflowerblue;\\n    padding: 4px;\\n    color: cornflowerblue;\\n    font: 10px Verdana, Helvetica, Arial, sans-serif;\\n}\\n\\na.help-icon {\\n    color: darkorange;\\n    vertical-align: top;\\n    font: 10px Verdana, Helvetica, Arial, sans-serif;\\n    font-weight: bold;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/css-loader!./atlas_bundles/heatmap/~/expression-atlas-help-tooltips/src/gxaHelpTooltip.css\n// module id = 3592\n// module chunks = 2 7","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../css-loader/index.js!./gxaLegend.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../css-loader/index.js!./gxaLegend.css\", function() {\n\t\t\tvar newContent = require(\"!!../../css-loader/index.js!./gxaLegend.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/expression-atlas-legend/src/gxaLegend.css\n// module id = 3593\n// module chunks = 2 7","exports = module.exports = require(\"../../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".gxaLegendHelp {\\n    display: inline-block;\\n    vertical-align: top;\\n    padding-left: 2px;\\n}\\n\\n.gxaLegend {\\n    display: inline-block;\\n    padding-left: 20px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/css-loader!./atlas_bundles/heatmap/~/expression-atlas-legend/src/gxaLegend.css\n// module id = 3594\n// module chunks = 2 7","\"use strict\";\n\n//*------------------------------------------------------------------*\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\n\n//*------------------------------------------------------------------*\n\nvar LegendRow = require('./LegendRow.jsx');\nvar NumberFormat = require('expression-atlas-number-format').default;\nvar HelpTooltips = require('expression-atlas-help-tooltips');\n\n//*------------------------------------------------------------------*\n\nrequire('./gxaLegend.css');\n\n//*------------------------------------------------------------------*\n\nvar LegendBaseline = React.createClass({\n\n    propTypes: {\n        atlasBaseURL: React.PropTypes.string.isRequired,\n        minExpressionLevel: React.PropTypes.number.isRequired,\n        maxExpressionLevel: React.PropTypes.number.isRequired,\n        isMultiExperiment: React.PropTypes.bool.isRequired\n    },\n\n    render: function () {\n        var dataHelpLoc = this.props.isMultiExperiment ? \"#gradient-base-crossexp\" : \"#gradient-base\";\n\n        // The class gxaHeatmapLegendGradient is used for Selenium tests but isn’t styled\n        return (\n            <div className=\"gxaHeatmapLegendGradient\">\n                <div style={{display: \"inline-table\"}}>\n                    <LegendRow lowExpressionLevel={NumberFormat.baselineExpression(this.props.minExpressionLevel)}\n                               highExpressionLevel={NumberFormat.baselineExpression(this.props.maxExpressionLevel)}\n                               lowValueColour=\"#C0C0C0\"\n                               highValueColour=\"#0000FF\"/>\n                </div>\n                <div ref={legendHelpDiv => { this.legendHelpDiv = legendHelpDiv; }} data-help-loc={dataHelpLoc} className=\"gxaLegendHelp\"></div>\n            </div>\n        );\n    },\n\n    componentDidMount: function () {\n        HelpTooltips(this.props.atlasBaseURL, \"experiment\", ReactDOM.findDOMNode(this.legendHelpDiv));\n    }\n});\n\n//*------------------------------------------------------------------*\n\nmodule.exports = LegendBaseline;\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/expression-atlas-legend/src/LegendBaseline.jsx","module.exports = require('./src/CellDifferential.jsx');\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/expression-atlas-cell-differential/index.js","const React = require('react');\nconst ReactDOM = require('react-dom');\nconst ReactDOMServer = require('react-dom/server');\nconst $ = require('jquery');\nrequire('jquery-ui-bundle');\n\nconst NumberFormat = require('expression-atlas-number-format').default;\n\nrequire('./gxaShowHideCell.css');\nrequire('./gxaDifferentialCellTooltip.css');\n\nconst CellDifferential = React.createClass({\n\n    propTypes: {\n        fontSize: React.PropTypes.number,\n        colour: React.PropTypes.string,\n        foldChange: React.PropTypes.number,\n        pValue: React.PropTypes.number,\n        tStat: React.PropTypes.number,\n        displayLevels: React.PropTypes.bool.isRequired\n    },\n\n    _hasValue() {\n        return !!this.props.foldChange;\n    },\n\n    _getStyle() {\n        return this.props.fontSize ? { fontSize: `${this.props.fontSize}px` } : {};\n    },\n\n    render() {\n        if (!this._hasValue()) {\n            return <td/>;\n        }\n\n        return (\n            <td style={{backgroundColor: this.props.colour, verticalAlign: `middle`}}>\n                <div style={this._getStyle()} className={this.props.displayLevels ? `gxaShowCell` : `gxaHideCell`}>\n                    {this.props.foldChange}\n                </div>\n            </td>\n        );\n    },\n\n    componentDidMount() {\n        if (this._hasValue()) {\n            this._initTooltip(ReactDOM.findDOMNode(this));\n        }\n    },\n\n    _initTooltip(element) {\n\n        function buildHeatmapCellTooltip (pValue, tStatistic, foldChange) {\n            return (\n                    <table>\n                        <thead>\n                            <tr>\n                                {pValue ? <th>Adjusted <em>p</em>-value</th> : null}\n                                {tStatistic ? <th><em>t</em>-statistic</th> : null}\n                                <th>Log<sub>2</sub>-fold change</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                {pValue ? <td>{NumberFormat.scientificNotation(pValue)}</td> : null}\n                                {tStatistic ? <td>{Math.floor(tStatistic * 1e4) / 1e4}</td> : null}\n                                <td>{foldChange}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n            );\n        }\n\n        $(element).attr(`title`, ``).tooltip({\n            open: (event, ui) => {\n                ui.tooltip.css(`background`, this.props.colour);\n            },\n\n            tooltipClass: `gxaDifferentialCellTooltip`,\n\n            content: () => {\n                return ReactDOMServer.renderToStaticMarkup(\n                    buildHeatmapCellTooltip(this.props.pValue, this.props.tStat, this.props.foldChange));\n            }\n        });\n    }\n});\n\nmodule.exports = CellDifferential;\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/expression-atlas-cell-differential/src/CellDifferential.jsx","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../css-loader/index.js!./gxaShowHideCell.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../css-loader/index.js!./gxaShowHideCell.css\", function() {\n\t\t\tvar newContent = require(\"!!../../css-loader/index.js!./gxaShowHideCell.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/expression-atlas-cell-differential/src/gxaShowHideCell.css\n// module id = 3602\n// module chunks = 2 7","exports = module.exports = require(\"../../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".gxaShowCell {\\n    background-color: white;\\n    white-space: nowrap;\\n    text-align: center;\\n    margin: 4px;\\n    padding: 2px;\\n}\\n\\n.gxaHideCell {\\n    display: none;\\n    visibility: hidden;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/css-loader!./atlas_bundles/heatmap/~/expression-atlas-cell-differential/src/gxaShowHideCell.css\n// module id = 3603\n// module chunks = 2 7","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../css-loader/index.js!./gxaDifferentialCellTooltip.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../css-loader/index.js!./gxaDifferentialCellTooltip.css\", function() {\n\t\t\tvar newContent = require(\"!!../../css-loader/index.js!./gxaDifferentialCellTooltip.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/expression-atlas-cell-differential/src/gxaDifferentialCellTooltip.css\n// module id = 3604\n// module chunks = 2 7","exports = module.exports = require(\"../../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".gxaDifferentialCellTooltip {\\n    width: 26%;\\n    left: 300px;\\n    border: solid transparent;\\n    color: darkslategray;\\n    padding: 2px;\\n    font: 10px Verdana, Helvetica, Arial, sans-serif;\\n}\\n\\n.gxaDifferentialCellTooltip table {\\n    margin: 0; /* overrides ebi-visual.css:134 */\\n    background-color: white;\\n    border: 1px solid lightgrey;\\n    border-collapse: collapse;\\n}\\n\\n.gxaDifferentialCellTooltip th {\\n    border-bottom: 1px solid lightgrey;\\n    background-color: floralwhite;\\n}\\n\\n.gxaDifferentialCellTooltip td, .gxaDifferentialCellTooltip th {\\n    text-align: center;\\n    white-space: nowrap;\\n    vertical-align: middle;\\n    padding: 8px;\\n    width: 25px;\\n}\\n.gxaDifferentialCellTooltip thead {\\n    font-size: 0.9em;\\n}\\n\\n.gxaDifferentialCellTooltip tbody {\\n    font-size: smaller;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/css-loader!./atlas_bundles/heatmap/~/expression-atlas-cell-differential/src/gxaDifferentialCellTooltip.css\n// module id = 3605\n// module chunks = 2 7","module.exports = require('./src/DisplayLevelsButton.jsx');\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/expression-atlas-display-levels-button/index.js","var React = require('react');\nvar ReactDOM = require('react-dom');\n\nvar $ = require('jquery');\nrequire('jquery-ui-bundle');\n\nvar DisplayLevelsButton = React.createClass({\n\n    propTypes: {\n        hideText: React.PropTypes.string.isRequired,\n        showText: React.PropTypes.string.isRequired,\n        onClickCallback: React.PropTypes.func.isRequired,\n        displayLevels: React.PropTypes.bool.isRequired,\n        width: React.PropTypes.string,\n        fontSize: React.PropTypes.string\n    },\n\n    _buttonText: function () {\n        return this.props.displayLevels ? this.props.hideText : this.props.showText;\n    },\n\n    _updateButtonText: function () {\n        $(ReactDOM.findDOMNode(this)).button({ label: this._buttonText() });\n    },\n\n    render: function () {\n        var style = {\n        };\n        if (this.props.width) {\n            style.width = this.props.width;\n        }\n        if (this.props.fontSize) {\n            style.fontSize = this.props.fontSize;\n        }\n\n        return (\n            <button style={style} onClick={this.props.onClickCallback}/>\n        );\n    },\n\n    componentDidMount: function () {\n        this._updateButtonText();\n    },\n\n    componentDidUpdate: function () {\n        this._updateButtonText();\n    }\n\n});\n\n//*------------------------------------------------------------------*\n\nmodule.exports = DisplayLevelsButton;\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/expression-atlas-display-levels-button/src/DisplayLevelsButton.jsx","\"use strict\";\n\n//*------------------------------------------------------------------*\n\nmodule.exports = require('./src/contrastTooltipModule.js');\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/expression-atlas-contrast-tooltips/index.js","var React = require('react');\nvar ReactDOMServer = require('react-dom/server');\n\nvar $ = require('jquery');\nrequire('jquery-ui-bundle');\n\n//*------------------------------------------------------------------*\n\nvar ContrastTooltip = require('./ContrastTooltip.jsx');\n\n//*------------------------------------------------------------------*\n\nrequire('./gxaContrastTooltip.css');\n\n//*------------------------------------------------------------------*\n\nfunction initTooltip(contextRoot, accessKey, element, experimentAccession, contrastId) {\n\n    $(element).attr(\"title\", \"\").tooltip({\n\n        hide: false,\n\n        show: false,\n\n        tooltipClass: \"gxaContrastTooltip\",\n\n        position: { collision: \"none\" },\n\n        close: function() {\n            $(\".gxaContrastTooltip\").remove();\n        },\n\n        content: function (callback) {\n            $.ajax({\n                url:contextRoot + \"/rest/contrast-summary\",\n                data:{\n                    experimentAccession: experimentAccession,\n                    contrastId: contrastId,\n                    accessKey: accessKey\n                },\n                type:\"GET\",\n                success:function (data) {\n                    var html =\n                        ReactDOMServer.renderToString(\n                            React.createElement(\n                                ContrastTooltip,\n                                {\n                                    experimentDescription: data.experimentDescription,\n                                    contrastDescription: data.contrastDescription,\n                                    testReplicates: data.testReplicates,\n                                    referenceReplicates: data.referenceReplicates,\n                                    properties: data.properties\n                                }\n                            )\n                        );\n                    callback(html);\n                }\n            }).fail(function (data) {\n                console.log(\"ERROR:  \" + data);\n                callback(\"ERROR: \" + data);\n            });\n        }\n\n    });\n\n}\n\n//*------------------------------------------------------------------*\n\nmodule.exports = function (contextRoot, accessKey, element, experimentAccession, contrastId) {\n    initTooltip(contextRoot, accessKey, element, experimentAccession, contrastId);\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/expression-atlas-contrast-tooltips/src/contrastTooltipModule.js","var React = require('react');\n\nvar ContrastTooltip = React.createClass({\n    propTypes: {\n        experimentDescription: React.PropTypes.string.isRequired,\n        contrastDescription: React.PropTypes.string.isRequired,\n        testReplicates: React.PropTypes.number.isRequired,\n        referenceReplicates: React.PropTypes.number.isRequired,\n        properties: React.PropTypes.arrayOf(\n            React.PropTypes.shape({\n                contrastPropertyType: React.PropTypes.string,\n                propertyName: React.PropTypes.string.isRequired,\n                referenceValue: React.PropTypes.string.isRequired,\n                testValue: React.PropTypes.string.isRequired\n            })\n        )\n    },\n\n\n    propertyRow: function (property) {\n        if (!property.testValue && !property.referenceValue) {\n            return null;\n        }\n\n        function isFactor(property) {\n            return property.contrastPropertyType === \"FACTOR\";\n        }\n\n        var style = {whiteSpace: \"normal\"};\n\n        if (isFactor(property)) {\n            style.fontWeight = \"bold\";\n        } else {\n            style.color = \"gray\";\n        }\n\n        return (\n            <tr key={property.contrastPropertyType + \"-\" + property.propertyName}>\n                <td style={style}>{property.propertyName}</td>\n                <td style={style}>{property.testValue}</td>\n                <td style={style}>{property.referenceValue}</td>\n            </tr>\n        );\n    },\n\n    render: function () {\n        return (\n            <div>\n                <div id=\"contrastExperimentDescription\" style={{fontWeight: \"bold\", color: \"blue\", textAlign: \"center\"}}>{this.props.experimentDescription}</div>\n                <div id=\"contrastDescription\" style={{textAlign: \"center\"}}>{this.props.contrastDescription}</div>\n                <table style={{padding: \"0px\", margin: \"0px\", width: \"100%\"}}>\n                    <thead>\n                        <tr>\n                            <th>Property</th>\n                            <th>Test value (N={this.props.testReplicates})</th>\n                            <th>Reference value (N={this.props.referenceReplicates})</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.properties.map(this.propertyRow)}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n});\n\n//*------------------------------------------------------------------*\n\nmodule.exports = ContrastTooltip;\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/~/expression-atlas-contrast-tooltips/src/ContrastTooltip.jsx","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../css-loader/index.js!./gxaContrastTooltip.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../css-loader/index.js!./gxaContrastTooltip.css\", function() {\n\t\t\tvar newContent = require(\"!!../../css-loader/index.js!./gxaContrastTooltip.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/expression-atlas-contrast-tooltips/src/gxaContrastTooltip.css\n// module id = 3611\n// module chunks = 2 7","exports = module.exports = require(\"../../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".gxaContrastTooltip {\\n    position: relative;\\n    border: solid transparent;\\n    color: darkslategray;\\n    padding: 2px;\\n    font: 10px Verdana, Helvetica, Arial, sans-serif;\\n    max-width: 500px;\\n}\\n\\n.gxaContrastTooltip table {\\n    margin: 0; /* overrides ebi-visual.css:134 */\\n    background-color: white;\\n    border: 1px solid lightgrey;\\n    border-collapse: collapse;\\n    font-size: 0.8em;\\n}\\n\\n.gxaContrastTooltip th {\\n    border-bottom: 1px solid lightgrey;\\n    background-color: floralwhite;\\n}\\n\\n.gxaContrastTooltip td {\\n    border: 1px solid lightgrey;\\n}\\n\\n.gxaContrastTooltip td, .gxaContrastTooltip th {\\n    vertical-align: middle;\\n    padding: 8px;\\n}\\n\\n#contrastExperimentDescription {\\n    font-size: small;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/css-loader!./atlas_bundles/heatmap/~/expression-atlas-contrast-tooltips/src/gxaContrastTooltip.css\n// module id = 3612\n// module chunks = 2 7","\"use strict\";\n\n//*------------------------------------------------------------------*\n\nvar $ = require('jquery');\nrequire('jquery-ui-bundle');\n\n//*------------------------------------------------------------------*\n\nrequire('./genePropertiesTooltipModule.css');\n\n//*------------------------------------------------------------------*\n\n/**\n * @param {Object} options\n * @param {string} options.contextRoot\n * @param {string} options.geneName\n * @param {string} options.identifier\n * @param {Object} options.element\n */\nfunction initTooltip(options){\n\n    $(options.element).attr(\"title\", \"\").tooltip({\n\n        hide: false,\n\n        show: false,\n\n        tooltipClass: \"gxaGeneNameTooltip\",\n\n        close: function() {\n            $(\".gxaGeneNameTooltip\").remove();\n        },\n\n        position: { my: \"left+10 top\", at: \"right\"},\n\n        content: function (callback) {\n            if (options.identifier)  {\n                $.ajax({\n                    url: options.contextRoot + \"/rest/genename-tooltip\",\n                    data: {\n                        geneName: options.geneName,\n                        identifier: options.identifier\n                    },\n                    type:\"GET\",\n                    success: function (response) {\n                        if (!response) {\n                            callback(\"Missing properties for id = \" + options.identifier + \" in Solr.\");\n                        }\n\n                        callback(response);\n                    }\n                }).fail(function (data) {\n                    console.log(\"ERROR:  \" + data);\n                    callback(\"ERROR: \" + data);\n                });\n            }\n        }\n\n    });\n\n}\n\n//*------------------------------------------------------------------*\n\nexports.init = function(contextRoot, element, identifier, geneName) {\n    initTooltip({contextRoot: contextRoot, element: element, identifier: identifier, geneName: geneName});\n};\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/src/genePropertiesTooltipModule.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js!./genePropertiesTooltipModule.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./genePropertiesTooltipModule.css\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./genePropertiesTooltipModule.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/src/genePropertiesTooltipModule.css\n// module id = 3614\n// module chunks = 2 7","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".gxaGeneNameTooltip {\\n    border: solid transparent;\\n    color: darkslategray;\\n    padding: 2px;\\n    font: 10px Verdana, Helvetica, Arial, sans-serif;\\n    background: floralwhite;\\n}\\n\\nspan.gxaGenePropertyLabel {\\n    color: brown;\\n    font-weight: bold;\\n    display: inline-block;\\n    text-align: left;\\n}\\n\\n.gxaPropertyValueMarkup {\\n    text-align: center;\\n    background-color: rgb(223, 213, 213);\\n\\n}\\n\\n.gxaGeneNameTooltip {\\n    text-align: justify;\\n}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/css-loader!./atlas_bundles/heatmap/src/genePropertiesTooltipModule.css\n// module id = 3615\n// module chunks = 2 7","\"use strict\";\n\n//*------------------------------------------------------------------*\n\nvar React = require('react');\nvar ReactDOMServer = require('react-dom/server');\n\nvar $ = require('jquery');\nrequire('jquery-ui-bundle');\n\n//*------------------------------------------------------------------*\n\nvar FactorTooltip = require('./FactorTooltip.jsx');\n\n//*------------------------------------------------------------------*\n\nrequire('./factorTooltipModule.css');\n\n//*------------------------------------------------------------------*\n\n/**\n * @param {Object} options\n * @param {string} options.contextRoot\n * @param {string} options.accessKey\n * @param {string} options.experimentAccession\n * @param {string} options.assayGroupId\n * @param {Object} options.element\n */\nfunction initTooltip(options) {\n\n    $(options.element).attr(\"title\", \"\").tooltip({\n\n        hide:false,\n\n        show:false,\n\n        tooltipClass: \"gxaFactorTooltip\",\n\n        close: function() {\n            $(\".gxaFactorTooltip\").remove();\n        },\n\n        content: function (callback) {\n            $.ajax({\n                url: options.contextRoot + \"/rest/assayGroup-summary\",\n                data:{\n                    experimentAccession: options.experimentAccession,\n                    assayGroupId: options.assayGroupId,\n                    accessKey: options.accessKey\n                },\n                type:\"GET\",\n                success:function (data) {\n                    var html =\n                        ReactDOMServer.renderToString(\n                            React.createElement(\n                                FactorTooltip,\n                                {\n                                    properties: data.properties,\n                                    replicates: data.replicates\n                                }\n                            )\n                        );\n                    callback(html);\n                }\n            }).fail(function (data) {\n                    console.log(\"ERROR:  \" + data);\n                    callback(\"ERROR: \" + data);\n            });\n        }\n    });\n}\n\n//*------------------------------------------------------------------*\n\nexports.init = function (contextRoot, accessKey, element, experimentAccession, assayGroupId) {\n    initTooltip({contextRoot: contextRoot, accessKey: accessKey, element: element, experimentAccession: experimentAccession, assayGroupId: assayGroupId});\n};\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/src/factorTooltipModule.js","\"use strict\";\n\n//*------------------------------------------------------------------*\n\nvar React = require('react');\n\n//*------------------------------------------------------------------*\n\nvar FactorTooltip = React.createClass({\n\n    propertyRow: function (property) {\n        if (!property.testValue) {\n            return null;\n        }\n\n        function isFactor(property) {\n            return property.contrastPropertyType === 'FACTOR';\n        }\n\n        var style = {'whiteSpace': 'normal'};\n\n        if (isFactor(property)) {\n            style['fontWeight'] = 'bold';\n        } else {\n            style['color'] = 'gray';\n        }\n\n        return (\n            <tr key={property.propertyName}>\n                <td style={style}>{property.propertyName}</td>\n                <td style={style}>{property.testValue}</td>\n            </tr>\n        );\n    },\n\n    render: function () {\n        return (\n            <div>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Property</th>\n                            <th>Value (N={this.props.replicates})</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.properties.map(this.propertyRow)}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n});\n\n//*------------------------------------------------------------------*\n\nmodule.exports = FactorTooltip;\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/src/FactorTooltip.jsx","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js!./factorTooltipModule.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./factorTooltipModule.css\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./factorTooltipModule.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/src/factorTooltipModule.css\n// module id = 3618\n// module chunks = 2 7","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".gxaFactorTooltip {\\n    border: solid transparent;\\n    color: darkslategray;\\n    padding: 2px;\\n    font: 10px Verdana, Helvetica, Arial, sans-serif;\\n    max-width: 600px;\\n}\\n\\n.gxaFactorTooltip table {\\n    margin: 0; /* overrides ebi-visual.css:134 */\\n    background-color: white;\\n    border: 1px solid lightgrey;\\n    border-collapse: collapse;\\n}\\n\\n.gxaFactorTooltip th {\\n    border-bottom: 1px solid lightgrey;\\n    background-color: floralwhite;\\n}\\n\\n.gxaFactorTooltip td {\\n    border: 1px solid lightgrey;\\n    white-space: nowrap;\\n}\\n\\n.gxaFactorTooltip td, .gxaFactorTooltip th {\\n    vertical-align: middle;\\n    padding: 8px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/css-loader!./atlas_bundles/heatmap/src/factorTooltipModule.css\n// module id = 3619\n// module chunks = 2 7","\"use strict\";\n\n//*------------------------------------------------------------------*\n\nvar $ = require('jquery');\n\n//*------------------------------------------------------------------*\n\nfunction StickyHeaderModule(table, stickyIntersect, stickyColumn, stickyHeadRow, stickyWrap, tableHeader) {\n    var $t\t             = $(table),\n        $stickyIntersect = $(stickyIntersect),\n        $stickyColumn    = $(stickyColumn),\n        $stickyHeadRow   = $(stickyHeadRow),\n        $stickyWrap      = $(stickyWrap),\n        $tableHeader     = $(tableHeader);\n\n    var calculateAllowance = createStickyAllowanceCallback($t, $stickyHeadRow);\n    var stickyReposition = createStickyRepositionCallback($t, $stickyIntersect, $stickyColumn, $stickyHeadRow, $stickyWrap, $tableHeader, calculateAllowance);\n    var setWidthAndHeight = createSetStickyWidthHeight($t, $stickyIntersect, $stickyColumn, $stickyHeadRow, $stickyWrap);\n    var setWidthsAndReposition = createSetStickyWidthHeightAndRepositionCallback(setWidthAndHeight, stickyReposition);\n\n    return {\n        calculateAllowance: calculateAllowance,\n        stickyReposition: stickyReposition,\n        setWidthAndHeight: setWidthAndHeight,\n        setWidthsAndReposition: setWidthsAndReposition\n    };\n\n    function createSetStickyWidthHeight($t, $stickyIntersect, $stickyColumn, $stickyHeadRow, $stickyWrap) {\n        return function () {\n            $t.find(\"thead th\").each(\n                function (i) {\n                    $stickyHeadRow.find(\"th\").eq(i).width($(this).width());\n                }\n            ).end().find(\"tr\").each(\n                function (i) {\n                    $stickyColumn.find(\"tr\").eq(i).height($(this).height());\n                    $stickyIntersect.find(\"tr\").eq(i).height($(this).height());\n                }\n            );\n\n            $stickyHeadRow.width($stickyWrap.width()).find(\"table\").width($t.width());\n            $stickyIntersect.find(\"table\").outerWidth($t.find(\"thead th\").eq(0).outerWidth());\n            $stickyColumn.find(\"table\").outerWidth($t.find(\"thead th\").eq(0).outerWidth());\n\n            // Set width of sticky table col\n            $stickyIntersect.find(\"tr:nth-child(2) th\").each(function (i) {\n                $(this).width($t.find(\"tr:nth-child(2) th\").eq(i).width());\n            });\n        }\n    }\n\n    function createStickyRepositionCallback($t, $stickyIntersect, $stickyColumn, $stickyHeadRow, $stickyWrap, $tableHeader, stickyAllowanceCallback) {\n        return function() {\n            var $w = $(window);\n\n            // Set position sticky col\n            $stickyHeadRow.add($stickyIntersect).add($stickyColumn).css({\n                left: $stickyWrap.offset().left,\n                top: $stickyWrap.offset().top\n            });\n\n            var allowance = stickyAllowanceCallback();\n\n            $stickyHeadRow.find(\"table\").css({\n                left: -$stickyWrap.scrollLeft()\n            });\n            $stickyColumn.css({\n                top: $stickyWrap.offset().top - $w.scrollTop(),\n                left: $stickyWrap.offset().left\n            });\n\n            // 1. Position sticky header based on viewport scrollTop\n            if ($w.scrollTop() + $tableHeader.outerHeight() > $t.offset().top &&\n                $w.scrollTop() + $tableHeader.outerHeight() < $t.offset().top + $t.outerHeight() - allowance) {\n                // When top of viewport is in the table itself\n                $stickyHeadRow.add($stickyIntersect).css({\n                    visibility: \"visible\",\n                    top: $tableHeader.outerHeight()\n                });\n            } else if ($w.scrollTop() + $tableHeader.outerHeight() > $t.offset().top + $t.outerHeight() - allowance) {\n                $stickyHeadRow.add($stickyIntersect).css({\n                    visibility: \"visible\",\n                    top: $t.offset().top + $t.outerHeight() - allowance - $w.scrollTop()\n                });\n            } else {\n                // When top of viewport is above or below table\n                $stickyHeadRow.add($stickyIntersect).css({\n                    visibility: \"hidden\",\n                    top: $stickyWrap.offset().top - $w.scrollTop()\n                });\n            }\n\n            // 2. Now deal with positioning of sticky column\n            if($stickyWrap.scrollLeft() > 0) {\n                // When left of wrapping parent is out of view\n                $stickyColumn.css({\n                    visibility: \"visible\",\n                    \"z-index\": 40\n                });\n            } else {\n                $stickyColumn.css({\n                    visibility: \"hidden\",\n                    \"z-index\": -5\n                });\n            }\n        }\n    }\n\n    function createSetStickyWidthHeightAndRepositionCallback(setWidthAndHeightCallback, stickyRepositionCallback) {\n        return function () {\n            setWidthAndHeightCallback();\n            stickyRepositionCallback();\n        }\n    }\n\n    function createStickyAllowanceCallback($t, $stickyHeadRow) {\n        return function() {\n            var rowHeight = 0;\n            // Calculate allowance\n            $t.find(\"tbody tr:lt(1)\").each(function () {\n                rowHeight += $(this).height();\n            });\n            return rowHeight + $stickyHeadRow.height();\n        }\n    }\n}\n\n//*------------------------------------------------------------------*\n\nmodule.exports = StickyHeaderModule;\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/src/stickyHeaderModule.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js!./stickyHeaderModule.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./stickyHeaderModule.css\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./stickyHeaderModule.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/src/stickyHeaderModule.css\n// module id = 3621\n// module chunks = 2 7","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".gxaStickyTableWrap {\\n    overflow-x: auto;\\n    overflow-y: hidden;\\n    position: relative;\\n    width: 100%;\\n}\\n\\n.gxaStickyTableWrap div[class^='gxaSticky'] {\\n    overflow: hidden;\\n}\\n.gxaStickyTableWrap tfoot {\\n    display: none;\\n}\\n.gxaStickyTableWrap div table {\\n    margin: 0;\\n    position: relative;\\n    width: auto; /* Prevent table from stretching to full size */\\n    border-collapse: collapse;\\n}\\n.gxaStickyTableWrap .gxaStickyTableHeader,\\n.gxaStickyTableWrap .gxaStickyTableColumn,\\n.gxaStickyTableWrap .gxaStickyTableIntersect {\\n    visibility: hidden;\\n    position: fixed;\\n    z-index: 40;\\n}\\n.gxaStickyTableWrap .gxaStickyTableHeader {\\n    z-index: 50;\\n    width: 100%; /* Force stretch */\\n}\\n.gxaStickyTableWrap .gxaStickyTableIntersect {\\n    z-index: 60;\\n}\\n.gxaStickyTableWrap td,\\n.gxaStickyTableWrap th {\\n    box-sizing: border-box;\\n}\\n.gxaStickyTableWrap thead th {\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -ms-user-select: none;\\n}\\n.gxaStickyEnabled {\\n    margin: 0;\\n    width: auto;\\n}\\n\\n.wrapper-sticky {\\n    z-index: 45;\\n}\\n\\n/* To hide sticky column and intersect when screen gets too narrow */\\n@media only screen and (max-width: 768px) {\\n    .gxaStickyTableColumn, .gxaStickyTableIntersect {\\n        display: none;\\n    }\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/css-loader!./atlas_bundles/heatmap/src/stickyHeaderModule.css\n// module id = 3622\n// module chunks = 2 7","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js!./Heatmap.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./Heatmap.css\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./Heatmap.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/src/Heatmap.css\n// module id = 3623\n// module chunks = 2 7","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".gxaHeatmapMatrixTopLeftCorner {\\n    position: relative;\\n    display: table;\\n    height: 110px;\\n    width: 100%;\\n    min-width: 160px;\\n}\\n\\n.gxaTableGrid {\\n    color: #404040;\\n    background-color: white;\\n    border: 1px solid #cdcdcd !important;\\n    border-spacing: 0;\\n    empty-cells: show;\\n    height: 100%;\\n    text-align: left;\\n    width: auto;\\n    border-collapse: collapse;\\n}\\n\\n.gxaTableGrid>tbody>tr>td, .gxaTableGrid>thead>tr>td {\\n    color: #3D3D3D;\\n    vertical-align: middle;\\n    border: 1px solid #cdcdcd !important;\\n    height: 25px;\\n    width: 25px;\\n    white-space: nowrap;\\n}\\n\\nth.gxaVerticalHeaderCell, .gxaHorizontalHeaderCell {\\n    font-weight: normal;\\n    background-color: rgb(237, 246, 246) !important;\\n}\\n\\nth.gxaHoverableHeader:hover, th.gxaHeaderHover {\\n    background-color: #deebeb !important;\\n}\\n\\nth.gxaSelectableHeader:hover {\\n    cursor: pointer;\\n}\\n\\nth.gxaVerticalHeaderCell-selected, th.gxaVerticalHeaderCell-selected:hover, th.gxaHorizontalHeaderCell-selected, th.gxaHorizontalHeaderCell-selected:hover {\\n    background-color: rgb(181, 234, 234) !important;\\n    border: 1px solid #cdcdcd;\\n    padding:5px;\\n}\\n\\nth.gxaHorizontalHeaderCell {\\n    border: 1px solid #cdcdcd;\\n    white-space: nowrap;\\n    padding:5px;\\n    text-align: left !important;\\n}\\n\\ntr.gxaProteomicsExperiment td.gxaHorizontalHeaderCell {\\n    background-color: rgb(210, 233, 233) !important;\\n}\\n\\ntr.gxaProteomicsExperiment td.gxaHorizontalHeaderCell-selected, tr.gxaProteomicsExperiment td.gxaHorizontalHeaderCell:hover {\\n    background-color: rgb(200, 220, 220) !important;\\n}\\n\\n.gxaHeatmapCell {\\n    font-size: 9px;\\n    background-color: white;\\n    margin: 4px;\\n    padding: 2px;\\n    white-space: nowrap;\\n    text-align: center;\\n}\\n\\nth.gxaHeatmapTableDesignElement {\\n    font-weight: normal;\\n    text-align: left;\\n    border: 1px solid #CDCDCD;\\n}\\n\\n.gxaHeatmapCountAndLegend {\\n    background: white;\\n}\\n\\n.csstransforms .rotated_cell {\\n    height: 130px;\\n    border: 1px solid #cdcdcd;\\n    vertical-align: bottom;\\n    padding-bottom: 10px\\n}\\n\\n.csstransforms .rotate_text {\\n    position: relative;\\n    top: 27px;\\n    width: 25px;\\n    padding-top: 5px;\\n    white-space: nowrap;\\n    -moz-transform: rotate(-90deg);\\n    -moz-transform-origin: top left;\\n    -ms-transform: rotate(-90deg);\\n    -ms-transform-origin: top left;\\n    -webkit-transform: rotate(-90deg);\\n    -webkit-transform-origin: top left;\\n    -o-transform: rotate(-90deg);\\n    -o-transform-origin: top left;\\n}\\n\\n.csstransforms .rotate_tick {\\n    -moz-transform: rotate(-270deg);\\n    -webkit-transform: rotate(-270deg);\\n    -ms-transform: rotate(-270deg);\\n    -o-transform: rotate(-270deg);\\n}\\n\\n.gxaNoTextButton {\\n    border: 1px solid #ccc !important; /* overrides ebi-visual.css */\\n}\\n\\n.gxaNoTextButton .ui-button-text {\\n    padding: 2px;\\n}\\n\\n.gxaFeedbackBoxWrapper {\\n  margin-top: 15px;\\n}\\n\\n.gxaDisplayCoexpressionOffer {\\n  margin-top: 30px;\\n}\\n\\n.gxaDisplayCoexpressionOffer .gxaSlider {\\n  width: 250px;\\n  margin: 15px;\\n  padding-bottom: 20px;\\n}\\n\\n.gxaDisplayCoexpressionOffer p {\\n  font-size: 93%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/css-loader!./atlas_bundles/heatmap/src/Heatmap.css\n// module id = 3624\n// module chunks = 2 7","\"use strict\";\n\n//*------------------------------------------------------------------*\n\nmodule.exports = {\n    BASELINE: { isBaseline: true, heatmapTooltip: \"#heatMapTableCellInfo-baseline\" },\n    PROTEOMICS_BASELINE: { isBaseline: true, isProteomics: true, heatmapTooltip: \"#heatMapTableCellInfo-proteomics\" },\n    DIFFERENTIAL: { isDifferential: true, heatmapTooltip: \"#heatMapTableCellInfo-differential\" },\n    MULTIEXPERIMENT: { isMultiExperiment: true, heatmapTooltip: \"#heatMapTableCellInfo-multiexperiment\" }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/src/experimentTypes.js","module.exports = require('./src/heatmapAnatomogramRenderer.js');\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/index.js","\"use strict\";\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\n\n//*------------------------------------------------------------------*\n\nvar EventEmitter = require('events');\n\nvar HeatmapAnatomogramContainer = require('./HeatmapAnatomogramContainer.jsx');\n\nvar ExperimentTypes = require('./experimentTypes.js');\n\n//*------------------------------------------------------------------*\n\n/**\n * @param {Object}      options\n * @param {string}          options.proxyPrefix - optionally set as \"http(s?)://\" or to proxy URL\n * @param {string}          options.selfHosted - Set this as true if you want to host our content yourself, but have outwards links pointing to our original site\n * @param {boolean=}        options.disableGoogleAnalytics - Disable Google Analytics: required by CTTV\n * @param {string=}         options.atlasHost - Atlas host with port (note: don’t include port)\n * @param {string}          options.params\n * @param {boolean=}        options.isMultiExperiment\n * @param {boolean=}        options.showAnatomogram\n * @param {boolean=}        options.isWidget\n * @param {string | Object} options.target - a <div> id or a DOM element, as returned by ReactDOM.findDOMNode()\n * @param {function}        options.fail - Callback to run if the AJAX request to the server fails. (jqXHR, textStatus)\n */\nexports.render = function(options) {\n\n  var atlasHost = options.atlasHost === undefined ? \"https://www.ebi.ac.uk\" : options.atlasHost,\n      atlasPath = \"/gxa\";\n\n  var atlasBaseURL =\n      (atlasHost.indexOf(\"http://\") === 0 || atlasHost.indexOf(\"https://\") === 0\n        ? \"\"\n        : options.proxyPrefix || \"https://\")\n      + atlasHost\n      + atlasPath;\n\n  var linksAtlasBaseURL = options.selfHosted? (options.proxyPrefix || \"https://\")+ \"www.ebi.ac.uk/gxa\": atlasBaseURL;\n\n    var endpointPath = options.isMultiExperiment ? \"/widgets/heatmap/baselineAnalytics\" : \"/widgets/heatmap/referenceExperiment\";\n\n    var sourceURL = atlasBaseURL + endpointPath + \"?\" + options.params;\n\n    var anatomogramEventEmitter = new EventEmitter();\n    anatomogramEventEmitter.setMaxListeners(0);\n\n    ReactDOM.render(\n        React.createElement(\n            HeatmapAnatomogramContainer,\n            {   key: JSON.stringify(options.params),\n                sourceURL: sourceURL,\n                atlasBaseURL: atlasBaseURL,\n                pathToFolderWithBundledResources:linksAtlasBaseURL+\"/resources/js-bundles/\",\n                linksAtlasBaseURL: linksAtlasBaseURL,\n                type: options.isMultiExperiment ? ExperimentTypes.MULTIEXPERIMENT : ExperimentTypes.BASELINE,\n                showAnatomogram: options.showAnatomogram === undefined ? true : options.showAnatomogram,\n                isWidget: options.isWidget === undefined ? true : options.isWidget,\n                disableGoogleAnalytics: options.disableGoogleAnalytics === undefined ? false : options.disableGoogleAnalytics,\n                fail: options.fail,\n                anatomogramEventEmitter: anatomogramEventEmitter\n            }\n        ),\n        (typeof options.target === \"string\") ? document.getElementById(options.target) : options.target\n    );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/src/heatmapAnatomogramRenderer.js","\"use strict\";\n\n//*------------------------------------------------------------------*\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\n\nvar $ = require('jquery');\nrequire('jquery-hc-sticky');\n\nvar URI = require('urijs');\n\n//*------------------------------------------------------------------*\n\nvar Anatomogram = require('anatomogram');\nvar Heatmap = require('./Heatmap.jsx');\nvar ExperimentsList = require('./ExperimentsList.jsx');\nvar ExperimentTypes = require('./experimentTypes.js');\n\n//*------------------------------------------------------------------*\n\nrequire('./HeatmapAnatomogramContainer.css');\n\n//*------------------------------------------------------------------*\n\nvar ExperimentDescription = React.createClass({\n    propTypes: {\n        linksAtlasBaseURL: React.PropTypes.string.isRequired,\n        experiment: React.PropTypes.shape({\n            URL: React.PropTypes.string.isRequired,\n            description: React.PropTypes.string.isRequired,\n            species: React.PropTypes.string.isRequired\n        }).isRequired\n    },\n\n    render: function () {\n\n        var experimentURL = this.props.linksAtlasBaseURL + this.props.experiment.URL;\n\n        return (\n            <div style={{width: \"100%\", paddingBottom: \"20px\"}}>\n                <div id=\"experimentDescription\">\n                    <a id=\"goto-experiment\" className=\"gxaThickLink\" title=\"Experiment Page\" href={experimentURL}>{this.props.experiment.description}</a>\n                </div>\n                <div id=\"experimentOrganisms\">Organism: <span style={{\"fontStyle\":\"italic\"}}>{this.props.experiment.species}</span></div>\n            </div>\n        );\n    }\n\n});\nvar AsynchronouslyLoadedHeatmapAnatomogramContainer = React.createClass({\n  getDefaultProps: function(){\n    return {\n      referenceToAnatomogramContainer: \"anatomogramContainer\"\n    }\n  },\n\n\n  _ontologyIdsForTissuesExpressedInAllRows: function(){\n    //TODO be less copypastey\n    var _expressedFactors= function(expressedFactorsPerRow){\n      var o = expressedFactorsPerRow;\n      var vs = Object.keys(o).map(function(e){return o[e];});\n      return (\n        [].concat.apply([],vs)\n        .filter(function uniq(e, ix, self) {\n            return self.indexOf(e) === ix;\n        })\n      );\n    };\n    var _expressedFactorsPerRow = function(profileRows){\n      return (\n        profileRows\n        .reduce(function(result,row){\n          result[row.name] =\n            row.expressions.filter(function(expression){\n              return expression.value;\n            })\n            .map(function(expression){\n              return expression.svgPathId\n            });\n          return result;\n        },{})\n      );\n    };\n    return _expressedFactors(_expressedFactorsPerRow(this.props.profiles.rows));\n  },\n  _ontologyIdsForTissuesExpressedInRow: function(rowTitle){\n    //TODO be more sane\n    var _expressedFactorsPerRow = function(profileRows){\n      return (\n        profileRows\n        .reduce(function(result,row){\n          result[row.name] =\n            row.expressions.filter(function(expression){\n              return expression.value;\n            })\n            .map(function(expression){\n              return expression.svgPathId\n            });\n          return result;\n        },{})\n      );\n    };\n    return (\n      _expressedFactorsPerRow(this.props.profiles.rows)[rowTitle]\n    )\n  },\n  render: function (){\n\n    var anatomogramExpressedTissueColour = this.props.type.isMultiExperiment ? \"red\" : \"gray\";\n    var anatomogramHoveredTissueColour = this.props.type.isMultiExperiment ? \"indigo\" : \"red\";\n    var anatomogramConfig = {\n      pathToFolderWithBundledResources:this.props.pathToFolderWithBundledResources,\n      anatomogramData: this.props.anatomogramData,\n      expressedTissueColour: anatomogramExpressedTissueColour,\n      hoveredTissueColour: anatomogramHoveredTissueColour,\n      idsExpressedInExperiment:this._ontologyIdsForTissuesExpressedInAllRows(),\n      eventEmitter: this.props.anatomogramEventEmitter,\n      atlasBaseURL: this.props.atlasBaseURL\n    }\n\n    var homoSapiensCellLine = this.props.heatmapConfig.species === \"homo sapiens\" && new URI(this.props.sourceURL).search(true).source === \"CELL_LINE\";\n    var Component, componentProps;\n    if(homoSapiensCellLine){\n      Component = ExperimentsList;\n      componentProps = {\n         profiles:this.props.profiles,\n         atlasBaseURL:this.props.atlasBaseURL,\n         linksAtlasBaseURL:this.props.linksAtlasBaseURL,\n         geneQuery:this.props.heatmapConfig.geneQuery\n      };\n    } else {\n      Component = Heatmap;\n      componentProps = {\n        type:this.props.type,\n                 heatmapConfig:this.props.heatmapConfig,\n                 columnHeaders:this.props.columnHeaders,\n                 profiles:this.props.profiles,\n                 geneSetProfiles:this.props.geneSetProfiles,\n                 anatomogramEventEmitter:this.props.anatomogramEventEmitter,\n                 atlasBaseURL:this.props.atlasBaseURL,\n                 linksAtlasBaseURL:this.props.linksAtlasBaseURL,\n                 googleAnalyticsCallback:this.props.googleAnalyticsCallback\n      };\n    }\n    var Wrapped = Anatomogram.wrapComponent(anatomogramConfig, Component, componentProps);\n    return (\n      this.props.anatomogramData\n          ? <Wrapped ref={this.props.referenceToAnatomogramContainer}/>\n          :<Component {...componentProps} />\n    )\n  },\n  componentDidMount: function(){\n    this.props.anatomogramEventEmitter\n    .addListener('gxaHeatmapColumnHoverChange',\n      function(columnId){\n        this.refs[this.props.referenceToAnatomogramContainer].setState({ontologyIdsForComponentContentUnderFocus:columnId?[columnId]:[]});\n      }.bind(this));\n    this.props.anatomogramEventEmitter\n    .addListener('gxaHeatmapRowHoverChange',\n      function(rowId){\n        this.refs[this.props.referenceToAnatomogramContainer].setState({ontologyIdsForComponentContentUnderFocus: rowId? this._ontologyIdsForTissuesExpressedInRow(rowId): []});\n    }.bind(this));\n  }\n});\nvar HeatmapAnatomogramContainer = React.createClass({\n    propTypes: {\n        pathToFolderWithBundledResources: React.PropTypes.string.isRequired,\n        sourceURL: React.PropTypes.string.isRequired,\n        atlasBaseURL: React.PropTypes.string.isRequired,\n        linksAtlasBaseURL: React.PropTypes.string.isRequired,\n        type: React.PropTypes.oneOf([\n            ExperimentTypes.BASELINE, ExperimentTypes.MULTIEXPERIMENT, ExperimentTypes.DIFFERENTIAL, ExperimentTypes.PROTEOMICS_BASELINE\n        ]).isRequired,\n        showAnatomogram: React.PropTypes.bool.isRequired,\n        isWidget: React.PropTypes.bool.isRequired,\n        disableGoogleAnalytics: React.PropTypes.bool.isRequired,\n        fail: React.PropTypes.func,\n        googleAnalyticsCallback: React.PropTypes.func,\n        anatomogramEventEmitter: React.PropTypes.object.isRequired,\n        facetsEventEmitter: React.PropTypes.object,\n    },\n\n    render: function () {\n\n        var geneURL =\n            this.props.linksAtlasBaseURL + \"/query\" +\n            \"?geneQuery=\" + this.state.heatmapConfig.geneQuery +\n            \"&organism=\" + this.state.heatmapConfig.species;\n\n\n        return (\n            <div ref=\"this\">\n\n                { this.state.experimentData ?\n                    <ExperimentDescription experiment={this.state.experimentData} linksAtlasBaseURL={this.props.linksAtlasBaseURL}/>\n                    : null\n                }\n\n                { this.state.heatmapConfig\n                  ?   <AsynchronouslyLoadedHeatmapAnatomogramContainer {...this.props} {...this.state} />\n                  :\n                    <div ref=\"loadingImagePlaceholder\">\n                        <img src={this.props.atlasBaseURL + \"/resources/images/loading.gif\"}/>\n                    </div>\n                }\n\n                { this.props.isWidget ?\n                    <div><p><a href={geneURL}>See more expression data at Expression Atlas.</a>\n                        <br/>This expression view is provided by <a href={this.props.linksAtlasBaseURL}>Expression Atlas</a>.\n                        <br/>Please direct any queries or feedback to <a href=\"mailto:arrayexpress-atlas@ebi.ac.uk\">arrayexpress-atlas@ebi.ac.uk</a></p>\n                    </div>\n                    :\n                    null\n                }\n\n            </div>\n        );\n    },\n\n    getInitialState: function() {\n        return {\n            heatmapConfig: '',\n            columnHeaders: [],\n            profiles: {\n                rows: [],\n                minExpressionLevel: 0,\n                maxExpressionLevel: 0\n            },\n            jsonCoexpressions:[],\n            geneSetProfiles: {},\n            anatomogramData: {},\n            experimentData: '',\n            googleAnalyticsCallback: function (){}\n        }\n    },\n\n    _updateStateAsynchronously: function (data) {\n        this.setState({\n            heatmapConfig: data.config,\n            columnHeaders: data.columnHeaders,\n            profiles: data.profiles,\n            jsonCoexpressions : data.jsonCoexpressions,\n            geneSetProfiles: data.geneSetProfiles,\n            anatomogramData: data.anatomogram,\n            experimentData: data.experiment\n        });\n    },\n\n    componentDidMount: function() {\n        var handleError = function(jqXHR, textStatus, errorThrown) {\n            if (this.props.fail) {\n                this.props.fail(jqXHR, textStatus, errorThrown);\n            } else if (textStatus === \"parsererror\") {\n                $(ReactDOM.findDOMNode(this.refs.this)).html('<div class=\"gxaError\">Could not parse JSON response</div>');\n            } else {\n                $(ReactDOM.findDOMNode(this.refs.this)).html('<div class=\"gxaError\">' + jqXHR.responseText + '</div>');\n            }\n        }.bind(this);\n\n        var handleSuccess = function(data) {\n            if (\"error\" in data) {\n                handleError({responseText: data.error});\n            } else {\n                this._updateStateAsynchronously(data);\n            }\n        }.bind(this);\n\n        var httpRequest = {\n            url: this.props.sourceURL,\n            dataType: \"json\",\n            method: \"GET\",\n            success: handleSuccess,\n            error: handleError\n        };\n\n        this.serverRequest = $.ajax(httpRequest);\n\n        if (!this.props.disableGoogleAnalytics) {\n            (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n            (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n            m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n            })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n\n            ga('create', 'UA-37676851-1', 'auto');\n            ga('send', 'pageview');\n            this.setState({googleAnalyticsCallback: ga});\n        }\n    },\n\n    componentDidUpdate: function() {\n        // This mounted component is only going to be updated when changing this.props.showAnatomogram, so we only take\n        // care of the anatomogram, the legend and the sticky header (the last two through an event)\n        var $anatomogram = $(ReactDOM.findDOMNode(this.refs.anatomogramEnsembl));\n\n        if (this.props.showAnatomogram) {\n            $anatomogram.hcSticky({responsive: true});\n        }\n\n        $(window).trigger(\"gxaResizeHeatmapAnatomogramHeader\");\n    },\n    componentWillUnmount: function() {\n        this.serverRequest.abort();\n    }\n});\n\n//*------------------------------------------------------------------*\n\nmodule.exports = HeatmapAnatomogramContainer;\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/src/HeatmapAnatomogramContainer.jsx","/*!\n * URI.js - Mutating URLs\n *\n * Version: 1.17.1\n *\n * Author: Rodney Rehm\n * Web: http://medialize.github.io/URI.js/\n *\n * Licensed under\n *   MIT License http://www.opensource.org/licenses/mit-license\n *\n */\n(function (root, factory) {\n  'use strict';\n  // https://github.com/umdjs/umd/blob/master/returnExports.js\n  if (typeof exports === 'object') {\n    // Node\n    module.exports = factory(require('./punycode'), require('./IPv6'), require('./SecondLevelDomains'));\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['./punycode', './IPv6', './SecondLevelDomains'], factory);\n  } else {\n    // Browser globals (root is window)\n    root.URI = factory(root.punycode, root.IPv6, root.SecondLevelDomains, root);\n  }\n}(this, function (punycode, IPv6, SLD, root) {\n  'use strict';\n  /*global location, escape, unescape */\n  // FIXME: v2.0.0 renamce non-camelCase properties to uppercase\n  /*jshint camelcase: false */\n\n  // save current URI variable, if any\n  var _URI = root && root.URI;\n\n  function URI(url, base) {\n    var _urlSupplied = arguments.length >= 1;\n    var _baseSupplied = arguments.length >= 2;\n\n    // Allow instantiation without the 'new' keyword\n    if (!(this instanceof URI)) {\n      if (_urlSupplied) {\n        if (_baseSupplied) {\n          return new URI(url, base);\n        }\n\n        return new URI(url);\n      }\n\n      return new URI();\n    }\n\n    if (url === undefined) {\n      if (_urlSupplied) {\n        throw new TypeError('undefined is not a valid argument for URI');\n      }\n\n      if (typeof location !== 'undefined') {\n        url = location.href + '';\n      } else {\n        url = '';\n      }\n    }\n\n    this.href(url);\n\n    // resolve to base according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#constructor\n    if (base !== undefined) {\n      return this.absoluteTo(base);\n    }\n\n    return this;\n  }\n\n  URI.version = '1.17.1';\n\n  var p = URI.prototype;\n  var hasOwn = Object.prototype.hasOwnProperty;\n\n  function escapeRegEx(string) {\n    // https://github.com/medialize/URI.js/commit/85ac21783c11f8ccab06106dba9735a31a86924d#commitcomment-821963\n    return string.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n  }\n\n  function getType(value) {\n    // IE8 doesn't return [Object Undefined] but [Object Object] for undefined value\n    if (value === undefined) {\n      return 'Undefined';\n    }\n\n    return String(Object.prototype.toString.call(value)).slice(8, -1);\n  }\n\n  function isArray(obj) {\n    return getType(obj) === 'Array';\n  }\n\n  function filterArrayValues(data, value) {\n    var lookup = {};\n    var i, length;\n\n    if (getType(value) === 'RegExp') {\n      lookup = null;\n    } else if (isArray(value)) {\n      for (i = 0, length = value.length; i < length; i++) {\n        lookup[value[i]] = true;\n      }\n    } else {\n      lookup[value] = true;\n    }\n\n    for (i = 0, length = data.length; i < length; i++) {\n      /*jshint laxbreak: true */\n      var _match = lookup && lookup[data[i]] !== undefined\n        || !lookup && value.test(data[i]);\n      /*jshint laxbreak: false */\n      if (_match) {\n        data.splice(i, 1);\n        length--;\n        i--;\n      }\n    }\n\n    return data;\n  }\n\n  function arrayContains(list, value) {\n    var i, length;\n\n    // value may be string, number, array, regexp\n    if (isArray(value)) {\n      // Note: this can be optimized to O(n) (instead of current O(m * n))\n      for (i = 0, length = value.length; i < length; i++) {\n        if (!arrayContains(list, value[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    var _type = getType(value);\n    for (i = 0, length = list.length; i < length; i++) {\n      if (_type === 'RegExp') {\n        if (typeof list[i] === 'string' && list[i].match(value)) {\n          return true;\n        }\n      } else if (list[i] === value) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function arraysEqual(one, two) {\n    if (!isArray(one) || !isArray(two)) {\n      return false;\n    }\n\n    // arrays can't be equal if they have different amount of content\n    if (one.length !== two.length) {\n      return false;\n    }\n\n    one.sort();\n    two.sort();\n\n    for (var i = 0, l = one.length; i < l; i++) {\n      if (one[i] !== two[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function trimSlashes(text) {\n    var trim_expression = /^\\/+|\\/+$/g;\n    return text.replace(trim_expression, '');\n  }\n\n  URI._parts = function() {\n    return {\n      protocol: null,\n      username: null,\n      password: null,\n      hostname: null,\n      urn: null,\n      port: null,\n      path: null,\n      query: null,\n      fragment: null,\n      // state\n      duplicateQueryParameters: URI.duplicateQueryParameters,\n      escapeQuerySpace: URI.escapeQuerySpace\n    };\n  };\n  // state: allow duplicate query parameters (a=1&a=1)\n  URI.duplicateQueryParameters = false;\n  // state: replaces + with %20 (space in query strings)\n  URI.escapeQuerySpace = true;\n  // static properties\n  URI.protocol_expression = /^[a-z][a-z0-9.+-]*$/i;\n  URI.idn_expression = /[^a-z0-9\\.-]/i;\n  URI.punycode_expression = /(xn--)/i;\n  // well, 333.444.555.666 matches, but it sure ain't no IPv4 - do we care?\n  URI.ip4_expression = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\n  // credits to Rich Brown\n  // source: http://forums.intermapper.com/viewtopic.php?p=1096#1096\n  // specification: http://www.ietf.org/rfc/rfc4291.txt\n  URI.ip6_expression = /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/;\n  // expression used is \"gruber revised\" (@gruber v2) determined to be the\n  // best solution in a regex-golf we did a couple of ages ago at\n  // * http://mathiasbynens.be/demo/url-regex\n  // * http://rodneyrehm.de/t/url-regex.html\n  URI.find_uri_expression = /\\b((?:[a-z][\\w-]+:(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))/ig;\n  URI.findUri = {\n    // valid \"scheme://\" or \"www.\"\n    start: /\\b(?:([a-z][a-z0-9.+-]*:\\/\\/)|www\\.)/gi,\n    // everything up to the next whitespace\n    end: /[\\s\\r\\n]|$/,\n    // trim trailing punctuation captured by end RegExp\n    trim: /[`!()\\[\\]{};:'\".,<>?«»“”„‘’]+$/\n  };\n  // http://www.iana.org/assignments/uri-schemes.html\n  // http://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers#Well-known_ports\n  URI.defaultPorts = {\n    http: '80',\n    https: '443',\n    ftp: '21',\n    gopher: '70',\n    ws: '80',\n    wss: '443'\n  };\n  // allowed hostname characters according to RFC 3986\n  // ALPHA DIGIT \"-\" \".\" \"_\" \"~\" \"!\" \"$\" \"&\" \"'\" \"(\" \")\" \"*\" \"+\" \",\" \";\" \"=\" %encoded\n  // I've never seen a (non-IDN) hostname other than: ALPHA DIGIT . -\n  URI.invalid_hostname_characters = /[^a-zA-Z0-9\\.-]/;\n  // map DOM Elements to their URI attribute\n  URI.domAttributes = {\n    'a': 'href',\n    'blockquote': 'cite',\n    'link': 'href',\n    'base': 'href',\n    'script': 'src',\n    'form': 'action',\n    'img': 'src',\n    'area': 'href',\n    'iframe': 'src',\n    'embed': 'src',\n    'source': 'src',\n    'track': 'src',\n    'input': 'src', // but only if type=\"image\"\n    'audio': 'src',\n    'video': 'src'\n  };\n  URI.getDomAttribute = function(node) {\n    if (!node || !node.nodeName) {\n      return undefined;\n    }\n\n    var nodeName = node.nodeName.toLowerCase();\n    // <input> should only expose src for type=\"image\"\n    if (nodeName === 'input' && node.type !== 'image') {\n      return undefined;\n    }\n\n    return URI.domAttributes[nodeName];\n  };\n\n  function escapeForDumbFirefox36(value) {\n    // https://github.com/medialize/URI.js/issues/91\n    return escape(value);\n  }\n\n  // encoding / decoding according to RFC3986\n  function strictEncodeURIComponent(string) {\n    // see https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/encodeURIComponent\n    return encodeURIComponent(string)\n      .replace(/[!'()*]/g, escapeForDumbFirefox36)\n      .replace(/\\*/g, '%2A');\n  }\n  URI.encode = strictEncodeURIComponent;\n  URI.decode = decodeURIComponent;\n  URI.iso8859 = function() {\n    URI.encode = escape;\n    URI.decode = unescape;\n  };\n  URI.unicode = function() {\n    URI.encode = strictEncodeURIComponent;\n    URI.decode = decodeURIComponent;\n  };\n  URI.characters = {\n    pathname: {\n      encode: {\n        // RFC3986 2.1: For consistency, URI producers and normalizers should\n        // use uppercase hexadecimal digits for all percent-encodings.\n        expression: /%(24|26|2B|2C|3B|3D|3A|40)/ig,\n        map: {\n          // -._~!'()*\n          '%24': '$',\n          '%26': '&',\n          '%2B': '+',\n          '%2C': ',',\n          '%3B': ';',\n          '%3D': '=',\n          '%3A': ':',\n          '%40': '@'\n        }\n      },\n      decode: {\n        expression: /[\\/\\?#]/g,\n        map: {\n          '/': '%2F',\n          '?': '%3F',\n          '#': '%23'\n        }\n      }\n    },\n    reserved: {\n      encode: {\n        // RFC3986 2.1: For consistency, URI producers and normalizers should\n        // use uppercase hexadecimal digits for all percent-encodings.\n        expression: /%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/ig,\n        map: {\n          // gen-delims\n          '%3A': ':',\n          '%2F': '/',\n          '%3F': '?',\n          '%23': '#',\n          '%5B': '[',\n          '%5D': ']',\n          '%40': '@',\n          // sub-delims\n          '%21': '!',\n          '%24': '$',\n          '%26': '&',\n          '%27': '\\'',\n          '%28': '(',\n          '%29': ')',\n          '%2A': '*',\n          '%2B': '+',\n          '%2C': ',',\n          '%3B': ';',\n          '%3D': '='\n        }\n      }\n    },\n    urnpath: {\n      // The characters under `encode` are the characters called out by RFC 2141 as being acceptable\n      // for usage in a URN. RFC2141 also calls out \"-\", \".\", and \"_\" as acceptable characters, but\n      // these aren't encoded by encodeURIComponent, so we don't have to call them out here. Also\n      // note that the colon character is not featured in the encoding map; this is because URI.js\n      // gives the colons in URNs semantic meaning as the delimiters of path segements, and so it\n      // should not appear unencoded in a segment itself.\n      // See also the note above about RFC3986 and capitalalized hex digits.\n      encode: {\n        expression: /%(21|24|27|28|29|2A|2B|2C|3B|3D|40)/ig,\n        map: {\n          '%21': '!',\n          '%24': '$',\n          '%27': '\\'',\n          '%28': '(',\n          '%29': ')',\n          '%2A': '*',\n          '%2B': '+',\n          '%2C': ',',\n          '%3B': ';',\n          '%3D': '=',\n          '%40': '@'\n        }\n      },\n      // These characters are the characters called out by RFC2141 as \"reserved\" characters that\n      // should never appear in a URN, plus the colon character (see note above).\n      decode: {\n        expression: /[\\/\\?#:]/g,\n        map: {\n          '/': '%2F',\n          '?': '%3F',\n          '#': '%23',\n          ':': '%3A'\n        }\n      }\n    }\n  };\n  URI.encodeQuery = function(string, escapeQuerySpace) {\n    var escaped = URI.encode(string + '');\n    if (escapeQuerySpace === undefined) {\n      escapeQuerySpace = URI.escapeQuerySpace;\n    }\n\n    return escapeQuerySpace ? escaped.replace(/%20/g, '+') : escaped;\n  };\n  URI.decodeQuery = function(string, escapeQuerySpace) {\n    string += '';\n    if (escapeQuerySpace === undefined) {\n      escapeQuerySpace = URI.escapeQuerySpace;\n    }\n\n    try {\n      return URI.decode(escapeQuerySpace ? string.replace(/\\+/g, '%20') : string);\n    } catch(e) {\n      // we're not going to mess with weird encodings,\n      // give up and return the undecoded original string\n      // see https://github.com/medialize/URI.js/issues/87\n      // see https://github.com/medialize/URI.js/issues/92\n      return string;\n    }\n  };\n  // generate encode/decode path functions\n  var _parts = {'encode':'encode', 'decode':'decode'};\n  var _part;\n  var generateAccessor = function(_group, _part) {\n    return function(string) {\n      try {\n        return URI[_part](string + '').replace(URI.characters[_group][_part].expression, function(c) {\n          return URI.characters[_group][_part].map[c];\n        });\n      } catch (e) {\n        // we're not going to mess with weird encodings,\n        // give up and return the undecoded original string\n        // see https://github.com/medialize/URI.js/issues/87\n        // see https://github.com/medialize/URI.js/issues/92\n        return string;\n      }\n    };\n  };\n\n  for (_part in _parts) {\n    URI[_part + 'PathSegment'] = generateAccessor('pathname', _parts[_part]);\n    URI[_part + 'UrnPathSegment'] = generateAccessor('urnpath', _parts[_part]);\n  }\n\n  var generateSegmentedPathFunction = function(_sep, _codingFuncName, _innerCodingFuncName) {\n    return function(string) {\n      // Why pass in names of functions, rather than the function objects themselves? The\n      // definitions of some functions (but in particular, URI.decode) will occasionally change due\n      // to URI.js having ISO8859 and Unicode modes. Passing in the name and getting it will ensure\n      // that the functions we use here are \"fresh\".\n      var actualCodingFunc;\n      if (!_innerCodingFuncName) {\n        actualCodingFunc = URI[_codingFuncName];\n      } else {\n        actualCodingFunc = function(string) {\n          return URI[_codingFuncName](URI[_innerCodingFuncName](string));\n        };\n      }\n\n      var segments = (string + '').split(_sep);\n\n      for (var i = 0, length = segments.length; i < length; i++) {\n        segments[i] = actualCodingFunc(segments[i]);\n      }\n\n      return segments.join(_sep);\n    };\n  };\n\n  // This takes place outside the above loop because we don't want, e.g., encodeUrnPath functions.\n  URI.decodePath = generateSegmentedPathFunction('/', 'decodePathSegment');\n  URI.decodeUrnPath = generateSegmentedPathFunction(':', 'decodeUrnPathSegment');\n  URI.recodePath = generateSegmentedPathFunction('/', 'encodePathSegment', 'decode');\n  URI.recodeUrnPath = generateSegmentedPathFunction(':', 'encodeUrnPathSegment', 'decode');\n\n  URI.encodeReserved = generateAccessor('reserved', 'encode');\n\n  URI.parse = function(string, parts) {\n    var pos;\n    if (!parts) {\n      parts = {};\n    }\n    // [protocol\"://\"[username[\":\"password]\"@\"]hostname[\":\"port]\"/\"?][path][\"?\"querystring][\"#\"fragment]\n\n    // extract fragment\n    pos = string.indexOf('#');\n    if (pos > -1) {\n      // escaping?\n      parts.fragment = string.substring(pos + 1) || null;\n      string = string.substring(0, pos);\n    }\n\n    // extract query\n    pos = string.indexOf('?');\n    if (pos > -1) {\n      // escaping?\n      parts.query = string.substring(pos + 1) || null;\n      string = string.substring(0, pos);\n    }\n\n    // extract protocol\n    if (string.substring(0, 2) === '//') {\n      // relative-scheme\n      parts.protocol = null;\n      string = string.substring(2);\n      // extract \"user:pass@host:port\"\n      string = URI.parseAuthority(string, parts);\n    } else {\n      pos = string.indexOf(':');\n      if (pos > -1) {\n        parts.protocol = string.substring(0, pos) || null;\n        if (parts.protocol && !parts.protocol.match(URI.protocol_expression)) {\n          // : may be within the path\n          parts.protocol = undefined;\n        } else if (string.substring(pos + 1, pos + 3) === '//') {\n          string = string.substring(pos + 3);\n\n          // extract \"user:pass@host:port\"\n          string = URI.parseAuthority(string, parts);\n        } else {\n          string = string.substring(pos + 1);\n          parts.urn = true;\n        }\n      }\n    }\n\n    // what's left must be the path\n    parts.path = string;\n\n    // and we're done\n    return parts;\n  };\n  URI.parseHost = function(string, parts) {\n    // Copy chrome, IE, opera backslash-handling behavior.\n    // Back slashes before the query string get converted to forward slashes\n    // See: https://github.com/joyent/node/blob/386fd24f49b0e9d1a8a076592a404168faeecc34/lib/url.js#L115-L124\n    // See: https://code.google.com/p/chromium/issues/detail?id=25916\n    // https://github.com/medialize/URI.js/pull/233\n    string = string.replace(/\\\\/g, '/');\n\n    // extract host:port\n    var pos = string.indexOf('/');\n    var bracketPos;\n    var t;\n\n    if (pos === -1) {\n      pos = string.length;\n    }\n\n    if (string.charAt(0) === '[') {\n      // IPv6 host - http://tools.ietf.org/html/draft-ietf-6man-text-addr-representation-04#section-6\n      // I claim most client software breaks on IPv6 anyways. To simplify things, URI only accepts\n      // IPv6+port in the format [2001:db8::1]:80 (for the time being)\n      bracketPos = string.indexOf(']');\n      parts.hostname = string.substring(1, bracketPos) || null;\n      parts.port = string.substring(bracketPos + 2, pos) || null;\n      if (parts.port === '/') {\n        parts.port = null;\n      }\n    } else {\n      var firstColon = string.indexOf(':');\n      var firstSlash = string.indexOf('/');\n      var nextColon = string.indexOf(':', firstColon + 1);\n      if (nextColon !== -1 && (firstSlash === -1 || nextColon < firstSlash)) {\n        // IPv6 host contains multiple colons - but no port\n        // this notation is actually not allowed by RFC 3986, but we're a liberal parser\n        parts.hostname = string.substring(0, pos) || null;\n        parts.port = null;\n      } else {\n        t = string.substring(0, pos).split(':');\n        parts.hostname = t[0] || null;\n        parts.port = t[1] || null;\n      }\n    }\n\n    if (parts.hostname && string.substring(pos).charAt(0) !== '/') {\n      pos++;\n      string = '/' + string;\n    }\n\n    return string.substring(pos) || '/';\n  };\n  URI.parseAuthority = function(string, parts) {\n    string = URI.parseUserinfo(string, parts);\n    return URI.parseHost(string, parts);\n  };\n  URI.parseUserinfo = function(string, parts) {\n    // extract username:password\n    var firstSlash = string.indexOf('/');\n    var pos = string.lastIndexOf('@', firstSlash > -1 ? firstSlash : string.length - 1);\n    var t;\n\n    // authority@ must come before /path\n    if (pos > -1 && (firstSlash === -1 || pos < firstSlash)) {\n      t = string.substring(0, pos).split(':');\n      parts.username = t[0] ? URI.decode(t[0]) : null;\n      t.shift();\n      parts.password = t[0] ? URI.decode(t.join(':')) : null;\n      string = string.substring(pos + 1);\n    } else {\n      parts.username = null;\n      parts.password = null;\n    }\n\n    return string;\n  };\n  URI.parseQuery = function(string, escapeQuerySpace) {\n    if (!string) {\n      return {};\n    }\n\n    // throw out the funky business - \"?\"[name\"=\"value\"&\"]+\n    string = string.replace(/&+/g, '&').replace(/^\\?*&*|&+$/g, '');\n\n    if (!string) {\n      return {};\n    }\n\n    var items = {};\n    var splits = string.split('&');\n    var length = splits.length;\n    var v, name, value;\n\n    for (var i = 0; i < length; i++) {\n      v = splits[i].split('=');\n      name = URI.decodeQuery(v.shift(), escapeQuerySpace);\n      // no \"=\" is null according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#collect-url-parameters\n      value = v.length ? URI.decodeQuery(v.join('='), escapeQuerySpace) : null;\n\n      if (hasOwn.call(items, name)) {\n        if (typeof items[name] === 'string' || items[name] === null) {\n          items[name] = [items[name]];\n        }\n\n        items[name].push(value);\n      } else {\n        items[name] = value;\n      }\n    }\n\n    return items;\n  };\n\n  URI.build = function(parts) {\n    var t = '';\n\n    if (parts.protocol) {\n      t += parts.protocol + ':';\n    }\n\n    if (!parts.urn && (t || parts.hostname)) {\n      t += '//';\n    }\n\n    t += (URI.buildAuthority(parts) || '');\n\n    if (typeof parts.path === 'string') {\n      if (parts.path.charAt(0) !== '/' && typeof parts.hostname === 'string') {\n        t += '/';\n      }\n\n      t += parts.path;\n    }\n\n    if (typeof parts.query === 'string' && parts.query) {\n      t += '?' + parts.query;\n    }\n\n    if (typeof parts.fragment === 'string' && parts.fragment) {\n      t += '#' + parts.fragment;\n    }\n    return t;\n  };\n  URI.buildHost = function(parts) {\n    var t = '';\n\n    if (!parts.hostname) {\n      return '';\n    } else if (URI.ip6_expression.test(parts.hostname)) {\n      t += '[' + parts.hostname + ']';\n    } else {\n      t += parts.hostname;\n    }\n\n    if (parts.port) {\n      t += ':' + parts.port;\n    }\n\n    return t;\n  };\n  URI.buildAuthority = function(parts) {\n    return URI.buildUserinfo(parts) + URI.buildHost(parts);\n  };\n  URI.buildUserinfo = function(parts) {\n    var t = '';\n\n    if (parts.username) {\n      t += URI.encode(parts.username);\n\n      if (parts.password) {\n        t += ':' + URI.encode(parts.password);\n      }\n\n      t += '@';\n    }\n\n    return t;\n  };\n  URI.buildQuery = function(data, duplicateQueryParameters, escapeQuerySpace) {\n    // according to http://tools.ietf.org/html/rfc3986 or http://labs.apache.org/webarch/uri/rfc/rfc3986.html\n    // being »-._~!$&'()*+,;=:@/?« %HEX and alnum are allowed\n    // the RFC explicitly states ?/foo being a valid use case, no mention of parameter syntax!\n    // URI.js treats the query string as being application/x-www-form-urlencoded\n    // see http://www.w3.org/TR/REC-html40/interact/forms.html#form-content-type\n\n    var t = '';\n    var unique, key, i, length;\n    for (key in data) {\n      if (hasOwn.call(data, key) && key) {\n        if (isArray(data[key])) {\n          unique = {};\n          for (i = 0, length = data[key].length; i < length; i++) {\n            if (data[key][i] !== undefined && unique[data[key][i] + ''] === undefined) {\n              t += '&' + URI.buildQueryParameter(key, data[key][i], escapeQuerySpace);\n              if (duplicateQueryParameters !== true) {\n                unique[data[key][i] + ''] = true;\n              }\n            }\n          }\n        } else if (data[key] !== undefined) {\n          t += '&' + URI.buildQueryParameter(key, data[key], escapeQuerySpace);\n        }\n      }\n    }\n\n    return t.substring(1);\n  };\n  URI.buildQueryParameter = function(name, value, escapeQuerySpace) {\n    // http://www.w3.org/TR/REC-html40/interact/forms.html#form-content-type -- application/x-www-form-urlencoded\n    // don't append \"=\" for null values, according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#url-parameter-serialization\n    return URI.encodeQuery(name, escapeQuerySpace) + (value !== null ? '=' + URI.encodeQuery(value, escapeQuerySpace) : '');\n  };\n\n  URI.addQuery = function(data, name, value) {\n    if (typeof name === 'object') {\n      for (var key in name) {\n        if (hasOwn.call(name, key)) {\n          URI.addQuery(data, key, name[key]);\n        }\n      }\n    } else if (typeof name === 'string') {\n      if (data[name] === undefined) {\n        data[name] = value;\n        return;\n      } else if (typeof data[name] === 'string') {\n        data[name] = [data[name]];\n      }\n\n      if (!isArray(value)) {\n        value = [value];\n      }\n\n      data[name] = (data[name] || []).concat(value);\n    } else {\n      throw new TypeError('URI.addQuery() accepts an object, string as the name parameter');\n    }\n  };\n  URI.removeQuery = function(data, name, value) {\n    var i, length, key;\n\n    if (isArray(name)) {\n      for (i = 0, length = name.length; i < length; i++) {\n        data[name[i]] = undefined;\n      }\n    } else if (getType(name) === 'RegExp') {\n      for (key in data) {\n        if (name.test(key)) {\n          data[key] = undefined;\n        }\n      }\n    } else if (typeof name === 'object') {\n      for (key in name) {\n        if (hasOwn.call(name, key)) {\n          URI.removeQuery(data, key, name[key]);\n        }\n      }\n    } else if (typeof name === 'string') {\n      if (value !== undefined) {\n        if (getType(value) === 'RegExp') {\n          if (!isArray(data[name]) && value.test(data[name])) {\n            data[name] = undefined;\n          } else {\n            data[name] = filterArrayValues(data[name], value);\n          }\n        } else if (data[name] === String(value) && (!isArray(value) || value.length === 1)) {\n          data[name] = undefined;\n        } else if (isArray(data[name])) {\n          data[name] = filterArrayValues(data[name], value);\n        }\n      } else {\n        data[name] = undefined;\n      }\n    } else {\n      throw new TypeError('URI.removeQuery() accepts an object, string, RegExp as the first parameter');\n    }\n  };\n  URI.hasQuery = function(data, name, value, withinArray) {\n    switch (getType(name)) {\n      case 'String':\n        // Nothing to do here\n        break;\n\n      case 'RegExp':\n        for (var key in data) {\n          if (hasOwn.call(data, key)) {\n            if (name.test(key) && (value === undefined || URI.hasQuery(data, key, value))) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n\n      case 'Object':\n        for (var _key in name) {\n          if (hasOwn.call(name, _key)) {\n            if (!URI.hasQuery(data, _key, name[_key])) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n\n      default:\n        throw new TypeError('URI.hasQuery() accepts a string, regular expression or object as the name parameter');\n    }\n\n    switch (getType(value)) {\n      case 'Undefined':\n        // true if exists (but may be empty)\n        return name in data; // data[name] !== undefined;\n\n      case 'Boolean':\n        // true if exists and non-empty\n        var _booly = Boolean(isArray(data[name]) ? data[name].length : data[name]);\n        return value === _booly;\n\n      case 'Function':\n        // allow complex comparison\n        return !!value(data[name], name, data);\n\n      case 'Array':\n        if (!isArray(data[name])) {\n          return false;\n        }\n\n        var op = withinArray ? arrayContains : arraysEqual;\n        return op(data[name], value);\n\n      case 'RegExp':\n        if (!isArray(data[name])) {\n          return Boolean(data[name] && data[name].match(value));\n        }\n\n        if (!withinArray) {\n          return false;\n        }\n\n        return arrayContains(data[name], value);\n\n      case 'Number':\n        value = String(value);\n        /* falls through */\n      case 'String':\n        if (!isArray(data[name])) {\n          return data[name] === value;\n        }\n\n        if (!withinArray) {\n          return false;\n        }\n\n        return arrayContains(data[name], value);\n\n      default:\n        throw new TypeError('URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter');\n    }\n  };\n\n\n  URI.commonPath = function(one, two) {\n    var length = Math.min(one.length, two.length);\n    var pos;\n\n    // find first non-matching character\n    for (pos = 0; pos < length; pos++) {\n      if (one.charAt(pos) !== two.charAt(pos)) {\n        pos--;\n        break;\n      }\n    }\n\n    if (pos < 1) {\n      return one.charAt(0) === two.charAt(0) && one.charAt(0) === '/' ? '/' : '';\n    }\n\n    // revert to last /\n    if (one.charAt(pos) !== '/' || two.charAt(pos) !== '/') {\n      pos = one.substring(0, pos).lastIndexOf('/');\n    }\n\n    return one.substring(0, pos + 1);\n  };\n\n  URI.withinString = function(string, callback, options) {\n    options || (options = {});\n    var _start = options.start || URI.findUri.start;\n    var _end = options.end || URI.findUri.end;\n    var _trim = options.trim || URI.findUri.trim;\n    var _attributeOpen = /[a-z0-9-]=[\"']?$/i;\n\n    _start.lastIndex = 0;\n    while (true) {\n      var match = _start.exec(string);\n      if (!match) {\n        break;\n      }\n\n      var start = match.index;\n      if (options.ignoreHtml) {\n        // attribut(e=[\"']?$)\n        var attributeOpen = string.slice(Math.max(start - 3, 0), start);\n        if (attributeOpen && _attributeOpen.test(attributeOpen)) {\n          continue;\n        }\n      }\n\n      var end = start + string.slice(start).search(_end);\n      var slice = string.slice(start, end).replace(_trim, '');\n      if (options.ignore && options.ignore.test(slice)) {\n        continue;\n      }\n\n      end = start + slice.length;\n      var result = callback(slice, start, end, string);\n      string = string.slice(0, start) + result + string.slice(end);\n      _start.lastIndex = start + result.length;\n    }\n\n    _start.lastIndex = 0;\n    return string;\n  };\n\n  URI.ensureValidHostname = function(v) {\n    // Theoretically URIs allow percent-encoding in Hostnames (according to RFC 3986)\n    // they are not part of DNS and therefore ignored by URI.js\n\n    if (v.match(URI.invalid_hostname_characters)) {\n      // test punycode\n      if (!punycode) {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-] and Punycode.js is not available');\n      }\n\n      if (punycode.toASCII(v).match(URI.invalid_hostname_characters)) {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-]');\n      }\n    }\n  };\n\n  // noConflict\n  URI.noConflict = function(removeAll) {\n    if (removeAll) {\n      var unconflicted = {\n        URI: this.noConflict()\n      };\n\n      if (root.URITemplate && typeof root.URITemplate.noConflict === 'function') {\n        unconflicted.URITemplate = root.URITemplate.noConflict();\n      }\n\n      if (root.IPv6 && typeof root.IPv6.noConflict === 'function') {\n        unconflicted.IPv6 = root.IPv6.noConflict();\n      }\n\n      if (root.SecondLevelDomains && typeof root.SecondLevelDomains.noConflict === 'function') {\n        unconflicted.SecondLevelDomains = root.SecondLevelDomains.noConflict();\n      }\n\n      return unconflicted;\n    } else if (root.URI === this) {\n      root.URI = _URI;\n    }\n\n    return this;\n  };\n\n  p.build = function(deferBuild) {\n    if (deferBuild === true) {\n      this._deferred_build = true;\n    } else if (deferBuild === undefined || this._deferred_build) {\n      this._string = URI.build(this._parts);\n      this._deferred_build = false;\n    }\n\n    return this;\n  };\n\n  p.clone = function() {\n    return new URI(this);\n  };\n\n  p.valueOf = p.toString = function() {\n    return this.build(false)._string;\n  };\n\n\n  function generateSimpleAccessor(_part){\n    return function(v, build) {\n      if (v === undefined) {\n        return this._parts[_part] || '';\n      } else {\n        this._parts[_part] = v || null;\n        this.build(!build);\n        return this;\n      }\n    };\n  }\n\n  function generatePrefixAccessor(_part, _key){\n    return function(v, build) {\n      if (v === undefined) {\n        return this._parts[_part] || '';\n      } else {\n        if (v !== null) {\n          v = v + '';\n          if (v.charAt(0) === _key) {\n            v = v.substring(1);\n          }\n        }\n\n        this._parts[_part] = v;\n        this.build(!build);\n        return this;\n      }\n    };\n  }\n\n  p.protocol = generateSimpleAccessor('protocol');\n  p.username = generateSimpleAccessor('username');\n  p.password = generateSimpleAccessor('password');\n  p.hostname = generateSimpleAccessor('hostname');\n  p.port = generateSimpleAccessor('port');\n  p.query = generatePrefixAccessor('query', '?');\n  p.fragment = generatePrefixAccessor('fragment', '#');\n\n  p.search = function(v, build) {\n    var t = this.query(v, build);\n    return typeof t === 'string' && t.length ? ('?' + t) : t;\n  };\n  p.hash = function(v, build) {\n    var t = this.fragment(v, build);\n    return typeof t === 'string' && t.length ? ('#' + t) : t;\n  };\n\n  p.pathname = function(v, build) {\n    if (v === undefined || v === true) {\n      var res = this._parts.path || (this._parts.hostname ? '/' : '');\n      return v ? (this._parts.urn ? URI.decodeUrnPath : URI.decodePath)(res) : res;\n    } else {\n      if (this._parts.urn) {\n        this._parts.path = v ? URI.recodeUrnPath(v) : '';\n      } else {\n        this._parts.path = v ? URI.recodePath(v) : '/';\n      }\n      this.build(!build);\n      return this;\n    }\n  };\n  p.path = p.pathname;\n  p.href = function(href, build) {\n    var key;\n\n    if (href === undefined) {\n      return this.toString();\n    }\n\n    this._string = '';\n    this._parts = URI._parts();\n\n    var _URI = href instanceof URI;\n    var _object = typeof href === 'object' && (href.hostname || href.path || href.pathname);\n    if (href.nodeName) {\n      var attribute = URI.getDomAttribute(href);\n      href = href[attribute] || '';\n      _object = false;\n    }\n\n    // window.location is reported to be an object, but it's not the sort\n    // of object we're looking for:\n    // * location.protocol ends with a colon\n    // * location.query != object.search\n    // * location.hash != object.fragment\n    // simply serializing the unknown object should do the trick\n    // (for location, not for everything...)\n    if (!_URI && _object && href.pathname !== undefined) {\n      href = href.toString();\n    }\n\n    if (typeof href === 'string' || href instanceof String) {\n      this._parts = URI.parse(String(href), this._parts);\n    } else if (_URI || _object) {\n      var src = _URI ? href._parts : href;\n      for (key in src) {\n        if (hasOwn.call(this._parts, key)) {\n          this._parts[key] = src[key];\n        }\n      }\n    } else {\n      throw new TypeError('invalid input');\n    }\n\n    this.build(!build);\n    return this;\n  };\n\n  // identification accessors\n  p.is = function(what) {\n    var ip = false;\n    var ip4 = false;\n    var ip6 = false;\n    var name = false;\n    var sld = false;\n    var idn = false;\n    var punycode = false;\n    var relative = !this._parts.urn;\n\n    if (this._parts.hostname) {\n      relative = false;\n      ip4 = URI.ip4_expression.test(this._parts.hostname);\n      ip6 = URI.ip6_expression.test(this._parts.hostname);\n      ip = ip4 || ip6;\n      name = !ip;\n      sld = name && SLD && SLD.has(this._parts.hostname);\n      idn = name && URI.idn_expression.test(this._parts.hostname);\n      punycode = name && URI.punycode_expression.test(this._parts.hostname);\n    }\n\n    switch (what.toLowerCase()) {\n      case 'relative':\n        return relative;\n\n      case 'absolute':\n        return !relative;\n\n      // hostname identification\n      case 'domain':\n      case 'name':\n        return name;\n\n      case 'sld':\n        return sld;\n\n      case 'ip':\n        return ip;\n\n      case 'ip4':\n      case 'ipv4':\n      case 'inet4':\n        return ip4;\n\n      case 'ip6':\n      case 'ipv6':\n      case 'inet6':\n        return ip6;\n\n      case 'idn':\n        return idn;\n\n      case 'url':\n        return !this._parts.urn;\n\n      case 'urn':\n        return !!this._parts.urn;\n\n      case 'punycode':\n        return punycode;\n    }\n\n    return null;\n  };\n\n  // component specific input validation\n  var _protocol = p.protocol;\n  var _port = p.port;\n  var _hostname = p.hostname;\n\n  p.protocol = function(v, build) {\n    if (v !== undefined) {\n      if (v) {\n        // accept trailing ://\n        v = v.replace(/:(\\/\\/)?$/, '');\n\n        if (!v.match(URI.protocol_expression)) {\n          throw new TypeError('Protocol \"' + v + '\" contains characters other than [A-Z0-9.+-] or doesn\\'t start with [A-Z]');\n        }\n      }\n    }\n    return _protocol.call(this, v, build);\n  };\n  p.scheme = p.protocol;\n  p.port = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v !== undefined) {\n      if (v === 0) {\n        v = null;\n      }\n\n      if (v) {\n        v += '';\n        if (v.charAt(0) === ':') {\n          v = v.substring(1);\n        }\n\n        if (v.match(/[^0-9]/)) {\n          throw new TypeError('Port \"' + v + '\" contains characters other than [0-9]');\n        }\n      }\n    }\n    return _port.call(this, v, build);\n  };\n  p.hostname = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v !== undefined) {\n      var x = {};\n      var res = URI.parseHost(v, x);\n      if (res !== '/') {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-]');\n      }\n\n      v = x.hostname;\n    }\n    return _hostname.call(this, v, build);\n  };\n\n  // compound accessors\n  p.origin = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined) {\n      var protocol = this.protocol();\n      var authority = this.authority();\n      if (!authority) {\n        return '';\n      }\n\n      return (protocol ? protocol + '://' : '') + this.authority();\n    } else {\n      var origin = URI(v);\n      this\n        .protocol(origin.protocol())\n        .authority(origin.authority())\n        .build(!build);\n      return this;\n    }\n  };\n  p.host = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined) {\n      return this._parts.hostname ? URI.buildHost(this._parts) : '';\n    } else {\n      var res = URI.parseHost(v, this._parts);\n      if (res !== '/') {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-]');\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n  p.authority = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined) {\n      return this._parts.hostname ? URI.buildAuthority(this._parts) : '';\n    } else {\n      var res = URI.parseAuthority(v, this._parts);\n      if (res !== '/') {\n        throw new TypeError('Hostname \"' + v + '\" contains characters other than [A-Z0-9.-]');\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n  p.userinfo = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined) {\n      if (!this._parts.username) {\n        return '';\n      }\n\n      var t = URI.buildUserinfo(this._parts);\n      return t.substring(0, t.length -1);\n    } else {\n      if (v[v.length-1] !== '@') {\n        v += '@';\n      }\n\n      URI.parseUserinfo(v, this._parts);\n      this.build(!build);\n      return this;\n    }\n  };\n  p.resource = function(v, build) {\n    var parts;\n\n    if (v === undefined) {\n      return this.path() + this.search() + this.hash();\n    }\n\n    parts = URI.parse(v);\n    this._parts.path = parts.path;\n    this._parts.query = parts.query;\n    this._parts.fragment = parts.fragment;\n    this.build(!build);\n    return this;\n  };\n\n  // fraction accessors\n  p.subdomain = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    // convenience, return \"www\" from \"www.example.org\"\n    if (v === undefined) {\n      if (!this._parts.hostname || this.is('IP')) {\n        return '';\n      }\n\n      // grab domain and add another segment\n      var end = this._parts.hostname.length - this.domain().length - 1;\n      return this._parts.hostname.substring(0, end) || '';\n    } else {\n      var e = this._parts.hostname.length - this.domain().length;\n      var sub = this._parts.hostname.substring(0, e);\n      var replace = new RegExp('^' + escapeRegEx(sub));\n\n      if (v && v.charAt(v.length - 1) !== '.') {\n        v += '.';\n      }\n\n      if (v) {\n        URI.ensureValidHostname(v);\n      }\n\n      this._parts.hostname = this._parts.hostname.replace(replace, v);\n      this.build(!build);\n      return this;\n    }\n  };\n  p.domain = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (typeof v === 'boolean') {\n      build = v;\n      v = undefined;\n    }\n\n    // convenience, return \"example.org\" from \"www.example.org\"\n    if (v === undefined) {\n      if (!this._parts.hostname || this.is('IP')) {\n        return '';\n      }\n\n      // if hostname consists of 1 or 2 segments, it must be the domain\n      var t = this._parts.hostname.match(/\\./g);\n      if (t && t.length < 2) {\n        return this._parts.hostname;\n      }\n\n      // grab tld and add another segment\n      var end = this._parts.hostname.length - this.tld(build).length - 1;\n      end = this._parts.hostname.lastIndexOf('.', end -1) + 1;\n      return this._parts.hostname.substring(end) || '';\n    } else {\n      if (!v) {\n        throw new TypeError('cannot set domain empty');\n      }\n\n      URI.ensureValidHostname(v);\n\n      if (!this._parts.hostname || this.is('IP')) {\n        this._parts.hostname = v;\n      } else {\n        var replace = new RegExp(escapeRegEx(this.domain()) + '$');\n        this._parts.hostname = this._parts.hostname.replace(replace, v);\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n  p.tld = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (typeof v === 'boolean') {\n      build = v;\n      v = undefined;\n    }\n\n    // return \"org\" from \"www.example.org\"\n    if (v === undefined) {\n      if (!this._parts.hostname || this.is('IP')) {\n        return '';\n      }\n\n      var pos = this._parts.hostname.lastIndexOf('.');\n      var tld = this._parts.hostname.substring(pos + 1);\n\n      if (build !== true && SLD && SLD.list[tld.toLowerCase()]) {\n        return SLD.get(this._parts.hostname) || tld;\n      }\n\n      return tld;\n    } else {\n      var replace;\n\n      if (!v) {\n        throw new TypeError('cannot set TLD empty');\n      } else if (v.match(/[^a-zA-Z0-9-]/)) {\n        if (SLD && SLD.is(v)) {\n          replace = new RegExp(escapeRegEx(this.tld()) + '$');\n          this._parts.hostname = this._parts.hostname.replace(replace, v);\n        } else {\n          throw new TypeError('TLD \"' + v + '\" contains characters other than [A-Z0-9]');\n        }\n      } else if (!this._parts.hostname || this.is('IP')) {\n        throw new ReferenceError('cannot set TLD on non-domain host');\n      } else {\n        replace = new RegExp(escapeRegEx(this.tld()) + '$');\n        this._parts.hostname = this._parts.hostname.replace(replace, v);\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n  p.directory = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined || v === true) {\n      if (!this._parts.path && !this._parts.hostname) {\n        return '';\n      }\n\n      if (this._parts.path === '/') {\n        return '/';\n      }\n\n      var end = this._parts.path.length - this.filename().length - 1;\n      var res = this._parts.path.substring(0, end) || (this._parts.hostname ? '/' : '');\n\n      return v ? URI.decodePath(res) : res;\n\n    } else {\n      var e = this._parts.path.length - this.filename().length;\n      var directory = this._parts.path.substring(0, e);\n      var replace = new RegExp('^' + escapeRegEx(directory));\n\n      // fully qualifier directories begin with a slash\n      if (!this.is('relative')) {\n        if (!v) {\n          v = '/';\n        }\n\n        if (v.charAt(0) !== '/') {\n          v = '/' + v;\n        }\n      }\n\n      // directories always end with a slash\n      if (v && v.charAt(v.length - 1) !== '/') {\n        v += '/';\n      }\n\n      v = URI.recodePath(v);\n      this._parts.path = this._parts.path.replace(replace, v);\n      this.build(!build);\n      return this;\n    }\n  };\n  p.filename = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined || v === true) {\n      if (!this._parts.path || this._parts.path === '/') {\n        return '';\n      }\n\n      var pos = this._parts.path.lastIndexOf('/');\n      var res = this._parts.path.substring(pos+1);\n\n      return v ? URI.decodePathSegment(res) : res;\n    } else {\n      var mutatedDirectory = false;\n\n      if (v.charAt(0) === '/') {\n        v = v.substring(1);\n      }\n\n      if (v.match(/\\.?\\//)) {\n        mutatedDirectory = true;\n      }\n\n      var replace = new RegExp(escapeRegEx(this.filename()) + '$');\n      v = URI.recodePath(v);\n      this._parts.path = this._parts.path.replace(replace, v);\n\n      if (mutatedDirectory) {\n        this.normalizePath(build);\n      } else {\n        this.build(!build);\n      }\n\n      return this;\n    }\n  };\n  p.suffix = function(v, build) {\n    if (this._parts.urn) {\n      return v === undefined ? '' : this;\n    }\n\n    if (v === undefined || v === true) {\n      if (!this._parts.path || this._parts.path === '/') {\n        return '';\n      }\n\n      var filename = this.filename();\n      var pos = filename.lastIndexOf('.');\n      var s, res;\n\n      if (pos === -1) {\n        return '';\n      }\n\n      // suffix may only contain alnum characters (yup, I made this up.)\n      s = filename.substring(pos+1);\n      res = (/^[a-z0-9%]+$/i).test(s) ? s : '';\n      return v ? URI.decodePathSegment(res) : res;\n    } else {\n      if (v.charAt(0) === '.') {\n        v = v.substring(1);\n      }\n\n      var suffix = this.suffix();\n      var replace;\n\n      if (!suffix) {\n        if (!v) {\n          return this;\n        }\n\n        this._parts.path += '.' + URI.recodePath(v);\n      } else if (!v) {\n        replace = new RegExp(escapeRegEx('.' + suffix) + '$');\n      } else {\n        replace = new RegExp(escapeRegEx(suffix) + '$');\n      }\n\n      if (replace) {\n        v = URI.recodePath(v);\n        this._parts.path = this._parts.path.replace(replace, v);\n      }\n\n      this.build(!build);\n      return this;\n    }\n  };\n  p.segment = function(segment, v, build) {\n    var separator = this._parts.urn ? ':' : '/';\n    var path = this.path();\n    var absolute = path.substring(0, 1) === '/';\n    var segments = path.split(separator);\n\n    if (segment !== undefined && typeof segment !== 'number') {\n      build = v;\n      v = segment;\n      segment = undefined;\n    }\n\n    if (segment !== undefined && typeof segment !== 'number') {\n      throw new Error('Bad segment \"' + segment + '\", must be 0-based integer');\n    }\n\n    if (absolute) {\n      segments.shift();\n    }\n\n    if (segment < 0) {\n      // allow negative indexes to address from the end\n      segment = Math.max(segments.length + segment, 0);\n    }\n\n    if (v === undefined) {\n      /*jshint laxbreak: true */\n      return segment === undefined\n        ? segments\n        : segments[segment];\n      /*jshint laxbreak: false */\n    } else if (segment === null || segments[segment] === undefined) {\n      if (isArray(v)) {\n        segments = [];\n        // collapse empty elements within array\n        for (var i=0, l=v.length; i < l; i++) {\n          if (!v[i].length && (!segments.length || !segments[segments.length -1].length)) {\n            continue;\n          }\n\n          if (segments.length && !segments[segments.length -1].length) {\n            segments.pop();\n          }\n\n          segments.push(trimSlashes(v[i]));\n        }\n      } else if (v || typeof v === 'string') {\n        v = trimSlashes(v);\n        if (segments[segments.length -1] === '') {\n          // empty trailing elements have to be overwritten\n          // to prevent results such as /foo//bar\n          segments[segments.length -1] = v;\n        } else {\n          segments.push(v);\n        }\n      }\n    } else {\n      if (v) {\n        segments[segment] = trimSlashes(v);\n      } else {\n        segments.splice(segment, 1);\n      }\n    }\n\n    if (absolute) {\n      segments.unshift('');\n    }\n\n    return this.path(segments.join(separator), build);\n  };\n  p.segmentCoded = function(segment, v, build) {\n    var segments, i, l;\n\n    if (typeof segment !== 'number') {\n      build = v;\n      v = segment;\n      segment = undefined;\n    }\n\n    if (v === undefined) {\n      segments = this.segment(segment, v, build);\n      if (!isArray(segments)) {\n        segments = segments !== undefined ? URI.decode(segments) : undefined;\n      } else {\n        for (i = 0, l = segments.length; i < l; i++) {\n          segments[i] = URI.decode(segments[i]);\n        }\n      }\n\n      return segments;\n    }\n\n    if (!isArray(v)) {\n      v = (typeof v === 'string' || v instanceof String) ? URI.encode(v) : v;\n    } else {\n      for (i = 0, l = v.length; i < l; i++) {\n        v[i] = URI.encode(v[i]);\n      }\n    }\n\n    return this.segment(segment, v, build);\n  };\n\n  // mutating query string\n  var q = p.query;\n  p.query = function(v, build) {\n    if (v === true) {\n      return URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n    } else if (typeof v === 'function') {\n      var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n      var result = v.call(this, data);\n      this._parts.query = URI.buildQuery(result || data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n      this.build(!build);\n      return this;\n    } else if (v !== undefined && typeof v !== 'string') {\n      this._parts.query = URI.buildQuery(v, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n      this.build(!build);\n      return this;\n    } else {\n      return q.call(this, v, build);\n    }\n  };\n  p.setQuery = function(name, value, build) {\n    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n\n    if (typeof name === 'string' || name instanceof String) {\n      data[name] = value !== undefined ? value : null;\n    } else if (typeof name === 'object') {\n      for (var key in name) {\n        if (hasOwn.call(name, key)) {\n          data[key] = name[key];\n        }\n      }\n    } else {\n      throw new TypeError('URI.addQuery() accepts an object, string as the name parameter');\n    }\n\n    this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n    if (typeof name !== 'string') {\n      build = value;\n    }\n\n    this.build(!build);\n    return this;\n  };\n  p.addQuery = function(name, value, build) {\n    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n    URI.addQuery(data, name, value === undefined ? null : value);\n    this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n    if (typeof name !== 'string') {\n      build = value;\n    }\n\n    this.build(!build);\n    return this;\n  };\n  p.removeQuery = function(name, value, build) {\n    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n    URI.removeQuery(data, name, value);\n    this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);\n    if (typeof name !== 'string') {\n      build = value;\n    }\n\n    this.build(!build);\n    return this;\n  };\n  p.hasQuery = function(name, value, withinArray) {\n    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);\n    return URI.hasQuery(data, name, value, withinArray);\n  };\n  p.setSearch = p.setQuery;\n  p.addSearch = p.addQuery;\n  p.removeSearch = p.removeQuery;\n  p.hasSearch = p.hasQuery;\n\n  // sanitizing URLs\n  p.normalize = function() {\n    if (this._parts.urn) {\n      return this\n        .normalizeProtocol(false)\n        .normalizePath(false)\n        .normalizeQuery(false)\n        .normalizeFragment(false)\n        .build();\n    }\n\n    return this\n      .normalizeProtocol(false)\n      .normalizeHostname(false)\n      .normalizePort(false)\n      .normalizePath(false)\n      .normalizeQuery(false)\n      .normalizeFragment(false)\n      .build();\n  };\n  p.normalizeProtocol = function(build) {\n    if (typeof this._parts.protocol === 'string') {\n      this._parts.protocol = this._parts.protocol.toLowerCase();\n      this.build(!build);\n    }\n\n    return this;\n  };\n  p.normalizeHostname = function(build) {\n    if (this._parts.hostname) {\n      if (this.is('IDN') && punycode) {\n        this._parts.hostname = punycode.toASCII(this._parts.hostname);\n      } else if (this.is('IPv6') && IPv6) {\n        this._parts.hostname = IPv6.best(this._parts.hostname);\n      }\n\n      this._parts.hostname = this._parts.hostname.toLowerCase();\n      this.build(!build);\n    }\n\n    return this;\n  };\n  p.normalizePort = function(build) {\n    // remove port of it's the protocol's default\n    if (typeof this._parts.protocol === 'string' && this._parts.port === URI.defaultPorts[this._parts.protocol]) {\n      this._parts.port = null;\n      this.build(!build);\n    }\n\n    return this;\n  };\n  p.normalizePath = function(build) {\n    var _path = this._parts.path;\n    if (!_path) {\n      return this;\n    }\n\n    if (this._parts.urn) {\n      this._parts.path = URI.recodeUrnPath(this._parts.path);\n      this.build(!build);\n      return this;\n    }\n\n    if (this._parts.path === '/') {\n      return this;\n    }\n\n    _path = URI.recodePath(_path);\n\n    var _was_relative;\n    var _leadingParents = '';\n    var _parent, _pos;\n\n    // handle relative paths\n    if (_path.charAt(0) !== '/') {\n      _was_relative = true;\n      _path = '/' + _path;\n    }\n\n    // handle relative files (as opposed to directories)\n    if (_path.slice(-3) === '/..' || _path.slice(-2) === '/.') {\n      _path += '/';\n    }\n\n    // resolve simples\n    _path = _path\n      .replace(/(\\/(\\.\\/)+)|(\\/\\.$)/g, '/')\n      .replace(/\\/{2,}/g, '/');\n\n    // remember leading parents\n    if (_was_relative) {\n      _leadingParents = _path.substring(1).match(/^(\\.\\.\\/)+/) || '';\n      if (_leadingParents) {\n        _leadingParents = _leadingParents[0];\n      }\n    }\n\n    // resolve parents\n    while (true) {\n      _parent = _path.search(/\\/\\.\\.(\\/|$)/);\n      if (_parent === -1) {\n        // no more ../ to resolve\n        break;\n      } else if (_parent === 0) {\n        // top level cannot be relative, skip it\n        _path = _path.substring(3);\n        continue;\n      }\n\n      _pos = _path.substring(0, _parent).lastIndexOf('/');\n      if (_pos === -1) {\n        _pos = _parent;\n      }\n      _path = _path.substring(0, _pos) + _path.substring(_parent + 3);\n    }\n\n    // revert to relative\n    if (_was_relative && this.is('relative')) {\n      _path = _leadingParents + _path.substring(1);\n    }\n\n    this._parts.path = _path;\n    this.build(!build);\n    return this;\n  };\n  p.normalizePathname = p.normalizePath;\n  p.normalizeQuery = function(build) {\n    if (typeof this._parts.query === 'string') {\n      if (!this._parts.query.length) {\n        this._parts.query = null;\n      } else {\n        this.query(URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace));\n      }\n\n      this.build(!build);\n    }\n\n    return this;\n  };\n  p.normalizeFragment = function(build) {\n    if (!this._parts.fragment) {\n      this._parts.fragment = null;\n      this.build(!build);\n    }\n\n    return this;\n  };\n  p.normalizeSearch = p.normalizeQuery;\n  p.normalizeHash = p.normalizeFragment;\n\n  p.iso8859 = function() {\n    // expect unicode input, iso8859 output\n    var e = URI.encode;\n    var d = URI.decode;\n\n    URI.encode = escape;\n    URI.decode = decodeURIComponent;\n    try {\n      this.normalize();\n    } finally {\n      URI.encode = e;\n      URI.decode = d;\n    }\n    return this;\n  };\n\n  p.unicode = function() {\n    // expect iso8859 input, unicode output\n    var e = URI.encode;\n    var d = URI.decode;\n\n    URI.encode = strictEncodeURIComponent;\n    URI.decode = unescape;\n    try {\n      this.normalize();\n    } finally {\n      URI.encode = e;\n      URI.decode = d;\n    }\n    return this;\n  };\n\n  p.readable = function() {\n    var uri = this.clone();\n    // removing username, password, because they shouldn't be displayed according to RFC 3986\n    uri.username('').password('').normalize();\n    var t = '';\n    if (uri._parts.protocol) {\n      t += uri._parts.protocol + '://';\n    }\n\n    if (uri._parts.hostname) {\n      if (uri.is('punycode') && punycode) {\n        t += punycode.toUnicode(uri._parts.hostname);\n        if (uri._parts.port) {\n          t += ':' + uri._parts.port;\n        }\n      } else {\n        t += uri.host();\n      }\n    }\n\n    if (uri._parts.hostname && uri._parts.path && uri._parts.path.charAt(0) !== '/') {\n      t += '/';\n    }\n\n    t += uri.path(true);\n    if (uri._parts.query) {\n      var q = '';\n      for (var i = 0, qp = uri._parts.query.split('&'), l = qp.length; i < l; i++) {\n        var kv = (qp[i] || '').split('=');\n        q += '&' + URI.decodeQuery(kv[0], this._parts.escapeQuerySpace)\n          .replace(/&/g, '%26');\n\n        if (kv[1] !== undefined) {\n          q += '=' + URI.decodeQuery(kv[1], this._parts.escapeQuerySpace)\n            .replace(/&/g, '%26');\n        }\n      }\n      t += '?' + q.substring(1);\n    }\n\n    t += URI.decodeQuery(uri.hash(), true);\n    return t;\n  };\n\n  // resolving relative and absolute URLs\n  p.absoluteTo = function(base) {\n    var resolved = this.clone();\n    var properties = ['protocol', 'username', 'password', 'hostname', 'port'];\n    var basedir, i, p;\n\n    if (this._parts.urn) {\n      throw new Error('URNs do not have any generally defined hierarchical components');\n    }\n\n    if (!(base instanceof URI)) {\n      base = new URI(base);\n    }\n\n    if (!resolved._parts.protocol) {\n      resolved._parts.protocol = base._parts.protocol;\n    }\n\n    if (this._parts.hostname) {\n      return resolved;\n    }\n\n    for (i = 0; (p = properties[i]); i++) {\n      resolved._parts[p] = base._parts[p];\n    }\n\n    if (!resolved._parts.path) {\n      resolved._parts.path = base._parts.path;\n      if (!resolved._parts.query) {\n        resolved._parts.query = base._parts.query;\n      }\n    } else if (resolved._parts.path.substring(-2) === '..') {\n      resolved._parts.path += '/';\n    }\n\n    if (resolved.path().charAt(0) !== '/') {\n      basedir = base.directory();\n      basedir = basedir ? basedir : base.path().indexOf('/') === 0 ? '/' : '';\n      resolved._parts.path = (basedir ? (basedir + '/') : '') + resolved._parts.path;\n      resolved.normalizePath();\n    }\n\n    resolved.build();\n    return resolved;\n  };\n  p.relativeTo = function(base) {\n    var relative = this.clone().normalize();\n    var relativeParts, baseParts, common, relativePath, basePath;\n\n    if (relative._parts.urn) {\n      throw new Error('URNs do not have any generally defined hierarchical components');\n    }\n\n    base = new URI(base).normalize();\n    relativeParts = relative._parts;\n    baseParts = base._parts;\n    relativePath = relative.path();\n    basePath = base.path();\n\n    if (relativePath.charAt(0) !== '/') {\n      throw new Error('URI is already relative');\n    }\n\n    if (basePath.charAt(0) !== '/') {\n      throw new Error('Cannot calculate a URI relative to another relative URI');\n    }\n\n    if (relativeParts.protocol === baseParts.protocol) {\n      relativeParts.protocol = null;\n    }\n\n    if (relativeParts.username !== baseParts.username || relativeParts.password !== baseParts.password) {\n      return relative.build();\n    }\n\n    if (relativeParts.protocol !== null || relativeParts.username !== null || relativeParts.password !== null) {\n      return relative.build();\n    }\n\n    if (relativeParts.hostname === baseParts.hostname && relativeParts.port === baseParts.port) {\n      relativeParts.hostname = null;\n      relativeParts.port = null;\n    } else {\n      return relative.build();\n    }\n\n    if (relativePath === basePath) {\n      relativeParts.path = '';\n      return relative.build();\n    }\n\n    // determine common sub path\n    common = URI.commonPath(relativePath, basePath);\n\n    // If the paths have nothing in common, return a relative URL with the absolute path.\n    if (!common) {\n      return relative.build();\n    }\n\n    var parents = baseParts.path\n      .substring(common.length)\n      .replace(/[^\\/]*$/, '')\n      .replace(/.*?\\//g, '../');\n\n    relativeParts.path = (parents + relativeParts.path.substring(common.length)) || './';\n\n    return relative.build();\n  };\n\n  // comparing URIs\n  p.equals = function(uri) {\n    var one = this.clone();\n    var two = new URI(uri);\n    var one_map = {};\n    var two_map = {};\n    var checked = {};\n    var one_query, two_query, key;\n\n    one.normalize();\n    two.normalize();\n\n    // exact match\n    if (one.toString() === two.toString()) {\n      return true;\n    }\n\n    // extract query string\n    one_query = one.query();\n    two_query = two.query();\n    one.query('');\n    two.query('');\n\n    // definitely not equal if not even non-query parts match\n    if (one.toString() !== two.toString()) {\n      return false;\n    }\n\n    // query parameters have the same length, even if they're permuted\n    if (one_query.length !== two_query.length) {\n      return false;\n    }\n\n    one_map = URI.parseQuery(one_query, this._parts.escapeQuerySpace);\n    two_map = URI.parseQuery(two_query, this._parts.escapeQuerySpace);\n\n    for (key in one_map) {\n      if (hasOwn.call(one_map, key)) {\n        if (!isArray(one_map[key])) {\n          if (one_map[key] !== two_map[key]) {\n            return false;\n          }\n        } else if (!arraysEqual(one_map[key], two_map[key])) {\n          return false;\n        }\n\n        checked[key] = true;\n      }\n    }\n\n    for (key in two_map) {\n      if (hasOwn.call(two_map, key)) {\n        if (!checked[key]) {\n          // two contains a parameter not present in one\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  // state\n  p.duplicateQueryParameters = function(v) {\n    this._parts.duplicateQueryParameters = !!v;\n    return this;\n  };\n\n  p.escapeQuerySpace = function(v) {\n    this._parts.escapeQuerySpace = !!v;\n    return this;\n  };\n\n  return URI;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/urijs/src/URI.js\n// module id = 6193\n// module chunks = 7","/*!\n * URI.js - Mutating URLs\n * IPv6 Support\n *\n * Version: 1.17.1\n *\n * Author: Rodney Rehm\n * Web: http://medialize.github.io/URI.js/\n *\n * Licensed under\n *   MIT License http://www.opensource.org/licenses/mit-license\n *\n */\n\n(function (root, factory) {\n  'use strict';\n  // https://github.com/umdjs/umd/blob/master/returnExports.js\n  if (typeof exports === 'object') {\n    // Node\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(factory);\n  } else {\n    // Browser globals (root is window)\n    root.IPv6 = factory(root);\n  }\n}(this, function (root) {\n  'use strict';\n\n  /*\n  var _in = \"fe80:0000:0000:0000:0204:61ff:fe9d:f156\";\n  var _out = IPv6.best(_in);\n  var _expected = \"fe80::204:61ff:fe9d:f156\";\n\n  console.log(_in, _out, _expected, _out === _expected);\n  */\n\n  // save current IPv6 variable, if any\n  var _IPv6 = root && root.IPv6;\n\n  function bestPresentation(address) {\n    // based on:\n    // Javascript to test an IPv6 address for proper format, and to\n    // present the \"best text representation\" according to IETF Draft RFC at\n    // http://tools.ietf.org/html/draft-ietf-6man-text-addr-representation-04\n    // 8 Feb 2010 Rich Brown, Dartware, LLC\n    // Please feel free to use this code as long as you provide a link to\n    // http://www.intermapper.com\n    // http://intermapper.com/support/tools/IPV6-Validator.aspx\n    // http://download.dartware.com/thirdparty/ipv6validator.js\n\n    var _address = address.toLowerCase();\n    var segments = _address.split(':');\n    var length = segments.length;\n    var total = 8;\n\n    // trim colons (:: or ::a:b:c… or …a:b:c::)\n    if (segments[0] === '' && segments[1] === '' && segments[2] === '') {\n      // must have been ::\n      // remove first two items\n      segments.shift();\n      segments.shift();\n    } else if (segments[0] === '' && segments[1] === '') {\n      // must have been ::xxxx\n      // remove the first item\n      segments.shift();\n    } else if (segments[length - 1] === '' && segments[length - 2] === '') {\n      // must have been xxxx::\n      segments.pop();\n    }\n\n    length = segments.length;\n\n    // adjust total segments for IPv4 trailer\n    if (segments[length - 1].indexOf('.') !== -1) {\n      // found a \".\" which means IPv4\n      total = 7;\n    }\n\n    // fill empty segments them with \"0000\"\n    var pos;\n    for (pos = 0; pos < length; pos++) {\n      if (segments[pos] === '') {\n        break;\n      }\n    }\n\n    if (pos < total) {\n      segments.splice(pos, 1, '0000');\n      while (segments.length < total) {\n        segments.splice(pos, 0, '0000');\n      }\n\n      length = segments.length;\n    }\n\n    // strip leading zeros\n    var _segments;\n    for (var i = 0; i < total; i++) {\n      _segments = segments[i].split('');\n      for (var j = 0; j < 3 ; j++) {\n        if (_segments[0] === '0' && _segments.length > 1) {\n          _segments.splice(0,1);\n        } else {\n          break;\n        }\n      }\n\n      segments[i] = _segments.join('');\n    }\n\n    // find longest sequence of zeroes and coalesce them into one segment\n    var best = -1;\n    var _best = 0;\n    var _current = 0;\n    var current = -1;\n    var inzeroes = false;\n    // i; already declared\n\n    for (i = 0; i < total; i++) {\n      if (inzeroes) {\n        if (segments[i] === '0') {\n          _current += 1;\n        } else {\n          inzeroes = false;\n          if (_current > _best) {\n            best = current;\n            _best = _current;\n          }\n        }\n      } else {\n        if (segments[i] === '0') {\n          inzeroes = true;\n          current = i;\n          _current = 1;\n        }\n      }\n    }\n\n    if (_current > _best) {\n      best = current;\n      _best = _current;\n    }\n\n    if (_best > 1) {\n      segments.splice(best, _best, '');\n    }\n\n    length = segments.length;\n\n    // assemble remaining segments\n    var result = '';\n    if (segments[0] === '')  {\n      result = ':';\n    }\n\n    for (i = 0; i < length; i++) {\n      result += segments[i];\n      if (i === length - 1) {\n        break;\n      }\n\n      result += ':';\n    }\n\n    if (segments[length - 1] === '') {\n      result += ':';\n    }\n\n    return result;\n  }\n\n  function noConflict() {\n    /*jshint validthis: true */\n    if (root.IPv6 === this) {\n      root.IPv6 = _IPv6;\n    }\n  \n    return this;\n  }\n\n  return {\n    best: bestPresentation,\n    noConflict: noConflict\n  };\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/urijs/src/IPv6.js\n// module id = 6195\n// module chunks = 7","/*!\n * URI.js - Mutating URLs\n * Second Level Domain (SLD) Support\n *\n * Version: 1.17.1\n *\n * Author: Rodney Rehm\n * Web: http://medialize.github.io/URI.js/\n *\n * Licensed under\n *   MIT License http://www.opensource.org/licenses/mit-license\n *\n */\n\n(function (root, factory) {\n  'use strict';\n  // https://github.com/umdjs/umd/blob/master/returnExports.js\n  if (typeof exports === 'object') {\n    // Node\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(factory);\n  } else {\n    // Browser globals (root is window)\n    root.SecondLevelDomains = factory(root);\n  }\n}(this, function (root) {\n  'use strict';\n\n  // save current SecondLevelDomains variable, if any\n  var _SecondLevelDomains = root && root.SecondLevelDomains;\n\n  var SLD = {\n    // list of known Second Level Domains\n    // converted list of SLDs from https://github.com/gavingmiller/second-level-domains\n    // ----\n    // publicsuffix.org is more current and actually used by a couple of browsers internally.\n    // downside is it also contains domains like \"dyndns.org\" - which is fine for the security\n    // issues browser have to deal with (SOP for cookies, etc) - but is way overboard for URI.js\n    // ----\n    list: {\n      'ac':' com gov mil net org ',\n      'ae':' ac co gov mil name net org pro sch ',\n      'af':' com edu gov net org ',\n      'al':' com edu gov mil net org ',\n      'ao':' co ed gv it og pb ',\n      'ar':' com edu gob gov int mil net org tur ',\n      'at':' ac co gv or ',\n      'au':' asn com csiro edu gov id net org ',\n      'ba':' co com edu gov mil net org rs unbi unmo unsa untz unze ',\n      'bb':' biz co com edu gov info net org store tv ',\n      'bh':' biz cc com edu gov info net org ',\n      'bn':' com edu gov net org ',\n      'bo':' com edu gob gov int mil net org tv ',\n      'br':' adm adv agr am arq art ato b bio blog bmd cim cng cnt com coop ecn edu eng esp etc eti far flog fm fnd fot fst g12 ggf gov imb ind inf jor jus lel mat med mil mus net nom not ntr odo org ppg pro psc psi qsl rec slg srv tmp trd tur tv vet vlog wiki zlg ',\n      'bs':' com edu gov net org ',\n      'bz':' du et om ov rg ',\n      'ca':' ab bc mb nb nf nl ns nt nu on pe qc sk yk ',\n      'ck':' biz co edu gen gov info net org ',\n      'cn':' ac ah bj com cq edu fj gd gov gs gx gz ha hb he hi hl hn jl js jx ln mil net nm nx org qh sc sd sh sn sx tj tw xj xz yn zj ',\n      'co':' com edu gov mil net nom org ',\n      'cr':' ac c co ed fi go or sa ',\n      'cy':' ac biz com ekloges gov ltd name net org parliament press pro tm ',\n      'do':' art com edu gob gov mil net org sld web ',\n      'dz':' art asso com edu gov net org pol ',\n      'ec':' com edu fin gov info med mil net org pro ',\n      'eg':' com edu eun gov mil name net org sci ',\n      'er':' com edu gov ind mil net org rochest w ',\n      'es':' com edu gob nom org ',\n      'et':' biz com edu gov info name net org ',\n      'fj':' ac biz com info mil name net org pro ',\n      'fk':' ac co gov net nom org ',\n      'fr':' asso com f gouv nom prd presse tm ',\n      'gg':' co net org ',\n      'gh':' com edu gov mil org ',\n      'gn':' ac com gov net org ',\n      'gr':' com edu gov mil net org ',\n      'gt':' com edu gob ind mil net org ',\n      'gu':' com edu gov net org ',\n      'hk':' com edu gov idv net org ',\n      'hu':' 2000 agrar bolt casino city co erotica erotika film forum games hotel info ingatlan jogasz konyvelo lakas media news org priv reklam sex shop sport suli szex tm tozsde utazas video ',\n      'id':' ac co go mil net or sch web ',\n      'il':' ac co gov idf k12 muni net org ',\n      'in':' ac co edu ernet firm gen gov i ind mil net nic org res ',\n      'iq':' com edu gov i mil net org ',\n      'ir':' ac co dnssec gov i id net org sch ',\n      'it':' edu gov ',\n      'je':' co net org ',\n      'jo':' com edu gov mil name net org sch ',\n      'jp':' ac ad co ed go gr lg ne or ',\n      'ke':' ac co go info me mobi ne or sc ',\n      'kh':' com edu gov mil net org per ',\n      'ki':' biz com de edu gov info mob net org tel ',\n      'km':' asso com coop edu gouv k medecin mil nom notaires pharmaciens presse tm veterinaire ',\n      'kn':' edu gov net org ',\n      'kr':' ac busan chungbuk chungnam co daegu daejeon es gangwon go gwangju gyeongbuk gyeonggi gyeongnam hs incheon jeju jeonbuk jeonnam k kg mil ms ne or pe re sc seoul ulsan ',\n      'kw':' com edu gov net org ',\n      'ky':' com edu gov net org ',\n      'kz':' com edu gov mil net org ',\n      'lb':' com edu gov net org ',\n      'lk':' assn com edu gov grp hotel int ltd net ngo org sch soc web ',\n      'lr':' com edu gov net org ',\n      'lv':' asn com conf edu gov id mil net org ',\n      'ly':' com edu gov id med net org plc sch ',\n      'ma':' ac co gov m net org press ',\n      'mc':' asso tm ',\n      'me':' ac co edu gov its net org priv ',\n      'mg':' com edu gov mil nom org prd tm ',\n      'mk':' com edu gov inf name net org pro ',\n      'ml':' com edu gov net org presse ',\n      'mn':' edu gov org ',\n      'mo':' com edu gov net org ',\n      'mt':' com edu gov net org ',\n      'mv':' aero biz com coop edu gov info int mil museum name net org pro ',\n      'mw':' ac co com coop edu gov int museum net org ',\n      'mx':' com edu gob net org ',\n      'my':' com edu gov mil name net org sch ',\n      'nf':' arts com firm info net other per rec store web ',\n      'ng':' biz com edu gov mil mobi name net org sch ',\n      'ni':' ac co com edu gob mil net nom org ',\n      'np':' com edu gov mil net org ',\n      'nr':' biz com edu gov info net org ',\n      'om':' ac biz co com edu gov med mil museum net org pro sch ',\n      'pe':' com edu gob mil net nom org sld ',\n      'ph':' com edu gov i mil net ngo org ',\n      'pk':' biz com edu fam gob gok gon gop gos gov net org web ',\n      'pl':' art bialystok biz com edu gda gdansk gorzow gov info katowice krakow lodz lublin mil net ngo olsztyn org poznan pwr radom slupsk szczecin torun warszawa waw wroc wroclaw zgora ',\n      'pr':' ac biz com edu est gov info isla name net org pro prof ',\n      'ps':' com edu gov net org plo sec ',\n      'pw':' belau co ed go ne or ',\n      'ro':' arts com firm info nom nt org rec store tm www ',\n      'rs':' ac co edu gov in org ',\n      'sb':' com edu gov net org ',\n      'sc':' com edu gov net org ',\n      'sh':' co com edu gov net nom org ',\n      'sl':' com edu gov net org ',\n      'st':' co com consulado edu embaixada gov mil net org principe saotome store ',\n      'sv':' com edu gob org red ',\n      'sz':' ac co org ',\n      'tr':' av bbs bel biz com dr edu gen gov info k12 name net org pol tel tsk tv web ',\n      'tt':' aero biz cat co com coop edu gov info int jobs mil mobi museum name net org pro tel travel ',\n      'tw':' club com ebiz edu game gov idv mil net org ',\n      'mu':' ac co com gov net or org ',\n      'mz':' ac co edu gov org ',\n      'na':' co com ',\n      'nz':' ac co cri geek gen govt health iwi maori mil net org parliament school ',\n      'pa':' abo ac com edu gob ing med net nom org sld ',\n      'pt':' com edu gov int net nome org publ ',\n      'py':' com edu gov mil net org ',\n      'qa':' com edu gov mil net org ',\n      're':' asso com nom ',\n      'ru':' ac adygeya altai amur arkhangelsk astrakhan bashkiria belgorod bir bryansk buryatia cbg chel chelyabinsk chita chukotka chuvashia com dagestan e-burg edu gov grozny int irkutsk ivanovo izhevsk jar joshkar-ola kalmykia kaluga kamchatka karelia kazan kchr kemerovo khabarovsk khakassia khv kirov koenig komi kostroma kranoyarsk kuban kurgan kursk lipetsk magadan mari mari-el marine mil mordovia mosreg msk murmansk nalchik net nnov nov novosibirsk nsk omsk orenburg org oryol penza perm pp pskov ptz rnd ryazan sakhalin samara saratov simbirsk smolensk spb stavropol stv surgut tambov tatarstan tom tomsk tsaritsyn tsk tula tuva tver tyumen udm udmurtia ulan-ude vladikavkaz vladimir vladivostok volgograd vologda voronezh vrn vyatka yakutia yamal yekaterinburg yuzhno-sakhalinsk ',\n      'rw':' ac co com edu gouv gov int mil net ',\n      'sa':' com edu gov med net org pub sch ',\n      'sd':' com edu gov info med net org tv ',\n      'se':' a ac b bd c d e f g h i k l m n o org p parti pp press r s t tm u w x y z ',\n      'sg':' com edu gov idn net org per ',\n      'sn':' art com edu gouv org perso univ ',\n      'sy':' com edu gov mil net news org ',\n      'th':' ac co go in mi net or ',\n      'tj':' ac biz co com edu go gov info int mil name net nic org test web ',\n      'tn':' agrinet com defense edunet ens fin gov ind info intl mincom nat net org perso rnrt rns rnu tourism ',\n      'tz':' ac co go ne or ',\n      'ua':' biz cherkassy chernigov chernovtsy ck cn co com crimea cv dn dnepropetrovsk donetsk dp edu gov if in ivano-frankivsk kh kharkov kherson khmelnitskiy kiev kirovograd km kr ks kv lg lugansk lutsk lviv me mk net nikolaev od odessa org pl poltava pp rovno rv sebastopol sumy te ternopil uzhgorod vinnica vn zaporizhzhe zhitomir zp zt ',\n      'ug':' ac co go ne or org sc ',\n      'uk':' ac bl british-library co cym gov govt icnet jet lea ltd me mil mod national-library-scotland nel net nhs nic nls org orgn parliament plc police sch scot soc ',\n      'us':' dni fed isa kids nsn ',\n      'uy':' com edu gub mil net org ',\n      've':' co com edu gob info mil net org web ',\n      'vi':' co com k12 net org ',\n      'vn':' ac biz com edu gov health info int name net org pro ',\n      'ye':' co com gov ltd me net org plc ',\n      'yu':' ac co edu gov org ',\n      'za':' ac agric alt bourse city co cybernet db edu gov grondar iaccess imt inca landesign law mil net ngo nis nom olivetti org pix school tm web ',\n      'zm':' ac co com edu gov net org sch '\n    },\n    // gorhill 2013-10-25: Using indexOf() instead Regexp(). Significant boost\n    // in both performance and memory footprint. No initialization required.\n    // http://jsperf.com/uri-js-sld-regex-vs-binary-search/4\n    // Following methods use lastIndexOf() rather than array.split() in order\n    // to avoid any memory allocations.\n    has: function(domain) {\n      var tldOffset = domain.lastIndexOf('.');\n      if (tldOffset <= 0 || tldOffset >= (domain.length-1)) {\n        return false;\n      }\n      var sldOffset = domain.lastIndexOf('.', tldOffset-1);\n      if (sldOffset <= 0 || sldOffset >= (tldOffset-1)) {\n        return false;\n      }\n      var sldList = SLD.list[domain.slice(tldOffset+1)];\n      if (!sldList) {\n        return false;\n      }\n      return sldList.indexOf(' ' + domain.slice(sldOffset+1, tldOffset) + ' ') >= 0;\n    },\n    is: function(domain) {\n      var tldOffset = domain.lastIndexOf('.');\n      if (tldOffset <= 0 || tldOffset >= (domain.length-1)) {\n        return false;\n      }\n      var sldOffset = domain.lastIndexOf('.', tldOffset-1);\n      if (sldOffset >= 0) {\n        return false;\n      }\n      var sldList = SLD.list[domain.slice(tldOffset+1)];\n      if (!sldList) {\n        return false;\n      }\n      return sldList.indexOf(' ' + domain.slice(0, tldOffset) + ' ') >= 0;\n    },\n    get: function(domain) {\n      var tldOffset = domain.lastIndexOf('.');\n      if (tldOffset <= 0 || tldOffset >= (domain.length-1)) {\n        return null;\n      }\n      var sldOffset = domain.lastIndexOf('.', tldOffset-1);\n      if (sldOffset <= 0 || sldOffset >= (tldOffset-1)) {\n        return null;\n      }\n      var sldList = SLD.list[domain.slice(tldOffset+1)];\n      if (!sldList) {\n        return null;\n      }\n      if (sldList.indexOf(' ' + domain.slice(sldOffset+1, tldOffset) + ' ') < 0) {\n        return null;\n      }\n      return domain.slice(sldOffset+1);\n    },\n    noConflict: function(){\n      if (root.SecondLevelDomains === this) {\n        root.SecondLevelDomains = _SecondLevelDomains;\n      }\n      return this;\n    }\n  };\n\n  return SLD;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/urijs/src/SecondLevelDomains.js\n// module id = 6196\n// module chunks = 7","\"use strict\";\n\n//*------------------------------------------------------------------*\n\nvar React = require('react');\nvar BootstrapButton = require('react-bootstrap/lib/Button');\n\n//*------------------------------------------------------------------*\n\nvar ExperimentsList = React.createClass({\n    propTypes: {\n        profiles: React.PropTypes.shape({\n            rows: React.PropTypes.array.isRequired\n        }).isRequired,\n        atlasBaseURL: React.PropTypes.string.isRequired,\n        linksAtlasBaseURL: React.PropTypes.string.isRequired,\n        geneQuery: React.PropTypes.string.isRequired\n    },\n\n    getInitialState: function() {\n        return {\"displayAll\": this.props.profiles.rows.length < 10};\n    },\n\n    _getRowsToDisplay: function() {\n        var rows = this.props.profiles.rows.sort(this._lexicalSort);\n        return this.state.displayAll ? rows : rows.slice(0,10);\n    },\n\n    _displayAll :function() {\n      this.setState({\"displayAll\" : true});\n    },\n\n    _lexicalSort: function(thisProfile, thatProfile) {\n        if (thisProfile.name > thatProfile.name) {\n            return 1;\n        }\n        if (thisProfile.name < thatProfile.name) {\n            return -1;\n        }\n        return 0;\n    },\n\n    _renderListItem: function (profile) {\n        var experimentURL =\n            this.props.linksAtlasBaseURL +\n            \"/experiments/\" + profile.id + \"?geneQuery=\" + this.props.geneQuery +\n            (profile.serializedFilterFactors ?\n            \"&serializedFilterFactors=\" + encodeURIComponent(profile.serializedFilterFactors) : \"\");\n\n        return (\n            <li key={profile.name}>\n                <a target=\"_blank\" href={experimentURL}>{profile.name}</a>\n            </li>\n        );\n    },\n\n    _renderListItems: function(options) {\n        return this._getRowsToDisplay().map(this._renderListItem);\n    },\n\n    render: function() {\n        return (\n            <ul style={{listStyleType: \"none\", paddingLeft: \"0\"}}>\n                {this._renderListItems()}\n                {this.state.displayAll? <a/> : <BootstrapButton bsStyle=\"default\" bsSize=\"xsmall\" onClick={this._displayAll}>More</BootstrapButton> }\n            </ul>\n        );\n    }\n});\n\n//*------------------------------------------------------------------*\n\nmodule.exports = ExperimentsList;\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/heatmap/src/ExperimentsList.jsx","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js!./HeatmapAnatomogramContainer.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./HeatmapAnatomogramContainer.css\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./HeatmapAnatomogramContainer.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/src/HeatmapAnatomogramContainer.css\n// module id = 6198\n// module chunks = 7","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".gxaHeatmapAnatomogramRow {\\n    position: relative;\\n}\\n\\n.gxaHeatmapAnatomogramRow:after {\\n    clear: both;\\n    content: \\\".\\\";\\n    display: block;\\n    visibility: hidden;\\n}\\n\\n.gxaAside {\\n    float: left;\\n}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./atlas_bundles/heatmap/~/css-loader!./atlas_bundles/heatmap/src/HeatmapAnatomogramContainer.css\n// module id = 6199\n// module chunks = 7"],"sourceRoot":""}