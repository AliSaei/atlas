{"version":3,"sources":["webpack:///./atlas_bundles/browse-by-species/index.js","webpack:///./atlas_bundles/browse-by-species/src/browseBySpeciesRenderer.jsx","webpack:///./atlas_bundles/browse-by-species/src/BrowseBySpecies.jsx","webpack:///./atlas_bundles/browse-by-species/src/SpeciesRow.jsx","webpack:///./atlas_bundles/browse-by-species/src/SpeciesItem.jsx","webpack:///./atlas_bundles/browse-by-species/~/react-ebi-species/src/ebi-visual-species.css"],"names":["render","atlasUrl","speciesInfoList","container","document","getElementById","splitArray","arr","size","reduce","partition","element","index","push","Math","floor","BrowseBySpecies","columns","splitSpeciesInfoList","props","speciesRows","map","speciesInfo","propTypes","PropTypes","string","isRequired","arrayOf","shape","species","totalExperiments","number","baselineExperiments","differentialExperiments","SpeciesRow","speciesItems","speciesInfoArray","length","EbiSpeciesIcon","require","Icon","SpeciesItem","allExperimentsUrl","segment","addSearch","organism","differentialExperimentsUrl","experimentType","baselineExperimentsUrl","speciesFirstCapitalLetter","toUpperCase","substr","last","bool"],"mappings":"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","file":"expressionAtlasBrowseBySpecies.bundle.js","sourcesContent":["import render from './src/browseBySpeciesRenderer.jsx';\n\nexport {render};\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/browse-by-species/index.js","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport BrowseBySpecies from './BrowseBySpecies.jsx';\n\nexport default function ({atlasUrl, speciesInfoList, container}) {\n    ReactDOM.render(\n        <BrowseBySpecies atlasUrl={atlasUrl} speciesInfoList={speciesInfoList} />,\n        typeof container === `string` ? document.getElementById(container) : container)\n};\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/browse-by-species/src/browseBySpeciesRenderer.jsx","import React from 'react';\n\nimport SpeciesRow from './SpeciesRow.jsx';\n\n// Split an array into chunks of length `size`. Or just use lodash: _.chunk(arr, size)\nconst splitArray = (arr, size) =>\n{\n    if (size === 0) {\n        return [];\n    }\n\n    return arr.reduce((partition, element, index) => {\n        index % size === 0 ? partition.push([element]) : partition[Math.floor(index / size)].push(element);\n        return partition;\n    }, []);\n};\n\nconst BrowseBySpecies = props =>\n{\n    const columns = 3;\n    // Split into chunks and add last for incomplete columns in Foundation\n    const splitSpeciesInfoList = splitArray(props.speciesInfoList, columns);\n\n    const speciesRows = splitSpeciesInfoList.map(\n        (speciesInfo, index) => <SpeciesRow key={index} atlasUrl={props.atlasUrl} speciesInfoArray={speciesInfo} />);\n\n    return (\n        <div>\n            {speciesRows}\n        </div>\n    );\n};\n\nBrowseBySpecies.propTypes = {\n    atlasUrl: React.PropTypes.string.isRequired,\n    speciesInfoList: React.PropTypes.arrayOf(React.PropTypes.shape({\n        species: React.PropTypes.string.isRequired,\n        totalExperiments: React.PropTypes.number.isRequired,\n        baselineExperiments: React.PropTypes.number.isRequired,\n        differentialExperiments: React.PropTypes.number.isRequired\n    })).isRequired,\n};\n\nexport default BrowseBySpecies;\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/browse-by-species/src/BrowseBySpecies.jsx","import React from 'react';\nimport SpeciesItem from './SpeciesItem.jsx';\n\nconst SpeciesRow = props => {\n    const speciesItems = props.speciesInfoArray.map((speciesInfo, index) =>\n        <SpeciesItem key = {speciesInfo.species}\n                     atlasUrl = {props.atlasUrl}\n                     last = {index === props.speciesInfoArray.length - 1}\n                     {...speciesInfo}\n        />);\n\n    return (\n        <div className=\"row\">\n            {speciesItems}\n        </div>\n    );\n};\n\nSpeciesRow.propTypes = {\n    atlasUrl: React.PropTypes.string.isRequired,\n    speciesInfoArray: React.PropTypes.arrayOf(React.PropTypes.shape({\n        species: React.PropTypes.string.isRequired,\n        totalExperiments: React.PropTypes.number.isRequired,\n        baselineExperiments: React.PropTypes.number.isRequired,\n        differentialExperiments: React.PropTypes.number.isRequired,\n    })).isRequired\n};\n\nexport default SpeciesRow;\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/browse-by-species/src/SpeciesRow.jsx","import React from 'react';\nimport URI from 'urijs';\nconst EbiSpeciesIcon = require('react-ebi-species').Icon;\n\nconst SpeciesItem = props =>\n{\n    const allExperimentsUrl = URI(props.atlasUrl).segment(`experiments`).addSearch({ organism: props.species });\n    const differentialExperimentsUrl = URI(allExperimentsUrl).addSearch({ experimentType: `differential` });\n    const baselineExperimentsUrl = URI(allExperimentsUrl).addSearch({ experimentType: `baseline` });\n\n    const speciesFirstCapitalLetter = props.species[0].toUpperCase() + props.species.substr(1);\n\n    return (\n        <div className={\"columns small-4 text-center combo\" + (props.last ? \" end\" : \"\")}>\n            <a href={allExperimentsUrl}>\n                <span className=\"large-species-icon\">\n                    <EbiSpeciesIcon species={props.species}/>\n                </span>\n\n                <h5 className=\"species\">{speciesFirstCapitalLetter}</h5>\n            </a>\n\n            <p className=\"experiments\">\n                {props.totalExperiments} experiments<br/>\n                <a href={differentialExperimentsUrl} className=\"differential\">\n                    <span data-tooltip aria-haspopup=\"true\" className=\"differential tiny button-rd\" title=\"Differential experiments\">D</span>\n                    {props.baselineExperiments}\n                </a>\n                <a href={baselineExperimentsUrl} className=\"baseline padding-left-medium\">\n                    <span data-tooltip aria-haspopup=\"true\" className=\"baseline tiny button-rd\" title=\"Baseline experiments\">B</span>\n                    {props.differentialExperiments}\n                </a>\n            </p>\n        </div>\n    );\n};\n\nSpeciesItem.propTypes = {\n    atlasUrl: React.PropTypes.string.isRequired,\n    species: React.PropTypes.string.isRequired,\n    totalExperiments: React.PropTypes.number.isRequired,\n    baselineExperiments: React.PropTypes.number.isRequired,\n    differentialExperiments: React.PropTypes.number.isRequired,\n    last: React.PropTypes.bool.isRequired\n};\n\nexport default SpeciesItem;\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/browse-by-species/src/SpeciesItem.jsx","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../css-loader/index.js!./ebi-visual-species.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../css-loader/index.js!./ebi-visual-species.css\", function() {\n\t\t\tvar newContent = require(\"!!../../css-loader/index.js!./ebi-visual-species.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/style-loader!./atlas_bundles/browse-by-species/~/css-loader!./atlas_bundles/browse-by-species/~/react-ebi-species/src/ebi-visual-species.css\n// module id = 4563\n// module chunks = 4"],"sourceRoot":""}