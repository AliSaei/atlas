-- Microarray differential analytics
DROP TABLE MICROARRAY_DIFF_ANALYTICS;
CREATE TABLE MICROARRAY_DIFF_ANALYTICS (
    DESIGNELEMENT VARCHAR(255) NOT NULL
  , EXPERIMENT VARCHAR(255) NOT NULL
  , ARRAYDESIGN  VARCHAR(255) NOT NULL
  , CONTRASTID VARCHAR(255) NOT NULL
  , PVAL FLOAT(53) NOT NULL
  , LOG2FOLD FLOAT(53)
  , TSTAT FLOAT(53)
  , PRIMARY KEY (DESIGNELEMENT, EXPERIMENT, CONTRASTID, PVAL)
);

CREATE INDEX MA_DIFF_ANALYTICS_IDX ON MICROARRAY_DIFF_ANALYTICS (EXPERIMENT, CONTRASTID);

-- RNA-seq differential analytics
DROP TABLE RNASEQ_DIFF_ANALYTICS;
CREATE TABLE RNASEQ_DIFF_ANALYTICS (
    IDENTIFIER VARCHAR(255) NOT NULL
  , EXPERIMENT VARCHAR(255) NOT NULL
  , CONTRASTID VARCHAR(255) NOT NULL
  , PVAL FLOAT(53) NOT NULL
  , LOG2FOLD FLOAT(53)
  , PRIMARY KEY (IDENTIFIER, EXPERIMENT, CONTRASTID, PVAL)
);

CREATE INDEX RNASEQ_DIFF_ANALYTICS_IDX ON RNASEQ_DIFF_ANALYTICS (EXPERIMENT, CONTRASTID);

-- RNA-seq baseline analytics
DROP TABLE RNASEQ_BSLN_EXPRESSIONS;
CREATE TABLE RNASEQ_BSLN_EXPRESSIONS (
    IDENTIFIER VARCHAR(255) NOT NULL
  , EXPERIMENT VARCHAR(255) NOT NULL
  , ASSAYGROUPID VARCHAR(255) NOT NULL
  , EXPRESSION FLOAT(53) NOT NULL
  , PRIMARY KEY (IDENTIFIER, EXPERIMENT, ASSAYGROUPID, EXPRESSION)
);

CREATE INDEX RSQ_BSLN_EXPRESSIONS_IDX ON RNASEQ_BSLN_EXPRESSIONS (IDENTIFIER, EXPERIMENT, ASSAYGROUPID);

-- miRBase and Ensembl gene names
DROP TABLE BIOENTITY_NAME;
CREATE TABLE BIOENTITY_NAME (
    identifier VARCHAR(255) NOT NULL
    , organismid NUMERIC(22,0) NOT NULL
    , type VARCHAR(50) NOT NULL
    , name VARCHAR(255)
    , PRIMARY KEY (IDENTIFIER, ORGANISMID, TYPE)
);

-- miRBase and Ensembl design element to gene mappings
DROP TABLE DESIGNELEMENT_MAPPING;
CREATE TABLE DESIGNELEMENT_MAPPING (
    designelement VARCHAR(255) NOT NULL
    , identifier VARCHAR(255) NOT NULL
    , type VARCHAR(50) NOT NULL
    , arraydesign  VARCHAR(255) NOT NULL
    , PRIMARY KEY (DESIGNELEMENT, IDENTIFIER, ARRAYDESIGN)    
);

-- Reference table mapping array design accession in DESIGNELEMENT_MAPPING to their user-friendly names
DROP TABLE ARRAYDESIGN;
CREATE TABLE ARRAYDESIGN (
    accession  VARCHAR(255) NOT NULL
    , name  VARCHAR(255) NOT NULL
    , PRIMARY KEY (ACCESSION)        
);

ALTER TABLE DESIGNELEMENT_MAPPING
  ADD CONSTRAINT FK_ARRAYDESIGN FOREIGN KEY (ARRAYDESIGN) REFERENCES arraydesign(ACCESSION) ON DELETE CASCADE;

ALTER TABLE MICROARRAY_DIFF_ANALYTICS
  ADD CONSTRAINT FK_ARRAYDESIGN FOREIGN KEY (ARRAYDESIGN) REFERENCES arraydesign(ACCESSION) ON DELETE CASCADE;

-- Reference table for all bioentity organisms (across Ensembl and miRBase)
DROP TABLE BIOENTITY_ORGANISM;
CREATE TABLE BIOENTITY_ORGANISM (
    organismid NUMERIC(22,0) NOT NULL
    , name VARCHAR(255) NOT NULL
    , PRIMARY KEY (ORGANISMID) 
);

-- Experiment table
ALTER TABLE EXPERIMENT_ORGANISM DROP CONSTRAINT FK_EXPERIMENT_ORGANISM;
DROP TABLE EXPERIMENT;
CREATE TABLE EXPERIMENT(
    ACCESSION VARCHAR(255) NOT NULL
    , TYPE VARCHAR(50) NOT NULL
    , ACCESS_KEY CHAR(36) NOT NULL
    , PRIVATE VARCHAR(1) DEFAULT 'T'
    , LAST_UPDATE DATE DEFAULT current_date
    , PUBMED_IDS VARCHAR(255)
    , TITLE VARCHAR(500)
    , PRIMARY KEY (ACCESSION)     
);

CREATE OR REPLACE VIEW PUBLIC_EXPERIMENT AS
SELECT ACCESSION, type, LAST_UPDATE
FROM EXPERIMENT WHERE PRIVATE='F';

-- Species table
DROP TABLE EXPERIMENT_ORGANISM;
CREATE TABLE EXPERIMENT_ORGANISM(
    ORGANISM VARCHAR(255) NOT NULL
    , EXPERIMENT VARCHAR(255) NOT NULL
    , PRIMARY KEY (EXPERIMENT) 
);

CREATE OR REPLACE VIEW VW_EXPERIMENT_ORGANISM
AS
select organism, experiment, split_part(ORGANISM, ' ', 1) || ' ' || split_part(ORGANISM, ' ', 2) as BIOENTITY_ORGANISM
from EXPERIMENT_ORGANISM;

-- TODO: Got here so far! 

-- Table for storing sample attribute-value mappings to ontology
DROP TABLE ONTOLOGY_MAPPINGS;
CREATE TABLE ONTOLOGY_MAPPINGS (
    PROPERTY_NAME VARCHAR(255) NOT NULL
    , PROPERTY_VALUE VARCHAR(255) NOT NULL
    , ONTOLOGY_URI VARCHAR(255) NOT NULL
    , DATE_UPDATE TIMESTAMP NOT NULL
    , PRIMARY KEY (PROPERTY_NAME, PROPERTY_VALUE) 
);

-- Loading table for ONTOLOGY_MAPPINGS
DROP TABLE ONTOLOGY_MAPPINGS_LOADING;
CREATE TABLE ONTOLOGY_MAPPINGS_LOADING (
    PROPERTY_NAME VARCHAR(255) NOT NULL,
    PROPERTY_VALUE VARCHAR(255) NOT NULL,
    ONTOLOGY_URI VARCHAR(255) NOT NULL
);

-- Table for storing co-expressed genes in baseline experiments
DROP TABLE RNASEQ_BSLN_COEXPRESSION;
CREATE TABLE RNASEQ_BSLN_COEXPRESSION (
  EXPERIMENT VARCHAR(255) NOT NULL
  , IDENTIFIER VARCHAR(255) NOT NULL
  , CE_STATISTIC DOUBLE PRECISION NOT NULL
  , CE_IDENTIFIER VARCHAR(255) NOT NULL
  , PRIMARY KEY (EXPERIMENT, IDENTIFIER, CE_IDENTIFIER)
);

-- Table for storing co-expressed genes in baseline experiments
DROP TABLE RNASEQ_BSLN_CE_PROFILES;
CREATE TABLE RNASEQ_BSLN_CE_PROFILES (
  EXPERIMENT VARCHAR(255) NOT NULL
  , IDENTIFIER VARCHAR(255) NOT NULL
  , CE_IDENTIFIERS TEXT NOT NULL
  , PRIMARY KEY (EXPERIMENT, IDENTIFIER)
);

-- Data processing in-progress flag table - used for data production in Atlas - no dependency on it exists in the Web services code
DROP TABLE ATLAS_JOBS;
CREATE TABLE ATLAS_JOBS(
    DATE_STARTED DATE DEFAULT current_date,
    JOBTYPE VARCHAR(255) NOT NULL,
    JOBOBJECT VARCHAR(255) NULL -- Experiment accession or organism
);

-- Differential analytics across all types of experiments, with additional gene name and organism information, restricted to FDR<0.05 and log2fold>=1
-- Used by the UI
DROP MATERIALIZED VIEW VW_DIFFANALYTICS;
CREATE MATERIALIZED VIEW VW_DIFFANALYTICS
AS
select IDENTIFIER, NAME, ORGANISM, EXPERIMENT, CONTRASTID, PVAL, LOG2FOLD, TSTAT
from (
select dem.IDENTIFIER, bn.NAME AS NAME, o.NAME AS ORGANISM, mda.EXPERIMENT, mda.CONTRASTID, mda.PVAL, mda.LOG2FOLD, mda.TSTAT
,rank() over(partition by mda.EXPERIMENT, mda.CONTRASTID, dem.IDENTIFIER order by(abs(mda.LOG2FOLD)) desc) as lfrank
from MICROARRAY_DIFF_ANALYTICS mda
join DESIGNELEMENT_MAPPING dem on mda.designelement=dem.designelement and mda.arraydesign = dem.arraydesign
join BIOENTITY_NAME bn on dem.identifier=bn.identifier
join BIOENTITY_ORGANISM o on bn.organismid = o.organismid
where abs(mda.LOG2FOLD) >= 1
and mda.PVAL < 0.05
) sq where lfrank = 1
union all
select rda.IDENTIFIER, bn.NAME AS NAME, o.name AS ORGANISM, rda.EXPERIMENT, rda.CONTRASTID, rda.PVAL, rda.LOG2FOLD, null
from RNASEQ_DIFF_ANALYTICS rda
join BIOENTITY_NAME bn on rda.IDENTIFIER=bn.identifier
join BIOENTITY_ORGANISM o on bn.organismid = o.organismid
join VW_EXPERIMENT_ORGANISM eo on o.name = eo.bioentity_organism and eo.experiment = rda.experiment
where abs(rda.LOG2FOLD) >= 1
and rda.PVAL < 0.05
WITH NO DATA;

exec dbms_mview.refresh( 'VW_DIFFANALYTICS', 'C' );

-- Differential analytics across all types of experiments, with additional gene name and organism information, restricted to FDR<0.05 only
-- Used to generate a data dump at Atlas release time
DROP MATERIALIZED VIEW VW_DIFFANALYTICS_DUMP;
CREATE MATERIALIZED VIEW VW_DIFFANALYTICS_DUMP
AS
select IDENTIFIER, NAME, ORGANISM, EXPERIMENT, CONTRASTID, PVAL, LOG2FOLD, TSTAT
from (
select dem.IDENTIFIER, bn.NAME AS NAME, o.NAME AS ORGANISM, mda.EXPERIMENT, mda.CONTRASTID, mda.PVAL, mda.LOG2FOLD, mda.TSTAT
,rank() over(partition by mda.EXPERIMENT, mda.CONTRASTID, dem.IDENTIFIER order by(abs(mda.LOG2FOLD)) desc) as lfrank
from MICROARRAY_DIFF_ANALYTICS mda
join DESIGNELEMENT_MAPPING dem on mda.designelement=dem.designelement and mda.arraydesign = dem.arraydesign
join BIOENTITY_NAME bn on dem.identifier=bn.identifier
join BIOENTITY_ORGANISM o on bn.organismid = o.organismid
and mda.PVAL < 0.05
) sq where lfrank = 1
union all
select rda.IDENTIFIER, bn.NAME AS NAME, o.name AS ORGANISM, rda.EXPERIMENT, rda.CONTRASTID, rda.PVAL, rda.LOG2FOLD, null
from RNASEQ_DIFF_ANALYTICS rda
join BIOENTITY_NAME bn on rda.IDENTIFIER=bn.identifier
join BIOENTITY_ORGANISM o on bn.organismid = o.organismid
join VW_EXPERIMENT_ORGANISM eo on o.name = eo.bioentity_organism and eo.experiment = rda.experiment
and rda.PVAL < 0.05
WITH NO DATA;

exec dbms_mview.refresh( 'VW_DIFFANALYTICS_DUMP', 'C' );

exit;
